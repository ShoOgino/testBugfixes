{"path":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DimensionalRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash += Arrays.hashCode(lowerPoint)^0x14fa55fb;\n    hash += Arrays.hashCode(upperPoint)^0x733fa5fe;\n    hash += Arrays.hashCode(lowerInclusive)^0x14fa55fb;\n    hash += Arrays.hashCode(upperInclusive)^0x733fa5fe;\n    hash += numDims^0x14fa55fb;\n    hash += Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash += Arrays.hashCode(lowerPoint)^0x14fa55fb;\n    hash += Arrays.hashCode(upperPoint)^0x733fa5fe;\n    hash += Arrays.hashCode(lowerInclusive)^0x14fa55fb;\n    hash += Arrays.hashCode(upperInclusive)^0x733fa5fe;\n    hash += numDims^0x14fa55fb;\n    hash += Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e6095f4816e81955ff9eb0d103188c24cb8081f","date":1456501631,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + Arrays.hashCode(lowerInclusive);\n    hash = 31 * hash + Arrays.hashCode(upperInclusive);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash += Arrays.hashCode(lowerPoint)^0x14fa55fb;\n    hash += Arrays.hashCode(upperPoint)^0x733fa5fe;\n    hash += Arrays.hashCode(lowerInclusive)^0x14fa55fb;\n    hash += Arrays.hashCode(upperInclusive)^0x733fa5fe;\n    hash += numDims^0x14fa55fb;\n    hash += Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"bugIntro":["1800b996d8677670482a071dcb7a48b08c423ace"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + Arrays.hashCode(lowerInclusive);\n    hash = 31 * hash + Arrays.hashCode(upperInclusive);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash += Arrays.hashCode(lowerPoint)^0x14fa55fb;\n    hash += Arrays.hashCode(upperPoint)^0x733fa5fe;\n    hash += Arrays.hashCode(lowerInclusive)^0x14fa55fb;\n    hash += Arrays.hashCode(upperInclusive)^0x733fa5fe;\n    hash += numDims^0x14fa55fb;\n    hash += Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + Arrays.hashCode(lowerInclusive);\n    hash = 31 * hash + Arrays.hashCode(upperInclusive);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":["5e6095f4816e81955ff9eb0d103188c24cb8081f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + Arrays.hashCode(lowerInclusive);\n    hash = 31 * hash + Arrays.hashCode(upperInclusive);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + Arrays.hashCode(lowerInclusive);\n    hash = 31 * hash + Arrays.hashCode(upperInclusive);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5839bca64b33c24668e37476ee168d00dc0bb96d","date":1457536035,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2270976e274799939e1b5339eb6c16c7601dfda","date":1458767534,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + field.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = classHash();\n    hash = 31 * hash + field.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + field.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = classHash();\n    hash = 31 * hash + field.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash = 31 * hash + field.hashCode();\n    hash = 31 * hash + Arrays.hashCode(lowerPoint);\n    hash = 31 * hash + Arrays.hashCode(upperPoint);\n    hash = 31 * hash + numDims;\n    hash = 31 * hash + Objects.hashCode(bytesPerDim);\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2270976e274799939e1b5339eb6c16c7601dfda":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"af2638813028b254a88b418ebeafb541afb49653":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","5e6095f4816e81955ff9eb0d103188c24cb8081f"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5e6095f4816e81955ff9eb0d103188c24cb8081f":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"5839bca64b33c24668e37476ee168d00dc0bb96d":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["d2270976e274799939e1b5339eb6c16c7601dfda"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["af2638813028b254a88b418ebeafb541afb49653","c422e924212367b334b4938f1fd3e44438e88c40"],"c422e924212367b334b4938f1fd3e44438e88c40":["5e6095f4816e81955ff9eb0d103188c24cb8081f","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["5e6095f4816e81955ff9eb0d103188c24cb8081f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d2270976e274799939e1b5339eb6c16c7601dfda","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"d2270976e274799939e1b5339eb6c16c7601dfda":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"af2638813028b254a88b418ebeafb541afb49653":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["af2638813028b254a88b418ebeafb541afb49653","5e6095f4816e81955ff9eb0d103188c24cb8081f"],"5e6095f4816e81955ff9eb0d103188c24cb8081f":["af2638813028b254a88b418ebeafb541afb49653","c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"5839bca64b33c24668e37476ee168d00dc0bb96d":["d2270976e274799939e1b5339eb6c16c7601dfda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}