{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton).mjava","commits":[{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter) {\n    super(input);\n    this.filter = filter;\n  }\n\n","sourceOld":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton,boolean).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter) {\n    super(input);\n    this.filter = filter;\n  }\n\n","sourceOld":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(input);\n    this.filter = filter;\n    this.enablePositionIncrements = enablePositionIncrements;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ebc1343b0e2860e9ae808bbc8431fcd070c3ae","date":1334174342,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenFilter#MockTokenFilter(TokenStream,CharacterRunAutomaton).mjava","sourceNew":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter) {\n    super(input);\n    this.filter = filter;\n  }\n\n","sourceOld":"  /**\n   * Create a new MockTokenFilter.\n   * \n   * @param input TokenStream to filter\n   * @param filter DFA representing the terms that should be removed.\n   * @param enablePositionIncrements true if the removal should accumulate position increments.\n   */\n  public MockTokenFilter(TokenStream input, CharacterRunAutomaton filter) {\n    super(input);\n    this.filter = filter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ebc1343b0e2860e9ae808bbc8431fcd070c3ae":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0ebc1343b0e2860e9ae808bbc8431fcd070c3ae"]},"commit2Childs":{"c0ebc1343b0e2860e9ae808bbc8431fcd070c3ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["c0ebc1343b0e2860e9ae808bbc8431fcd070c3ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}