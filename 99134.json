{"path":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragments(TokenStream,String,int).mjava","commits":[{"id":"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1","date":1081469776,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragments(TokenStream,String,int).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant sections.\n\t * The document text is analysed in chunks to record hit statistics\n\t * across the document. After accumulating stats, the fragments with the highest scores\n\t * are returned as an array of strings in order of score (contiguous fragments are merged into \n\t * one in their original order to improve readability)\n\t *\n\t * @param text        \ttext to highlight terms in\n\t * @param maxNumFragments  the maximum number of fragments.\n\t *\n\t * @return highlighted text fragments (between 0 and maxNumFragments number of fragments)\n\t */\n\tpublic final String[] getBestFragments(\n\t\tTokenStream tokenStream,\t\n\t\tString text,\n\t\tint maxNumFragments)\n\t\tthrows IOException\n\t{\n\t\tmaxNumFragments = Math.max(1, maxNumFragments); //sanity check\n\t\tStringBuffer newText = new StringBuffer();\n\t\t\n\t\tTextFragment[] frag =getBestDocFragments(tokenStream,text, newText, maxNumFragments);\n\n\t\tmergeContiguousFragments(frag);\n\n\t\t//Get text\n\t\tArrayList fragTexts = new ArrayList();\n\t\tint n = 0;\n\t\tfor (int i = 0; i < frag.length; i++)\n\t\t{\n\t\t\tif ((frag[i] != null) && (frag[i].getScore() > 0))\n\t\t\t{\n\t\t\t\tfragTexts.add(\n\t\t\t\t\tnewText.substring(\n\t\t\t\t\t\tfrag[i].textStartPos,\n\t\t\t\t\t\tfrag[i].textEndPos));\n\t\t\t}\n\t\t}\n\t\treturn (String[]) fragTexts.toArray(new String[0]);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9","date":1081470820,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/hilighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragments(TokenStream,String,int).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant sections.\n\t * The document text is analysed in chunks to record hit statistics\n\t * across the document. After accumulating stats, the fragments with the highest scores\n\t * are returned as an array of strings in order of score (contiguous fragments are merged into \n\t * one in their original order to improve readability)\n\t *\n\t * @param text        \ttext to highlight terms in\n\t * @param maxNumFragments  the maximum number of fragments.\n\t *\n\t * @return highlighted text fragments (between 0 and maxNumFragments number of fragments)\n\t */\n\tpublic final String[] getBestFragments(\n\t\tTokenStream tokenStream,\t\n\t\tString text,\n\t\tint maxNumFragments)\n\t\tthrows IOException\n\t{\n\t\tmaxNumFragments = Math.max(1, maxNumFragments); //sanity check\n\t\tStringBuffer newText = new StringBuffer();\n\t\t\n\t\tTextFragment[] frag =getBestDocFragments(tokenStream,text, newText, maxNumFragments);\n\n\t\tmergeContiguousFragments(frag);\n\n\t\t//Get text\n\t\tArrayList fragTexts = new ArrayList();\n\t\tint n = 0;\n\t\tfor (int i = 0; i < frag.length; i++)\n\t\t{\n\t\t\tif ((frag[i] != null) && (frag[i].getScore() > 0))\n\t\t\t{\n\t\t\t\tfragTexts.add(\n\t\t\t\t\tnewText.substring(\n\t\t\t\t\t\tfrag[i].textStartPos,\n\t\t\t\t\t\tfrag[i].textEndPos));\n\t\t\t}\n\t\t}\n\t\treturn (String[]) fragTexts.toArray(new String[0]);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9":["e3847974308b7ee4bf1bd64ab343a6758eb9ccb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e36e216d6ddce8d71e813a8b0d29d42d4c5025b9"],"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3847974308b7ee4bf1bd64ab343a6758eb9ccb1"],"e36e216d6ddce8d71e813a8b0d29d42d4c5025b9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3847974308b7ee4bf1bd64ab343a6758eb9ccb1":["e36e216d6ddce8d71e813a8b0d29d42d4c5025b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}