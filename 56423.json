{"path":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#test().mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    String newFieldName = \"newfield\";\n    String newFieldType = \"string\";\n    String newFieldValue = \"xyz\";\n\n    assertFailedU(\"Should fail due to unknown field '\" + newFieldName + \"'\", \n                  adoc(\"id\", \"1\", newFieldName, newFieldValue));\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    SchemaField newField = schema.newField(newFieldName, newFieldType, Collections.<String,Object>emptyMap());\n    IndexSchema newSchema = schema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n    \n    String newFieldKeyValue = \"'\" + newFieldName + \"':'\" + newFieldValue + \"'\"; \n    assertU(adoc(\"id\", \"1\", newFieldName, newFieldValue));\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==0\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'response':{'numFound':1,'start':0,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n\n    assertU(commit());\n\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'response':{'numFound':1,'start':0,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#test().mjava","sourceNew":"  public void test() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    String newFieldName = \"newfield\";\n    String newFieldType = \"string\";\n    String newFieldValue = \"xyz\";\n\n    ignoreException(\"unknown field\");\n    assertFailedU(\"Should fail due to unknown field '\" + newFieldName + \"'\", \n                  adoc(\"id\", \"1\", newFieldName, newFieldValue));\n    unIgnoreException(\"unknown field\");\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    SchemaField newField = schema.newField(newFieldName, newFieldType, Collections.emptyMap());\n    IndexSchema newSchema = schema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n    \n    String newFieldKeyValue = \"'\" + newFieldName + \"':'\" + newFieldValue + \"'\"; \n    assertU(adoc(\"id\", \"1\", newFieldName, newFieldValue));\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==0\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'response':{'numFound':1,'start':0,'numFoundExact':true,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n\n    assertU(commit());\n\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'response':{'numFound':1,'start':0,'numFoundExact':true,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    String newFieldName = \"newfield\";\n    String newFieldType = \"string\";\n    String newFieldValue = \"xyz\";\n\n    assertFailedU(\"Should fail due to unknown field '\" + newFieldName + \"'\", \n                  adoc(\"id\", \"1\", newFieldName, newFieldValue));\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    SchemaField newField = schema.newField(newFieldName, newFieldType, Collections.<String,Object>emptyMap());\n    IndexSchema newSchema = schema.addField(newField);\n    h.getCore().setLatestSchema(newSchema);\n    \n    String newFieldKeyValue = \"'\" + newFieldName + \"':'\" + newFieldValue + \"'\"; \n    assertU(adoc(\"id\", \"1\", newFieldName, newFieldValue));\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==0\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n             \"=={'response':{'numFound':1,'start':0,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n\n    assertU(commit());\n\n    assertJQ(req(\"q\",\"id:1\"), \n             \"/response/numFound==1\");\n    assertJQ(req(\"qt\",\"/get\", \"id\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'doc':{'id':'1',\" + newFieldKeyValue + \"}}\");\n    assertJQ(req(\"qt\",\"/get\",\"ids\",\"1\", \"fl\",\"id,\"+newFieldName),\n        \"=={'response':{'numFound':1,'start':0,'docs':[{'id':'1',\" + newFieldKeyValue + \"}]}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}