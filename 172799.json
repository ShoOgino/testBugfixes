{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","commits":[{"id":"351c452f1c3ded97338e6d3db2b585c5f89b0410","date":1291733593,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29Tokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29Tokenizer tokenizer = new UAX29Tokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8c4bb144102e537495ae5b321f77a9898f7b0b8","date":1291834816,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29Tokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29Tokenizer tokenizer = new UAX29Tokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"/dev/null","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f9c32789f4702d5cbb33bd153808068a4c43e3a","date":1312804679,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3f9c32789f4702d5cbb33bd153808068a4c43e3a"],"3f9c32789f4702d5cbb33bd153808068a4c43e3a":["351c452f1c3ded97338e6d3db2b585c5f89b0410"],"351c452f1c3ded97338e6d3db2b585c5f89b0410":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","351c452f1c3ded97338e6d3db2b585c5f89b0410"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","351c452f1c3ded97338e6d3db2b585c5f89b0410"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f9c32789f4702d5cbb33bd153808068a4c43e3a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"351c452f1c3ded97338e6d3db2b585c5f89b0410":["3f9c32789f4702d5cbb33bd153808068a4c43e3a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["351c452f1c3ded97338e6d3db2b585c5f89b0410","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}