{"path":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","commits":[{"id":"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd","date":1225474382,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n    try {\n      template = engine.getTemplate(request.getParams().get(\"template\", \"browse\") + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b829eaa611bac9e7e5baf5c6689292966898ed6","date":1227006031,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n    try {\n      template = engine.getTemplate(request.getParams().get(\"v.template\", \"browse\") + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n    try {\n      template = engine.getTemplate(request.getParams().get(\"template\", \"browse\") + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8296d592dd83cd4186381cdc4e61f784dfb620ae","date":1235563803,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n    try {\n      template = engine.getTemplate(request.getParams().get(\"v.template\", \"browse\") + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65c941e8dcb3bb0ee6b785e349a931111c65e8ff","date":1268850890,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb0c840fcaa8a53dc8e038a0f7776c84283637f9","date":1268855982,"type":5,"author":"Yonik Seeley","isMerge":true,"pathNew":"contrib/velocity/src/main/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"contrib/velocity/src/main/java/org/apache/solr/request/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65c941e8dcb3bb0ee6b785e349a931111c65e8ff":["8296d592dd83cd4186381cdc4e61f784dfb620ae"],"8296d592dd83cd4186381cdc4e61f784dfb620ae":["9b829eaa611bac9e7e5baf5c6689292966898ed6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9b829eaa611bac9e7e5baf5c6689292966898ed6":["4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd"],"fb0c840fcaa8a53dc8e038a0f7776c84283637f9":["8296d592dd83cd4186381cdc4e61f784dfb620ae","65c941e8dcb3bb0ee6b785e349a931111c65e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65c941e8dcb3bb0ee6b785e349a931111c65e8ff":["fb0c840fcaa8a53dc8e038a0f7776c84283637f9"],"8296d592dd83cd4186381cdc4e61f784dfb620ae":["65c941e8dcb3bb0ee6b785e349a931111c65e8ff","fb0c840fcaa8a53dc8e038a0f7776c84283637f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd"],"4e371e5cc5fa0d900720a4a38ecf0b81ed44a6cd":["9b829eaa611bac9e7e5baf5c6689292966898ed6"],"9b829eaa611bac9e7e5baf5c6689292966898ed6":["8296d592dd83cd4186381cdc4e61f784dfb620ae"],"fb0c840fcaa8a53dc8e038a0f7776c84283637f9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fb0c840fcaa8a53dc8e038a0f7776c84283637f9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}