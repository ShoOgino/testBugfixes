{"path":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#getFieldInfos(SegmentInfo).mjava","commits":[{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#getFieldInfos(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  public static FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                           info.name,\n                                                                           IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#getFieldInfos(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  public static FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                           info.name,\n                                                                           IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#getFieldInfos(SegmentInfo).mjava","sourceNew":null,"sourceOld":"  public static FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                           info.name,\n                                                                           IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8435160e9702b19398118ddf76b61c846612b6a4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8435160e9702b19398118ddf76b61c846612b6a4"]},"commit2Childs":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["8435160e9702b19398118ddf76b61c846612b6a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"8435160e9702b19398118ddf76b61c846612b6a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}