{"path":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","commits":[{"id":"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94","date":1520143025,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setEqualsToMax(String).mjava","sourceNew":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setEqualsToMax(String coreNodeName) {\r\n      long maxTerm;\r\n      try {\r\n        maxTerm = Collections.max(values.values());\r\n      } catch (NoSuchElementException e){\r\n        maxTerm = 0;\r\n      }\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"496c9a94ff07e1140b2e14c44e42aefdce51bd2b","date":1520388592,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","sourceNew":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      newValues.remove(coreNodeName+\"_recovering\");\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79715cc168db6c41f12a0d85ca105f6c2887dcf4","date":1572618893,"type":3,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","sourceNew":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      newValues.remove(recoveringTerm(coreNodeName));\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      newValues.remove(coreNodeName+\"_recovering\");\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6cc501b75cbd5d0319284563cdd20aff857ee6","date":1575346594,"type":4,"author":"noble","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","sourceNew":null,"sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      newValues.remove(recoveringTerm(coreNodeName));\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3aa683bba99315838c968fefedf3d74f44aa993","date":1575395112,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.Terms#setTermEqualsToLeader(String).mjava","sourceNew":null,"sourceOld":"    /**\r\n     * Return a new {@link Terms} in which the term of {@code coreNodeName} is max\r\n     * @param coreNodeName of the replica\r\n     * @return null if term of {@code coreNodeName} is already maximum\r\n     */\r\n    Terms setTermEqualsToLeader(String coreNodeName) {\r\n      long maxTerm = getMaxTerm();\r\n      if (values.get(coreNodeName) == maxTerm) return null;\r\n\r\n      HashMap<String, Long> newValues = new HashMap<>(values);\r\n      newValues.put(coreNodeName, maxTerm);\r\n      newValues.remove(recoveringTerm(coreNodeName));\r\n      return new Terms(newValues, version);\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3aa683bba99315838c968fefedf3d74f44aa993":["79715cc168db6c41f12a0d85ca105f6c2887dcf4","5b6cc501b75cbd5d0319284563cdd20aff857ee6"],"5b6cc501b75cbd5d0319284563cdd20aff857ee6":["79715cc168db6c41f12a0d85ca105f6c2887dcf4"],"79715cc168db6c41f12a0d85ca105f6c2887dcf4":["496c9a94ff07e1140b2e14c44e42aefdce51bd2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"496c9a94ff07e1140b2e14c44e42aefdce51bd2b":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b6cc501b75cbd5d0319284563cdd20aff857ee6"]},"commit2Childs":{"d3aa683bba99315838c968fefedf3d74f44aa993":[],"5b6cc501b75cbd5d0319284563cdd20aff857ee6":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"79715cc168db6c41f12a0d85ca105f6c2887dcf4":["d3aa683bba99315838c968fefedf3d74f44aa993","5b6cc501b75cbd5d0319284563cdd20aff857ee6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["496c9a94ff07e1140b2e14c44e42aefdce51bd2b"],"496c9a94ff07e1140b2e14c44e42aefdce51bd2b":["79715cc168db6c41f12a0d85ca105f6c2887dcf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}