{"path":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","commits":[{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"/dev/null","sourceNew":"  protected void doUndeleteAll() throws IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n    hasDeletions = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac294a7806e0df9ee114c74aa695a9358954d19a","date":1134071586,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","sourceNew":"  protected void doUndeleteAll() throws IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","sourceOld":"  protected void doUndeleteAll() throws IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n    hasDeletions = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b54a9bc667895a2095a886184bf69a3179e63df","date":1172088096,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","sourceNew":"  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","sourceOld":"  protected void doUndeleteAll() throws IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","bugFix":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","sourceNew":"  protected void doUndeleteAll() throws CorruptIndexException, IOException {\r\n    for (int i = 0; i < subReaders.length; i++)\r\n      subReaders[i].undeleteAll();\r\n\r\n    hasDeletions = false;\r\n    numDocs = -1;                                 // invalidate cache\r\n  }\r\n\n","sourceOld":"  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"/dev/null","sourceNew":"  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","sourceOld":"  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","sourceOld":"  @Override\n  protected void doUndeleteAll() throws CorruptIndexException, IOException {\n    for (int i = 0; i < subReaders.length; i++)\n      subReaders[i].undeleteAll();\n\n    hasDeletions = false;\n    numDocs = -1;                                 // invalidate cache\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"1b54a9bc667895a2095a886184bf69a3179e63df":["ac294a7806e0df9ee114c74aa695a9358954d19a"],"8a9e385641d717e641408d8fbbc62be8fc766357":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["1b54a9bc667895a2095a886184bf69a3179e63df"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"ac294a7806e0df9ee114c74aa695a9358954d19a":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"1b54a9bc667895a2095a886184bf69a3179e63df":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["ac294a7806e0df9ee114c74aa695a9358954d19a"],"ac294a7806e0df9ee114c74aa695a9358954d19a":["1b54a9bc667895a2095a886184bf69a3179e63df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}