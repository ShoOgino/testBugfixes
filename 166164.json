{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,int).mjava","commits":[{"id":"fd65164c607d597fe7bb977735aa1ddfff22ed36","date":1377140532,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs,\n                                               DocsAndPositionsEnum reuse, int flags)\n    throws IOException {\n\n    assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs,\n                                               DocsAndPositionsEnum reuse, int flags)\n    throws IOException {\n\n    assert fieldInfo.getIndexOptions() == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["fd65164c607d597fe7bb977735aa1ddfff22ed36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd65164c607d597fe7bb977735aa1ddfff22ed36","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}