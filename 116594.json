{"path":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @deprecated use {@link #EmbeddedSolrServer(CoreContainer, String)} instead.\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @deprecated use {@link #EmbeddedSolrServer(CoreContainer, String)} instead.\n   */\n  @Deprecated\n  public EmbeddedSolrServer(SolrCore core)\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @deprecated use {@link #EmbeddedSolrServer(CoreContainer, String)} instead.\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   */\n  public EmbeddedSolrServer(SolrCore core)\n  {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @deprecated use {@link #EmbeddedSolrServer(CoreContainer, String)} instead.\n   */\n  @Deprecated\n  public EmbeddedSolrServer(SolrCore core)\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2252a4efd304715a7a65ac0c9b167d312d09997a","date":1427361661,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   */\n  public EmbeddedSolrServer(SolrCore core)\n  {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   */\n  public EmbeddedSolrServer(SolrCore core)\n  {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreContainer(), core.getName());\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreContainer(), core.getName());\n  }\n\n","sourceOld":"  /**\n   * Create an EmbeddedSolrServer wrapping a particular SolrCore\n   */\n  public EmbeddedSolrServer(SolrCore core) {\n    this(core.getCoreDescriptor().getCoreContainer(), core.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["2252a4efd304715a7a65ac0c9b167d312d09997a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","2252a4efd304715a7a65ac0c9b167d312d09997a"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["bafca15d8e408346a67f4282ad1143b88023893b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2252a4efd304715a7a65ac0c9b167d312d09997a":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["2252a4efd304715a7a65ac0c9b167d312d09997a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["bafca15d8e408346a67f4282ad1143b88023893b"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2252a4efd304715a7a65ac0c9b167d312d09997a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2252a4efd304715a7a65ac0c9b167d312d09997a":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}