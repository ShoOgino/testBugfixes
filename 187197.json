{"path":"lucene/src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisMust2().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisMust2().mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisMust2().mjava","sourceNew":"  /**\n   * <code>(T:files T:deleting) +(C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisMust2() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.MUST);\n    assertEquals(1, search(q2));\n  }\n\n","sourceOld":"  /**\n   * <code>(T:files T:deleting) +(C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisMust2() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.MUST);\n    assertEquals(1, search(q2));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisMust2().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisMust2().mjava","sourceNew":"  /**\n   * <code>(T:files T:deleting) +(C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisMust2() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.MUST);\n    assertEquals(1, search(q2));\n  }\n\n","sourceOld":"  /**\n   * <code>(T:files T:deleting) +(C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisMust2() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.MUST);\n    assertEquals(1, search(q2));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}