{"path":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","commits":[{"id":"e7a005111928c661ab5d236ed6a3a079b438d2cf","date":1205411670,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true iff there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48c2026b2f44142b851cbbef393684b7b1b6fef4","date":1262026339,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","sourceNew":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true if there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","sourceOld":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true iff there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"331c83430d717d617c1d6d542e0b54cea46484e8","date":1262046887,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","sourceNew":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true iff there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","sourceOld":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true if there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedTermPositions#skipTo(int).mjava","sourceNew":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true iff there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","sourceOld":"  /**\n   * Skips entries to the first beyond the current whose document number is\n   * greater than or equal to <currentTermPositionIndex>target</currentTermPositionIndex>. <p>Returns true iff there is such\n   * an entry.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Some implementations are considerably more efficient than that.\n   */\n  @Override\n  public boolean skipTo(int target) {\n    currentTermPositionIndex = -1;\n    return super.skipTo(target);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["331c83430d717d617c1d6d542e0b54cea46484e8"],"331c83430d717d617c1d6d542e0b54cea46484e8":["48c2026b2f44142b851cbbef393684b7b1b6fef4"],"48c2026b2f44142b851cbbef393684b7b1b6fef4":["e7a005111928c661ab5d236ed6a3a079b438d2cf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["48c2026b2f44142b851cbbef393684b7b1b6fef4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"331c83430d717d617c1d6d542e0b54cea46484e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"48c2026b2f44142b851cbbef393684b7b1b6fef4":["331c83430d717d617c1d6d542e0b54cea46484e8"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}