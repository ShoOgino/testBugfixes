{"path":"lucene/contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest#testLinks().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest#testLinks().mjava","pathOld":"contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest#testLinks().mjava","sourceNew":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","sourceOld":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"344d7fb38511184be27e3eba27408ad5f634b91c","date":1270838455,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerTest#testLinks().mjava","pathOld":"lucene/contrib/wikipedia/src/test/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerTest#testLinks().mjava","sourceNew":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","sourceOld":"  public void testLinks() throws Exception {\n    String test = \"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]\";\n    WikipediaTokenizer tf = new WikipediaTokenizer(new StringReader(test));\n    TermAttribute termAtt = tf.addAttribute(TermAttribute.class);\n    TypeAttribute typeAtt = tf.addAttribute(TypeAttribute.class);\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html#news\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html#news\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"http://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"http://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    tf.incrementToken();//skip here\n    \n    assertTrue(tf.incrementToken());\n    assertTrue(termAtt.term() + \" is not equal to \" + \"https://lucene.apache.org/java/docs/index.html?b=c\",\n        termAtt.term().equals(\"https://lucene.apache.org/java/docs/index.html?b=c\") == true);\n    assertTrue(typeAtt.type() + \" is not equal to \" + WikipediaTokenizer.EXTERNAL_LINK_URL, typeAtt.type().equals(WikipediaTokenizer.EXTERNAL_LINK_URL) == true);\n    \n    assertTrue(tf.incrementToken());\n    assertFalse(tf.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"344d7fb38511184be27e3eba27408ad5f634b91c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["344d7fb38511184be27e3eba27408ad5f634b91c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"344d7fb38511184be27e3eba27408ad5f634b91c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["344d7fb38511184be27e3eba27408ad5f634b91c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}