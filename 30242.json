{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryTree#term(String,BytesRef,double).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryTree#term(String,BytesRef,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a leaf node for a particular term and weight\n   *\n   * The weight must be greater than 0\n   */\n  public static QueryTree term(String field, BytesRef term, double weight) {\n    return new QueryTree() {\n      @Override\n      public double weight() {\n        if (weight <= 0) {\n          throw new IllegalArgumentException(\"Term weights must be greater than 0\");\n        }\n        return weight;\n      }\n\n      @Override\n      public void collectTerms(BiConsumer<String, BytesRef> termCollector) {\n        termCollector.accept(field, term);\n      }\n\n      @Override\n      public boolean advancePhase(double minWeight) {\n        return false;\n      }\n\n      @Override\n      public String toString(int depth) {\n        return space(depth) + field + \":\" + term.utf8ToString() + \"^\" + weight;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}