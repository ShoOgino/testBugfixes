{"path":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapePolygonQuery#XYShapePolygonQuery(String,QueryRelation,XYPolygon...).mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapePolygonQuery#XYShapePolygonQuery(String,QueryRelation,XYPolygon...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public XYShapePolygonQuery(String field, QueryRelation queryRelation, XYPolygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minX > polygons[i].maxX) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minX cannot be greater than maxX.\");\n      } else if (polygons[i].minY > polygons[i].maxY) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minY cannot be greater than maxY.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = XYPolygon2D.create(polygons);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/XYShapePolygonQuery#XYShapePolygonQuery(String,QueryRelation,XYPolygon...).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapePolygonQuery#XYShapePolygonQuery(String,QueryRelation,XYPolygon...).mjava","sourceNew":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public XYShapePolygonQuery(String field, QueryRelation queryRelation, XYPolygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minX > polygons[i].maxX) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minX cannot be greater than maxX.\");\n      } else if (polygons[i].minY > polygons[i].maxY) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minY cannot be greater than maxY.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = XYPolygon2D.create(polygons);\n  }\n\n","sourceOld":"  /**\n   * Creates a query that matches all indexed shapes to the provided polygons\n   */\n  public XYShapePolygonQuery(String field, QueryRelation queryRelation, XYPolygon... polygons) {\n    super(field, queryRelation);\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      } else if (polygons[i].minX > polygons[i].maxX) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minX cannot be greater than maxX.\");\n      } else if (polygons[i].minY > polygons[i].maxY) {\n        throw new IllegalArgumentException(\"XYShapePolygonQuery: minY cannot be greater than maxY.\");\n      }\n    }\n    this.polygons = polygons.clone();\n    this.poly2D = XYPolygon2D.create(polygons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}