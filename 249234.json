{"path":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#assertEquals(String,Object,Object).mjava","commits":[{"id":"645e9dc687d04dbe961b35c0f3a305c48e892615","date":1396352607,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#assertEquals(String,Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  public static void assertEquals(String mes, Object actual, Object expected) {\n    Collections.sort((List<Comparable>) actual);\n    Collections.sort((List<Comparable>)  expected);\n    Assert.assertEquals(mes, actual, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#assertEquals(String,Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  public static void assertEquals(String mes, Object actual, Object expected) {\n    Collections.sort((List<Comparable>) actual);\n    Collections.sort((List<Comparable>)  expected);\n    Assert.assertEquals(mes, actual, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#assertEquals(String,Object,Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#assertEquals(String,Object,Object).mjava","sourceNew":"  public static void assertEquals(String mes, Object actual, Object expected) {\n    Collections.sort((List<Comparable>) actual);\n    Collections.sort((List<Comparable>)  expected);\n    Assert.assertEquals(mes, actual, expected);\n  }\n\n","sourceOld":"  public static void assertEquals(String mes, Object actual, Object expected) {\n    Collections.sort((List<Comparable>) actual);\n    Collections.sort((List<Comparable>)  expected);\n    Assert.assertEquals(mes, actual, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","645e9dc687d04dbe961b35c0f3a305c48e892615"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"645e9dc687d04dbe961b35c0f3a305c48e892615":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","645e9dc687d04dbe961b35c0f3a305c48e892615"],"645e9dc687d04dbe961b35c0f3a305c48e892615":["5eb2511ababf862ea11e10761c70ee560cd84510","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}