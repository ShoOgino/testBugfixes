{"path":"src/java/org/apache/lucene/index/SegmentMerger#copyFieldsNoDeletions(FieldSelector,FieldsWriter,IndexReader,FieldsReader).mjava","commits":[{"id":"d736930237c54e1516a9e3bae803c92ff19ec4e5","date":1245789156,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#copyFieldsNoDeletions(FieldSelector,FieldsWriter,IndexReader,FieldsReader).mjava","pathOld":"/dev/null","sourceNew":"  private int copyFieldsNoDeletions(FieldSelector fieldSelectorMerge,\n                                    final FieldsWriter fieldsWriter, final IndexReader reader,\n                                    final FieldsReader matchingFieldsReader)\n    throws IOException, MergeAbortedException, CorruptIndexException {\n    final int maxDoc = reader.maxDoc();\n    int docCount = 0;\n    if (matchingFieldsReader != null) {\n      // We can bulk-copy because the fieldInfos are \"congruent\"\n      while (docCount < maxDoc) {\n        int len = Math.min(MAX_RAW_MERGE_DOCS, maxDoc - docCount);\n        IndexInput stream = matchingFieldsReader.rawDocs(rawDocLengths, docCount, len);\n        fieldsWriter.addRawDocuments(stream, rawDocLengths, len);\n        docCount += len;\n        checkAbort.work(300 * len);\n      }\n    } else {\n      for (; docCount < maxDoc; docCount++) {\n        // NOTE: it's very important to first assign to doc then pass it to\n        // termVectorsWriter.addAllDocVectors; see LUCENE-1282\n        Document doc = reader.document(docCount, fieldSelectorMerge);\n        fieldsWriter.addDocument(doc);\n        checkAbort.work(300);\n      }\n    }\n    return docCount;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0c804f7aa477229414a7e12882af490c241f64d","date":1254963299,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#copyFieldsNoDeletions(FieldsWriter,IndexReader,FieldsReader).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#copyFieldsNoDeletions(FieldSelector,FieldsWriter,IndexReader,FieldsReader).mjava","sourceNew":"  private int copyFieldsNoDeletions(final FieldsWriter fieldsWriter, final IndexReader reader,\n                                    final FieldsReader matchingFieldsReader)\n    throws IOException, MergeAbortedException, CorruptIndexException {\n    final int maxDoc = reader.maxDoc();\n    int docCount = 0;\n    if (matchingFieldsReader != null) {\n      // We can bulk-copy because the fieldInfos are \"congruent\"\n      while (docCount < maxDoc) {\n        int len = Math.min(MAX_RAW_MERGE_DOCS, maxDoc - docCount);\n        IndexInput stream = matchingFieldsReader.rawDocs(rawDocLengths, docCount, len);\n        fieldsWriter.addRawDocuments(stream, rawDocLengths, len);\n        docCount += len;\n        checkAbort.work(300 * len);\n      }\n    } else {\n      for (; docCount < maxDoc; docCount++) {\n        // NOTE: it's very important to first assign to doc then pass it to\n        // termVectorsWriter.addAllDocVectors; see LUCENE-1282\n        Document doc = reader.document(docCount);\n        fieldsWriter.addDocument(doc);\n        checkAbort.work(300);\n      }\n    }\n    return docCount;\n  }\n\n","sourceOld":"  private int copyFieldsNoDeletions(FieldSelector fieldSelectorMerge,\n                                    final FieldsWriter fieldsWriter, final IndexReader reader,\n                                    final FieldsReader matchingFieldsReader)\n    throws IOException, MergeAbortedException, CorruptIndexException {\n    final int maxDoc = reader.maxDoc();\n    int docCount = 0;\n    if (matchingFieldsReader != null) {\n      // We can bulk-copy because the fieldInfos are \"congruent\"\n      while (docCount < maxDoc) {\n        int len = Math.min(MAX_RAW_MERGE_DOCS, maxDoc - docCount);\n        IndexInput stream = matchingFieldsReader.rawDocs(rawDocLengths, docCount, len);\n        fieldsWriter.addRawDocuments(stream, rawDocLengths, len);\n        docCount += len;\n        checkAbort.work(300 * len);\n      }\n    } else {\n      for (; docCount < maxDoc; docCount++) {\n        // NOTE: it's very important to first assign to doc then pass it to\n        // termVectorsWriter.addAllDocVectors; see LUCENE-1282\n        Document doc = reader.document(docCount, fieldSelectorMerge);\n        fieldsWriter.addDocument(doc);\n        checkAbort.work(300);\n      }\n    }\n    return docCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e0c804f7aa477229414a7e12882af490c241f64d":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e0c804f7aa477229414a7e12882af490c241f64d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["e0c804f7aa477229414a7e12882af490c241f64d"],"e0c804f7aa477229414a7e12882af490c241f64d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}