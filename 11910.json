{"path":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","commits":[{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","pathOld":"/dev/null","sourceNew":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","pathOld":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","sourceNew":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","pathOld":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","sourceNew":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","pathOld":"src/test/org/apache/lucene/index/TestCrash#testCrashAfterCloseNoWait().mjava","sourceNew":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashAfterCloseNoWait() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    IndexReader reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["e82780afe6097066eb5befb86e9432f077667e3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["e82780afe6097066eb5befb86e9432f077667e3d","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e82780afe6097066eb5befb86e9432f077667e3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e82780afe6097066eb5befb86e9432f077667e3d"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e82780afe6097066eb5befb86e9432f077667e3d":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}