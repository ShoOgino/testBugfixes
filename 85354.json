{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse#testSuggesterResponseTerms().mjava","commits":[{"id":"096ce9d7ec9914ca48a630b7686cc0a413cb74d7","date":1437121947,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse#testSuggesterResponseTerms().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSuggesterResponseTerms() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Com\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(\"Computational framework\", mySuggester.get(0));\n    assertEquals(\"Computer\", mySuggester.get(1));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9dec2d3920a73691e8110290418baf8efad1303","date":1437131425,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse#testSuggesterResponseTerms().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSuggesterResponseTerms() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Com\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(\"Computational framework\", mySuggester.get(0));\n    assertEquals(\"Computer\", mySuggester.get(1));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9dec2d3920a73691e8110290418baf8efad1303":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["096ce9d7ec9914ca48a630b7686cc0a413cb74d7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9dec2d3920a73691e8110290418baf8efad1303","096ce9d7ec9914ca48a630b7686cc0a413cb74d7"],"f9dec2d3920a73691e8110290418baf8efad1303":[],"096ce9d7ec9914ca48a630b7686cc0a413cb74d7":["f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f9dec2d3920a73691e8110290418baf8efad1303","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}