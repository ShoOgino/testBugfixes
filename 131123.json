{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","commits":[{"id":"dbba3c5be159d190b2b308dfc250c43531694ddb","date":1375234944,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","pathOld":"/dev/null","sourceNew":"      /** Decodes metadata into customized term state */\n      abstract void decodeMetaData() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea1ab130682544cb3361237d60feea30588fe966","date":1375236277,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","sourceNew":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.reset(metaBytesBlock, bytesStart[upto], bytesLength[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state);\n      }\n\n","sourceOld":"      /** Decodes metadata into customized term state */\n      abstract void decodeMetaData() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db8535b557900d292554ea8663e48d19733977e0","date":1376915424,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","sourceNew":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.reset(metaBytesBlock, bytesStart[upto], bytesLength[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state, true);\n      }\n\n","sourceOld":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.reset(metaBytesBlock, bytesStart[upto], bytesLength[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f8633b56150a205774ee3e2adf1452a81b0d904","date":1376926002,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","sourceNew":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.setPosition(bytesStart[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state, true);\n      }\n\n","sourceOld":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.reset(metaBytesBlock, bytesStart[upto], bytesLength[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state, true);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#decodeMetaData().mjava","sourceNew":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.setPosition(bytesStart[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state, true);\n      }\n\n","sourceOld":"      /** Let PBF decode metadata */\n      void decodeMetaData() throws IOException {\n        final int upto = (int)ord % INTERVAL;\n        final int oldBlockOrd = metaBlockOrd;\n        metaBlockOrd = (int)ord / INTERVAL;\n        if (metaBlockOrd != oldBlockOrd) {\n          refillMetadata();\n        }\n        metaBytesReader.setPosition(bytesStart[upto]);\n        postingsReader.decodeTerm(longs[upto], metaBytesReader, fieldInfo, state, true);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db8535b557900d292554ea8663e48d19733977e0":["ea1ab130682544cb3361237d60feea30588fe966"],"dbba3c5be159d190b2b308dfc250c43531694ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ea1ab130682544cb3361237d60feea30588fe966":["dbba3c5be159d190b2b308dfc250c43531694ddb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["4f8633b56150a205774ee3e2adf1452a81b0d904"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["db8535b557900d292554ea8663e48d19733977e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"db8535b557900d292554ea8663e48d19733977e0":["4f8633b56150a205774ee3e2adf1452a81b0d904"],"dbba3c5be159d190b2b308dfc250c43531694ddb":["ea1ab130682544cb3361237d60feea30588fe966"],"ea1ab130682544cb3361237d60feea30588fe966":["db8535b557900d292554ea8663e48d19733977e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbba3c5be159d190b2b308dfc250c43531694ddb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"4f8633b56150a205774ee3e2adf1452a81b0d904":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}