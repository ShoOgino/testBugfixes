{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","commits":[{"id":"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","date":1352818449,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    endWithPreviousDocument();\n    if (triggerFlush()) {\n      flush();\n    }\n\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter#startDocument(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startDocument(int numStoredFields) throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = Arrays.copyOf(this.numStoredFields, newLength);\n      endOffsets = Arrays.copyOf(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFields;\n    ++numBufferedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","3394716f52b34ab259ad5247e7595d9f9db6e935"],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"52c7e49be259508735752fba88085255014a6ecf":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["407687e67faf6e1f02a211ca078d8e3eed631027","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","407687e67faf6e1f02a211ca078d8e3eed631027"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}