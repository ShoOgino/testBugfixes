{"path":"src/java/org/apache/lucene/search/FieldCache#getLongs(IndexReader,String).mjava","commits":[{"id":"65eb076d345a794256daba691a2b366657c807e8","date":1245771732,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCache#getLongs(IndexReader,String).mjava","pathOld":"src/java/org/apache/lucene/search/ExtendedFieldCache#getLongs(IndexReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is\n   * found, reads the terms in <code>field</code> as longs and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   *\n   * @param reader Used to get field values.\n   * @param field  Which field contains the longs.\n   * @return The values in the given field for each document.\n   * @throws java.io.IOException If any error occurs.\n   */\n  public long[] getLongs(IndexReader reader, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is\n   * found, reads the terms in <code>field</code> as longs and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   *\n   * @param reader Used to get field values.\n   * @param field  Which field contains the longs.\n   * @return The values in the given field for each document.\n   * @throws java.io.IOException If any error occurs.\n   */\n  public long[] getLongs(IndexReader reader, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getLongs(IndexReader,String).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCache#getLongs(IndexReader,String).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is\n   * found, reads the terms in <code>field</code> as longs and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   *\n   * @param reader Used to get field values.\n   * @param field  Which field contains the longs.\n   * @return The values in the given field for each document.\n   * @throws java.io.IOException If any error occurs.\n   */\n  public long[] getLongs(IndexReader reader, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is\n   * found, reads the terms in <code>field</code> as longs and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   *\n   * @param reader Used to get field values.\n   * @param field  Which field contains the longs.\n   * @return The values in the given field for each document.\n   * @throws java.io.IOException If any error occurs.\n   */\n  public long[] getLongs(IndexReader reader, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65eb076d345a794256daba691a2b366657c807e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["65eb076d345a794256daba691a2b366657c807e8"]},"commit2Childs":{"65eb076d345a794256daba691a2b366657c807e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["65eb076d345a794256daba691a2b366657c807e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}