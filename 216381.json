{"path":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","commits":[{"id":"ccfb40e1834cac1619556a0becf198bb7bad5d63","date":1438887805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","pathOld":"/dev/null","sourceNew":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = ((ConfigData) m.get(\"/security.json\")).data;\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"170ef9c82c0d27d4151feff316ba63fbedd91bbf","date":1477436680,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","sourceNew":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = m.get(\"/security.json\").getData();\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","sourceOld":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = ((ConfigData) m.get(\"/security.json\")).data;\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b363b110592b02d7f488aff0dbe40a53d3ce81df","date":1477469211,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","sourceNew":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = m.get(\"/security.json\").getData();\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","sourceOld":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = ((ConfigData) m.get(\"/security.json\")).data;\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/SecurityConfHandlerTest.MockSecurityHandler#getStandardJson().mjava","sourceNew":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = m.get(\"/security.json\").getData();\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","sourceOld":"    public String getStandardJson() throws Exception {\n      String command = \"{\\n\" +\n          \"'set-user': {'solr':'SolrRocks'}\\n\" +\n          \"}\";\n      LocalSolrQueryRequest req =  new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authentication\");\n      ContentStreamBase.ByteArrayStream o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      handleRequestBody(req, new SolrQueryResponse());\n\n      command = \"{'set-user-role': { 'solr': 'admin'},\\n\" +\n          \"'set-permission':{'name': 'security-edit', 'role': 'admin'}\" +\n          \"}\";\n      req = new LocalSolrQueryRequest(null, new ModifiableSolrParams());\n      req.getContext().put(\"httpMethod\",\"POST\");\n      req.getContext().put(\"path\",\"/admin/authorization\");\n      o = new ContentStreamBase.ByteArrayStream(command.getBytes(StandardCharsets.UTF_8),\"\");\n      req.setContentStreams(Collections.singletonList(o));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handleRequestBody(req, rsp);\n      Map<String, Object> data = ((ConfigData) m.get(\"/security.json\")).data;\n      ((Map)data.get(\"authentication\")).remove(\"\");\n      ((Map)data.get(\"authorization\")).remove(\"\");\n      return Utils.toJSONString (data);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["ccfb40e1834cac1619556a0becf198bb7bad5d63","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["ccfb40e1834cac1619556a0becf198bb7bad5d63","170ef9c82c0d27d4151feff316ba63fbedd91bbf"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b363b110592b02d7f488aff0dbe40a53d3ce81df"]},"commit2Childs":{"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["170ef9c82c0d27d4151feff316ba63fbedd91bbf","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}