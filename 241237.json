{"path":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","commits":[{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, byte[] norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue(norms[doc]) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, byte[] norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue(norms[doc]) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, byte[] norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue(norms[doc]) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#explainScore(int,Explanation,IDFStats,byte[]).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, byte[] norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue(norms[doc]) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, byte[] norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n\n    // explain query weight\n    Explanation queryExpl = new Explanation();\n    queryExpl.setDescription(\"queryWeight, product of:\");\n\n    Explanation boostExpl = new Explanation(stats.queryBoost, \"boost\");\n    if (stats.queryBoost != 1.0f)\n      queryExpl.addDetail(boostExpl);\n    queryExpl.addDetail(stats.idf);\n\n    Explanation queryNormExpl = new Explanation(stats.queryNorm,\"queryNorm\");\n    queryExpl.addDetail(queryNormExpl);\n\n    queryExpl.setValue(boostExpl.getValue() *\n                       stats.idf.getValue() *\n                       queryNormExpl.getValue());\n\n    result.addDetail(queryExpl);\n\n    // explain field weight\n    Explanation fieldExpl = new Explanation();\n    fieldExpl.setDescription(\"fieldWeight in \"+doc+\n                             \", product of:\");\n\n    Explanation tfExplanation = new Explanation();\n    tfExplanation.setValue(tf(freq.getValue()));\n    tfExplanation.setDescription(\"tf(freq=\"+freq.getValue()+\"), with freq of:\");\n    tfExplanation.addDetail(freq);\n    fieldExpl.addDetail(tfExplanation);\n    fieldExpl.addDetail(stats.idf);\n\n    Explanation fieldNormExpl = new Explanation();\n    float fieldNorm =\n      norms!=null ? decodeNormValue(norms[doc]) : 1.0f;\n    fieldNormExpl.setValue(fieldNorm);\n    fieldNormExpl.setDescription(\"fieldNorm(doc=\"+doc+\")\");\n    fieldExpl.addDetail(fieldNormExpl);\n    \n    fieldExpl.setValue(tfExplanation.getValue() *\n                       stats.idf.getValue() *\n                       fieldNormExpl.getValue());\n\n    result.addDetail(fieldExpl);\n    \n    // combine them\n    result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n    if (queryExpl.getValue() == 1.0f)\n      return fieldExpl;\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}