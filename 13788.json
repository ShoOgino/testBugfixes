{"path":"lucene/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","pathOld":"src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","sourceNew":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","sourceOld":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","sourceNew":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","sourceOld":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}