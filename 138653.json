{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","commits":[{"id":"ceae51e37bbff02dcdeaa12303fec10d3eaaa004","date":1387382773,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(SolrIndexSearcher,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public LongValueCollapse(SolrIndexSearcher searcher,\n                             String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs) throws IOException {\n      super(searcher, field, nullPolicy, max, needsScores, boostDocs);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","pathOld":"/dev/null","sourceNew":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","date":1396311813,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet).mjava","sourceNew":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["ceae51e37bbff02dcdeaa12303fec10d3eaaa004","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ceae51e37bbff02dcdeaa12303fec10d3eaaa004"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ceae51e37bbff02dcdeaa12303fec10d3eaaa004":["5eb2511ababf862ea11e10761c70ee560cd84510","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}