{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","commits":[{"id":"a6b82a3644db30161c3cbd3e23aeefe19cb88113","date":1435478870,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","pathOld":"/dev/null","sourceNew":"  // Pull NRT reader after writer has committed and then indexed another doc:\n  public void testAfterCommitThenIndexKeepCommits() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n\n    // Keep all commits:\n    iwc.setIndexDeletionPolicy(new IndexDeletionPolicy() {\n        @Override\n        public void onInit(List<? extends IndexCommit> commits) {\n        }\n\n        @Override\n        public void onCommit(List<? extends IndexCommit> commits) {\n        }\n      });\n\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n    w.commit();\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(2, r.maxDoc());\n    w.addDocument(new Document());\n\n    DirectoryReader r2 = DirectoryReader.open(w, true);\n    assertEquals(3, r2.maxDoc());\n    IOUtils.close(r2, w);\n\n    // r is not stale because, even though we've committed the original writer since it was open, we are keeping all commit points:\n    iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IndexWriter w2 = new IndexWriter(dir, iwc);\n    assertEquals(2, w2.maxDoc());\n    IOUtils.close(r, w2, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","sourceNew":"  // Pull NRT reader after writer has committed and then indexed another doc:\n  public void testAfterCommitThenIndexKeepCommits() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n\n    // Keep all commits:\n    iwc.setIndexDeletionPolicy(new IndexDeletionPolicy() {\n        @Override\n        public void onInit(List<? extends IndexCommit> commits) {\n        }\n\n        @Override\n        public void onCommit(List<? extends IndexCommit> commits) {\n        }\n      });\n\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n    w.commit();\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(2, r.maxDoc());\n    w.addDocument(new Document());\n\n    DirectoryReader r2 = DirectoryReader.open(w);\n    assertEquals(3, r2.maxDoc());\n    IOUtils.close(r2, w);\n\n    // r is not stale because, even though we've committed the original writer since it was open, we are keeping all commit points:\n    iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IndexWriter w2 = new IndexWriter(dir, iwc);\n    assertEquals(2, w2.maxDoc());\n    IOUtils.close(r, w2, dir);\n  }\n\n","sourceOld":"  // Pull NRT reader after writer has committed and then indexed another doc:\n  public void testAfterCommitThenIndexKeepCommits() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n\n    // Keep all commits:\n    iwc.setIndexDeletionPolicy(new IndexDeletionPolicy() {\n        @Override\n        public void onInit(List<? extends IndexCommit> commits) {\n        }\n\n        @Override\n        public void onCommit(List<? extends IndexCommit> commits) {\n        }\n      });\n\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n    w.commit();\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w, true);\n    assertEquals(2, r.maxDoc());\n    w.addDocument(new Document());\n\n    DirectoryReader r2 = DirectoryReader.open(w, true);\n    assertEquals(3, r2.maxDoc());\n    IOUtils.close(r2, w);\n\n    // r is not stale because, even though we've committed the original writer since it was open, we are keeping all commit points:\n    iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IndexWriter w2 = new IndexWriter(dir, iwc);\n    assertEquals(2, w2.maxDoc());\n    IOUtils.close(r, w2, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterFromReader#testAfterCommitThenIndexKeepCommits().mjava","sourceNew":"  // Pull NRT reader after writer has committed and then indexed another doc:\n  public void testAfterCommitThenIndexKeepCommits() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n\n    // Keep all commits:\n    iwc.setIndexDeletionPolicy(new IndexDeletionPolicy() {\n        @Override\n        public void onInit(List<? extends IndexCommit> commits) {\n        }\n\n        @Override\n        public void onCommit(List<? extends IndexCommit> commits) {\n        }\n      });\n\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n    w.commit();\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(2, r.maxDoc());\n    w.addDocument(new Document());\n\n    DirectoryReader r2 = DirectoryReader.open(w);\n    assertEquals(3, r2.maxDoc());\n    IOUtils.close(r2, w);\n\n    // r is not stale because, even though we've committed the original writer since it was open, we are keeping all commit points:\n    iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IndexWriter w2 = new IndexWriter(dir, iwc);\n    assertEquals(2, w2.getDocStats().maxDoc);\n    IOUtils.close(r, w2, dir);\n  }\n\n","sourceOld":"  // Pull NRT reader after writer has committed and then indexed another doc:\n  public void testAfterCommitThenIndexKeepCommits() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n\n    // Keep all commits:\n    iwc.setIndexDeletionPolicy(new IndexDeletionPolicy() {\n        @Override\n        public void onInit(List<? extends IndexCommit> commits) {\n        }\n\n        @Override\n        public void onCommit(List<? extends IndexCommit> commits) {\n        }\n      });\n\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n    w.commit();\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(2, r.maxDoc());\n    w.addDocument(new Document());\n\n    DirectoryReader r2 = DirectoryReader.open(w);\n    assertEquals(3, r2.maxDoc());\n    IOUtils.close(r2, w);\n\n    // r is not stale because, even though we've committed the original writer since it was open, we are keeping all commit points:\n    iwc = newIndexWriterConfig();\n    iwc.setIndexCommit(r.getIndexCommit());\n    IndexWriter w2 = new IndexWriter(dir, iwc);\n    assertEquals(2, w2.maxDoc());\n    IOUtils.close(r, w2, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["2a1862266772deb28cdcb7d996b64d2177022687"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6b82a3644db30161c3cbd3e23aeefe19cb88113"],"a6b82a3644db30161c3cbd3e23aeefe19cb88113":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}