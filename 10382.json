{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","commits":[{"id":"fd4c4b2a55a46d2c45e3de4514f08e33215caa21","date":1288902330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a","date":1289919830,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then optimize\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then optimize\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then optimize\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then optimize\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.optimize();\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["85a883878c0af761245ab048babc63d099f835f3","5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a":["fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd4c4b2a55a46d2c45e3de4514f08e33215caa21"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","d14e8d18c0e3970c20354dbeeb49da11bd587fbd","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","fd4c4b2a55a46d2c45e3de4514f08e33215caa21","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"fd4c4b2a55a46d2c45e3de4514f08e33215caa21":["5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a","85a883878c0af761245ab048babc63d099f835f3"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}