{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitPostingsFormat#UniformSplitPostingsFormat(int,int,BlockEncoder,BlockDecoder).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitPostingsFormat#UniformSplitPostingsFormat(int,int,BlockEncoder,BlockDecoder).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param targetNumBlockLines Target number of lines per block.\n   *                            Must be strictly greater than 0.\n   *                            The parameters can be pre-validated with {@link UniformSplitTermsWriter#validateSettings(int, int)}.\n   *                            There is one term per block line, with its corresponding details ({@link org.apache.lucene.index.TermState}).\n   * @param deltaNumLines       Maximum allowed delta variation of the number of lines per block.\n   *                            Must be greater than or equal to 0 and strictly less than {@code targetNumBlockLines}.\n   *                            The block size will be {@code targetNumBlockLines}+-{@code deltaNumLines}.\n   *                            The block size must always be less than or equal to {@link UniformSplitTermsWriter#MAX_NUM_BLOCK_LINES}.\n   * @param blockEncoder        Optional block encoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   * @param blockDecoder        Optional block decoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   */\n  public UniformSplitPostingsFormat(int targetNumBlockLines, int deltaNumLines, BlockEncoder blockEncoder, BlockDecoder blockDecoder) {\n    this(NAME, targetNumBlockLines, deltaNumLines, blockEncoder, blockDecoder);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee06ea0335fd2077527d81c4c993c86e06f0da","date":1583768142,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitPostingsFormat#UniformSplitPostingsFormat(int,int,BlockEncoder,BlockDecoder,boolean).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitPostingsFormat#UniformSplitPostingsFormat(int,int,BlockEncoder,BlockDecoder).mjava","sourceNew":"  /**\n   * @param targetNumBlockLines Target number of lines per block.\n   *                            Must be strictly greater than 0.\n   *                            The parameters can be pre-validated with {@link UniformSplitTermsWriter#validateSettings(int, int)}.\n   *                            There is one term per block line, with its corresponding details ({@link org.apache.lucene.index.TermState}).\n   * @param deltaNumLines       Maximum allowed delta variation of the number of lines per block.\n   *                            Must be greater than or equal to 0 and strictly less than {@code targetNumBlockLines}.\n   *                            The block size will be {@code targetNumBlockLines}+-{@code deltaNumLines}.\n   *                            The block size must always be less than or equal to {@link UniformSplitTermsWriter#MAX_NUM_BLOCK_LINES}.\n   * @param blockEncoder        Optional block encoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   * @param blockDecoder        Optional block decoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   * @param dictionaryOnHeap    Whether to force loading the terms dictionary on-heap. By default it is kept off-heap without\n   *                            impact on performance. If block encoding/decoding is used, then the dictionary is always\n   *                            loaded on-heap whatever this parameter value is.\n   */\n  public UniformSplitPostingsFormat(int targetNumBlockLines, int deltaNumLines, BlockEncoder blockEncoder, BlockDecoder blockDecoder,\n                                    boolean dictionaryOnHeap) {\n    this(NAME, targetNumBlockLines, deltaNumLines, blockEncoder, blockDecoder, dictionaryOnHeap);\n  }\n\n","sourceOld":"  /**\n   * @param targetNumBlockLines Target number of lines per block.\n   *                            Must be strictly greater than 0.\n   *                            The parameters can be pre-validated with {@link UniformSplitTermsWriter#validateSettings(int, int)}.\n   *                            There is one term per block line, with its corresponding details ({@link org.apache.lucene.index.TermState}).\n   * @param deltaNumLines       Maximum allowed delta variation of the number of lines per block.\n   *                            Must be greater than or equal to 0 and strictly less than {@code targetNumBlockLines}.\n   *                            The block size will be {@code targetNumBlockLines}+-{@code deltaNumLines}.\n   *                            The block size must always be less than or equal to {@link UniformSplitTermsWriter#MAX_NUM_BLOCK_LINES}.\n   * @param blockEncoder        Optional block encoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   * @param blockDecoder        Optional block decoder, may be null if none.\n   *                            It can be used for compression or encryption.\n   */\n  public UniformSplitPostingsFormat(int targetNumBlockLines, int deltaNumLines, BlockEncoder blockEncoder, BlockDecoder blockDecoder) {\n    this(NAME, targetNumBlockLines, deltaNumLines, blockEncoder, blockDecoder);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee06ea0335fd2077527d81c4c993c86e06f0da"]},"commit2Childs":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["97ee06ea0335fd2077527d81c4c993c86e06f0da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}