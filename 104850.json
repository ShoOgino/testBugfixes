{"path":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int).mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  private int getHashCode(char[] text, int len) {\n    int downto = len;\n    int code = 0;\n    while (downto > 0) {\n      final char c;\n      if (ignoreCase)\n        c = Character.toLowerCase(text[--downto]);\n      else\n        c = text[--downto];\n      code = (code*31) + c;\n    }\n    return code;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int).mjava","sourceNew":"  private int getHashCode(char[] text, int len) {\n    int code = 0;\n    if (ignoreCase) {\n      for (int i=0; i<len; i++) {\n        code = code*31 + Character.toLowerCase(text[i]);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(char[] text, int len) {\n    int downto = len;\n    int code = 0;\n    while (downto > 0) {\n      final char c;\n      if (ignoreCase)\n        c = Character.toLowerCase(text[--downto]);\n      else\n        c = text[--downto];\n      code = (code*31) + c;\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9d74f8959bf981a44d81bdca4690869cd137de2","date":1202220152,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int).mjava","sourceNew":"  private int getHashCode(char[] text, int offset, int len) {\n    int code = 0;\n    final int stop = offset + len;\n    if (ignoreCase) {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + Character.toLowerCase(text[i]);\n      }\n    } else {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(char[] text, int len) {\n    int code = 0;\n    if (ignoreCase) {\n      for (int i=0; i<len; i++) {\n        code = code*31 + Character.toLowerCase(text[i]);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["6864413dbc0c12104c978c05456f3da1d45adb03"],"b9d74f8959bf981a44d81bdca4690869cd137de2":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b9d74f8959bf981a44d81bdca4690869cd137de2"]},"commit2Childs":{"6864413dbc0c12104c978c05456f3da1d45adb03":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["b9d74f8959bf981a44d81bdca4690869cd137de2"],"b9d74f8959bf981a44d81bdca4690869cd137de2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}