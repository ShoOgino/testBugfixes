{"path":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c74a1d30fa4439a3687ae194fa516accc89d4f35","date":1395251530,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19fd94680387e8cc4f7f4c2c41e216582493d2c8","date":1424319108,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><cores><core name=\\\"collection1\\\" instanceDir=\\\".\\\" /></cores></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c8a2521797f14d1d697a17a0069f5619cd211a6","date":1424361535,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkConfigManager configManager = new ZkConfigManager(zkClient);\n    configManager.downloadConfigDir(configName, dir.toPath());\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da59c6d3748d1a2a9d1a58a69f70383622d68379","date":1433873890,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkConfigManager configManager = new ZkConfigManager(zkClient);\n    configManager.downloadConfigDir(configName, dir.toPath());\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><solrcloud></solrcloud></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkConfigManager configManager = new ZkConfigManager(zkClient);\n    configManager.downloadConfigDir(configName, dir.toPath());\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","bugFix":["19fd94680387e8cc4f7f4c2c41e216582493d2c8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkConfigManager configManager = new ZkConfigManager(zkClient);\n    configManager.downloadConfigDir(configName, dir.toPath());\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><solrcloud></solrcloud></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/ZooKeeperInspector#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkConfigManager configManager = new ZkConfigManager(zkClient);\n    configManager.downloadConfigDir(configName, dir.toPath());\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    FileUtils.writeStringToFile(new File(dir, \"solr.xml\"), \"<solr><solrcloud></solrcloud></solr>\", \"UTF-8\");\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19fd94680387e8cc4f7f4c2c41e216582493d2c8":["c74a1d30fa4439a3687ae194fa516accc89d4f35"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"da59c6d3748d1a2a9d1a58a69f70383622d68379":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["19fd94680387e8cc4f7f4c2c41e216582493d2c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"c74a1d30fa4439a3687ae194fa516accc89d4f35":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","c74a1d30fa4439a3687ae194fa516accc89d4f35"],"19fd94680387e8cc4f7f4c2c41e216582493d2c8":["6c8a2521797f14d1d697a17a0069f5619cd211a6"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da59c6d3748d1a2a9d1a58a69f70383622d68379":["12109b652e9210b8d58fca47f6c4a725d058a58e","fe1c4aa9af769a38e878f608070f672efbeac27f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"6c8a2521797f14d1d697a17a0069f5619cd211a6":["da59c6d3748d1a2a9d1a58a69f70383622d68379"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"c74a1d30fa4439a3687ae194fa516accc89d4f35":["19fd94680387e8cc4f7f4c2c41e216582493d2c8"],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}