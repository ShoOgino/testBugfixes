{"path":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","commits":[{"id":"47ac88233e9e3019faa24a5184425ad60c23d70f","date":1302779803,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTLookupTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTLookupTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTLookupTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/fst/FSTLookupTest#prepare().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","sourceOld":"  @Before\n  public void prepare() throws Exception {\n    final TermFreq[] keys = new TermFreq[] {\n        tf(\"one\", 0.5f),\n        tf(\"oneness\", 1),\n        tf(\"onerous\", 1),\n        tf(\"onesimus\", 1),\n        tf(\"two\", 1),\n        tf(\"twofold\", 1),\n        tf(\"twonk\", 1),\n        tf(\"thrive\", 1),\n        tf(\"through\", 1),\n        tf(\"threat\", 1),\n        tf(\"three\", 1),\n        tf(\"foundation\", 1),\n        tf(\"fourier\", 1),\n        tf(\"four\", 1),\n        tf(\"fourty\", 1),\n        tf(\"xo\", 1),\n      };\n\n      lookup = new FSTLookup();\n      lookup.build(new TermFreqArrayIterator(keys));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47ac88233e9e3019faa24a5184425ad60c23d70f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eb46686a27187e42311e77666a2c7026f461ebc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","47ac88233e9e3019faa24a5184425ad60c23d70f"],"e230a61047bc041516c811baa08a7174d6f8322a":["47ac88233e9e3019faa24a5184425ad60c23d70f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","e230a61047bc041516c811baa08a7174d6f8322a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","47ac88233e9e3019faa24a5184425ad60c23d70f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"47ac88233e9e3019faa24a5184425ad60c23d70f":["1eb46686a27187e42311e77666a2c7026f461ebc","e230a61047bc041516c811baa08a7174d6f8322a","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["47ac88233e9e3019faa24a5184425ad60c23d70f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}