{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","commits":[{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","pathOld":"/dev/null","sourceNew":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        state.perThread.aborting = false;\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n      \n      if (abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","sourceNew":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n      \n      if (!aborting && abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","sourceOld":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        state.perThread.aborting = false;\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n      \n      if (abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","bugFix":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","sourceNew":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n\n      if (!aborting && abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","sourceOld":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n      \n      if (!aborting && abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterThreadPool#[T]_executePerThread(DocumentsWriter,Document,PerThreadTask[T]).mjava","sourceNew":null,"sourceOld":"  public final <T> T executePerThread(DocumentsWriter documentsWriter, Document doc, PerThreadTask<T> task) throws IOException {\n    ThreadState state = acquireThreadState(documentsWriter, doc);\n    boolean success = false;\n    try {\n      T result = task.process(state.perThread);\n      success = true;\n      return result;\n    } finally {\n      boolean abort = false;\n      if (!success && state.perThread.aborting) {\n        abort = true;\n      }\n\n      returnDocumentsWriterPerThread(state, task.doClearThreadBindings());\n\n      if (!aborting && abort) {\n        documentsWriter.abort();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5ef87af8c7bd0f8429622b83aa74202383f2e757","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":[],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c18273ea5b3974d2f30117f46f1ae416c28f727","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff78505662c0b741e2663a9f38a4889c12a32c9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff78505662c0b741e2663a9f38a4889c12a32c9f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}