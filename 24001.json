{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","commits":[{"id":"ba718737348b631d49101cf505322f868a130196","date":1397033548,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","pathOld":"/dev/null","sourceNew":"  public void testBulkMergeWithDeletes() throws IOException {\n    final int numDocs = atLeast(200);\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.YES));\n      doc.add(new StoredField(\"f\", TestUtil.randomSimpleString(random())));\n      w.addDocument(doc);\n    }\n    final int deleteCount = TestUtil.nextInt(random(), 5, numDocs);\n    for (int i = 0; i < deleteCount; ++i) {\n      final int id = random().nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", Integer.toString(id)));\n    }\n    w.commit();\n    w.close();\n    w = new RandomIndexWriter(random(), dir);\n    w.forceMerge(TestUtil.nextInt(random(), 1, 3));\n    w.commit();\n    w.close();\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2fb55c0777755badd3b46d8140f3d4301febed","date":1398881584,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","sourceNew":"  public void testBulkMergeWithDeletes() throws IOException {\n    final int numDocs = atLeast(200);\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.YES));\n      doc.add(new StoredField(\"f\", TestUtil.randomSimpleString(random())));\n      w.addDocument(doc);\n    }\n    final int deleteCount = TestUtil.nextInt(random(), 5, numDocs);\n    for (int i = 0; i < deleteCount; ++i) {\n      final int id = random().nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", Integer.toString(id)));\n    }\n    w.commit();\n    w.close();\n    w = new RandomIndexWriter(random(), dir);\n    w.forceMerge(TestUtil.nextInt(random(), 1, 3));\n    w.commit();\n    w.close();\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBulkMergeWithDeletes() throws IOException {\n    final int numDocs = atLeast(200);\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.YES));\n      doc.add(new StoredField(\"f\", TestUtil.randomSimpleString(random())));\n      w.addDocument(doc);\n    }\n    final int deleteCount = TestUtil.nextInt(random(), 5, numDocs);\n    for (int i = 0; i < deleteCount; ++i) {\n      final int id = random().nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", Integer.toString(id)));\n    }\n    w.commit();\n    w.close();\n    w = new RandomIndexWriter(random(), dir);\n    w.forceMerge(TestUtil.nextInt(random(), 1, 3));\n    w.commit();\n    w.close();\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testBulkMergeWithDeletes().mjava","sourceNew":"  public void testBulkMergeWithDeletes() throws IOException {\n    final int numDocs = atLeast(200);\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.YES));\n      doc.add(new StoredField(\"f\", TestUtil.randomSimpleString(random())));\n      w.addDocument(doc);\n    }\n    final int deleteCount = TestUtil.nextInt(random(), 5, numDocs);\n    for (int i = 0; i < deleteCount; ++i) {\n      final int id = random().nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", Integer.toString(id)));\n    }\n    w.commit();\n    w.close();\n    w = new RandomIndexWriter(random(), dir);\n    w.forceMerge(TestUtil.nextInt(random(), 1, 3));\n    w.commit();\n    w.close();\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBulkMergeWithDeletes() throws IOException {\n    final int numDocs = atLeast(200);\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.YES));\n      doc.add(new StoredField(\"f\", TestUtil.randomSimpleString(random())));\n      w.addDocument(doc);\n    }\n    final int deleteCount = TestUtil.nextInt(random(), 5, numDocs);\n    for (int i = 0; i < deleteCount; ++i) {\n      final int id = random().nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", Integer.toString(id)));\n    }\n    w.commit();\n    w.close();\n    w = new RandomIndexWriter(random(), dir);\n    w.forceMerge(TestUtil.nextInt(random(), 1, 3));\n    w.commit();\n    w.close();\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["ba718737348b631d49101cf505322f868a130196"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba718737348b631d49101cf505322f868a130196":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"]},"commit2Childs":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba718737348b631d49101cf505322f868a130196"],"ba718737348b631d49101cf505322f868a130196":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}