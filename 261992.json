{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerCollectionQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f291d2d430e8149d24fdd06b0bcdab0941ec9144","date":1481216635,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","bugFix":["6f26f74e4969851a019d28f10315cb1c77786f22"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04460ebf148476e5d4aa663f63344916ad101523","date":1484394204,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeFalse(\"SOLR-9893: EasyMock does not work with Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeFalse(\"SOLR-9893: EasyMock does not work with Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e","date":1487462440,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeFalse(\"SOLR-9893: EasyMock does not work with Java 9\", Constants.JRE_IS_MINIMUM_JAVA9);\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f3d6c69b0bba4aa872a1507ecd96c7887646e9b9","date":1509820648,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    stateUpdateQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(HttpShardHandlerFactory.class);\n    shardHandlerMock = mock(HttpShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n    cloudManagerMock = mock(SolrCloudManager.class);\n    distribStateManagerMock = mock(DistribStateManager.class);\n    coreContainerMock = mock(CoreContainer.class);\n    updateShardHandlerMock = mock(UpdateShardHandler.class);\n    httpClientMock = mock(HttpClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(ShardHandlerFactory.class);\n    shardHandlerMock = mock(ShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n  }\n\n","bugFix":["f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c526352db87264a72a7a9ad68c1b769b81e54305","date":1598780188,"type":3,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    stateUpdateQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(HttpShardHandlerFactory.class);\n    shardHandlerMock = mock(HttpShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    cloudConfigMock = mock(CloudConfig.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n    cloudManagerMock = mock(SolrCloudManager.class);\n    distribStateManagerMock = mock(DistribStateManager.class);\n    coreContainerMock = mock(CoreContainer.class);\n    updateShardHandlerMock = mock(UpdateShardHandler.class);\n    httpClientMock = mock(HttpClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    stateUpdateQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(HttpShardHandlerFactory.class);\n    shardHandlerMock = mock(HttpShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n    cloudManagerMock = mock(SolrCloudManager.class);\n    distribStateManagerMock = mock(DistribStateManager.class);\n    coreContainerMock = mock(CoreContainer.class);\n    updateShardHandlerMock = mock(UpdateShardHandler.class);\n    httpClientMock = mock(HttpClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b17e79a71117668ecbf8d3417c876e41396565","date":1598973672,"type":3,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    stateUpdateQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(HttpShardHandlerFactory.class);\n    shardHandlerMock = mock(HttpShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n    cloudManagerMock = mock(SolrCloudManager.class);\n    distribStateManagerMock = mock(DistribStateManager.class);\n    coreContainerMock = mock(CoreContainer.class);\n    updateShardHandlerMock = mock(UpdateShardHandler.class);\n    httpClientMock = mock(HttpClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    assumeWorkingMockito();\n    \n    workQueueMock = mock(OverseerTaskQueue.class);\n    stateUpdateQueueMock = mock(OverseerTaskQueue.class);\n    runningMapMock = mock(DistributedMap.class);\n    completedMapMock = mock(DistributedMap.class);\n    failureMapMock = mock(DistributedMap.class);\n    shardHandlerFactoryMock = mock(HttpShardHandlerFactory.class);\n    shardHandlerMock = mock(HttpShardHandler.class);\n    zkStateReaderMock = mock(ZkStateReader.class);\n    cloudConfigMock = mock(CloudConfig.class);\n    clusterStateMock = mock(ClusterState.class);\n    solrZkClientMock = mock(SolrZkClient.class);\n    overseerMock = mock(Overseer.class);\n    zkControllerMock = mock(ZkController.class);\n    cloudDataProviderMock = mock(SolrCloudManager.class);\n    objectCache = new ObjectCache();\n    clusterStateProviderMock = mock(ClusterStateProvider.class);\n    stateManagerMock = mock(DistribStateManager.class);\n    cloudManagerMock = mock(SolrCloudManager.class);\n    distribStateManagerMock = mock(DistribStateManager.class);\n    coreContainerMock = mock(CoreContainer.class);\n    updateShardHandlerMock = mock(UpdateShardHandler.class);\n    httpClientMock = mock(HttpClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7b17e79a71117668ecbf8d3417c876e41396565":["c526352db87264a72a7a9ad68c1b769b81e54305"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c526352db87264a72a7a9ad68c1b769b81e54305":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8","f3d6c69b0bba4aa872a1507ecd96c7887646e9b9"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["9856095f7afb5a607bf5e65077615ed91273508c","04460ebf148476e5d4aa663f63344916ad101523"],"f291d2d430e8149d24fdd06b0bcdab0941ec9144":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["04460ebf148476e5d4aa663f63344916ad101523"],"9856095f7afb5a607bf5e65077615ed91273508c":["2209af2c265d2258ec4b29c8cc78622d36994a15","f291d2d430e8149d24fdd06b0bcdab0941ec9144"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"04460ebf148476e5d4aa663f63344916ad101523":["f291d2d430e8149d24fdd06b0bcdab0941ec9144"],"f3d6c69b0bba4aa872a1507ecd96c7887646e9b9":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b17e79a71117668ecbf8d3417c876e41396565"]},"commit2Childs":{"e7b17e79a71117668ecbf8d3417c876e41396565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["f291d2d430e8149d24fdd06b0bcdab0941ec9144","9856095f7afb5a607bf5e65077615ed91273508c"],"c526352db87264a72a7a9ad68c1b769b81e54305":["e7b17e79a71117668ecbf8d3417c876e41396565"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["c526352db87264a72a7a9ad68c1b769b81e54305"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["d523b8189b211dd1630166aa77b8c88bb48b3fcc","f3d6c69b0bba4aa872a1507ecd96c7887646e9b9"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"f291d2d430e8149d24fdd06b0bcdab0941ec9144":["9856095f7afb5a607bf5e65077615ed91273508c","04460ebf148476e5d4aa663f63344916ad101523"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"9856095f7afb5a607bf5e65077615ed91273508c":["507e7decdf00981d09a74632ea30299a4ce6ba72"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"f3d6c69b0bba4aa872a1507ecd96c7887646e9b9":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"04460ebf148476e5d4aa663f63344916ad101523":["507e7decdf00981d09a74632ea30299a4ce6ba72","f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}