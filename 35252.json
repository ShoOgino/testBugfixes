{"path":"contrib/db/src/java/org/apache/lucene/store/db/DbDirectory#list().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/db/src/java/org/apache/lucene/store/db/DbDirectory#list().mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/DbDirectory#list().mjava","sourceNew":"    public String[] list()\n        throws IOException\n    {\n        Dbc cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n\n                cursor = files.cursor(txn, flags);\n\n                if (cursor.get(key, data,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    ByteArrayInputStream buffer =\n                        new ByteArrayInputStream(key.getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n                \n                    in.close();\n                    list.add(name);\n\n                    while (cursor.get(key, data,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    public String[] list()\n        throws IOException\n    {\n        Dbc cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n\n                cursor = files.cursor(txn, flags);\n\n                if (cursor.get(key, data,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    ByteArrayInputStream buffer =\n                        new ByteArrayInputStream(key.getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n                \n                    in.close();\n                    list.add(name);\n\n                    while (cursor.get(key, data,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87fc6f159522f12e67225691468cbf3d11be8590","date":1136423057,"type":5,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/bdb/src/java/org/apache/lucene/store/db/DbDirectory#list().mjava","pathOld":"contrib/db/src/java/org/apache/lucene/store/db/DbDirectory#list().mjava","sourceNew":"    public String[] list()\n        throws IOException\n    {\n        Dbc cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n\n                cursor = files.cursor(txn, flags);\n\n                if (cursor.get(key, data,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    ByteArrayInputStream buffer =\n                        new ByteArrayInputStream(key.getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n                \n                    in.close();\n                    list.add(name);\n\n                    while (cursor.get(key, data,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","sourceOld":"    public String[] list()\n        throws IOException\n    {\n        Dbc cursor = null;\n        List list = new ArrayList();\n\n        try {\n            try {\n                DatabaseEntry key = new DatabaseEntry(new byte[0]);\n                DatabaseEntry data = new DatabaseEntry(null);\n\n                data.setPartial(true);\n\n                cursor = files.cursor(txn, flags);\n\n                if (cursor.get(key, data,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    ByteArrayInputStream buffer =\n                        new ByteArrayInputStream(key.getData());\n                    DataInputStream in = new DataInputStream(buffer);\n                    String name = in.readUTF();\n                \n                    in.close();\n                    list.add(name);\n\n                    while (cursor.get(key, data,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        buffer = new ByteArrayInputStream(key.getData());\n                        in = new DataInputStream(buffer);\n                        name = in.readUTF();\n                        in.close();\n\n                        list.add(name);\n                    }\n                }\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n\n        return (String[]) list.toArray(new String[list.size()]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87fc6f159522f12e67225691468cbf3d11be8590":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87fc6f159522f12e67225691468cbf3d11be8590"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["87fc6f159522f12e67225691468cbf3d11be8590"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"87fc6f159522f12e67225691468cbf3d11be8590":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}