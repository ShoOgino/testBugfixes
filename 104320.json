{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","commits":[{"id":"8f1ea787bab5bdb5e72685e55424898da05509b6","date":1370289750,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","pathOld":"/dev/null","sourceNew":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node, sreq.exception);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96adbab674ae121f8b6b3e10474070b4bd97a219","date":1373614333,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","sourceNew":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node + \" update: \" + ureq , e);\n    }\n  }\n\n","sourceOld":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node, sreq.exception);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","sourceNew":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node + \" update: \" + ureq , e);\n    }\n  }\n\n","sourceOld":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node, sreq.exception);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#syncRequest(Node,UpdateRequestExt).mjava","sourceNew":"  private void syncRequest(Node node, UpdateRequest ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node + \" update: \" + ureq , e);\n    }\n  }\n\n","sourceOld":"  private void syncRequest(Node node, UpdateRequestExt ureq) {\n    Request sreq = new Request();\n    sreq.node = node;\n    sreq.ureq = ureq;\n\n    String url = node.getUrl();\n    String fullUrl;\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      fullUrl = \"http://\" + url;\n    } else {\n      fullUrl = url;\n    }\n\n    HttpSolrServer server = new HttpSolrServer(fullUrl,\n        updateShardHandler.getHttpClient());\n\n    try {\n      sreq.ursp = server.request(ureq);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + sreq.node + \" update: \" + ureq , e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["8f1ea787bab5bdb5e72685e55424898da05509b6","96adbab674ae121f8b6b3e10474070b4bd97a219"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["96adbab674ae121f8b6b3e10474070b4bd97a219"],"96adbab674ae121f8b6b3e10474070b4bd97a219":["8f1ea787bab5bdb5e72685e55424898da05509b6"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f1ea787bab5bdb5e72685e55424898da05509b6":["37a0f60745e53927c4c876cfe5b5a58170f0646c","96adbab674ae121f8b6b3e10474070b4bd97a219"],"96adbab674ae121f8b6b3e10474070b4bd97a219":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f1ea787bab5bdb5e72685e55424898da05509b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}