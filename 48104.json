{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","commits":[{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    initSegmentName(false);\n  \n    final DocWriter perDoc;\n    \n    boolean success = false;\n    try {\n      perDoc = consumer.processDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          commitDocument(-1);\n        }\n      }\n    }\n\n    success = false;\n    try {\n      if (perDoc != null) {\n        perDoc.finish();\n      }\n      \n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","sourceNew":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n  \n    boolean success = false;\n    try {\n      consumer.processDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          commitDocument(-1);\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n\n  }\n\n","sourceOld":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    initSegmentName(false);\n  \n    final DocWriter perDoc;\n    \n    boolean success = false;\n    try {\n      perDoc = consumer.processDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          commitDocument(-1);\n        }\n      }\n    }\n\n    success = false;\n    try {\n      if (perDoc != null) {\n        perDoc.finish();\n      }\n      \n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","sourceNew":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          commitDocument();\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n  }\n\n","sourceOld":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n  \n    boolean success = false;\n    try {\n      consumer.processDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          commitDocument(-1);\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n      \n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","sourceNew":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          numDocsInRAM++;\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        abort();\n      }\n    }\n  }\n\n","sourceOld":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          commitDocument();\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        setAborting();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"14975dba6846360ff627c6797726fa4899a3413d","date":1295174738,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","sourceNew":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    assert writer.testPoint(\"DocumentsWriterPerThread addDocument start\");\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          numDocsInRAM++;\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        abort();\n      }\n    }\n  }\n\n","sourceOld":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          numDocsInRAM++;\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        abort();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86c34ea6a885f625f2e464756450d45b72653ef3","date":1295256222,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#updateDocument(Document,Analyzer,Term).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThread#addDocument(Document,Analyzer).mjava","sourceNew":"  public void updateDocument(Document doc, Analyzer analyzer, Term delTerm) throws IOException {\n    assert writer.testPoint(\"DocumentsWriterPerThread addDocument start\");\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (delTerm != null) {\n      pendingDeletes.addTerm(delTerm, docState.docID);\n    }\n\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          numDocsInRAM++;\n        } else {\n          abort();\n        }\n      }\n    }\n\n    success = false;\n    try {\n      numDocsInRAM++;\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        abort();\n      }\n    }\n  }\n\n","sourceOld":"  public void addDocument(Document doc, Analyzer analyzer) throws IOException {\n    assert writer.testPoint(\"DocumentsWriterPerThread addDocument start\");\n    docState.doc = doc;\n    docState.analyzer = analyzer;\n    docState.docID = numDocsInRAM;\n    if (segment == null) {\n      // this call is synchronized on IndexWriter.segmentInfos\n      segment = writer.newSegmentName();\n      assert numDocsInRAM == 0;\n    }\n\n    boolean success = false;\n    try {\n      consumer.processDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        if (!aborting) {\n          // mark document as deleted\n          deleteDocID(docState.docID);\n          numDocsInRAM++;\n        }\n      }\n    }\n\n    success = false;\n    try {\n      consumer.finishDocument();\n\n      success = true;\n    } finally {\n      if (!success) {\n        abort();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86c34ea6a885f625f2e464756450d45b72653ef3":["14975dba6846360ff627c6797726fa4899a3413d"],"14975dba6846360ff627c6797726fa4899a3413d":["ff78505662c0b741e2663a9f38a4889c12a32c9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["833a7987bc1c94455fde83e3311f72bddedcfb93","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["6c18273ea5b3974d2f30117f46f1ae416c28f727"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["14975dba6846360ff627c6797726fa4899a3413d"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c18273ea5b3974d2f30117f46f1ae416c28f727","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86c34ea6a885f625f2e464756450d45b72653ef3":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff78505662c0b741e2663a9f38a4889c12a32c9f"],"14975dba6846360ff627c6797726fa4899a3413d":["86c34ea6a885f625f2e464756450d45b72653ef3"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["86c34ea6a885f625f2e464756450d45b72653ef3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}