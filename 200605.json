{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n    if (pulsed) {\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // just buffer up\n      Position pos = currentDoc.positions[currentDoc.numPositions++];\n      pos.pos = position;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d53c3f769ca0f9e7434937b792877770271aecf","date":1294785129,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    //System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n    if (pulsed) {\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // just buffer up\n      Position pos = currentDoc.positions[currentDoc.numPositions++];\n      pos.pos = position;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    //System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n    if (pulsed) {\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // just buffer up\n      Position pos = currentDoc.positions[currentDoc.numPositions++];\n      pos.pos = position;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    //System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n    if (pulsed) {\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // just buffer up\n      Position pos = currentDoc.positions[currentDoc.numPositions++];\n      pos.pos = position;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriter#addPosition(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsWriterImpl#addPosition(int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    if (DEBUG) System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, BytesRef payload) throws IOException {\n\n    //System.out.println(\"PW       pos=\" + position + \" payload=\" + (payload == null ? \"null\" : payload.length + \" bytes\"));\n    if (pendingCount == pending.length) {\n      push();\n    }\n\n    if (pendingCount == -1) {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.addPosition(position, payload);\n    } else {\n      // buffer up\n      final Position pos = pending[pendingCount++];\n      pos.pos = position;\n      pos.docID = currentDoc.docID;\n      if (payload != null && payload.length > 0) {\n        if (pos.payload == null) {\n          pos.payload = new BytesRef(payload);\n        } else {\n          pos.payload.copy(payload);\n        }\n      } else if (pos.payload != null) {\n        pos.payload.length = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["3d53c3f769ca0f9e7434937b792877770271aecf"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","3d53c3f769ca0f9e7434937b792877770271aecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d53c3f769ca0f9e7434937b792877770271aecf":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","3d53c3f769ca0f9e7434937b792877770271aecf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3d53c3f769ca0f9e7434937b792877770271aecf":["60ba444201d2570214b6fcf1d15600dc1a01f548","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["29ef99d61cda9641b6250bf9567329a6e65f901d","3d53c3f769ca0f9e7434937b792877770271aecf","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}