{"path":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","commits":[{"id":"7aa6ef14ffd15aa20e622be1a9a86296d8818bd8","date":1332439401,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", \"analysis-extras/solr\");\n    IndexWriter iw;\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    assertU(optimize());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d5711430419c04dcbe58f6ee77485e71df3b717","date":1332450238,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", \"analysis-extras/solr\");\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", \"analysis-extras/solr\");\n    IndexWriter iw;\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    assertU(optimize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    File testHome = createTempDir();\n    FileUtils.copyDirectory(getFile(\"analysis-extras/solr\"), testHome);\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", testHome.getAbsolutePath());\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", \"analysis-extras/solr\");\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    File testHome = createTempDir();\n    FileUtils.copyDirectory(getFile(\"analysis-extras/solr\"), testHome);\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", testHome.getAbsolutePath());\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", \"analysis-extras/solr\");\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestFoldingMultitermExtrasQuery#beforeTests().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    File testHome = createTempDir().toFile();\n    FileUtils.copyDirectory(getFile(\"analysis-extras/solr\"), testHome);\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", testHome.getAbsolutePath());\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    File testHome = createTempDir();\n    FileUtils.copyDirectory(getFile(\"analysis-extras/solr\"), testHome);\n    initCore(\"solrconfig-icucollate.xml\",\"schema-folding-extra.xml\", testHome.getAbsolutePath());\n\n    int idx = 1;\n    // ICUFoldingFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icufolding\", \"eli\\u0307f\"));\n\n    // ICUNormalizer2FilterFactory\n\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"BadMagicICUFolding\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Ruß\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ΜΆΪΟΣ\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"Μάϊος\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"résumé\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"re\\u0301sume\\u0301\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"ELİF\"));\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icunormalizer2\", \"eli\\u0307f\"));\n\n    // ICUTransformFilterFactory\n    assertU(adoc(\"id\", Integer.toString(idx++), \"content_icutransform\", \"Российская\"));\n\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7aa6ef14ffd15aa20e622be1a9a86296d8818bd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6d5711430419c04dcbe58f6ee77485e71df3b717":["7aa6ef14ffd15aa20e622be1a9a86296d8818bd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["6d5711430419c04dcbe58f6ee77485e71df3b717","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"f4abec28b874149a7223e32cc7a01704c27790de":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["6d5711430419c04dcbe58f6ee77485e71df3b717"]},"commit2Childs":{"7aa6ef14ffd15aa20e622be1a9a86296d8818bd8":["6d5711430419c04dcbe58f6ee77485e71df3b717"],"6d5711430419c04dcbe58f6ee77485e71df3b717":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7aa6ef14ffd15aa20e622be1a9a86296d8818bd8"],"b7605579001505896d48b07160075a5c8b8e128e":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["b7605579001505896d48b07160075a5c8b8e128e","f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}