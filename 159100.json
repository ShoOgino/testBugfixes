{"path":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","commits":[{"id":"e87ea9fb673e8638747af83477322f07ed5a8b95","date":1374560737,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.shutdown();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.shutdown();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0a65e308c1642d1ffb120ffae140f08362e92a7","date":1441197397,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n\n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n    \n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testSearchAfterPassedMaxDoc().mjava","sourceNew":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n\n    IndexSearcher s = new IndexSearcher(r);\n    expectThrows(IllegalArgumentException.class, () -> {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n    });\n\n    IOUtils.close(r, dir);\n  }\n\n","sourceOld":"  @Test\n  public void testSearchAfterPassedMaxDoc() throws Exception {\n    // LUCENE-5128: ensure we get a meaningful message if searchAfter exceeds maxDoc\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    IndexReader r = w.getReader();\n    w.close();\n\n    IndexSearcher s = new IndexSearcher(r);\n    try {\n      s.searchAfter(new ScoreDoc(r.maxDoc(), 0.54f), new MatchAllDocsQuery(), 10);\n      fail(\"should have hit IllegalArgumentException when searchAfter exceeds maxDoc\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    } finally {\n      IOUtils.close(r, dir);\n    }\n  }\n\n","bugFix":["e87ea9fb673e8638747af83477322f07ed5a8b95"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0a65e308c1642d1ffb120ffae140f08362e92a7":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["f0a65e308c1642d1ffb120ffae140f08362e92a7"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e87ea9fb673e8638747af83477322f07ed5a8b95"],"e87ea9fb673e8638747af83477322f07ed5a8b95":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"f0a65e308c1642d1ffb120ffae140f08362e92a7":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","e87ea9fb673e8638747af83477322f07ed5a8b95"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f0a65e308c1642d1ffb120ffae140f08362e92a7"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e87ea9fb673e8638747af83477322f07ed5a8b95":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}