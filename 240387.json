{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsSpan().mjava","commits":[{"id":"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b","date":1143666100,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsSpan().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testGetBestFragmentsSpan() throws Exception\n\t{\n\t\tSpanQuery clauses[]={\n\t\t\tnew SpanTermQuery(new Term(\"contents\",\"john\")),\n\t\t\tnew SpanTermQuery(new Term(\"contents\",\"kennedy\")),\n\t\t\t}; \n\t\t\n\t\tSpanNearQuery snq=new SpanNearQuery(clauses,1,true);\n\t\tdoSearching(snq);\n\t\tdoStandardHighlights();\n\t\t//Currently highlights \"John\" and \"Kennedy\" separately\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsSpan().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsSpan().mjava","sourceNew":"  public void testGetBestFragmentsSpan() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        SpanQuery clauses[] = { new SpanTermQuery(new Term(\"contents\", \"john\")),\n            new SpanTermQuery(new Term(\"contents\", \"kennedy\")), };\n\n        SpanNearQuery snq = new SpanNearQuery(clauses, 1, true);\n        doSearching(snq);\n        doStandardHighlights(analyzer, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"\tpublic void testGetBestFragmentsSpan() throws Exception\n\t{\n\t\tSpanQuery clauses[]={\n\t\t\tnew SpanTermQuery(new Term(\"contents\",\"john\")),\n\t\t\tnew SpanTermQuery(new Term(\"contents\",\"kennedy\")),\n\t\t\t}; \n\t\t\n\t\tSpanNearQuery snq=new SpanNearQuery(clauses,1,true);\n\t\tdoSearching(snq);\n\t\tdoStandardHighlights();\n\t\t//Currently highlights \"John\" and \"Kennedy\" separately\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c16ba100a31d292b7b4c893a3cdf1994e75a3201","date":1249608645,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsQueryScorer().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsSpan().mjava","sourceNew":"  public void testGetBestFragmentsQueryScorer() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        SpanQuery clauses[] = { new SpanTermQuery(new Term(\"contents\", \"john\")),\n            new SpanTermQuery(new Term(\"contents\", \"kennedy\")), };\n\n        SpanNearQuery snq = new SpanNearQuery(clauses, 1, true);\n        doSearching(snq);\n        doStandardHighlights(analyzer, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testGetBestFragmentsSpan() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        SpanQuery clauses[] = { new SpanTermQuery(new Term(\"contents\", \"john\")),\n            new SpanTermQuery(new Term(\"contents\", \"kennedy\")), };\n\n        SpanNearQuery snq = new SpanNearQuery(clauses, 1, true);\n        doSearching(snq);\n        doStandardHighlights(analyzer, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["296b8b38a87feb478921f77834a2302dfe77641c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"296b8b38a87feb478921f77834a2302dfe77641c":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"]},"commit2Childs":{"c16ba100a31d292b7b4c893a3cdf1994e75a3201":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["296b8b38a87feb478921f77834a2302dfe77641c"],"296b8b38a87feb478921f77834a2302dfe77641c":["c16ba100a31d292b7b4c893a3cdf1994e75a3201"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}