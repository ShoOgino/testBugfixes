{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"527cc14542789f47d75da436cb4287d1ab887e34","date":1391705548,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":["43369d257d14f61a881aa609962ef95e8a334d3a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b516a692d03225c8f0e81a13ceed2dc32bb457d","date":1453411951,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w, true);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenAfterNoRealChange().mjava","sourceNew":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMaxFullFlushMergeWaitMillis(0));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testReopenAfterNoRealChange() throws Exception {\n    Directory d = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriter w = new IndexWriter(\n        d,\n        newIndexWriterConfig(new MockAnalyzer(random())));\n\n    DirectoryReader r = w.getReader(); // start pooling readers\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNull(r2);\n    \n    w.addDocument(new Document());\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r3);\n    assertTrue(r3.getVersion() != r.getVersion());\n    assertTrue(r3.isCurrent());\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n\n    // ... but IW marks this as not current:\n    assertFalse(r3.isCurrent());\n    DirectoryReader r4 = DirectoryReader.openIfChanged(r3);\n    assertNull(r4);\n\n    // Deletes nothing in reality...:\n    w.deleteDocuments(new Term(\"foo\", \"bar\"));\n    DirectoryReader r5 = DirectoryReader.openIfChanged(r3, w);\n    assertNull(r5);\n\n    r3.close();\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"527cc14542789f47d75da436cb4287d1ab887e34":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["527cc14542789f47d75da436cb4287d1ab887e34"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"527cc14542789f47d75da436cb4287d1ab887e34":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["527cc14542789f47d75da436cb4287d1ab887e34"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}