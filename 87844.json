{"path":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","commits":[{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}. */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["df2e19759ba573689671d3ed4451ede4d92e479a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9665d17707cc21b1db995118ff36129723139ab","date":1225384420,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","sourceNew":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","sourceOld":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}. */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2993c85d947e3191bba14229ea72fd5675d048e2","date":1228593940,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","sourceNew":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      if (infoStream != null)\n        message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        if (infoStream != null)\n          message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else if (infoStream != null)\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","sourceOld":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","bugFix":null,"bugIntro":["df2e19759ba573689671d3ed4451ede4d92e479a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df2e19759ba573689671d3ed4451ede4d92e479a","date":1235439035,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","sourceNew":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    if (infoStream != null)\n      message(\"commit: start\");\n\n    if (autoCommit || pendingCommit == null) {\n      if (infoStream != null)\n        message(\"commit: now prepare\");\n      prepareCommit(commitUserData, true);\n    } else if (infoStream != null)\n      message(\"commit: already prepared\");\n\n    finishCommit();\n  }\n\n","sourceOld":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    // Only let one thread do the prepare/finish at a time\n    waitForCommit();\n\n    try {\n      if (infoStream != null)\n        message(\"commit: start\");\n\n      if (autoCommit || pendingCommit == null) {\n        if (infoStream != null)\n          message(\"commit: now prepare\");\n        prepareCommit(commitUserData, true);\n      } else if (infoStream != null)\n        message(\"commit: already prepared\");\n\n      finishCommit();\n    } finally {\n      doneCommit();\n    }\n  }\n\n","bugFix":["4b1444275c93a8051a6fe6158639467a144ae0a4","2993c85d947e3191bba14229ea72fd5675d048e2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commit(Map).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commit(String).mjava","sourceNew":"  /** Commits all changes to the index, specifying a\n   *  commitUserData Map (String -> String).  This just\n   *  calls {@link #prepareCommit(Map)} (if you didn't\n   *  already call it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(Map commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    if (infoStream != null)\n      message(\"commit: start\");\n\n    if (autoCommit || pendingCommit == null) {\n      if (infoStream != null)\n        message(\"commit: now prepare\");\n      prepareCommit(commitUserData, true);\n    } else if (infoStream != null)\n      message(\"commit: already prepared\");\n\n    finishCommit();\n  }\n\n","sourceOld":"  /** Commits all changes to the index, specifying a\n   *  commitUserData String.  This just calls {@link\n   *  #prepareCommit(String)} (if you didn't already call\n   *  it) and then {@link #finishCommit}.\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   */\n  public final void commit(String commitUserData) throws CorruptIndexException, IOException {\n\n    ensureOpen();\n\n    if (infoStream != null)\n      message(\"commit: start\");\n\n    if (autoCommit || pendingCommit == null) {\n      if (infoStream != null)\n        message(\"commit: now prepare\");\n      prepareCommit(commitUserData, true);\n    } else if (infoStream != null)\n      message(\"commit: already prepared\");\n\n    finishCommit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9665d17707cc21b1db995118ff36129723139ab":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["df2e19759ba573689671d3ed4451ede4d92e479a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df2e19759ba573689671d3ed4451ede4d92e479a":["2993c85d947e3191bba14229ea72fd5675d048e2"],"2993c85d947e3191bba14229ea72fd5675d048e2":["e9665d17707cc21b1db995118ff36129723139ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"]},"commit2Childs":{"e9665d17707cc21b1db995118ff36129723139ab":["2993c85d947e3191bba14229ea72fd5675d048e2"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["e9665d17707cc21b1db995118ff36129723139ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"df2e19759ba573689671d3ed4451ede4d92e479a":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"2993c85d947e3191bba14229ea72fd5675d048e2":["df2e19759ba573689671d3ed4451ede4d92e479a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}