{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#docs(Random,TermsEnum,PostingsEnum,int).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#docs(Random,TermsEnum,PostingsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#docs(Random,TermsEnum,Bits,PostingsEnum,int).mjava","sourceNew":"  // Returns a PostingsEnum with random features available\n  public static PostingsEnum docs(Random random, TermsEnum termsEnum, PostingsEnum reuse, int flags) throws IOException {\n    // TODO: simplify this method? it would be easier to randomly either use the flags passed, or do the random selection,\n    // FREQS should be part fo the random selection instead of outside on its own?\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        final int posFlags;\n        switch (random.nextInt(4)) {\n          case 0: posFlags = PostingsEnum.POSITIONS; break;\n          case 1: posFlags = PostingsEnum.OFFSETS; break;\n          case 2: posFlags = PostingsEnum.PAYLOADS; break;\n          default: posFlags = PostingsEnum.ALL; break;\n        }\n        return termsEnum.postings(null, posFlags);\n      }\n      flags |= PostingsEnum.FREQS;\n    }\n    return termsEnum.postings(reuse, flags);\n  }\n\n","sourceOld":"  // Returns a PostingsEnum with random features available\n  public static PostingsEnum docs(Random random, TermsEnum termsEnum, Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n    // TODO: simplify this method? it would be easier to randomly either use the flags passed, or do the random selection,\n    // FREQS should be part fo the random selection instead of outside on its own?\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        final int posFlags;\n        switch (random.nextInt(4)) {\n          case 0: posFlags = PostingsEnum.POSITIONS; break;\n          case 1: posFlags = PostingsEnum.OFFSETS; break;\n          case 2: posFlags = PostingsEnum.PAYLOADS; break;\n          default: posFlags = PostingsEnum.ALL; break;\n        }\n        return termsEnum.postings(liveDocs, null, posFlags);\n      }\n      flags |= PostingsEnum.FREQS;\n    }\n    return termsEnum.postings(liveDocs, reuse, flags);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}