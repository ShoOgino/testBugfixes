{"path":"src/java/org/apache/lucene/search/IndexSearcher#sortSubReaders(boolean).mjava","commits":[{"id":"87b6140eb35784da365e76a7236e4cd52a1a396c","date":1233591709,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/IndexSearcher#sortSubReaders(boolean).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#sortSubReaders().mjava","sourceNew":"  protected void sortSubReaders(boolean docsInOrder) {\n\n    List subReadersList = new ArrayList();\n    gatherSubReaders(subReadersList, reader);\n    sortedSubReaders = (IndexReader[]) subReadersList.toArray(indexReaderZeroArray);\n    final int length = sortedSubReaders.length;\n    sortedStarts = new int[length];\n    int maxDoc = 0;\n    for (int i = 0; i < sortedSubReaders.length; i++) {\n      sortedStarts[i] = maxDoc;\n      maxDoc += sortedSubReaders[i].maxDoc();          // compute maxDocs\n    }\n\n    if (!docsInOrder) {\n\n      // sort readers and starts\n      SorterTemplate sorter = new SorterTemplate() {\n          protected int compare(int i, int j) {\n            int num1 = sortedSubReaders[i].numDocs();\n            int num2 = sortedSubReaders[j].numDocs();\n            if (num1 > num2)\n              return -1;\n            if (num1 < num2)\n              return 1;\n            return 0;\n          }\n          protected void swap(int i, int j) {\n            IndexReader temp = sortedSubReaders[i];\n            sortedSubReaders[i] = sortedSubReaders[j];\n            sortedSubReaders[j] = temp;\n\n            int tempInt = sortedStarts[i];\n            sortedStarts[i] = sortedStarts[j];\n            sortedStarts[j] = tempInt;\n          }\n        };\n      sorter.quickSort(0, length - 1);\n    }\n  }\n\n","sourceOld":"  protected void sortSubReaders() {\n\n    List subReadersList = new ArrayList();\n    gatherSubReaders(subReadersList, reader);\n    sortedSubReaders = (IndexReader[]) subReadersList.toArray(indexReaderZeroArray);\n    final int length = sortedSubReaders.length;\n    sortedStarts = new int[length];\n    int maxDoc = 0;\n    for (int i = 0; i < sortedSubReaders.length; i++) {\n      sortedStarts[i] = maxDoc;\n      maxDoc += sortedSubReaders[i].maxDoc();          // compute maxDocs\n    }\n\n    // sort readers and starts\n    SorterTemplate sorter = new SorterTemplate() {\n        protected int compare(int i, int j) {\n          int num1 = sortedSubReaders[i].numDocs();\n          int num2 = sortedSubReaders[j].numDocs();\n          if (num1 > num2)\n            return -1;\n          if (num1 < num2)\n            return 1;\n          return 0;\n        }\n        protected void swap(int i, int j) {\n          IndexReader temp = sortedSubReaders[i];\n          sortedSubReaders[i] = sortedSubReaders[j];\n          sortedSubReaders[j] = temp;\n\n          int tempInt = sortedStarts[i];\n          sortedStarts[i] = sortedStarts[j];\n          sortedStarts[j] = tempInt;\n        }\n      };\n    sorter.quickSort(0, length - 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#sortSubReaders(boolean).mjava","sourceNew":null,"sourceOld":"  protected void sortSubReaders(boolean docsInOrder) {\n\n    List subReadersList = new ArrayList();\n    gatherSubReaders(subReadersList, reader);\n    sortedSubReaders = (IndexReader[]) subReadersList.toArray(indexReaderZeroArray);\n    final int length = sortedSubReaders.length;\n    sortedStarts = new int[length];\n    int maxDoc = 0;\n    for (int i = 0; i < sortedSubReaders.length; i++) {\n      sortedStarts[i] = maxDoc;\n      maxDoc += sortedSubReaders[i].maxDoc();          // compute maxDocs\n    }\n\n    if (!docsInOrder) {\n\n      // sort readers and starts\n      SorterTemplate sorter = new SorterTemplate() {\n          protected int compare(int i, int j) {\n            int num1 = sortedSubReaders[i].numDocs();\n            int num2 = sortedSubReaders[j].numDocs();\n            if (num1 > num2)\n              return -1;\n            if (num1 < num2)\n              return 1;\n            return 0;\n          }\n          protected void swap(int i, int j) {\n            IndexReader temp = sortedSubReaders[i];\n            sortedSubReaders[i] = sortedSubReaders[j];\n            sortedSubReaders[j] = temp;\n\n            int tempInt = sortedStarts[i];\n            sortedStarts[i] = sortedStarts[j];\n            sortedStarts[j] = tempInt;\n          }\n        };\n      sorter.quickSort(0, length - 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["87b6140eb35784da365e76a7236e4cd52a1a396c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87b6140eb35784da365e76a7236e4cd52a1a396c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87b6140eb35784da365e76a7236e4cd52a1a396c"],"87b6140eb35784da365e76a7236e4cd52a1a396c":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}