{"path":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","commits":[{"id":"455aeff4fef915340c5b19d71d5e147034e83093","date":1210099270,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","pathOld":"/dev/null","sourceNew":"    public void run() {\n      final long stopTime = System.currentTimeMillis() + 1000*RUN_TIME_SEC;\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + 1000*RUN_TIME_SEC;\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","sourceOld":"    public void run() {\n      final long stopTime = System.currentTimeMillis() + 1000*RUN_TIME_SEC;\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"90cb6b3f4e5652555b614adc90204287fbebd27c","date":1259494272,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + (long) (1000*RUN_TIME_SEC);\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + 1000*RUN_TIME_SEC;\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7","date":1261132949,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + (long) (1000*RUN_TIME_SEC);\n\n      try {\n        do {\n          if (anyErrors()) break;\n          doWork();\n        } while (System.currentTimeMillis() < stopTime);\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + (long) (1000*RUN_TIME_SEC);\n\n      try {\n        while(System.currentTimeMillis() < stopTime && !anyErrors())\n          doWork();\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","bugFix":["455aeff4fef915340c5b19d71d5e147034e83093"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions.TimedThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + (long) (1000*RUN_TIME_SEC);\n\n      try {\n        do {\n          if (anyErrors()) break;\n          doWork();\n        } while (System.currentTimeMillis() < stopTime);\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      final long stopTime = System.currentTimeMillis() + (long) (1000*RUN_TIME_SEC);\n\n      try {\n        do {\n          if (anyErrors()) break;\n          doWork();\n        } while (System.currentTimeMillis() < stopTime);\n      } catch (Throwable e) {\n        System.out.println(Thread.currentThread() + \": exc\");\n        e.printStackTrace(System.out);\n        failed = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["455aeff4fef915340c5b19d71d5e147034e83093"],"90cb6b3f4e5652555b614adc90204287fbebd27c":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"455aeff4fef915340c5b19d71d5e147034e83093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7"],"a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7":["90cb6b3f4e5652555b614adc90204287fbebd27c"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["90cb6b3f4e5652555b614adc90204287fbebd27c"],"90cb6b3f4e5652555b614adc90204287fbebd27c":["a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7"],"455aeff4fef915340c5b19d71d5e147034e83093":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["455aeff4fef915340c5b19d71d5e147034e83093"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6e0058e8d624d1fea85b51b1dba5d5623dc2eb7":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}