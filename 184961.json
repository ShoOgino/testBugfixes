{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_plur_owner() {\n            int among_var;\n            // (, line 192\n            // [, line 193\n            ket = cursor;\n            // substring, line 193\n            among_var = find_among_b(a_11, 42);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 193\n            bra = cursor;\n            // call R1, line 193\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 194\n                    // delete, line 194\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 195\n                    // <-, line 195\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 196\n                    // <-, line 196\n                    slice_from(\"e\");\n                    break;\n                case 4:\n                    // (, line 197\n                    // delete, line 197\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 198\n                    // delete, line 198\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 199\n                    // delete, line 199\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 200\n                    // <-, line 200\n                    slice_from(\"a\");\n                    break;\n                case 8:\n                    // (, line 201\n                    // <-, line 201\n                    slice_from(\"e\");\n                    break;\n                case 9:\n                    // (, line 202\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 10:\n                    // (, line 203\n                    // delete, line 203\n                    slice_del();\n                    break;\n                case 11:\n                    // (, line 204\n                    // delete, line 204\n                    slice_del();\n                    break;\n                case 12:\n                    // (, line 205\n                    // <-, line 205\n                    slice_from(\"a\");\n                    break;\n                case 13:\n                    // (, line 206\n                    // <-, line 206\n                    slice_from(\"e\");\n                    break;\n                case 14:\n                    // (, line 207\n                    // delete, line 207\n                    slice_del();\n                    break;\n                case 15:\n                    // (, line 208\n                    // delete, line 208\n                    slice_del();\n                    break;\n                case 16:\n                    // (, line 209\n                    // delete, line 209\n                    slice_del();\n                    break;\n                case 17:\n                    // (, line 210\n                    // delete, line 210\n                    slice_del();\n                    break;\n                case 18:\n                    // (, line 211\n                    // <-, line 211\n                    slice_from(\"a\");\n                    break;\n                case 19:\n                    // (, line 212\n                    // <-, line 212\n                    slice_from(\"e\");\n                    break;\n                case 20:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n                case 21:\n                    // (, line 215\n                    // delete, line 215\n                    slice_del();\n                    break;\n                case 22:\n                    // (, line 216\n                    // <-, line 216\n                    slice_from(\"a\");\n                    break;\n                case 23:\n                    // (, line 217\n                    // <-, line 217\n                    slice_from(\"e\");\n                    break;\n                case 24:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n                case 25:\n                    // (, line 219\n                    // delete, line 219\n                    slice_del();\n                    break;\n                case 26:\n                    // (, line 220\n                    // delete, line 220\n                    slice_del();\n                    break;\n                case 27:\n                    // (, line 221\n                    // <-, line 221\n                    slice_from(\"a\");\n                    break;\n                case 28:\n                    // (, line 222\n                    // <-, line 222\n                    slice_from(\"e\");\n                    break;\n                case 29:\n                    // (, line 223\n                    // delete, line 223\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","sourceNew":"        private boolean r_plur_owner() {\n            int among_var;\n            // (, line 192\n            // [, line 193\n            ket = cursor;\n            // substring, line 193\n            among_var = find_among_b(a_11, 42);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 193\n            bra = cursor;\n            // call R1, line 193\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 194\n                    // delete, line 194\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 195\n                    // <-, line 195\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 196\n                    // <-, line 196\n                    slice_from(\"e\");\n                    break;\n                case 4:\n                    // (, line 197\n                    // delete, line 197\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 198\n                    // delete, line 198\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 199\n                    // delete, line 199\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 200\n                    // <-, line 200\n                    slice_from(\"a\");\n                    break;\n                case 8:\n                    // (, line 201\n                    // <-, line 201\n                    slice_from(\"e\");\n                    break;\n                case 9:\n                    // (, line 202\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 10:\n                    // (, line 203\n                    // delete, line 203\n                    slice_del();\n                    break;\n                case 11:\n                    // (, line 204\n                    // delete, line 204\n                    slice_del();\n                    break;\n                case 12:\n                    // (, line 205\n                    // <-, line 205\n                    slice_from(\"a\");\n                    break;\n                case 13:\n                    // (, line 206\n                    // <-, line 206\n                    slice_from(\"e\");\n                    break;\n                case 14:\n                    // (, line 207\n                    // delete, line 207\n                    slice_del();\n                    break;\n                case 15:\n                    // (, line 208\n                    // delete, line 208\n                    slice_del();\n                    break;\n                case 16:\n                    // (, line 209\n                    // delete, line 209\n                    slice_del();\n                    break;\n                case 17:\n                    // (, line 210\n                    // delete, line 210\n                    slice_del();\n                    break;\n                case 18:\n                    // (, line 211\n                    // <-, line 211\n                    slice_from(\"a\");\n                    break;\n                case 19:\n                    // (, line 212\n                    // <-, line 212\n                    slice_from(\"e\");\n                    break;\n                case 20:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n                case 21:\n                    // (, line 215\n                    // delete, line 215\n                    slice_del();\n                    break;\n                case 22:\n                    // (, line 216\n                    // <-, line 216\n                    slice_from(\"a\");\n                    break;\n                case 23:\n                    // (, line 217\n                    // <-, line 217\n                    slice_from(\"e\");\n                    break;\n                case 24:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n                case 25:\n                    // (, line 219\n                    // delete, line 219\n                    slice_del();\n                    break;\n                case 26:\n                    // (, line 220\n                    // delete, line 220\n                    slice_del();\n                    break;\n                case 27:\n                    // (, line 221\n                    // <-, line 221\n                    slice_from(\"a\");\n                    break;\n                case 28:\n                    // (, line 222\n                    // <-, line 222\n                    slice_from(\"e\");\n                    break;\n                case 29:\n                    // (, line 223\n                    // delete, line 223\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_plur_owner() {\n            int among_var;\n            // (, line 192\n            // [, line 193\n            ket = cursor;\n            // substring, line 193\n            among_var = find_among_b(a_11, 42);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 193\n            bra = cursor;\n            // call R1, line 193\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 194\n                    // delete, line 194\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 195\n                    // <-, line 195\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 196\n                    // <-, line 196\n                    slice_from(\"e\");\n                    break;\n                case 4:\n                    // (, line 197\n                    // delete, line 197\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 198\n                    // delete, line 198\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 199\n                    // delete, line 199\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 200\n                    // <-, line 200\n                    slice_from(\"a\");\n                    break;\n                case 8:\n                    // (, line 201\n                    // <-, line 201\n                    slice_from(\"e\");\n                    break;\n                case 9:\n                    // (, line 202\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 10:\n                    // (, line 203\n                    // delete, line 203\n                    slice_del();\n                    break;\n                case 11:\n                    // (, line 204\n                    // delete, line 204\n                    slice_del();\n                    break;\n                case 12:\n                    // (, line 205\n                    // <-, line 205\n                    slice_from(\"a\");\n                    break;\n                case 13:\n                    // (, line 206\n                    // <-, line 206\n                    slice_from(\"e\");\n                    break;\n                case 14:\n                    // (, line 207\n                    // delete, line 207\n                    slice_del();\n                    break;\n                case 15:\n                    // (, line 208\n                    // delete, line 208\n                    slice_del();\n                    break;\n                case 16:\n                    // (, line 209\n                    // delete, line 209\n                    slice_del();\n                    break;\n                case 17:\n                    // (, line 210\n                    // delete, line 210\n                    slice_del();\n                    break;\n                case 18:\n                    // (, line 211\n                    // <-, line 211\n                    slice_from(\"a\");\n                    break;\n                case 19:\n                    // (, line 212\n                    // <-, line 212\n                    slice_from(\"e\");\n                    break;\n                case 20:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n                case 21:\n                    // (, line 215\n                    // delete, line 215\n                    slice_del();\n                    break;\n                case 22:\n                    // (, line 216\n                    // <-, line 216\n                    slice_from(\"a\");\n                    break;\n                case 23:\n                    // (, line 217\n                    // <-, line 217\n                    slice_from(\"e\");\n                    break;\n                case 24:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n                case 25:\n                    // (, line 219\n                    // delete, line 219\n                    slice_del();\n                    break;\n                case 26:\n                    // (, line 220\n                    // delete, line 220\n                    slice_del();\n                    break;\n                case 27:\n                    // (, line 221\n                    // <-, line 221\n                    slice_from(\"a\");\n                    break;\n                case 28:\n                    // (, line 222\n                    // <-, line 222\n                    slice_from(\"e\");\n                    break;\n                case 29:\n                    // (, line 223\n                    // delete, line 223\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_plur_owner() {\n            int among_var;\n            // (, line 192\n            // [, line 193\n            ket = cursor;\n            // substring, line 193\n            among_var = find_among_b(a_11, 42);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 193\n            bra = cursor;\n            // call R1, line 193\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 194\n                    // delete, line 194\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 195\n                    // <-, line 195\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 196\n                    // <-, line 196\n                    slice_from(\"e\");\n                    break;\n                case 4:\n                    // (, line 197\n                    // delete, line 197\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 198\n                    // delete, line 198\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 199\n                    // delete, line 199\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 200\n                    // <-, line 200\n                    slice_from(\"a\");\n                    break;\n                case 8:\n                    // (, line 201\n                    // <-, line 201\n                    slice_from(\"e\");\n                    break;\n                case 9:\n                    // (, line 202\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 10:\n                    // (, line 203\n                    // delete, line 203\n                    slice_del();\n                    break;\n                case 11:\n                    // (, line 204\n                    // delete, line 204\n                    slice_del();\n                    break;\n                case 12:\n                    // (, line 205\n                    // <-, line 205\n                    slice_from(\"a\");\n                    break;\n                case 13:\n                    // (, line 206\n                    // <-, line 206\n                    slice_from(\"e\");\n                    break;\n                case 14:\n                    // (, line 207\n                    // delete, line 207\n                    slice_del();\n                    break;\n                case 15:\n                    // (, line 208\n                    // delete, line 208\n                    slice_del();\n                    break;\n                case 16:\n                    // (, line 209\n                    // delete, line 209\n                    slice_del();\n                    break;\n                case 17:\n                    // (, line 210\n                    // delete, line 210\n                    slice_del();\n                    break;\n                case 18:\n                    // (, line 211\n                    // <-, line 211\n                    slice_from(\"a\");\n                    break;\n                case 19:\n                    // (, line 212\n                    // <-, line 212\n                    slice_from(\"e\");\n                    break;\n                case 20:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n                case 21:\n                    // (, line 215\n                    // delete, line 215\n                    slice_del();\n                    break;\n                case 22:\n                    // (, line 216\n                    // <-, line 216\n                    slice_from(\"a\");\n                    break;\n                case 23:\n                    // (, line 217\n                    // <-, line 217\n                    slice_from(\"e\");\n                    break;\n                case 24:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n                case 25:\n                    // (, line 219\n                    // delete, line 219\n                    slice_del();\n                    break;\n                case 26:\n                    // (, line 220\n                    // delete, line 220\n                    slice_del();\n                    break;\n                case 27:\n                    // (, line 221\n                    // <-, line 221\n                    slice_from(\"a\");\n                    break;\n                case 28:\n                    // (, line 222\n                    // <-, line 222\n                    slice_from(\"e\");\n                    break;\n                case 29:\n                    // (, line 223\n                    // delete, line 223\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/HungarianStemmer#r_plur_owner().mjava","sourceNew":null,"sourceOld":"        private boolean r_plur_owner() {\n            int among_var;\n            // (, line 192\n            // [, line 193\n            ket = cursor;\n            // substring, line 193\n            among_var = find_among_b(a_11, 42);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 193\n            bra = cursor;\n            // call R1, line 193\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 194\n                    // delete, line 194\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 195\n                    // <-, line 195\n                    slice_from(\"a\");\n                    break;\n                case 3:\n                    // (, line 196\n                    // <-, line 196\n                    slice_from(\"e\");\n                    break;\n                case 4:\n                    // (, line 197\n                    // delete, line 197\n                    slice_del();\n                    break;\n                case 5:\n                    // (, line 198\n                    // delete, line 198\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 199\n                    // delete, line 199\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 200\n                    // <-, line 200\n                    slice_from(\"a\");\n                    break;\n                case 8:\n                    // (, line 201\n                    // <-, line 201\n                    slice_from(\"e\");\n                    break;\n                case 9:\n                    // (, line 202\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 10:\n                    // (, line 203\n                    // delete, line 203\n                    slice_del();\n                    break;\n                case 11:\n                    // (, line 204\n                    // delete, line 204\n                    slice_del();\n                    break;\n                case 12:\n                    // (, line 205\n                    // <-, line 205\n                    slice_from(\"a\");\n                    break;\n                case 13:\n                    // (, line 206\n                    // <-, line 206\n                    slice_from(\"e\");\n                    break;\n                case 14:\n                    // (, line 207\n                    // delete, line 207\n                    slice_del();\n                    break;\n                case 15:\n                    // (, line 208\n                    // delete, line 208\n                    slice_del();\n                    break;\n                case 16:\n                    // (, line 209\n                    // delete, line 209\n                    slice_del();\n                    break;\n                case 17:\n                    // (, line 210\n                    // delete, line 210\n                    slice_del();\n                    break;\n                case 18:\n                    // (, line 211\n                    // <-, line 211\n                    slice_from(\"a\");\n                    break;\n                case 19:\n                    // (, line 212\n                    // <-, line 212\n                    slice_from(\"e\");\n                    break;\n                case 20:\n                    // (, line 214\n                    // delete, line 214\n                    slice_del();\n                    break;\n                case 21:\n                    // (, line 215\n                    // delete, line 215\n                    slice_del();\n                    break;\n                case 22:\n                    // (, line 216\n                    // <-, line 216\n                    slice_from(\"a\");\n                    break;\n                case 23:\n                    // (, line 217\n                    // <-, line 217\n                    slice_from(\"e\");\n                    break;\n                case 24:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n                case 25:\n                    // (, line 219\n                    // delete, line 219\n                    slice_del();\n                    break;\n                case 26:\n                    // (, line 220\n                    // delete, line 220\n                    slice_del();\n                    break;\n                case 27:\n                    // (, line 221\n                    // <-, line 221\n                    slice_from(\"a\");\n                    break;\n                case 28:\n                    // (, line 222\n                    // <-, line 222\n                    slice_from(\"e\");\n                    break;\n                case 29:\n                    // (, line 223\n                    // delete, line 223\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}