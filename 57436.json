{"path":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","commits":[{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        packed = PACKED == datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs, IOContext context) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#IntsReader(Directory,String,int).mjava","sourceNew":"    protected IntsReader(Directory dir, String id, int numDocs, IOContext context) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected IntsReader(Directory dir, String id, int numDocs) throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}