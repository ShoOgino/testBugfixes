{"path":"sandbox/contributions/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","commits":[{"id":"79d85754d816928cb0d5c3c9e26918be293f852a","date":1037505397,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    public static void main(String[] args) throws Exception\n    {\n        IndexReader reader = null;\n        if (args.length == 1)\n        {\n            reader = IndexReader.open(args[0]);\n        }\n        else\n        {\n            usage();\n            System.exit(1);\n        }\n\n        TermInfoQueue tiq = new TermInfoQueue(numTerms);\n        TermEnum terms = reader.terms();\n\n        int minFreq = 0;\n        while (terms.next())\n        {\n            if (terms.docFreq() > minFreq)\n            {\n                tiq.put(new TermInfo(terms.term(), terms.docFreq()));\n                if (tiq.size() > numTerms) \t\t     // if tiq overfull\n                {\n                    tiq.pop();\t\t\t\t     // remove lowest in tiq\n                    minFreq = ((TermInfo)tiq.top()).docFreq; // reset minFreq\n                }\n            }\n        }\n\n        while (tiq.size() != 0)\n        {\n            TermInfo termInfo = (TermInfo)tiq.pop();\n            System.out.println(termInfo.term + \" \" + termInfo.docFreq);\n        }\n\n        reader.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f83e4aad026c78bfe4c65fe383d1a708df10c2b4","date":1075036560,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","pathOld":"sandbox/contributions/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws Exception {\n\t\tIndexReader reader = null;\n\t\tif (args.length == 1) {\n\t\t\treader = IndexReader.open(args[0]);\n\t\t} else {\n\t\t\tusage();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tTermInfoQueue tiq = new TermInfoQueue(numTerms);\n\t\tTermEnum terms = reader.terms();\n\n\t\twhile (terms.next()) {\n\t\t\ttiq.insert(new TermInfo(terms.term(), terms.docFreq()));\n\t\t}\n\n\t\twhile (tiq.size() != 0) {\n\t\t\tTermInfo termInfo = (TermInfo) tiq.pop();\n\t\t\tSystem.out.println(termInfo.term + \" \" + termInfo.docFreq);\n\t\t}\n\n\t\treader.close();\n\t}\n\n","sourceOld":"    public static void main(String[] args) throws Exception\n    {\n        IndexReader reader = null;\n        if (args.length == 1)\n        {\n            reader = IndexReader.open(args[0]);\n        }\n        else\n        {\n            usage();\n            System.exit(1);\n        }\n\n        TermInfoQueue tiq = new TermInfoQueue(numTerms);\n        TermEnum terms = reader.terms();\n\n        int minFreq = 0;\n        while (terms.next())\n        {\n            if (terms.docFreq() > minFreq)\n            {\n                tiq.put(new TermInfo(terms.term(), terms.docFreq()));\n                if (tiq.size() > numTerms) \t\t     // if tiq overfull\n                {\n                    tiq.pop();\t\t\t\t     // remove lowest in tiq\n                    minFreq = ((TermInfo)tiq.top()).docFreq; // reset minFreq\n                }\n            }\n        }\n\n        while (tiq.size() != 0)\n        {\n            TermInfo termInfo = (TermInfo)tiq.pop();\n            System.out.println(termInfo.term + \" \" + termInfo.docFreq);\n        }\n\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17aa383cdefa6c6eb46c3288753026d489892e36","date":1114593391,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","pathOld":"sandbox/contributions/miscellaneous/src/java/org/apache/lucene/misc/HighFreqTerms#main(String[]).mjava","sourceNew":"\tpublic static void main(String[] args) throws Exception {\n\t\tIndexReader reader = null;\n\t\tif (args.length == 1) {\n\t\t\treader = IndexReader.open(args[0]);\n\t\t} else {\n\t\t\tusage();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tTermInfoQueue tiq = new TermInfoQueue(numTerms);\n\t\tTermEnum terms = reader.terms();\n\n\t\twhile (terms.next()) {\n\t\t\ttiq.insert(new TermInfo(terms.term(), terms.docFreq()));\n\t\t}\n\n\t\twhile (tiq.size() != 0) {\n\t\t\tTermInfo termInfo = (TermInfo) tiq.pop();\n\t\t\tSystem.out.println(termInfo.term + \" \" + termInfo.docFreq);\n\t\t}\n\n\t\treader.close();\n\t}\n\n","sourceOld":"\tpublic static void main(String[] args) throws Exception {\n\t\tIndexReader reader = null;\n\t\tif (args.length == 1) {\n\t\t\treader = IndexReader.open(args[0]);\n\t\t} else {\n\t\t\tusage();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tTermInfoQueue tiq = new TermInfoQueue(numTerms);\n\t\tTermEnum terms = reader.terms();\n\n\t\twhile (terms.next()) {\n\t\t\ttiq.insert(new TermInfo(terms.term(), terms.docFreq()));\n\t\t}\n\n\t\twhile (tiq.size() != 0) {\n\t\t\tTermInfo termInfo = (TermInfo) tiq.pop();\n\t\t\tSystem.out.println(termInfo.term + \" \" + termInfo.docFreq);\n\t\t}\n\n\t\treader.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17aa383cdefa6c6eb46c3288753026d489892e36":["f83e4aad026c78bfe4c65fe383d1a708df10c2b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79d85754d816928cb0d5c3c9e26918be293f852a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f83e4aad026c78bfe4c65fe383d1a708df10c2b4":["79d85754d816928cb0d5c3c9e26918be293f852a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17aa383cdefa6c6eb46c3288753026d489892e36"]},"commit2Childs":{"17aa383cdefa6c6eb46c3288753026d489892e36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79d85754d816928cb0d5c3c9e26918be293f852a"],"79d85754d816928cb0d5c3c9e26918be293f852a":["f83e4aad026c78bfe4c65fe383d1a708df10c2b4"],"f83e4aad026c78bfe4c65fe383d1a708df10c2b4":["17aa383cdefa6c6eb46c3288753026d489892e36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}