{"path":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"/dev/null","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":null,"sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"/dev/null","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b375ac28473e1310fa9ea99d95e9c6001e3719d5","date":1274116690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase(Locale.ENGLISH);\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase(Locale.ENGLISH) ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"c26f00b574427b55127e869b935845554afde1fa":["b375ac28473e1310fa9ea99d95e9c6001e3719d5","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}