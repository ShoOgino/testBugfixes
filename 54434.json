{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#getBigramItemIndex(char[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#getBigramItemIndex(char[]).mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#getBigramItemIndex(char[]).mjava","sourceNew":"  /*\n   * lookup the index into the frequency array.\n   */\n  private int getBigramItemIndex(char carray[]) {\n    long hashId = hash1(carray);\n    int hash1 = (int) (hashId % PRIME_BIGRAM_LENGTH);\n    int hash2 = hash2(carray) % PRIME_BIGRAM_LENGTH;\n    if (hash1 < 0)\n      hash1 = PRIME_BIGRAM_LENGTH + hash1;\n    if (hash2 < 0)\n      hash2 = PRIME_BIGRAM_LENGTH + hash2;\n    int index = hash1;\n    int i = 1;\n    repeat++;\n    while (bigramHashTable[index] != 0 && bigramHashTable[index] != hashId\n        && i < PRIME_BIGRAM_LENGTH) {\n      index = (hash1 + i * hash2) % PRIME_BIGRAM_LENGTH;\n      i++;\n      repeat++;\n      if (i > max)\n        max = i;\n    }\n    // System.out.println(i - 1);\n\n    if (i < PRIME_BIGRAM_LENGTH && bigramHashTable[index] == hashId) {\n      return index;\n    } else\n      return -1;\n  }\n\n","sourceOld":"  /*\n   * lookup the index into the frequency array.\n   */\n  private int getBigramItemIndex(char carray[]) {\n    long hashId = hash1(carray);\n    int hash1 = (int) (hashId % PRIME_BIGRAM_LENGTH);\n    int hash2 = hash2(carray) % PRIME_BIGRAM_LENGTH;\n    if (hash1 < 0)\n      hash1 = PRIME_BIGRAM_LENGTH + hash1;\n    if (hash2 < 0)\n      hash2 = PRIME_BIGRAM_LENGTH + hash2;\n    int index = hash1;\n    int i = 1;\n    repeat++;\n    while (bigramHashTable[index] != 0 && bigramHashTable[index] != hashId\n        && i < PRIME_BIGRAM_LENGTH) {\n      index = (hash1 + i * hash2) % PRIME_BIGRAM_LENGTH;\n      i++;\n      repeat++;\n      if (i > max)\n        max = i;\n    }\n    // System.out.println(i - 1);\n\n    if (i < PRIME_BIGRAM_LENGTH && bigramHashTable[index] == hashId) {\n      return index;\n    } else\n      return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}