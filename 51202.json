{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d0ee734a67ae20fd4c683458847aebde606bb02","date":1352490740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    checkBounds(docID);\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":["98f1e03050bb2a220e7b206bfd1b2c0e63db32b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    checkBounds(docID);\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public final void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    checkBounds(docID);\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws IOException {\n    checkBounds(docID);\n    getFieldsReader().visitDocument(docID, visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d0ee734a67ae20fd4c683458847aebde606bb02"],"4d0ee734a67ae20fd4c683458847aebde606bb02":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["4d0ee734a67ae20fd4c683458847aebde606bb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4d0ee734a67ae20fd4c683458847aebde606bb02":["407687e67faf6e1f02a211ca078d8e3eed631027","505bff044e47a553f461b6f4484d1d08faf4ac85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","4d0ee734a67ae20fd4c683458847aebde606bb02"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}