{"path":"lucene/core/src/test/org/apache/lucene/util/graph/TestGraphTokenStreamFiniteStrings#testMultipleSidePathsWithGaps().mjava","commits":[{"id":"5d4c0aa821ee9328c0d7a6ba3c682de39e1d7e4a","date":1550584577,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/graph/TestGraphTokenStreamFiniteStrings#testMultipleSidePathsWithGaps().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleSidePathsWithGaps() throws Exception {\n    // king alfred:4/alfred [] [] saxons:3 [] wessex ruled\n    CannedTokenStream cts = new CannedTokenStream(\n        token(\"king\", 1, 1),\n        token(\"alfred\", 1, 4),\n        token(\"alfred\", 0, 1),\n        token(\"saxons\", 3, 3),\n        token(\"wessex\", 2, 1),\n        token(\"ruled\", 1, 1)\n    );\n    GraphTokenStreamFiniteStrings graph = new GraphTokenStreamFiniteStrings(cts);\n    Iterator<TokenStream> it = graph.getFiniteStrings();\n    assertTrue(it.hasNext());\n    assertTokenStream(it.next(), new String[]{ \"king\", \"alfred\", \"wessex\", \"ruled\" }, new int[]{ 1, 1, 2, 1 });\n    assertTrue(it.hasNext());\n    assertTokenStream(it.next(), new String[]{ \"king\", \"alfred\", \"saxons\", \"ruled\" }, new int[]{ 1, 1, 3, 1 });\n    assertFalse(it.hasNext());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d4c0aa821ee9328c0d7a6ba3c682de39e1d7e4a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d4c0aa821ee9328c0d7a6ba3c682de39e1d7e4a"]},"commit2Childs":{"5d4c0aa821ee9328c0d7a6ba3c682de39e1d7e4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d4c0aa821ee9328c0d7a6ba3c682de39e1d7e4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}