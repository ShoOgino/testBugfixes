{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","sourceNew":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","sourceOld":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","sourceNew":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","sourceOld":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ac273b4e4637e6dd8cf5f2d90a474f897884d7","date":1505963386,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","sourceNew":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = usually() ? SpatialContext.GEO : new Geo3dSpatialContextFactory().newSpatialContext();\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","sourceOld":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialArgsTest#calcDistanceFromErrPct().mjava","sourceNew":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = usually() ? SpatialContext.GEO : new Geo3dSpatialContextFactory().newSpatialContext();\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","sourceOld":"  @Test\n  public void calcDistanceFromErrPct() {\n    final SpatialContext ctx = SpatialContext.GEO;\n    final double DEP = 0.5;//distErrPct\n\n    //the result is the diagonal distance from the center to the closest corner,\n    // times distErrPct\n\n    Shape superwide = ctx.makeRectangle(-180, 180, 0, 0);\n    //0 distErrPct means 0 distance always\n    assertEquals(0, SpatialArgs.calcDistanceFromErrPct(superwide, 0, ctx), 0);\n    assertEquals(180 * DEP, SpatialArgs.calcDistanceFromErrPct(superwide, DEP, ctx), 0);\n\n    Shape supertall = ctx.makeRectangle(0, 0, -90, 90);\n    assertEquals(90 * DEP, SpatialArgs.calcDistanceFromErrPct(supertall, DEP, ctx), 0);\n\n    Shape upperhalf = ctx.makeRectangle(-180, 180, 0, 90);\n    assertEquals(45 * DEP, SpatialArgs.calcDistanceFromErrPct(upperhalf, DEP, ctx), 0.0001);\n\n    Shape midCircle = ctx.makeCircle(0, 0, 45);\n    assertEquals(60 * DEP, SpatialArgs.calcDistanceFromErrPct(midCircle, DEP, ctx), 0.0001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["af2638813028b254a88b418ebeafb541afb49653","57ac273b4e4637e6dd8cf5f2d90a474f897884d7"],"57ac273b4e4637e6dd8cf5f2d90a474f897884d7":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ac273b4e4637e6dd8cf5f2d90a474f897884d7"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["6240b74b884c5587f2a4062dd27d6c32bf228889","57ac273b4e4637e6dd8cf5f2d90a474f897884d7"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"57ac273b4e4637e6dd8cf5f2d90a474f897884d7":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}