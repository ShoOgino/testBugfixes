{"path":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","commits":[{"id":"04a954a68448c7f3d03c375dc4320f2c0b13cc60","date":1143819936,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"/dev/null","sourceNew":"  public static String getInstanceDir() {\n    String str = System.getProperty(instance + \".solr.home\");\n    if (str==null) {\n      str=instance + '/';\n    } else if ( !(str.endsWith(\"/\") || str.endsWith(\"\\\\\")) ) {\n      str+='/';\n    }\n    return str;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"818fa97f8efad761eafba0dad8c0f41685b8f852","date":1148248512,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public static String getInstanceDir() {\n    if (instanceDir==null) {\n      String prop = project + \".solr.home\";\n      instanceDir = normalizeDir(System.getProperty(prop));\n      if (instanceDir==null) {\n        instanceDir=project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"'\");\n      } else {\n        log.info(\"Solr home set to '\" + instanceDir + \"' from system property \" + prop);\n      }\n    }\n    return instanceDir;\n  }\n\n","sourceOld":"  public static String getInstanceDir() {\n    String str = System.getProperty(instance + \".solr.home\");\n    if (str==null) {\n      str=instance + '/';\n    } else if ( !(str.endsWith(\"/\") || str.endsWith(\"\\\\\")) ) {\n      str+='/';\n    }\n    return str;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ba038a080a2e987c96e49d56de7060f5aa81563","date":1168858786,"type":3,"author":"Bertrand Delacretaz","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public static String getInstanceDir() {\n    if (instanceDir==null) {\n      String prop = project + \".solr.home\";\n      instanceDir = normalizeDir(System.getProperty(prop));\n      if (instanceDir==null) {\n        instanceDir=project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (system property \" + prop + \" not set)\");\n      } else {\n        log.info(\"Solr home set to '\" + instanceDir + \"' from system property \" + prop);\n      }\n    }\n    return instanceDir;\n  }\n\n","sourceOld":"  public static String getInstanceDir() {\n    if (instanceDir==null) {\n      String prop = project + \".solr.home\";\n      instanceDir = normalizeDir(System.getProperty(prop));\n      if (instanceDir==null) {\n        instanceDir=project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"'\");\n      } else {\n        log.info(\"Solr home set to '\" + instanceDir + \"' from system property \" + prop);\n      }\n    }\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8c31261092dc7e5e9e00b9a640af3d381679e98","date":1171935506,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public static String getInstanceDir() {\n    if ( ! isInstanceDirInitalized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","sourceOld":"  public static String getInstanceDir() {\n    if (instanceDir==null) {\n      String prop = project + \".solr.home\";\n      instanceDir = normalizeDir(System.getProperty(prop));\n      if (instanceDir==null) {\n        instanceDir=project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (system property \" + prop + \" not set)\");\n      } else {\n        log.info(\"Solr home set to '\" + instanceDir + \"' from system property \" + prop);\n      }\n    }\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132ab9c1a4ef5478e9db6f31d6aef87d07537a74","date":1177704662,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public static String getInstanceDir() {\n    if ( ! isInstanceDirInitialized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","sourceOld":"  public static String getInstanceDir() {\n    if ( ! isInstanceDirInitalized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public String getInstanceDir() {\n    if ( !isInstanceDirInitialized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","sourceOld":"  public static String getInstanceDir() {\n    if ( ! isInstanceDirInitialized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  public String getInstanceDir() {\n    return instanceDir;\n  }\n\n","sourceOld":"  public String getInstanceDir() {\n    if ( !isInstanceDirInitialized() ) {\n      String home = null;\n      // Try JNDI\n      try {\n        Context c = new InitialContext();\n        home = (String)c.lookup(\"java:comp/env/solr/home\");\n        log.info(\"Using JNDI solr.home: \"+home );\n      } catch (NoInitialContextException e) {\n        log.info(\"JNDI not configured for Solr (NoInitialContextEx)\");\n      } catch (NamingException e) {\n        log.info(\"No /solr/home in JNDI\");\n      } catch( RuntimeException ex ) {\n        log.warning(\"Odd RuntimeException while testing for JNDI: \" \n                    + ex.getMessage());\n      } \n      \n      // Now try system property\n      if( home == null ) {\n        String prop = project + \".solr.home\";\n        home = normalizeDir(System.getProperty(prop));\n        if( home != null ) {\n          log.info(\"using system property solr.home: \" + home );\n        }\n      }\n      \n      // if all else fails, try \n      if( home == null ) {\n        home = project + '/';\n        log.info(\"Solr home defaulted to '\" + instanceDir + \"' (could not find system property or JNDI)\");\n      }\n      \n      setInstanceDir(home);\n    }\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  @Deprecated\n  public String getInstanceDir() {\n    return loader.getInstanceDir();\n  }\n\n","sourceOld":"  public String getInstanceDir() {\n    return instanceDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"166e7267ee953339ce7ff2febc91aee7576425f5","date":1218487056,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  /**\n   * @deprecated Use {@link SolrResourceLoader#getInstanceDir()} instead.\n   */\n  @Deprecated\n  public String getInstanceDir() {\n    return loader.getInstanceDir();\n  }\n\n","sourceOld":"  @Deprecated\n  public String getInstanceDir() {\n    return loader.getInstanceDir();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/Config#getInstanceDir().mjava","pathOld":"src/java/org/apache/solr/core/Config#getInstanceDir().mjava","sourceNew":"  /**\n   * @deprecated Use {@link SolrResourceLoader#getInstanceDir()} instead.\n   */\n  @Deprecated\n  public String getInstanceDir() {\n    return loader.getInstanceDir();\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use {@link SolrResourceLoader#getInstanceDir()} instead.\n   */\n  @Deprecated\n  public String getInstanceDir() {\n    return loader.getInstanceDir();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"818fa97f8efad761eafba0dad8c0f41685b8f852":["04a954a68448c7f3d03c375dc4320f2c0b13cc60"],"166e7267ee953339ce7ff2febc91aee7576425f5":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5ba038a080a2e987c96e49d56de7060f5aa81563":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"04a954a68448c7f3d03c375dc4320f2c0b13cc60":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"132ab9c1a4ef5478e9db6f31d6aef87d07537a74":["f8c31261092dc7e5e9e00b9a640af3d381679e98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["166e7267ee953339ce7ff2febc91aee7576425f5"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["132ab9c1a4ef5478e9db6f31d6aef87d07537a74"],"f8c31261092dc7e5e9e00b9a640af3d381679e98":["5ba038a080a2e987c96e49d56de7060f5aa81563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"818fa97f8efad761eafba0dad8c0f41685b8f852":["5ba038a080a2e987c96e49d56de7060f5aa81563"],"166e7267ee953339ce7ff2febc91aee7576425f5":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["04a954a68448c7f3d03c375dc4320f2c0b13cc60"],"04a954a68448c7f3d03c375dc4320f2c0b13cc60":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"5ba038a080a2e987c96e49d56de7060f5aa81563":["f8c31261092dc7e5e9e00b9a640af3d381679e98"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"132ab9c1a4ef5478e9db6f31d6aef87d07537a74":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["166e7267ee953339ce7ff2febc91aee7576425f5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"f8c31261092dc7e5e9e00b9a640af3d381679e98":["132ab9c1a4ef5478e9db6f31d6aef87d07537a74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}