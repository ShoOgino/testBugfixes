{"path":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","commits":[{"id":"2c36db4818c5eba16bdcbedab4f06dd69ae59190","date":1329160108,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(boolean,long).mjava","sourceNew":"  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","sourceOld":"  public synchronized void waiting(boolean needsDeletes, long targetGen) {\n    waitingNeedsDeletes |= needsDeletes;\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes + \" waitingNeedsDeletes=\" + waitingNeedsDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","sourceNew":"  @Override\n  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","sourceOld":"  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","sourceNew":"  @Override\n  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","sourceOld":"  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManagerReopenThread#waiting(long).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void waiting(long targetGen) {\n    waitingGen = Math.max(waitingGen, targetGen);\n    notify();\n    //System.out.println(Thread.currentThread().getName() + \": force wakeup waitingGen=\" + waitingGen + \" applyDeletes=\" + applyDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2c36db4818c5eba16bdcbedab4f06dd69ae59190","7530de27b87b961b51f01bd1299b7004d46e8823"],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2045b132a2396bb23dff28d2d9f349a6907d36e"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c2045b132a2396bb23dff28d2d9f349a6907d36e"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}