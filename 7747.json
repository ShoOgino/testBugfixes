{"path":"lucene/core/src/java/org/apache/lucene/util/BitSet#of(DocIdSetIterator,int).mjava","commits":[{"id":"0e91a2d9ed80172872da0f517870da6756289554","date":1436431140,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitSet#of(DocIdSetIterator,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Build a {@link BitSet} from the content of the provided {@link DocIdSetIterator}.\n   *  NOTE: this will consume the {@link BitSet}. */\n  public static BitSet of(DocIdSetIterator it, int maxDoc) throws IOException {\n    final long cost = it.cost();\n    final int threshold = maxDoc >>> 7;\n    BitSet set;\n    if (cost < threshold) {\n      set = new SparseFixedBitSet(maxDoc);\n    } else {\n      set = new FixedBitSet(maxDoc);\n    }\n    set.or(it);\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbb517d79e844487af01a6ca20870b400594321c","date":1436476855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitSet#of(DocIdSetIterator,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitSet#of(DocIdSetIterator,int).mjava","sourceNew":"  /** Build a {@link BitSet} from the content of the provided {@link DocIdSetIterator}.\n   *  NOTE: this will fully consume the {@link DocIdSetIterator}. */\n  public static BitSet of(DocIdSetIterator it, int maxDoc) throws IOException {\n    final long cost = it.cost();\n    final int threshold = maxDoc >>> 7;\n    BitSet set;\n    if (cost < threshold) {\n      set = new SparseFixedBitSet(maxDoc);\n    } else {\n      set = new FixedBitSet(maxDoc);\n    }\n    set.or(it);\n    return set;\n  }\n\n","sourceOld":"  /** Build a {@link BitSet} from the content of the provided {@link DocIdSetIterator}.\n   *  NOTE: this will consume the {@link BitSet}. */\n  public static BitSet of(DocIdSetIterator it, int maxDoc) throws IOException {\n    final long cost = it.cost();\n    final int threshold = maxDoc >>> 7;\n    BitSet set;\n    if (cost < threshold) {\n      set = new SparseFixedBitSet(maxDoc);\n    } else {\n      set = new FixedBitSet(maxDoc);\n    }\n    set.or(it);\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbb517d79e844487af01a6ca20870b400594321c":["0e91a2d9ed80172872da0f517870da6756289554"],"0e91a2d9ed80172872da0f517870da6756289554":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbb517d79e844487af01a6ca20870b400594321c"]},"commit2Childs":{"fbb517d79e844487af01a6ca20870b400594321c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e91a2d9ed80172872da0f517870da6756289554":["fbb517d79e844487af01a6ca20870b400594321c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e91a2d9ed80172872da0f517870da6756289554"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}