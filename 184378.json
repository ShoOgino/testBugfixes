{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","sourceNew":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","sourceOld":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13927d699a111b970c38bc3eec00837464c3ede6","date":1363322510,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","sourceNew":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","sourceOld":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b07bc5b253e2373a655fc734d650af4ac46c8614","date":1386093923,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","sourceNew":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig(true));\n  }\n\n","sourceOld":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","sourceNew":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig(true));\n  }\n\n","sourceOld":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer().mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer#ICUTokenizer(Reader).mjava","sourceNew":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer() {\n    this(new DefaultICUTokenizerConfig(true));\n  }\n\n","sourceOld":"  /**\n   * Construct a new ICUTokenizer that breaks text into words from the given\n   * Reader.\n   * <p>\n   * The default script-specific handling is used.\n   * <p>\n   * The default attribute factory is used.\n   * \n   * @param input Reader containing text to tokenize.\n   * @see DefaultICUTokenizerConfig\n   */\n  public ICUTokenizer(Reader input) {\n    this(input, new DefaultICUTokenizerConfig(true));\n  }\n\n","bugFix":null,"bugIntro":["b34acf30a377e146cfc8f7da3ec9a01e944403e1"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b07bc5b253e2373a655fc734d650af4ac46c8614":["13927d699a111b970c38bc3eec00837464c3ede6"],"13927d699a111b970c38bc3eec00837464c3ede6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b07bc5b253e2373a655fc734d650af4ac46c8614"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["13927d699a111b970c38bc3eec00837464c3ede6","b07bc5b253e2373a655fc734d650af4ac46c8614"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["13927d699a111b970c38bc3eec00837464c3ede6"],"b07bc5b253e2373a655fc734d650af4ac46c8614":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"13927d699a111b970c38bc3eec00837464c3ede6":["b07bc5b253e2373a655fc734d650af4ac46c8614","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}