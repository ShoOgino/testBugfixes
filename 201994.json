{"path":"backwards/src/java/org/apache/lucene/search/function/OrdFieldSource#getValues(IndexReader).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/function/OrdFieldSource#getValues(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /*(non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getValues(IndexReader reader) throws IOException {\n    final int[] arr = FieldCache.DEFAULT.getStringIndex(reader, field).order;\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return (float)arr[doc];\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#strVal(int) */\n      @Override\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString(arr[doc]);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + intVal(doc);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/function/OrdFieldSource#getValues(IndexReader).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/function/OrdFieldSource#getValues(IndexReader).mjava","sourceNew":"  /*(non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getValues(IndexReader reader) throws IOException {\n    final int[] arr = FieldCache.DEFAULT.getStringIndex(reader, field).order;\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return (float)arr[doc];\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#strVal(int) */\n      @Override\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString(arr[doc]);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + intVal(doc);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","sourceOld":"  /*(non-Javadoc) @see org.apache.lucene.search.function.ValueSource#getValues(org.apache.lucene.index.IndexReader) */\n  @Override\n  public DocValues getValues(IndexReader reader) throws IOException {\n    final int[] arr = FieldCache.DEFAULT.getStringIndex(reader, field).order;\n    return new DocValues() {\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#floatVal(int) */\n      @Override\n      public float floatVal(int doc) {\n        return (float)arr[doc];\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#strVal(int) */\n      @Override\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString(arr[doc]);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#toString(int) */\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + intVal(doc);\n      }\n      /*(non-Javadoc) @see org.apache.lucene.search.function.DocValues#getInnerArray() */\n      @Override\n      Object getInnerArray() {\n        return arr;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}