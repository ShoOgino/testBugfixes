{"path":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","commits":[{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"/dev/null","sourceNew":"  public float score() throws IOException {\n    float score = 0.0f;                           // sum scores\n    Iterator i = scorers.iterator();\n    while (i.hasNext())\n      score += ((Scorer)i.next()).score();\n    score *= coord;\n    return score;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2c2de4d23143bb03db6c8482422af2e9af132bd5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c2de4d23143bb03db6c8482422af2e9af132bd5","date":1161118252,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  public float score() throws IOException {\n    float score = 0.0f;                           // sum scores\n    Iterator i = scorers.iterator();\n    while (i.hasNext())\n      score += ((Scorer)i.next()).score();\n    score *= coord;\n    return score;\n  }\n\n","bugFix":["15c469602973ef1a33c9a07367a380d278ffab20"],"bugIntro":["a251547210ad8523f10c15c461496a2ad4bb3df4","7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a","45fa1757f5581a10e9c63294cf292a14c92d23b1","b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a251547210ad8523f10c15c461496a2ad4bb3df4","date":1195837134,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":["2c2de4d23143bb03db6c8482422af2e9af132bd5"],"bugIntro":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["a251547210ad8523f10c15c461496a2ad4bb3df4"],"a251547210ad8523f10c15c461496a2ad4bb3df4":["2c2de4d23143bb03db6c8482422af2e9af132bd5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c2de4d23143bb03db6c8482422af2e9af132bd5":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"15c469602973ef1a33c9a07367a380d278ffab20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a251547210ad8523f10c15c461496a2ad4bb3df4":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15c469602973ef1a33c9a07367a380d278ffab20"],"2c2de4d23143bb03db6c8482422af2e9af132bd5":["a251547210ad8523f10c15c461496a2ad4bb3df4"],"15c469602973ef1a33c9a07367a380d278ffab20":["2c2de4d23143bb03db6c8482422af2e9af132bd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}