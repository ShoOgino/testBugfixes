{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","commits":[{"id":"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d","date":1267064671,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","pathOld":"/dev/null","sourceNew":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter( dir, analyzerK, true, MaxFieldLength.LIMITED );\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","sourceNew":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE).setAnalyzer(\n        analyzerK));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter( dir, analyzerK, true, MaxFieldLength.LIMITED );\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","sourceNew":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter( dir, analyzerK, true, MaxFieldLength.LIMITED );\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE).setAnalyzer(\n        analyzerK));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","sourceNew":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzerK).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter( dir, analyzerK, true, MaxFieldLength.LIMITED );\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#make1dmfIndexNA(String...).mjava","sourceNew":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzerK).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","sourceOld":"  // make 1 doc with multi valued & not analyzed field\n  protected void make1dmfIndexNA( String... values ) throws Exception {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, analyzerK).setOpenMode(OpenMode.CREATE));\n    Document doc = new Document();\n    for( String value: values )\n      doc.add( new Field( F, value, Store.YES, Index.NOT_ANALYZED, TermVector.WITH_POSITIONS_OFFSETS ) );\n    writer.addDocument( doc );\n    writer.close();\n\n    reader = IndexReader.open( dir, true );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}