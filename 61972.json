{"path":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","commits":[{"id":"7d57c3e35edc7a476497c7384ecf993d2d3fe53f","date":1082468348,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"/dev/null","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    query.add(new Term(\"source\", \"marketing\"));\n    query.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(query);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(query, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfab81c03dd23957f875ae11ea217c44403a7874","date":1082561009,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", true, true, true));\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(phraseQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(phraseQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, true, false);\n    booleanQuery.add(termQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    query.add(new Term(\"source\", \"marketing\"));\n    query.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(query);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(query, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72e756875123955582aefc8e36c7ad4f13aafd0a","date":1093643971,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", true, true, true));\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", true, true, true));\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(phraseQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, true, false);\n    booleanQuery.add(phraseQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, true, false);\n    booleanQuery.add(termQuery, true, false);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d569a3d5c35dabec1e74fffd00c00294d3e1fbd5","date":1093899135,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", true, true, true));\n    doc.add(new Field(\"source\", \"marketing info\", true, true, true)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", true, true, true));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", true, true, true));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aabae793f43472efdf1dcdaae4e01e28cfc23ccd","date":1161750034,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    Hits hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(1, hits.length());\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery);\n    assertEquals(3, hits.length());\n    hits = searcher.search(phraseQuery);\n    assertEquals(2, hits.length());\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery);\n    assertEquals(2, hits.length());\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.TOKENIZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n                             IndexWriter.MaxFieldLength.LIMITED);\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document doc = new Document();\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new Field(\"contents\", \"foobar\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"source\", \"marketing info\", Field.Store.YES, Field.Index.ANALYZED)); \n    writer.addDocument(doc);\n    \n    writer.optimize();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(termQuery,searcher);\n\n    \n    searcher.close();\n    \n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"woo map entry\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"contents\", \"map foobarword entry woo\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.optimize();\n    writer.close();\n    \n    searcher = new IndexSearcher(directory, true);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(booleanQuery,searcher);\n\n    \n    searcher.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfab81c03dd23957f875ae11ea217c44403a7874":["7d57c3e35edc7a476497c7384ecf993d2d3fe53f"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"7d57c3e35edc7a476497c7384ecf993d2d3fe53f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["d569a3d5c35dabec1e74fffd00c00294d3e1fbd5"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"d569a3d5c35dabec1e74fffd00c00294d3e1fbd5":["72e756875123955582aefc8e36c7ad4f13aafd0a"],"72e756875123955582aefc8e36c7ad4f13aafd0a":["cfab81c03dd23957f875ae11ea217c44403a7874"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"cfab81c03dd23957f875ae11ea217c44403a7874":["72e756875123955582aefc8e36c7ad4f13aafd0a"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"7d57c3e35edc7a476497c7384ecf993d2d3fe53f":["cfab81c03dd23957f875ae11ea217c44403a7874"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d57c3e35edc7a476497c7384ecf993d2d3fe53f"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"d569a3d5c35dabec1e74fffd00c00294d3e1fbd5":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"72e756875123955582aefc8e36c7ad4f13aafd0a":["d569a3d5c35dabec1e74fffd00c00294d3e1fbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}