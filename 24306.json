{"path":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","commits":[{"id":"118ba480e87dfe453a6b47a320429be33f1d1653","date":1440320558,"type":1,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  protected String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"344b0840364d990b29b97467bfcc766ff8325d11","date":1501574100,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlices()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":["da22fc4f0d847980f460da30f3b68afbf2249d70"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlices()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c84df91ca6a2e8d6f26f185663112546a27f6b45","date":1536077760,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlicesArr()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlices()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e62a54d8f17b7c7b5d395bad453c470cf4039a6f","date":1593091560,"type":3,"author":"Dan Fox","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlicesArr()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: To join with a sharded collection, use method=crossCollection.\");\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: To join with a collection that might not be co-located, use method=crossCollection.\");\n\n    return fromReplica;\n  }\n\n","sourceOld":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getCollection(fromIndex).getActiveSlicesArr()) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c84df91ca6a2e8d6f26f185663112546a27f6b45":["344b0840364d990b29b97467bfcc766ff8325d11"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["118ba480e87dfe453a6b47a320429be33f1d1653","344b0840364d990b29b97467bfcc766ff8325d11"],"344b0840364d990b29b97467bfcc766ff8325d11":["118ba480e87dfe453a6b47a320429be33f1d1653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"118ba480e87dfe453a6b47a320429be33f1d1653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["c84df91ca6a2e8d6f26f185663112546a27f6b45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"]},"commit2Childs":{"c84df91ca6a2e8d6f26f185663112546a27f6b45":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"344b0840364d990b29b97467bfcc766ff8325d11":["c84df91ca6a2e8d6f26f185663112546a27f6b45","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["118ba480e87dfe453a6b47a320429be33f1d1653"],"118ba480e87dfe453a6b47a320429be33f1d1653":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","344b0840364d990b29b97467bfcc766ff8325d11"],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}