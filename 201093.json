{"path":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"/dev/null","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = new IndexSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      searcher.close();\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#search(IndexWriter,Query,int).mjava","sourceNew":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  private ScoreDoc[] search(final IndexWriter writer, final Query q, final int n) throws IOException {\n    final IndexReader reader = writer.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    try {\n      return searcher.search(q, null, n).scoreDocs;\n    }\n    finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"790e1fde4caa765b3faaad3fbcd25c6973450336":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["790e1fde4caa765b3faaad3fbcd25c6973450336","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"790e1fde4caa765b3faaad3fbcd25c6973450336":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["790e1fde4caa765b3faaad3fbcd25c6973450336","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}