{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","sourceNew":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","sourceNew":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","sourceNew":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a8954ce7749d4df8d7288d333126e079af73f12","date":1340166187,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","sourceNew":"  /**\n   * @deprecated See {@link #setRequestHandler(String)}.\n   */\n  @Deprecated\n  public SolrQuery setQueryType(String qt) {\n    return setRequestHandler(qt);\n  }\n\n","sourceOld":"  /**\n   * Query type used to determine the request handler. \n   * @see org.apache.solr.client.solrj.request.QueryRequest#getPath()\n   * \n   * @param qt Query Type that corresponds to the query request handler on the server.\n   * @return this\n   */\n  public SolrQuery setQueryType(String qt) {\n    this.set(CommonParams.QT, qt);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setQueryType(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated See {@link #setRequestHandler(String)}.\n   */\n  @Deprecated\n  public SolrQuery setQueryType(String qt) {\n    return setRequestHandler(qt);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["7a8954ce7749d4df8d7288d333126e079af73f12"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7a8954ce7749d4df8d7288d333126e079af73f12":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"7a8954ce7749d4df8d7288d333126e079af73f12":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"c26f00b574427b55127e869b935845554afde1fa":["7a8954ce7749d4df8d7288d333126e079af73f12"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}