{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40LyingRWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"db5a3aeba34624ea274f34df5691d40ca25f2b67","date":1358965297,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40LyingRWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  // nocommit: a lie\n  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    final DocValuesConsumer delegate = lie.fieldsConsumer(state);\n    return new DocValuesConsumer() {\n\n      @Override\n      public void addNumericField(FieldInfo field, Iterable<Number> values) throws IOException {\n        // hack: here we would examine the numerics and simulate in the impersonator the best we can\n        // e.g. if they are all in byte/int range write fixed, otherwise write packed or whatever\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.VAR_INTS.name());\n        delegate.addNumericField(field, values);\n      }\n\n      @Override\n      public void addBinaryField(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_STRAIGHT.name());\n        delegate.addBinaryField(field, values);\n      }\n\n      @Override\n      public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_SORTED.name());\n        delegate.addSortedField(field, values, docToOrd);\n      }\n      \n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","date":1359046870,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40LyingRWDocValuesFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  // nocommit: a lie\n  @Override\n  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    final DocValuesConsumer delegate = lie.fieldsConsumer(state);\n    return new DocValuesConsumer() {\n\n      @Override\n      public void addNumericField(FieldInfo field, Iterable<Number> values) throws IOException {\n        // hack: here we would examine the numerics and simulate in the impersonator the best we can\n        // e.g. if they are all in byte/int range write fixed, otherwise write packed or whatever\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.VAR_INTS.name());\n        delegate.addNumericField(field, values);\n      }\n\n      @Override\n      public void addBinaryField(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_STRAIGHT.name());\n        delegate.addBinaryField(field, values);\n      }\n\n      @Override\n      public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_SORTED.name());\n        delegate.addSortedField(field, values, docToOrd);\n      }\n      \n      @Override\n      public void close() throws IOException {\n        delegate.close();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["db5a3aeba34624ea274f34df5691d40ca25f2b67"],"db5a3aeba34624ea274f34df5691d40ca25f2b67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":[],"db5a3aeba34624ea274f34df5691d40ca25f2b67":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db5a3aeba34624ea274f34df5691d40ca25f2b67","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}