{"path":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8969a184df55d25d61e85be785987fbf830d4028","date":1168143561,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    withNrm = src.withNrm;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a5cfde941b2f8208d739344fef3821381885618","date":1168979092,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    withNrm = src.withNrm;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    files = null;\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    files = null;\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    files = null;\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    clearFiles();\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    files = null;\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    clearFiles();\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n    delCount = src.delCount;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    clearFiles();\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#reset(SegmentInfo).mjava","sourceNew":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    clearFiles();\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n    delCount = src.delCount;\n  }\n\n","sourceOld":"  /**\n   * Copy everything from src SegmentInfo into our instance.\n   */\n  void reset(SegmentInfo src) {\n    clearFiles();\n    name = src.name;\n    docCount = src.docCount;\n    dir = src.dir;\n    preLockless = src.preLockless;\n    delGen = src.delGen;\n    docStoreOffset = src.docStoreOffset;\n    docStoreIsCompoundFile = src.docStoreIsCompoundFile;\n    if (src.normGen == null) {\n      normGen = null;\n    } else {\n      normGen = new long[src.normGen.length];\n      System.arraycopy(src.normGen, 0, normGen, 0, src.normGen.length);\n    }\n    isCompoundFile = src.isCompoundFile;\n    hasSingleNormFile = src.hasSingleNormFile;\n    delCount = src.delCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"34e2c71b6406443562df54db233fde0728502f64":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"8a5cfde941b2f8208d739344fef3821381885618":["8969a184df55d25d61e85be785987fbf830d4028"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["8a5cfde941b2f8208d739344fef3821381885618"],"8969a184df55d25d61e85be785987fbf830d4028":["eeefd99c477417e5c7c574228461ebafe92469d4"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["8b6187898fc4413ccd18229711786550a280383c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["34e2c71b6406443562df54db233fde0728502f64"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["34e2c71b6406443562df54db233fde0728502f64"],"34e2c71b6406443562df54db233fde0728502f64":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8a5cfde941b2f8208d739344fef3821381885618":["8b6187898fc4413ccd18229711786550a280383c"],"eeefd99c477417e5c7c574228461ebafe92469d4":["8969a184df55d25d61e85be785987fbf830d4028"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"8b6187898fc4413ccd18229711786550a280383c":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"8969a184df55d25d61e85be785987fbf830d4028":["8a5cfde941b2f8208d739344fef3821381885618"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}