{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","commits":[{"id":"b50e78d06f282e14c7918c600c1f098b14171ead","date":1461010196,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fa0fff8102ba352427001188190711b7295a1c2","date":1559148790,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","sourceNew":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","sourceOld":"  private void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","sourceNew":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","sourceOld":"  private void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f","date":1576114640,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","sourceNew":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n    if(props.containsKey(CommonParams.FL)) {\n      String fl = props.get(CommonParams.FL);\n      if(fl != null) {\n        if(fl.equals(\"*\")) {\n          outputX = true;\n        } else {\n          String[] fields = fl.split(\",\");\n          for (String f : fields) {\n            if (f.trim().equals(\"x\")) {\n              outputX = true;\n            }\n          }\n        }\n      } else {\n        outputX = true;\n      }\n    } else {\n      outputX = true;\n    }\n  }\n\n","sourceOld":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream#init(String,String,Map[String,String]).mjava","sourceNew":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n    if(props.containsKey(CommonParams.FL)) {\n      String fl = props.get(CommonParams.FL);\n      if(fl != null) {\n        if(fl.equals(\"*\")) {\n          outputX = true;\n        } else {\n          String[] fields = fl.split(\",\");\n          for (String f : fields) {\n            if (f.trim().equals(\"x\")) {\n              outputX = true;\n            }\n          }\n        }\n      } else {\n        outputX = true;\n      }\n    } else {\n      outputX = true;\n    }\n  }\n\n","sourceOld":"  void init(String zkHost, String collection, Map<String, String> props) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.collection = collection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["6fa0fff8102ba352427001188190711b7295a1c2","1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f"],"1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f":["6fa0fff8102ba352427001188190711b7295a1c2"],"b50e78d06f282e14c7918c600c1f098b14171ead":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6fa0fff8102ba352427001188190711b7295a1c2":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["0e15955b4980562a0c1c81d08654904f3fadb83b","6fa0fff8102ba352427001188190711b7295a1c2"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b50e78d06f282e14c7918c600c1f098b14171ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b50e78d06f282e14c7918c600c1f098b14171ead":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"6fa0fff8102ba352427001188190711b7295a1c2":["df724d84dab24a0cc54bec95a8680867adc7f171","1c8bdaac3b1ede20bf22bbb116a282b7d0eb910f","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b50e78d06f282e14c7918c600c1f098b14171ead","0e15955b4980562a0c1c81d08654904f3fadb83b"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"0e15955b4980562a0c1c81d08654904f3fadb83b":["6fa0fff8102ba352427001188190711b7295a1c2","58af973abe9f7c0faa777c1a6285fc7f72c171c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}