{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomMulAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomMulAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n          if (valSrcScores.length == 0) {\n            return subQueryScore;\n          }\n          if (valSrcScores.length == 1) {\n            return subQueryScore + valSrcScores[0];\n            // confirm that skipping beyond the last doc, on the\n            // previous reader, hits NO_MORE_DOCS\n          }\n          return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpls[]) {\n          if (valSrcExpls.length == 0) {\n            return subQueryExpl;\n          }\n          Explanation exp = new Explanation(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"sum of:\");\n          exp.addDetail(subQueryExpl);\n          exp.addDetail(valSrcExpls[0]);\n          if (valSrcExpls.length == 1) {\n            exp.setDescription(\"CustomMulAdd, sum of:\");\n            return exp;\n          }\n          Explanation exp2 = new Explanation(valSrcExpls[1].getValue() * exp.getValue(), \"custom score: product of:\");\n          exp2.addDetail(valSrcExpls[1]);\n          exp2.addDetail(exp);\n          return exp2;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomMulAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomMulAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n          if (valSrcScores.length == 0) {\n            return subQueryScore;\n          }\n          if (valSrcScores.length == 1) {\n            return subQueryScore + valSrcScores[0];\n            // confirm that skipping beyond the last doc, on the\n            // previous reader, hits NO_MORE_DOCS\n          }\n          return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpls[]) {\n          if (valSrcExpls.length == 0) {\n            return subQueryExpl;\n          }\n          if (valSrcExpls.length == 1) {\n            return Explanation.match(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"CustomMulAdd, sum of:\", subQueryExpl, valSrcExpls[0]);\n          } else {\n            Explanation exp = Explanation.match(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"sum of:\", subQueryExpl, valSrcExpls[0]);\n            return Explanation.match(valSrcExpls[1].getValue() * exp.getValue(), \"custom score: product of:\", valSrcExpls[1], exp);\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n          if (valSrcScores.length == 0) {\n            return subQueryScore;\n          }\n          if (valSrcScores.length == 1) {\n            return subQueryScore + valSrcScores[0];\n            // confirm that skipping beyond the last doc, on the\n            // previous reader, hits NO_MORE_DOCS\n          }\n          return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpls[]) {\n          if (valSrcExpls.length == 0) {\n            return subQueryExpl;\n          }\n          Explanation exp = new Explanation(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"sum of:\");\n          exp.addDetail(subQueryExpl);\n          exp.addDetail(valSrcExpls[0]);\n          if (valSrcExpls.length == 1) {\n            exp.setDescription(\"CustomMulAdd, sum of:\");\n            return exp;\n          }\n          Explanation exp2 = new Explanation(valSrcExpls[1].getValue() * exp.getValue(), \"custom score: product of:\");\n          exp2.addDetail(valSrcExpls[1]);\n          exp2.addDetail(exp);\n          return exp2;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomMulAddQuery#getCustomScoreProvider(LeafReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(LeafReaderContext context) {\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subQueryScore, float valSrcScores[]) {\n          if (valSrcScores.length == 0) {\n            return subQueryScore;\n          }\n          if (valSrcScores.length == 1) {\n            return subQueryScore + valSrcScores[0];\n            // confirm that skipping beyond the last doc, on the\n            // previous reader, hits NO_MORE_DOCS\n          }\n          return (subQueryScore + valSrcScores[0]) * valSrcScores[1]; // we know there are two\n        }\n\n        @Override\n        public Explanation customExplain(int doc, Explanation subQueryExpl, Explanation valSrcExpls[]) {\n          if (valSrcExpls.length == 0) {\n            return subQueryExpl;\n          }\n          if (valSrcExpls.length == 1) {\n            return Explanation.match(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"CustomMulAdd, sum of:\", subQueryExpl, valSrcExpls[0]);\n          } else {\n            Explanation exp = Explanation.match(valSrcExpls[0].getValue() + subQueryExpl.getValue(), \"sum of:\", subQueryExpl, valSrcExpls[0]);\n            return Explanation.match(valSrcExpls[1].getValue() * exp.getValue(), \"custom score: product of:\", valSrcExpls[1], exp);\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82662cae660e76ded4de1e9b451633e523d83e1":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["a82662cae660e76ded4de1e9b451633e523d83e1"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}