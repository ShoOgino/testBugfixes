{"path":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","commits":[{"id":"eddb6e92036afdc160bbf50f071793a24ba8024e","date":1400250278,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private IOException convertMapFailedIOException(IOException ioe, String resourceDescription, int bufSize) {\n    final String originalMessage;\n    final Throwable originalCause;\n    if (ioe.getCause() instanceof OutOfMemoryError) {\n      // nested OOM confuses users, because its \"incorrect\", just print a plain message:\n      originalMessage = \"Map failed\";\n      originalCause = null;\n    } else {\n      originalMessage = ioe.getMessage();\n      originalCause = ioe.getCause();\n    }\n    final String moreInfo;\n    if (!Constants.JRE_IS_64BIT) {\n      moreInfo = \"MMapDirectory should only be used on 64bit platforms, because the address space on 32bit operating systems is too small. \";\n    } else if (Constants.WINDOWS) {\n      moreInfo = \"Windows is unfortunately very limited on virtual address space. If your index size is several hundred Gigabytes, consider changing to Linux. \";\n    } else if (Constants.LINUX) {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'), and 'sysctl vm.max_map_count'. \";\n    } else {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'). \";\n    }\n    final IOException newIoe = new IOException(String.format(Locale.ENGLISH,\n        \"%s: %s [this may be caused by lack of enough unfragmented virtual address space \"+\n        \"or too restrictive virtual memory limits enforced by the operating system, \"+\n        \"preventing us to map a chunk of %d bytes. %sMore information: \"+\n        \"http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html]\",\n        originalMessage, resourceDescription, bufSize, moreInfo), originalCause);\n    newIoe.setStackTrace(ioe.getStackTrace());\n    return newIoe;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc69a67d5c846a04c7f71e28cb1914e3af895f3","date":1400252660,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private IOException convertMapFailedIOException(IOException ioe, String resourceDescription, int bufSize) {\n    final String originalMessage;\n    final Throwable originalCause;\n    if (ioe.getCause() instanceof OutOfMemoryError) {\n      // nested OOM confuses users, because its \"incorrect\", just print a plain message:\n      originalMessage = \"Map failed\";\n      originalCause = null;\n    } else {\n      originalMessage = ioe.getMessage();\n      originalCause = ioe.getCause();\n    }\n    final String moreInfo;\n    if (!Constants.JRE_IS_64BIT) {\n      moreInfo = \"MMapDirectory should only be used on 64bit platforms, because the address space on 32bit operating systems is too small. \";\n    } else if (Constants.WINDOWS) {\n      moreInfo = \"Windows is unfortunately very limited on virtual address space. If your index size is several hundred Gigabytes, consider changing to Linux. \";\n    } else if (Constants.LINUX) {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'), and 'sysctl vm.max_map_count'. \";\n    } else {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'). \";\n    }\n    final IOException newIoe = new IOException(String.format(Locale.ENGLISH,\n        \"%s: %s [this may be caused by lack of enough unfragmented virtual address space \"+\n        \"or too restrictive virtual memory limits enforced by the operating system, \"+\n        \"preventing us to map a chunk of %d bytes. %sMore information: \"+\n        \"http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html]\",\n        originalMessage, resourceDescription, bufSize, moreInfo), originalCause);\n    newIoe.setStackTrace(ioe.getStackTrace());\n    return newIoe;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private IOException convertMapFailedIOException(IOException ioe, String resourceDescription, int bufSize) {\n    final String originalMessage;\n    final Throwable originalCause;\n    if (ioe.getCause() instanceof OutOfMemoryError) {\n      // nested OOM confuses users, because its \"incorrect\", just print a plain message:\n      originalMessage = \"Map failed\";\n      originalCause = null;\n    } else {\n      originalMessage = ioe.getMessage();\n      originalCause = ioe.getCause();\n    }\n    final String moreInfo;\n    if (!Constants.JRE_IS_64BIT) {\n      moreInfo = \"MMapDirectory should only be used on 64bit platforms, because the address space on 32bit operating systems is too small. \";\n    } else if (Constants.WINDOWS) {\n      moreInfo = \"Windows is unfortunately very limited on virtual address space. If your index size is several hundred Gigabytes, consider changing to Linux. \";\n    } else if (Constants.LINUX) {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'), and 'sysctl vm.max_map_count'. \";\n    } else {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'). \";\n    }\n    final IOException newIoe = new IOException(String.format(Locale.ENGLISH,\n        \"%s: %s [this may be caused by lack of enough unfragmented virtual address space \"+\n        \"or too restrictive virtual memory limits enforced by the operating system, \"+\n        \"preventing us to map a chunk of %d bytes. %sMore information: \"+\n        \"http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html]\",\n        originalMessage, resourceDescription, bufSize, moreInfo), originalCause);\n    newIoe.setStackTrace(ioe.getStackTrace());\n    return newIoe;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#convertMapFailedIOException(IOException,String,int).mjava","sourceNew":"  private IOException convertMapFailedIOException(IOException ioe, String resourceDescription, int bufSize) {\n    final String originalMessage;\n    final Throwable originalCause;\n    if (ioe.getCause() instanceof OutOfMemoryError) {\n      // nested OOM confuses users, because it's \"incorrect\", just print a plain message:\n      originalMessage = \"Map failed\";\n      originalCause = null;\n    } else {\n      originalMessage = ioe.getMessage();\n      originalCause = ioe.getCause();\n    }\n    final String moreInfo;\n    if (!Constants.JRE_IS_64BIT) {\n      moreInfo = \"MMapDirectory should only be used on 64bit platforms, because the address space on 32bit operating systems is too small. \";\n    } else if (Constants.WINDOWS) {\n      moreInfo = \"Windows is unfortunately very limited on virtual address space. If your index size is several hundred Gigabytes, consider changing to Linux. \";\n    } else if (Constants.LINUX) {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'), and 'sysctl vm.max_map_count'. \";\n    } else {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'). \";\n    }\n    final IOException newIoe = new IOException(String.format(Locale.ENGLISH,\n        \"%s: %s [this may be caused by lack of enough unfragmented virtual address space \"+\n        \"or too restrictive virtual memory limits enforced by the operating system, \"+\n        \"preventing us to map a chunk of %d bytes. %sMore information: \"+\n        \"http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html]\",\n        originalMessage, resourceDescription, bufSize, moreInfo), originalCause);\n    newIoe.setStackTrace(ioe.getStackTrace());\n    return newIoe;\n  }\n\n","sourceOld":"  private IOException convertMapFailedIOException(IOException ioe, String resourceDescription, int bufSize) {\n    final String originalMessage;\n    final Throwable originalCause;\n    if (ioe.getCause() instanceof OutOfMemoryError) {\n      // nested OOM confuses users, because its \"incorrect\", just print a plain message:\n      originalMessage = \"Map failed\";\n      originalCause = null;\n    } else {\n      originalMessage = ioe.getMessage();\n      originalCause = ioe.getCause();\n    }\n    final String moreInfo;\n    if (!Constants.JRE_IS_64BIT) {\n      moreInfo = \"MMapDirectory should only be used on 64bit platforms, because the address space on 32bit operating systems is too small. \";\n    } else if (Constants.WINDOWS) {\n      moreInfo = \"Windows is unfortunately very limited on virtual address space. If your index size is several hundred Gigabytes, consider changing to Linux. \";\n    } else if (Constants.LINUX) {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'), and 'sysctl vm.max_map_count'. \";\n    } else {\n      moreInfo = \"Please review 'ulimit -v', 'ulimit -m' (both should return 'unlimited'). \";\n    }\n    final IOException newIoe = new IOException(String.format(Locale.ENGLISH,\n        \"%s: %s [this may be caused by lack of enough unfragmented virtual address space \"+\n        \"or too restrictive virtual memory limits enforced by the operating system, \"+\n        \"preventing us to map a chunk of %d bytes. %sMore information: \"+\n        \"http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html]\",\n        originalMessage, resourceDescription, bufSize, moreInfo), originalCause);\n    newIoe.setStackTrace(ioe.getStackTrace());\n    return newIoe;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["eddb6e92036afdc160bbf50f071793a24ba8024e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eddb6e92036afdc160bbf50f071793a24ba8024e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"eddb6e92036afdc160bbf50f071793a24ba8024e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eddb6e92036afdc160bbf50f071793a24ba8024e"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56572ec06f1407c066d6b7399413178b33176cd8","eddb6e92036afdc160bbf50f071793a24ba8024e","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"eddb6e92036afdc160bbf50f071793a24ba8024e":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","56572ec06f1407c066d6b7399413178b33176cd8","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ccc69a67d5c846a04c7f71e28cb1914e3af895f3":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817","ccc69a67d5c846a04c7f71e28cb1914e3af895f3"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}