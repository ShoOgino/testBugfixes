{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"/dev/null","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"/dev/null","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"/dev/null","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      // We still create the indexReader when indexDivisor\n      // is -1, so that PrefixCodedTermsReader can call\n      // isIndexTerm for each field:\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n\n      this.fieldInfo = fieldInfo;\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader.FieldIndexData#FieldIndexData(FieldInfo,long).mjava","sourceNew":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","sourceOld":"    public FieldIndexData(FieldInfo fieldInfo, long indexStart) throws IOException {\n      this.indexStart = indexStart;\n\n      if (indexDivisor > 0) {\n        loadTermsIndex();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["b1add9ddc0005b07550d4350720aac22dc9886b3","2e8d7ba2175f47e280231533f7d3016249cea88b"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["b1add9ddc0005b07550d4350720aac22dc9886b3","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["56da903869515527852ee21ea7ef7bfe414cd40d"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","29ef99d61cda9641b6250bf9567329a6e65f901d","135621f3a0670a9394eb563224a3b76cc4dddc0f","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}