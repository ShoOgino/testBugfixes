{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#addMapping(int,int).mjava","commits":[{"id":"05feb7eb5e91cb64742ce32b2ca3f02433530446","date":1561602840,"type":1,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#addMapping(int,int).mjava","pathOld":"lucene/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#addMapping(int,int).mjava","sourceNew":"  void addMapping(int sourceId, int wordId) {\n    if (wordId <= lastWordId) {\n      throw new IllegalStateException(\"words out of order: \" + wordId + \" vs lastID: \" + lastWordId);\n    }\n    \n    if (sourceId > lastSourceId) {\n      targetMapOffsets = ArrayUtil.grow(targetMapOffsets, sourceId + 1);\n      for (int i = lastSourceId + 1; i <= sourceId; i++) {\n        targetMapOffsets[i] = targetMapEndOffset;\n      }\n    } else if (sourceId != lastSourceId) {\n      throw new IllegalStateException(\"source ids not in increasing order: lastSourceId=\" + lastSourceId + \" vs sourceId=\" + sourceId);\n    }\n\n    targetMap = ArrayUtil.grow(targetMap, targetMapEndOffset + 1);\n    targetMap[targetMapEndOffset] = wordId;\n    targetMapEndOffset++;\n\n    lastSourceId = sourceId;\n    lastWordId = wordId;\n  }\n\n","sourceOld":"  public void addMapping(int sourceId, int wordId) {\n    if (wordId <= lastWordId) {\n      throw new IllegalStateException(\"words out of order: \" + wordId + \" vs lastID: \" + lastWordId);\n    }\n    \n    if (sourceId > lastSourceId) {\n      targetMapOffsets = ArrayUtil.grow(targetMapOffsets, sourceId + 1);\n      for (int i = lastSourceId + 1; i <= sourceId; i++) {\n        targetMapOffsets[i] = targetMapEndOffset;\n      }\n    } else if (sourceId != lastSourceId) {\n      throw new IllegalStateException(\"source ids not in increasing order: lastSourceId=\" + lastSourceId + \" vs sourceId=\" + sourceId);\n    }\n\n    targetMap = ArrayUtil.grow(targetMap, targetMapEndOffset + 1);\n    targetMap[targetMapEndOffset] = wordId;\n    targetMapEndOffset++;\n\n    lastSourceId = sourceId;\n    lastWordId = wordId;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05feb7eb5e91cb64742ce32b2ca3f02433530446"]},"commit2Childs":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05feb7eb5e91cb64742ce32b2ca3f02433530446"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}