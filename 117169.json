{"path":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","commits":[{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/strategy/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/TestTermQueryPrefixGridStrategy#testNGramPrefixGridLosAngeles().mjava","sourceNew":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  @Test\n  public void testNGramPrefixGridLosAngeles() throws IOException {\n    SimpleSpatialFieldInfo fieldInfo = new SimpleSpatialFieldInfo(\"geo\");\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    TermQueryPrefixTreeStrategy prefixGridStrategy = new TermQueryPrefixTreeStrategy(new QuadPrefixTree(ctx));\n\n    Shape point = new PointImpl(-118.243680, 34.052230);\n\n    Document losAngeles = new Document();\n    losAngeles.add(new Field(\"name\", \"Los Angeles\", StringField.TYPE_STORED));\n    losAngeles.add(prefixGridStrategy.createField(fieldInfo, point, true, true));\n\n    addDocumentsAndCommit(Arrays.asList(losAngeles));\n\n    // This won't work with simple spatial context...\n    SpatialArgsParser spatialArgsParser = new SpatialArgsParser();\n    // TODO... use a non polygon query\n//    SpatialArgs spatialArgs = spatialArgsParser.parse(\n//        \"IsWithin(POLYGON((-127.00390625 39.8125,-112.765625 39.98828125,-111.53515625 31.375,-125.94921875 30.14453125,-127.00390625 39.8125)))\",\n//        new SimpleSpatialContext());\n\n//    Query query = prefixGridStrategy.makeQuery(spatialArgs, fieldInfo);\n//    SearchResults searchResults = executeQuery(query, 1);\n//    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e47768b261c28e7e6032060e8331475c81057953","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"e47768b261c28e7e6032060e8331475c81057953":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}