{"path":"lucene/core/src/java/org/apache/lucene/util/MSBRadixSorter#assertHistogram(int,int[]).mjava","commits":[{"id":"a20457919db052812998f60294d17daa883ff972","date":1470227748,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MSBRadixSorter#assertHistogram(int,int[]).mjava","pathOld":"/dev/null","sourceNew":"  // only used from assert\n  private boolean assertHistogram(int commonPrefixLength, int[] histogram) {\n    int numberOfUniqueBytes = 0;\n    for (int freq : histogram) {\n      if (freq > 0) {\n        numberOfUniqueBytes++;\n      }\n    }\n    if (numberOfUniqueBytes == 1) {\n      assert commonPrefixLength >= 1;\n    } else {\n      assert commonPrefixLength == 0 : commonPrefixLength;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MSBRadixSorter#assertHistogram(int,int[]).mjava","pathOld":"/dev/null","sourceNew":"  // only used from assert\n  private boolean assertHistogram(int commonPrefixLength, int[] histogram) {\n    int numberOfUniqueBytes = 0;\n    for (int freq : histogram) {\n      if (freq > 0) {\n        numberOfUniqueBytes++;\n      }\n    }\n    if (numberOfUniqueBytes == 1) {\n      assert commonPrefixLength >= 1;\n    } else {\n      assert commonPrefixLength == 0 : commonPrefixLength;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MSBRadixSorter#assertHistogram(int,int[]).mjava","pathOld":"/dev/null","sourceNew":"  // only used from assert\n  private boolean assertHistogram(int commonPrefixLength, int[] histogram) {\n    int numberOfUniqueBytes = 0;\n    for (int freq : histogram) {\n      if (freq > 0) {\n        numberOfUniqueBytes++;\n      }\n    }\n    if (numberOfUniqueBytes == 1) {\n      assert commonPrefixLength >= 1;\n    } else {\n      assert commonPrefixLength == 0 : commonPrefixLength;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a20457919db052812998f60294d17daa883ff972":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a20457919db052812998f60294d17daa883ff972"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a20457919db052812998f60294d17daa883ff972"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a20457919db052812998f60294d17daa883ff972"]},"commit2Childs":{"a20457919db052812998f60294d17daa883ff972":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a20457919db052812998f60294d17daa883ff972","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}