{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"269bb27fb904b556e5128bc7b50673d0f0c161c2","date":1323097064,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    Config config = getRunData().getConfig();\n    IndexReader r = null;\n    final IndexDeletionPolicy deletionPolicy;\n    if (readOnly) {\n      deletionPolicy = null;\n    } else {\n      deletionPolicy = CreateIndexTask.getIndexDeletionPolicy(config);\n    }\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData),\n                           deletionPolicy,\n                           readOnly); \n    } else {\n      r = IndexReader.open(dir,\n                           deletionPolicy,\n                           readOnly); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34ca474b88b90218279fc4b893727bcefbb1f725","date":1327855341,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    DirectoryReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    DirectoryReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    IndexReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/OpenReaderTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    DirectoryReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws IOException {\n    Directory dir = getRunData().getDirectory();\n    DirectoryReader r = null;\n    if (commitUserData != null) {\n      r = IndexReader.open(OpenReaderTask.findIndexCommit(dir, commitUserData)); \n    } else {\n      r = IndexReader.open(dir); \n    }\n    getRunData().setIndexReader(r);\n    // We transfer reference to the run data\n    r.decRef();\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","269bb27fb904b556e5128bc7b50673d0f0c161c2"],"269bb27fb904b556e5128bc7b50673d0f0c161c2":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"34ca474b88b90218279fc4b893727bcefbb1f725":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","34ca474b88b90218279fc4b893727bcefbb1f725"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","269bb27fb904b556e5128bc7b50673d0f0c161c2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","34ca474b88b90218279fc4b893727bcefbb1f725","5cab9a86bd67202d20b6adc463008c8e982b070a"],"269bb27fb904b556e5128bc7b50673d0f0c161c2":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"34ca474b88b90218279fc4b893727bcefbb1f725":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}