{"path":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#pointInRectPrecise(double,double,double,double,double,double).mjava","commits":[{"id":"04995b00da1e08edb88b14c5a9789d741de5c51d","date":1453863716,"type":1,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#pointInRectPrecise(double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#pointInRect(double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is a basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean pointInRectPrecise(final double lon, final double lat, final double minLon,\n                                           final double minLat, final double maxLon, final double maxLat) {\n    return lon >= minLon && lon <= maxLon && lat >= minLat && lat <= maxLat;\n  }\n\n","sourceOld":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is a basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean pointInRect(final double lon, final double lat, final double minLon,\n                                    final double minLat, final double maxLon, final double maxLat) {\n    return (GeoUtils.compare(lon, minLon) >= 0 && GeoUtils.compare(lon, maxLon) <= 0\n        && GeoUtils.compare(lat, minLat) >= 0 && GeoUtils.compare(lat, maxLat) <= 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRelationUtils#pointInRectPrecise(double,double,double,double,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoRelationUtils#pointInRectPrecise(double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is a basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean pointInRectPrecise(final double lon, final double lat, final double minLon,\n                                           final double minLat, final double maxLon, final double maxLat) {\n    return lon >= minLon && lon <= maxLon && lat >= minLat && lat <= maxLat;\n  }\n\n","sourceOld":"  /**\n   * Determine if a bbox (defined by minLon, minLat, maxLon, maxLat) contains the provided point (defined by lon, lat)\n   * NOTE: this is a basic method that does not handle dateline or pole crossing. Unwrapping must be done before\n   * calling this method.\n   */\n  public static boolean pointInRectPrecise(final double lon, final double lat, final double minLon,\n                                           final double minLat, final double maxLon, final double maxLat) {\n    return lon >= minLon && lon <= maxLon && lat >= minLat && lat <= maxLat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"937923083e4d137932336fc80f3d78758ff698a6":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"937923083e4d137932336fc80f3d78758ff698a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["937923083e4d137932336fc80f3d78758ff698a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}