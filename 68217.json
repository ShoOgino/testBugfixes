{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return err(\":\" + a + \"!=\" + b);\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return err(\":\" + a + \"!=\" + b);\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return err(\":\" + a + \"!=\" + b);\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return err(\":\" + a + \"!=\" + b);\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return err(\":\" + a + \"!=\" + b);\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return err(\":\" + a + \"!=\" + b);\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return err(\":\" + a + \"!=\" + b);\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return err(\":\" + a + \"!=\" + b);\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return err(\":\" + a + \"!=\" + b);\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad100f9e08ad77986f3b61ff2e904679206b68dd","date":1456369337,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    // equivalent integer numbers\n    if ((a instanceof Integer || a instanceof Long) && (b instanceof Integer || b instanceof Long)) {\n      if (((Number)a).longValue() == ((Number)b).longValue()) {\n        return null;\n      } else {\n        return \":\" + a + \"!=\" + b;\n      }\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    // equivalent integer numbers\n    if ((a instanceof Integer || a instanceof Long) && (b instanceof Integer || b instanceof Long)) {\n      if (((Number)a).longValue() == ((Number)b).longValue()) {\n        return null;\n      } else {\n        return \":\" + a + \"!=\" + b;\n      }\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(Object,Object,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    // equivalent integer numbers\n    if ((a instanceof Integer || a instanceof Long) && (b instanceof Integer || b instanceof Long)) {\n      if (((Number)a).longValue() == ((Number)b).longValue()) {\n        return null;\n      } else {\n        return \":\" + a + \"!=\" + b;\n      }\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  public static String compare(Object a, Object b, int flags, Map<String, Integer> handle) {\n    if (a == b) return null;\n    if (a == null || b == null) return \":\" + a + \"!=\" + b;\n\n    if (a instanceof NamedList && b instanceof NamedList) {\n      return compare((NamedList) a, (NamedList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocumentList && b instanceof SolrDocumentList) {\n      return compare((SolrDocumentList) a, (SolrDocumentList) b, flags, handle);\n    }\n\n    if (a instanceof SolrDocument && b instanceof SolrDocument) {\n      return compare((SolrDocument) a, (SolrDocument) b, flags, handle);\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      return compare((Map) a, (Map) b, flags, handle);\n    }\n\n    if (a instanceof Object[] && b instanceof Object[]) {\n      return compare((Object[]) a, (Object[]) b, flags, handle);\n    }\n\n    if (a instanceof byte[] && b instanceof byte[]) {\n      if (!Arrays.equals((byte[]) a, (byte[]) b)) {\n        return \":\" + a + \"!=\" + b;\n      }\n      return null;\n    }\n\n    if (a instanceof List && b instanceof List) {\n      return compare(((List) a).toArray(), ((List) b).toArray(), flags, handle);\n\n    }\n\n    if ((flags & FUZZY) != 0) {\n      if ((a instanceof Double && b instanceof Double)) {\n        double aaa = ((Double) a).doubleValue();\n        double bbb = ((Double) b).doubleValue();\n        if (aaa == bbb || ((Double) a).isNaN() && ((Double) b).isNaN()) {\n          return null;\n        }\n        if ((aaa == 0.0) || (bbb == 0.0)) {\n            return \":\" + a + \"!=\" + b;\n        }\n\n        double diff = Math.abs(aaa - bbb);\n        // When stats computations are done on multiple shards, there may\n        // be small differences in the results. Allow a small difference\n        // between the result of the computations.\n\n        double ratio = Math.max(Math.abs(diff / aaa), Math.abs(diff / bbb));\n        if (ratio > DOUBLE_RATIO_LIMIT) {\n          return \":\" + a + \"!=\" + b;\n        } else {\n          return null;// close enough.\n        }\n      }\n    }\n\n    if (!(a.equals(b))) {\n      return \":\" + a + \"!=\" + b;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["ad100f9e08ad77986f3b61ff2e904679206b68dd"],"ad100f9e08ad77986f3b61ff2e904679206b68dd":["c26f00b574427b55127e869b935845554afde1fa"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["ad100f9e08ad77986f3b61ff2e904679206b68dd","2ab027bdfe663227636ccbeda13ae82add302939"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ab027bdfe663227636ccbeda13ae82add302939"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["ad100f9e08ad77986f3b61ff2e904679206b68dd","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ad100f9e08ad77986f3b61ff2e904679206b68dd":["2ab027bdfe663227636ccbeda13ae82add302939","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["ad100f9e08ad77986f3b61ff2e904679206b68dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}