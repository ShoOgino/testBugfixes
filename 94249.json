{"path":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  static void setWt(SolrQueryRequest req, String wt){\n    SolrParams params = req.getParams();\n    if( params.get(CommonParams.WT) != null ) return;//wt is set by user\n    Map<String,String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be214850f18c80408bcfafd463ec155ab0515aee","date":1423651203,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":"  static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":"  static void setWt(SolrQueryRequest req, String wt){\n    SolrParams params = req.getParams();\n    if( params.get(CommonParams.WT) != null ) return;//wt is set by user\n    Map<String,String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bdcb86c29922edae9a14852e636303bc52df094","date":1438887454,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":"  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":"  static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8c611a68829ce670498db444c39975f66888dfd","date":1494922075,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#setWt(SolrQueryRequest,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":"  /**\n   * @since 6.7\n   */\n  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":"  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#setWt(SolrQueryRequest,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":"  /**\n   * @since 6.7\n   */\n  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":"  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/RequestHandlerUtils#setWt(SolrQueryRequest,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":"  /**\n   * @since 6.7\n   */\n  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","sourceOld":"  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler#setWt(SolrQueryRequest,String).mjava","sourceNew":null,"sourceOld":"  public static void setWt(SolrQueryRequest req, String wt) {\n    SolrParams params = req.getParams();\n    if (params.get(CommonParams.WT) != null) return;//wt is set by user\n    Map<String, String> map = new HashMap<>(1);\n    map.put(CommonParams.WT, wt);\n    map.put(\"indent\", \"true\");\n    req.setParams(SolrParams.wrapDefaults(params, new MapSolrParams(map)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bdcb86c29922edae9a14852e636303bc52df094":["be214850f18c80408bcfafd463ec155ab0515aee"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["6bdcb86c29922edae9a14852e636303bc52df094","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a8c611a68829ce670498db444c39975f66888dfd":["6bdcb86c29922edae9a14852e636303bc52df094"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["6bdcb86c29922edae9a14852e636303bc52df094"],"be214850f18c80408bcfafd463ec155ab0515aee":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"28288370235ed02234a64753cdbf0c6ec096304a":["6bdcb86c29922edae9a14852e636303bc52df094","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"6bdcb86c29922edae9a14852e636303bc52df094":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a8c611a68829ce670498db444c39975f66888dfd","a513b6a92751e54c76fb5447948c9e7d437163a7","28288370235ed02234a64753cdbf0c6ec096304a"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["be214850f18c80408bcfafd463ec155ab0515aee"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a8c611a68829ce670498db444c39975f66888dfd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"be214850f18c80408bcfafd463ec155ab0515aee":["6bdcb86c29922edae9a14852e636303bc52df094"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8c611a68829ce670498db444c39975f66888dfd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}