{"path":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","commits":[{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int numValues,\n          Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size*numValues );\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n\n        bytesRef.length = size;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int numValues,\n          Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size*numValues );\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int numValues,\n          Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size*numValues );\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n\n        bytesRef.length = size;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int numValues,\n          Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size*numValues );\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n        closeIndexInput();\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n        closeIndexInput();\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n        closeIndexInput();\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED);\n        this.size = size;\n        this.valueCount = numValues;\n        closeIndexInput();\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), size\n            * numValues);\n        this.size = size;\n        this.numValue = numValues;\n        index = PackedInts.getReader(idxIn);\n        closeIndexInput();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedSortedBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int,Comparator[BytesRef]).mjava","sourceNew":null,"sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size,\n          int numValues, Comparator<BytesRef> comp) throws IOException {\n        super(datIn, idxIn, comp, size * numValues, ValueType.BYTES_FIXED_SORTED);\n        this.size = size;\n        this.valueCount = numValues;\n        closeIndexInput();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","85130289d2ed101fcc2d8798511c7c5b020ffab4"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["2d84736c4614acce6720851cbd2c823d7cd516e4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e128967bca58657bc0039d4bfe631e63e81f1977":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e128967bca58657bc0039d4bfe631e63e81f1977"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2d84736c4614acce6720851cbd2c823d7cd516e4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","85eb75e0c0203e44dcf686f35876cf6080f3a671"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","ab5cb6a74aefb78aa0569857970b9151dfe2e787","3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e128967bca58657bc0039d4bfe631e63e81f1977"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"e128967bca58657bc0039d4bfe631e63e81f1977":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}