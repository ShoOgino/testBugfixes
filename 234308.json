{"path":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // this is needed to enable default SolrJmxReporter in TestHarness\n    ManagementFactory.getPlatformMBeanServer();\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // this is needed to enable default SolrJmxReporter in TestHarness\n    ManagementFactory.getPlatformMBeanServer();\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e75e40c2252a5624016ad28ba7e8d3354c4d9c86","date":1502965942,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68541eebed1904d72a1ab713fc1afcec49e3f466","date":1502966016,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15121765c37065ede7d167e578eed362f943bea8","date":1533760080,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig-minimal.xml\", \"schema.xml\");\n    h.getCoreContainer().waitForLoadingCoresToFinish(30000);\n\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig.xml\", \"schema.xml\");\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2010e2591e2d11678b59291d2ab31bd30e3ac7","date":1559150835,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig-minimal.xml\", \"schema.xml\");\n    h.getCoreContainer().waitForLoadingCoresToFinish(30000);\n\n    // manually register & seed some metrics in solr.jvm and solr.jetty for testing via handler\n    // (use \"solrtest_\" prefix just in case the jvm or jetty ads a \"foo\" metric at some point)\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"solrtest_foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"solrtest_foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"solrtest_foo:bar\");\n    c.inc(3);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig-minimal.xml\", \"schema.xml\");\n    h.getCoreContainer().waitForLoadingCoresToFinish(30000);\n\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MetricsHandlerTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig-minimal.xml\", \"schema.xml\");\n    h.getCoreContainer().waitForLoadingCoresToFinish(30000);\n\n    // manually register & seed some metrics in solr.jvm and solr.jetty for testing via handler\n    // (use \"solrtest_\" prefix just in case the jvm or jetty ads a \"foo\" metric at some point)\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"solrtest_foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"solrtest_foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"solrtest_foo:bar\");\n    c.inc(3);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n\n    initCore(\"solrconfig-minimal.xml\", \"schema.xml\");\n    h.getCoreContainer().waitForLoadingCoresToFinish(30000);\n\n    // manually register some metrics in solr.jvm and solr.jetty - TestHarness doesn't init them\n    Counter c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jvm\", \"foo\");\n    c.inc();\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo\");\n    c.inc(2);\n    // test escapes\n    c = h.getCoreContainer().getMetricManager().counter(null, \"solr.jetty\", \"foo:bar\");\n    c.inc(3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["0265144286422ad99682a00904cc2536b79c8535"],"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68541eebed1904d72a1ab713fc1afcec49e3f466":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["15121765c37065ede7d167e578eed362f943bea8","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"e75e40c2252a5624016ad28ba7e8d3354c4d9c86":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["15121765c37065ede7d167e578eed362f943bea8"],"15121765c37065ede7d167e578eed362f943bea8":["68541eebed1904d72a1ab713fc1afcec49e3f466"],"816521ebaad5add9cb96bb88c577394e2938c40b":["0265144286422ad99682a00904cc2536b79c8535"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e75e40c2252a5624016ad28ba7e8d3354c4d9c86"],"0265144286422ad99682a00904cc2536b79c8535":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","816521ebaad5add9cb96bb88c577394e2938c40b"],"68541eebed1904d72a1ab713fc1afcec49e3f466":["15121765c37065ede7d167e578eed362f943bea8"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"e75e40c2252a5624016ad28ba7e8d3354c4d9c86":[],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15121765c37065ede7d167e578eed362f943bea8":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"816521ebaad5add9cb96bb88c577394e2938c40b":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["68541eebed1904d72a1ab713fc1afcec49e3f466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","58af973abe9f7c0faa777c1a6285fc7f72c171c5","e75e40c2252a5624016ad28ba7e8d3354c4d9c86","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}