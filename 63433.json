{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","commits":[{"id":"5287d62ad5da27d35a88ada646ae7d9adfb76826","date":1450041712,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"/dev/null","sourceNew":"  private void testFacetStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", zkServer.getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0370d6fb5289875090a50a9d0887ee584fed440"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b940572a59da1b42b6c20ab5278155b12816807a","date":1462388874,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","sourceOld":"  private void testFacetStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", zkServer.getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bd78ba595fa6cdd7fff930f26d154d13a823fa47","date":1462400514,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","sourceOld":"  private void testFacetStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", zkServer.getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73450c0955930295d34703e7ddbfc6973b7a121a","date":1462431925,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","sourceOld":"  private void testFacetStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", zkServer.getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","sourceOld":"  private void testFacetStream() throws Exception {\n\n    indexr(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\");\n    indexr(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\");\n    indexr(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\");\n    indexr(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\");\n    indexr(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\");\n    indexr(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\");\n    indexr(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\");\n    indexr(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\");\n    indexr(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\");\n    indexr(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\");\n\n    commit();\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", zkServer.getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    del(\"*:*\");\n    commit();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"071baff2e8ccdf4709b106e0c0f720868fd7b444","date":1463622773,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1eb10453c4217aa50392c51e3e89deb8b779bd51","date":1463648949,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c969f15cd04d31e520319c619a445ae21f02d72","date":1479263638,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"011d43366b2da54d1652d93e7ec6412848eeb009","date":1541521420,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0370d6fb5289875090a50a9d0887ee584fed440","date":1552401990,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n\n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n    \n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n    \n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n    \n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n    \n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":["5287d62ad5da27d35a88ada646ae7d9adfb76826"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"570664407cd3123a8039f1b4f2f6c6693bdaee31","date":1589893823,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"std\", StdMetric.class)\n      .withFunctionName(\"per\", PercentileMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n\n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"std(a_i), std(a_f),\"\n              +   \"per(a_i, 50), per(a_f, 50),\"\n              +   \"count(*)\"\n              + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double stdi = tuple.getDouble(\"std(a_i)\");\n    Double stdf = tuple.getDouble(\"std(a_f)\");\n    Double peri = tuple.getDouble(\"per(a_i,50)\");\n    Double perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    System.out.println(\"STD and Per:\"+stdi+\":\"+stdf+\":\"+peri+\":\"+perf);\n//STD and Per:4.509249752822894:2.6457513110645907:11.0:7.0\n    //assert(false);\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n\n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"count(*)\"\n              + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n    //Test Long and Double Sums\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74879569974967f8975e4418c9ec415d411dce92","date":1593391300,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testFacetStream().mjava","sourceNew":"    @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"std\", StdMetric.class)\n      .withFunctionName(\"per\", PercentileMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n\n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"std(a_i), std(a_f),\"\n              +   \"per(a_i, 50), per(a_f, 50),\"\n              +   \"count(*)\"\n              + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double stdi = tuple.getDouble(\"std(a_i)\");\n    Double stdf = tuple.getDouble(\"std(a_f)\");\n    Double peri = tuple.getDouble(\"per(a_i,50)\");\n    Double perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","sourceOld":"  @Test\n  public void testFacetStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String clause;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n      .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n      .withFunctionName(\"facet\", FacetStream.class)\n      .withFunctionName(\"sum\", SumMetric.class)\n      .withFunctionName(\"min\", MinMetric.class)\n      .withFunctionName(\"max\", MaxMetric.class)\n      .withFunctionName(\"avg\", MeanMetric.class)\n      .withFunctionName(\"std\", StdMetric.class)\n      .withFunctionName(\"per\", PercentileMetric.class)\n      .withFunctionName(\"count\", CountMetric.class);\n\n    // Basic test\n    clause = \"facet(\"\n              +   \"collection1, \"\n              +   \"q=\\\"*:*\\\", \"\n              +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n              +   \"sort=\\\"a_s asc\\\", \"\n              +   \"buckets=\\\"a_s\\\", \"\n              +   \"bucketSorts=\\\"sum(a_i) asc\\\", \"\n              +   \"bucketSizeLimit=100, \"\n              +   \"sum(a_i), sum(a_f), \"\n              +   \"min(a_i), min(a_f), \"\n              +   \"max(a_i), max(a_f), \"\n              +   \"avg(a_i), avg(a_f), \"\n              +   \"std(a_i), std(a_f),\"\n              +   \"per(a_i, 50), per(a_f, 50),\"\n              +   \"count(*)\"\n              + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    Tuple tuple = tuples.get(0);\n    String bucket = tuple.getString(\"a_s\");\n    Double sumi = tuple.getDouble(\"sum(a_i)\");\n    Double sumf = tuple.getDouble(\"sum(a_f)\");\n    Double mini = tuple.getDouble(\"min(a_i)\");\n    Double minf = tuple.getDouble(\"min(a_f)\");\n    Double maxi = tuple.getDouble(\"max(a_i)\");\n    Double maxf = tuple.getDouble(\"max(a_f)\");\n    Double avgi = tuple.getDouble(\"avg(a_i)\");\n    Double avgf = tuple.getDouble(\"avg(a_f)\");\n    Double stdi = tuple.getDouble(\"std(a_i)\");\n    Double stdf = tuple.getDouble(\"std(a_f)\");\n    Double peri = tuple.getDouble(\"per(a_i,50)\");\n    Double perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    Double count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n\n    System.out.println(\"STD and Per:\"+stdi+\":\"+stdf+\":\"+peri+\":\"+perf);\n//STD and Per:4.509249752822894:2.6457513110645907:11.0:7.0\n    //assert(false);\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    //Reverse the Sort.\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test Long and Double Sums\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test rows\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"sum(a_i) desc\\\", \"\n        +   \"rows=2, offset=1, method=dvhash, refine=true,\"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n\n    //Test offset\n\n    tuple = tuples.get(0);\n    assertEquals(tuples.size(), 2);\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n\n    //Test index sort\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s desc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"std(a_i), std(a_f),\"\n        +   \"per(a_i, 50), per(a_f, 50),\"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n    assertTrue(stdi.doubleValue() == 4.949747468305833D);\n    assertTrue(stdf.doubleValue() == 2.1213203435596424D);\n    assertTrue(peri.doubleValue() == 7.5D);\n    assertTrue(perf.doubleValue() ==  5.5D);\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 4.509249752822894D);\n    assertTrue(stdf.doubleValue() == 2.6457513110645907D);\n    assertTrue(peri.doubleValue() == 11.0D);\n    assertTrue(perf.doubleValue() ==  7.0D);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n    stdi = tuple.getDouble(\"std(a_i)\");\n    stdf = tuple.getDouble(\"std(a_f)\");\n    peri = tuple.getDouble(\"per(a_i,50)\");\n    perf = tuple.getDouble(\"per(a_f,50)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n    assertTrue(stdi.doubleValue() == 6.551081335677848D);\n    assertTrue(stdf.doubleValue() == 4.041451884327381D);\n    assertTrue(peri.doubleValue() == 1.5D);\n    assertTrue(perf.doubleValue() ==  3.5D);\n\n\n    //Test index sort\n\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"*:*\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 3);\n\n\n    tuple = tuples.get(0);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello0\"));\n    assertTrue(sumi.doubleValue() == 17.0D);\n    assertTrue(sumf.doubleValue() == 18.0D);\n    assertTrue(mini.doubleValue() == 0.0D);\n    assertTrue(minf.doubleValue() == 1.0D);\n    assertTrue(maxi.doubleValue() == 14.0D);\n    assertTrue(maxf.doubleValue() == 10.0D);\n    assertTrue(avgi.doubleValue() == 4.25D);\n    assertTrue(avgf.doubleValue() == 4.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(1);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello3\"));\n    assertTrue(sumi.doubleValue() == 38.0D);\n    assertTrue(sumf.doubleValue() == 26.0D);\n    assertTrue(mini.doubleValue() == 3.0D);\n    assertTrue(minf.doubleValue() == 3.0D);\n    assertTrue(maxi.doubleValue() == 13.0D);\n    assertTrue(maxf.doubleValue() == 9.0D);\n    assertTrue(avgi.doubleValue() == 9.5D);\n    assertTrue(avgf.doubleValue() == 6.5D);\n    assertTrue(count.doubleValue() == 4);\n\n\n    tuple = tuples.get(2);\n    bucket = tuple.getString(\"a_s\");\n    sumi = tuple.getDouble(\"sum(a_i)\");\n    sumf = tuple.getDouble(\"sum(a_f)\");\n    mini = tuple.getDouble(\"min(a_i)\");\n    minf = tuple.getDouble(\"min(a_f)\");\n    maxi = tuple.getDouble(\"max(a_i)\");\n    maxf = tuple.getDouble(\"max(a_f)\");\n    avgi = tuple.getDouble(\"avg(a_i)\");\n    avgf = tuple.getDouble(\"avg(a_f)\");\n    count = tuple.getDouble(\"count(*)\");\n\n    assertTrue(bucket.equals(\"hello4\"));\n    assertTrue(sumi.longValue() == 15);\n    assertTrue(sumf.doubleValue() == 11.0D);\n    assertTrue(mini.doubleValue() == 4.0D);\n    assertTrue(minf.doubleValue() == 4.0D);\n    assertTrue(maxi.doubleValue() == 11.0D);\n    assertTrue(maxf.doubleValue() == 7.0D);\n    assertTrue(avgi.doubleValue() == 7.5D);\n    assertTrue(avgf.doubleValue() == 5.5D);\n    assertTrue(count.doubleValue() == 2);\n\n    //Test zero result facets\n    clause = \"facet(\"\n        +   \"collection1, \"\n        +   \"q=\\\"blahhh\\\", \"\n        +   \"fl=\\\"a_s,a_i,a_f\\\", \"\n        +   \"sort=\\\"a_s asc\\\", \"\n        +   \"buckets=\\\"a_s\\\", \"\n        +   \"bucketSorts=\\\"a_s asc\\\", \"\n        +   \"bucketSizeLimit=100, \"\n        +   \"sum(a_i), sum(a_f), \"\n        +   \"min(a_i), min(a_f), \"\n        +   \"max(a_i), max(a_f), \"\n        +   \"avg(a_i), avg(a_f), \"\n        +   \"count(*)\"\n        + \")\";\n\n    stream = factory.constructStream(clause);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1eb10453c4217aa50392c51e3e89deb8b779bd51":["73450c0955930295d34703e7ddbfc6973b7a121a","071baff2e8ccdf4709b106e0c0f720868fd7b444"],"73450c0955930295d34703e7ddbfc6973b7a121a":["5287d62ad5da27d35a88ada646ae7d9adfb76826","b940572a59da1b42b6c20ab5278155b12816807a"],"071baff2e8ccdf4709b106e0c0f720868fd7b444":["73450c0955930295d34703e7ddbfc6973b7a121a"],"b940572a59da1b42b6c20ab5278155b12816807a":["5287d62ad5da27d35a88ada646ae7d9adfb76826"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bd78ba595fa6cdd7fff930f26d154d13a823fa47","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["73450c0955930295d34703e7ddbfc6973b7a121a","1eb10453c4217aa50392c51e3e89deb8b779bd51"],"bd78ba595fa6cdd7fff930f26d154d13a823fa47":["5287d62ad5da27d35a88ada646ae7d9adfb76826","b940572a59da1b42b6c20ab5278155b12816807a"],"5287d62ad5da27d35a88ada646ae7d9adfb76826":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0370d6fb5289875090a50a9d0887ee584fed440":["011d43366b2da54d1652d93e7ec6412848eeb009"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["5287d62ad5da27d35a88ada646ae7d9adfb76826","73450c0955930295d34703e7ddbfc6973b7a121a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8c969f15cd04d31e520319c619a445ae21f02d72"],"74879569974967f8975e4418c9ec415d411dce92":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"011d43366b2da54d1652d93e7ec6412848eeb009":["8c969f15cd04d31e520319c619a445ae21f02d72"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["a0370d6fb5289875090a50a9d0887ee584fed440"],"8c969f15cd04d31e520319c619a445ae21f02d72":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74879569974967f8975e4418c9ec415d411dce92"]},"commit2Childs":{"1eb10453c4217aa50392c51e3e89deb8b779bd51":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"73450c0955930295d34703e7ddbfc6973b7a121a":["1eb10453c4217aa50392c51e3e89deb8b779bd51","071baff2e8ccdf4709b106e0c0f720868fd7b444","d470c8182e92b264680e34081b75e70a9f2b3c89","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"071baff2e8ccdf4709b106e0c0f720868fd7b444":["1eb10453c4217aa50392c51e3e89deb8b779bd51"],"b940572a59da1b42b6c20ab5278155b12816807a":["73450c0955930295d34703e7ddbfc6973b7a121a","bd78ba595fa6cdd7fff930f26d154d13a823fa47"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8c969f15cd04d31e520319c619a445ae21f02d72"],"bd78ba595fa6cdd7fff930f26d154d13a823fa47":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5287d62ad5da27d35a88ada646ae7d9adfb76826":["73450c0955930295d34703e7ddbfc6973b7a121a","b940572a59da1b42b6c20ab5278155b12816807a","bd78ba595fa6cdd7fff930f26d154d13a823fa47","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904"],"a0370d6fb5289875090a50a9d0887ee584fed440":["570664407cd3123a8039f1b4f2f6c6693bdaee31"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5287d62ad5da27d35a88ada646ae7d9adfb76826"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":[],"74879569974967f8975e4418c9ec415d411dce92":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"011d43366b2da54d1652d93e7ec6412848eeb009":["a0370d6fb5289875090a50a9d0887ee584fed440"],"570664407cd3123a8039f1b4f2f6c6693bdaee31":["74879569974967f8975e4418c9ec415d411dce92"],"8c969f15cd04d31e520319c619a445ae21f02d72":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","011d43366b2da54d1652d93e7ec6412848eeb009"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","a1ef55e1fff7ff44354432770ad8bc19be1fcc75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}