{"path":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean result = false;\n      if (input.incrementToken()) {\n        if (numSeen % 2 == 0) {\n          payAtt.setPayload(new Payload(payload2));\n        } else {\n          payAtt.setPayload(new Payload(payload4));\n        }\n        numSeen++;\n        result = true;\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean result = false;\n      if (input.incrementToken()) {\n        if (numSeen % 2 == 0) {\n          payAtt.setPayload(new Payload(payload2));\n        } else {\n          payAtt.setPayload(new Payload(payload4));\n        }\n        numSeen++;\n        result = true;\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean result = false;\n      if (input.incrementToken()) {\n        if (numSeen % 2 == 0) {\n          payAtt.setPayload(new BytesRef(payload2));\n        } else {\n          payAtt.setPayload(new BytesRef(payload4));\n        }\n        numSeen++;\n        result = true;\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean result = false;\n      if (input.incrementToken()) {\n        if (numSeen % 2 == 0) {\n          payAtt.setPayload(new Payload(payload2));\n        } else {\n          payAtt.setPayload(new Payload(payload4));\n        }\n        numSeen++;\n        result = true;\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73561ba4c64c1aea2ba4b3873f80b9b2a2946816","date":1438618499,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.PayloadFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean result = false;\n      if (input.incrementToken()) {\n        if (numSeen % 2 == 0) {\n          payAtt.setPayload(new BytesRef(payload2));\n        } else {\n          payAtt.setPayload(new BytesRef(payload4));\n        }\n        numSeen++;\n        result = true;\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"]},"commit2Childs":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}