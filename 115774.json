{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ singleDv.getOrd(doc) + 1 ]++;\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"/dev/null","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (singleDv.advanceExact(doc)) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (singleDv.advanceExact(doc)) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (singleDv.advanceExact(doc)) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (doc > singleDv.docID()) {\n        singleDv.advance(doc);\n      }\n      if (doc == singleDv.docID()) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfbc97d60c81daabe592e4b893e5a09ade63c856","date":1481126995,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    /** alternate trial implementations\n     // ord\n     // FieldUtil.visitOrds(singleDv, disi,  (doc,ord)->{counts[ord+1]++;} );\n\n    FieldUtil.OrdValues ordValues = FieldUtil.getOrdValues(singleDv, disi);\n    while (ordValues.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ ordValues.getOrd() + 1]++;\n    }\n     **/\n\n\n    // calculate segment-local counts\n    int doc;\n    if (singleDv instanceof FieldCacheImpl.SortedDocValuesImpl.Iter) {\n      FieldCacheImpl.SortedDocValuesImpl.Iter fc = (FieldCacheImpl.SortedDocValuesImpl.Iter) singleDv;\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        counts[fc.getOrd(doc) + 1]++;\n      }\n    } else {\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        if (singleDv.advanceExact(doc)) {\n          counts[singleDv.ordValue() + 1]++;\n        }\n      }\n    }\n\n    // convert segment-local counts to global counts\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (singleDv.advanceExact(doc)) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    /** alternate trial implementations\n     // ord\n     // FieldUtil.visitOrds(singleDv, disi,  (doc,ord)->{counts[ord+1]++;} );\n\n    FieldUtil.OrdValues ordValues = FieldUtil.getOrdValues(singleDv, disi);\n    while (ordValues.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ ordValues.getOrd() + 1]++;\n    }\n     **/\n\n\n    // calculate segment-local counts\n    int doc;\n    if (singleDv instanceof FieldCacheImpl.SortedDocValuesImpl.Iter) {\n      FieldCacheImpl.SortedDocValuesImpl.Iter fc = (FieldCacheImpl.SortedDocValuesImpl.Iter) singleDv;\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        counts[fc.getOrd(doc) + 1]++;\n      }\n    } else {\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        if (singleDv.advanceExact(doc)) {\n          counts[singleDv.ordValue() + 1]++;\n        }\n      }\n    }\n\n    // convert segment-local counts to global counts\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (singleDv.advanceExact(doc)) {\n        counts[ singleDv.ordValue() + 1 ]++;\n      } else {\n        counts[ 0 ]++;\n      }\n    }\n\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":5,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,SweepDISI,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collectPerSeg(SortedDocValues,DocIdSetIterator,LongValues).mjava","sourceNew":"  private void collectPerSeg(SortedDocValues singleDv, SweepDISI disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount();\n    final SegCountPerSeg segCounter = getSegCountPerSeg(disi, segMax);\n\n    /** alternate trial implementations\n     // ord\n     // FieldUtil.visitOrds(singleDv, disi,  (doc,ord)->{counts[ord+1]++;} );\n\n    FieldUtil.OrdValues ordValues = FieldUtil.getOrdValues(singleDv, disi);\n    while (ordValues.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ ordValues.getOrd() + 1]++;\n    }\n     **/\n\n\n    // calculate segment-local counts\n    int doc;\n    if (singleDv instanceof FieldCacheImpl.SortedDocValuesImpl.Iter) {\n      FieldCacheImpl.SortedDocValuesImpl.Iter fc = (FieldCacheImpl.SortedDocValuesImpl.Iter) singleDv;\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        final int segOrd = fc.getOrd(doc);\n        if (segOrd >= 0) {\n          final int maxIdx = disi.registerCounts(segCounter);\n          segCounter.incrementCount(segOrd, 1, maxIdx);\n        }\n      }\n    } else {\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        if (singleDv.advanceExact(doc)) {\n          final int segOrd = singleDv.ordValue();\n          if (segOrd >= 0) {\n            final int maxIdx = disi.registerCounts(segCounter);\n            segCounter.incrementCount(segOrd, 1, maxIdx);\n          }\n        }\n      }\n    }\n\n    // convert segment-local counts to global counts\n    segCounter.register(disi.countAccs, toGlobal, segMax - 1);\n  }\n\n","sourceOld":"  private void collectPerSeg(SortedDocValues singleDv, DocIdSetIterator disi, LongValues toGlobal) throws IOException {\n    int segMax = singleDv.getValueCount() + 1;\n    final int[] counts = getCountArr( segMax );\n\n    /** alternate trial implementations\n     // ord\n     // FieldUtil.visitOrds(singleDv, disi,  (doc,ord)->{counts[ord+1]++;} );\n\n    FieldUtil.OrdValues ordValues = FieldUtil.getOrdValues(singleDv, disi);\n    while (ordValues.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n      counts[ ordValues.getOrd() + 1]++;\n    }\n     **/\n\n\n    // calculate segment-local counts\n    int doc;\n    if (singleDv instanceof FieldCacheImpl.SortedDocValuesImpl.Iter) {\n      FieldCacheImpl.SortedDocValuesImpl.Iter fc = (FieldCacheImpl.SortedDocValuesImpl.Iter) singleDv;\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        counts[fc.getOrd(doc) + 1]++;\n      }\n    } else {\n      while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        if (singleDv.advanceExact(doc)) {\n          counts[singleDv.ordValue() + 1]++;\n        }\n      }\n    }\n\n    // convert segment-local counts to global counts\n    for (int i=1; i<segMax; i++) {\n      int segCount = counts[i];\n      if (segCount > 0) {\n        int slot = toGlobal == null ? (i - 1) : (int) toGlobal.get(i - 1);\n        countAcc.incrementCount(slot, segCount);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["bfbc97d60c81daabe592e4b893e5a09ade63c856"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["403d05f7f8d69b65659157eff1bc1d2717f04c66","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"bfbc97d60c81daabe592e4b893e5a09ade63c856":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"9856095f7afb5a607bf5e65077615ed91273508c":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","bfbc97d60c81daabe592e4b893e5a09ade63c856"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","79759974460bc59933cd169acc94f5c6b16368d5"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["9856095f7afb5a607bf5e65077615ed91273508c"],"bfbc97d60c81daabe592e4b893e5a09ade63c856":["2f9e4bd10604489b5817ee29e35ac96a3148cbec","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","bfbc97d60c81daabe592e4b893e5a09ade63c856"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}