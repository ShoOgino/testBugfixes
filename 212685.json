{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[blockSize*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asLongBuffer();      \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[BLOCK_SIZE * 4];    \n    }\n\n","sourceOld":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[blockSize*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asLongBuffer();      \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf88b0fdab72e7a3389fdd9a68ae252142c41511","date":1344435322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[MIN_ENCODED_SIZE];    \n    }\n\n","sourceOld":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[BLOCK_SIZE * 4];    \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee0d2b90b9b7c96860f9c096edae6ed8fad95388","date":1344516744,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[MAX_ENCODED_SIZE];    \n    }\n\n","sourceOld":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[MIN_ENCODED_SIZE];    \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader.BlockDocsEnum#BlockDocsEnum(FieldInfo).mjava","sourceNew":null,"sourceOld":"    public BlockDocsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPackedPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      indexHasFreq = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n      indexHasPos = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n      encoded = new byte[MAX_ENCODED_SIZE];    \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}