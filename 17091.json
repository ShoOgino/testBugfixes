{"path":"src/java/org/apache/lucene/search/Sort#toString().mjava","commits":[{"id":"3c77a770ae2a20110a601707ecf83f0bda628563","date":1081092494,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Sort#toString().mjava","pathOld":"/dev/null","sourceNew":"  public String toString() {\n    StringBuffer buffer = new StringBuffer();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i +1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f36487963175e0e854def5853fb43cd097cd9ee3","date":1094424566,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Sort#toString().mjava","pathOld":"src/java/org/apache/lucene/search/Sort#toString().mjava","sourceNew":"  public String toString() {\n    StringBuffer buffer = new StringBuffer();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString() {\n    StringBuffer buffer = new StringBuffer();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i +1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Sort#toString().mjava","pathOld":"src/java/org/apache/lucene/search/Sort#toString().mjava","sourceNew":"  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString() {\n    StringBuffer buffer = new StringBuffer();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Sort#toString().mjava","pathOld":"src/java/org/apache/lucene/search/Sort#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Sort#toString().mjava","pathOld":"src/java/org/apache/lucene/search/Sort#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n\n    for (int i = 0; i < fields.length; i++) {\n      buffer.append(fields[i].toString());\n      if ((i+1) < fields.length)\n        buffer.append(',');\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c77a770ae2a20110a601707ecf83f0bda628563":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f36487963175e0e854def5853fb43cd097cd9ee3":["3c77a770ae2a20110a601707ecf83f0bda628563"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["f36487963175e0e854def5853fb43cd097cd9ee3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"3c77a770ae2a20110a601707ecf83f0bda628563":["f36487963175e0e854def5853fb43cd097cd9ee3"],"f36487963175e0e854def5853fb43cd097cd9ee3":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c77a770ae2a20110a601707ecf83f0bda628563"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}