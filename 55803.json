{"path":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","pathOld":"solr/contrib/extraction/src/main/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","sourceNew":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","sourceOld":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","pathOld":"solr/contrib/extraction/src/main/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","sourceNew":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","sourceOld":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2524df5693acc543d4f18fc9796414df11e57358","date":1340798755,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","pathOld":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","sourceNew":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    //handle the literals from the params. NOTE: This MUST be called before the others in order for literals to override other values\n    addLiterals();\n\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","sourceOld":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","pathOld":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/SolrContentHandler#newDocument().mjava","sourceNew":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    //handle the literals from the params. NOTE: This MUST be called before the others in order for literals to override other values\n    addLiterals();\n\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","sourceOld":"  /**\n   * This is called by a consumer when it is ready to deal with a new SolrInputDocument.  Overriding\n   * classes can use this hook to add in or change whatever they deem fit for the document at that time.\n   * The base implementation adds the metadata as fields, allowing for potential remapping.\n   *\n   * @return The {@link org.apache.solr.common.SolrInputDocument}.\n   *\n   * @see #addMetadata()\n   * @see #addCapturedContent()\n   * @see #addContent()\n   * @see #addLiterals()\n   */\n  public SolrInputDocument newDocument() {\n    float boost = 1.0f;\n    //handle the metadata extracted from the document\n    addMetadata();\n\n    //handle the literals from the params\n    addLiterals();\n\n\n    //add in the content\n    addContent();\n\n    //add in the captured content\n    addCapturedContent();\n\n    if (log.isDebugEnabled()) {\n      log.debug(\"Doc: {}\", document);\n    }\n    return document;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2524df5693acc543d4f18fc9796414df11e57358":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2524df5693acc543d4f18fc9796414df11e57358"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2524df5693acc543d4f18fc9796414df11e57358"]},"commit2Childs":{"2524df5693acc543d4f18fc9796414df11e57358":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2524df5693acc543d4f18fc9796414df11e57358","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}