{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","commits":[{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call\n  public void testUploadWithLibDirective() throws Exception {\n    // Authorization off\n    unprotectConfigsHandler();\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null, null);\n    // try to create a collection with the uploaded configset\n    Throwable thrown = expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, solrCluster.getSolrClient());\n    });\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    protectConfigsHandler();\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\", \"SolrRocks\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, solrCluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    solrCluster.getSolrClient().add(\"newcollection3\", doc);\n    solrCluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", solrCluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call\n  public void testUploadWithLibDirective() throws Exception {\n    // Authorization off\n    unprotectConfigsHandler();\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null, null);\n    // try to create a collection with the uploaded configset\n    Throwable thrown = expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, solrCluster.getSolrClient());\n    });\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    protectConfigsHandler();\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\", \"SolrRocks\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, solrCluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    solrCluster.getSolrClient().add(\"newcollection3\", doc);\n    solrCluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", solrCluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","sourceNew":"  @Test\n  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call\n  public void testUploadWithLibDirective() throws Exception {\n    // Authorization off\n    unprotectConfigsHandler();\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null, null);\n    // try to create a collection with the uploaded configset\n    Throwable thrown = expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, solrCluster.getSolrClient());\n    });\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    protectConfigsHandler();\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\", \"SolrRocks\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, solrCluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    solrCluster.getSolrClient().add(\"newcollection3\", doc);\n    solrCluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", solrCluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","sourceOld":"  @Test\n  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call\n  public void testUploadWithLibDirective() throws Exception {\n    // Authorization off\n    unprotectConfigsHandler();\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null, null);\n    // try to create a collection with the uploaded configset\n    Throwable thrown = expectThrows(HttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, solrCluster.getSolrClient());\n    });\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    protectConfigsHandler();\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\", \"SolrRocks\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, solrCluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    solrCluster.getSolrClient().add(\"newcollection3\", doc);\n    solrCluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", solrCluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadWithLibDirective().mjava","sourceNew":"  @Test\n  public void testUploadWithLibDirective() throws Exception {\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null);\n    // try to create a collection with the uploaded configset\n    ignoreException(\"without any authentication in place\");\n    Throwable thrown = expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, cluster.getSolrClient());\n    });\n    unIgnoreException(\"without any authentication in place\");\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, cluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    cluster.getSolrClient().add(\"newcollection3\", doc);\n    cluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", cluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","sourceOld":"  @Test\n  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call\n  public void testUploadWithLibDirective() throws Exception {\n    // Authorization off\n    unprotectConfigsHandler();\n    final String untrustedSuffix = \"-untrusted\";\n    uploadConfigSetWithAssertions(\"with-lib-directive\", untrustedSuffix, null, null);\n    // try to create a collection with the uploaded configset\n    Throwable thrown = expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {\n      createCollection(\"newcollection3\", \"with-lib-directive\" + untrustedSuffix,\n          1, 1, solrCluster.getSolrClient());\n    });\n\n    assertThat(thrown.getMessage(), containsString(\"Underlying core creation failed\"));\n\n    // Authorization on\n    final String trustedSuffix = \"-trusted\";\n    protectConfigsHandler();\n    uploadConfigSetWithAssertions(\"with-lib-directive\", trustedSuffix, \"solr\", \"SolrRocks\");\n    // try to create a collection with the uploaded configset\n    CollectionAdminResponse resp = createCollection(\"newcollection3\", \"with-lib-directive\" + trustedSuffix,\n        1, 1, solrCluster.getSolrClient());\n    \n    SolrInputDocument doc = sdoc(\"id\", \"4055\", \"subject\", \"Solr\");\n    solrCluster.getSolrClient().add(\"newcollection3\", doc);\n    solrCluster.getSolrClient().commit(\"newcollection3\");\n    assertEquals(\"4055\", solrCluster.getSolrClient().query(\"newcollection3\",\n        params(\"q\", \"*:*\")).getResults().get(0).get(\"id\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"c7612891097d4751617c396cdd7a092833799147":["db96734b79e26d948b59f68bd4564c4836a71acf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db96734b79e26d948b59f68bd4564c4836a71acf":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7612891097d4751617c396cdd7a092833799147"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"c7612891097d4751617c396cdd7a092833799147":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"db96734b79e26d948b59f68bd4564c4836a71acf":["c7612891097d4751617c396cdd7a092833799147"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","db96734b79e26d948b59f68bd4564c4836a71acf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}