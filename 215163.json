{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","commits":[{"id":"f4924281697ed8ed3790f0f327be1fbde8160afc","date":1505151135,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    QueryCommand cmd = rb.getQueryCommand();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffb85feece8645a035c02443a625f5af15e1106b","date":1505219692,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    QueryCommand cmd = rb.getQueryCommand();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"/dev/null","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":["af8334dcf26521da965e339ff1096e0e7bcdd8c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad695b673fdb3aff9ab33d8830bd8c3060820eaf","date":1576774708,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    try {\n      searcher.search(result, cmd);\n    } catch (FuzzyTermsEnum.FuzzyTermsException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    try {\n      searcher.search(result, cmd);\n    } catch (FuzzyTermsEnum.FuzzyTermsException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92ebaade309baf9560fb8102d941bd5d8534a825","date":1579168338,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    try {\n      searcher.search(result, cmd);\n    } catch (FuzzyTermsEnum.FuzzyTermsException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":null,"bugIntro":["79788042790c9ded974d85e96aae1b2b3f0ca735"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"79788042790c9ded974d85e96aae1b2b3f0ca735","date":1588891768,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent#doProcessUngroupedSearch(ResponseBuilder,QueryCommand,QueryResult).mjava","sourceNew":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n\n    try {\n      searcher.search(result, cmd);\n    } catch (FuzzyTermsEnum.FuzzyTermsException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n    }\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","sourceOld":"  private void doProcessUngroupedSearch(ResponseBuilder rb, QueryCommand cmd, QueryResult result) throws IOException {\n\n    SolrQueryRequest req = rb.req;\n    SolrQueryResponse rsp = rb.rsp;\n\n    SolrIndexSearcher searcher = req.getSearcher();\n    searcher.search(result, cmd);\n    rb.setResult(result);\n\n    ResultContext ctx = new BasicResultContext(rb);\n    rsp.addResponse(ctx);\n    rsp.getToLog().add(\"hits\", rb.getResults()==null || rb.getResults().docList==null ? 0 : rb.getResults().docList.matches());\n\n    if ( ! rb.req.getParams().getBool(ShardParams.IS_SHARD,false) ) {\n      if (null != rb.getNextCursorMark()) {\n        rb.rsp.add(CursorMarkParams.CURSOR_MARK_NEXT,\n                   rb.getNextCursorMark().getSerializedTotem());\n      }\n    }\n\n    if(rb.mergeFieldHandler != null) {\n      rb.mergeFieldHandler.handleMergeFields(rb, searcher);\n    } else {\n      doFieldSortValues(rb, searcher);\n    }\n\n    doPrefetch(rb);\n  }\n\n","bugFix":["92ebaade309baf9560fb8102d941bd5d8534a825"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad695b673fdb3aff9ab33d8830bd8c3060820eaf":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ffb85feece8645a035c02443a625f5af15e1106b"],"ffb85feece8645a035c02443a625f5af15e1106b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4924281697ed8ed3790f0f327be1fbde8160afc"],"79788042790c9ded974d85e96aae1b2b3f0ca735":["92ebaade309baf9560fb8102d941bd5d8534a825"],"f4924281697ed8ed3790f0f327be1fbde8160afc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["ffb85feece8645a035c02443a625f5af15e1106b"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["a3584d3db8b472772e3329d9d95d584b68ae997e","ad695b673fdb3aff9ab33d8830bd8c3060820eaf"],"92ebaade309baf9560fb8102d941bd5d8534a825":["ad695b673fdb3aff9ab33d8830bd8c3060820eaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79788042790c9ded974d85e96aae1b2b3f0ca735"]},"commit2Childs":{"ad695b673fdb3aff9ab33d8830bd8c3060820eaf":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","92ebaade309baf9560fb8102d941bd5d8534a825"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"ffb85feece8645a035c02443a625f5af15e1106b":["685bd38810c206c93e9058f3c2cfa9827c086c27","a3584d3db8b472772e3329d9d95d584b68ae997e"],"f4924281697ed8ed3790f0f327be1fbde8160afc":["ffb85feece8645a035c02443a625f5af15e1106b"],"79788042790c9ded974d85e96aae1b2b3f0ca735":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["685bd38810c206c93e9058f3c2cfa9827c086c27","ffb85feece8645a035c02443a625f5af15e1106b","f4924281697ed8ed3790f0f327be1fbde8160afc"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["ad695b673fdb3aff9ab33d8830bd8c3060820eaf","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"92ebaade309baf9560fb8102d941bd5d8534a825":["79788042790c9ded974d85e96aae1b2b3f0ca735"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}