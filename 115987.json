{"path":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#testEmptyInputNIO().mjava","commits":[{"id":"fb6255bc49ccd64debd0b43ca8d2f835df0faa07","date":1262510560,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#testEmptyInputNIO().mjava","pathOld":"/dev/null","sourceNew":"  /** @deprecated remove this test for Lucene 4.0 */\n  @Deprecated\n  public void testEmptyInputNIO() {\n    byte[] binary = new byte[0];\n    CharBuffer encoded = IndexableBinaryStringTools.encode(ByteBuffer.wrap(binary));\n    ByteBuffer decoded = IndexableBinaryStringTools.decode(encoded);\n    assertNotNull(\"decode() returned null\", decoded);\n    assertEquals(\"decoded empty input was not empty\", decoded.limit(), 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#testEmptyInputNIO().mjava","pathOld":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#testEmptyInputNIO().mjava","sourceNew":"  /** @deprecated remove this test for Lucene 4.0 */\n  @Deprecated\n  public void testEmptyInputNIO() {\n    byte[] binary = new byte[0];\n    CharBuffer encoded = IndexableBinaryStringTools.encode(ByteBuffer.wrap(binary));\n    ByteBuffer decoded = IndexableBinaryStringTools.decode(encoded);\n    assertNotNull(\"decode() returned null\", decoded);\n    assertEquals(\"decoded empty input was not empty\", decoded.limit(), 0);\n  }\n\n","sourceOld":"  /** @deprecated remove this test for Lucene 4.0 */\n  @Deprecated\n  public void testEmptyInputNIO() {\n    byte[] binary = new byte[0];\n    CharBuffer encoded = IndexableBinaryStringTools.encode(ByteBuffer.wrap(binary));\n    ByteBuffer decoded = IndexableBinaryStringTools.decode(encoded);\n    assertNotNull(\"decode() returned null\", decoded);\n    assertEquals(\"decoded empty input was not empty\", decoded.limit(), 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb6255bc49ccd64debd0b43ca8d2f835df0faa07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb6255bc49ccd64debd0b43ca8d2f835df0faa07"]},"commit2Childs":{"fb6255bc49ccd64debd0b43ca8d2f835df0faa07":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb6255bc49ccd64debd0b43ca8d2f835df0faa07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}