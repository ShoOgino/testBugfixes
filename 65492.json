{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsForTerms(BytesRef[],Terms,int,List[OffsetsEnum]).mjava","commits":[{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsForTerms(BytesRef[],Terms,int,List[OffsetsEnum]).mjava","pathOld":"/dev/null","sourceNew":"  protected void createOffsetsEnumsForTerms(BytesRef[] sourceTerms, Terms termsIndex, int doc, List<OffsetsEnum> results) throws IOException {\n    TermsEnum termsEnum = termsIndex.iterator();//does not return null\n    for (BytesRef term : sourceTerms) {\n      if (termsEnum.seekExact(term)) {\n        PostingsEnum postingsEnum = termsEnum.postings(null, PostingsEnum.OFFSETS);\n        if (postingsEnum == null) {\n          // no offsets or positions available\n          throw new IllegalArgumentException(\"field '\" + field + \"' was indexed without offsets, cannot highlight\");\n        }\n        if (doc == postingsEnum.advance(doc)) { // now it's positioned, although may be exhausted\n          results.add(new OffsetsEnum.OfPostings(term, postingsEnum));\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsForTerms(BytesRef[],Terms,int,List[OffsetsEnum]).mjava","pathOld":"/dev/null","sourceNew":"  protected void createOffsetsEnumsForTerms(BytesRef[] sourceTerms, Terms termsIndex, int doc, List<OffsetsEnum> results) throws IOException {\n    TermsEnum termsEnum = termsIndex.iterator();//does not return null\n    for (BytesRef term : sourceTerms) {\n      if (termsEnum.seekExact(term)) {\n        PostingsEnum postingsEnum = termsEnum.postings(null, PostingsEnum.OFFSETS);\n        if (postingsEnum == null) {\n          // no offsets or positions available\n          throw new IllegalArgumentException(\"field '\" + field + \"' was indexed without offsets, cannot highlight\");\n        }\n        if (doc == postingsEnum.advance(doc)) { // now it's positioned, although may be exhausted\n          results.add(new OffsetsEnum.OfPostings(term, postingsEnum));\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsForTerms(BytesRef[],Terms,int,List[OffsetsEnum]).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldOffsetStrategy#createOffsetsEnumsForTerms(BytesRef[],Terms,int,List[OffsetsEnum]).mjava","sourceNew":"  protected void createOffsetsEnumsForTerms(BytesRef[] sourceTerms, Terms termsIndex, int doc, List<OffsetsEnum> results) throws IOException {\n    TermsEnum termsEnum = termsIndex.iterator();//does not return null\n    for (BytesRef term : sourceTerms) {\n      if (termsEnum.seekExact(term)) {\n        PostingsEnum postingsEnum = termsEnum.postings(null, PostingsEnum.OFFSETS);\n        if (postingsEnum == null) {\n          // no offsets or positions available\n          throw new IllegalArgumentException(\"field '\" + getField() + \"' was indexed without offsets, cannot highlight\");\n        }\n        if (doc == postingsEnum.advance(doc)) { // now it's positioned, although may be exhausted\n          results.add(new OffsetsEnum.OfPostings(term, postingsEnum));\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void createOffsetsEnumsForTerms(BytesRef[] sourceTerms, Terms termsIndex, int doc, List<OffsetsEnum> results) throws IOException {\n    TermsEnum termsEnum = termsIndex.iterator();//does not return null\n    for (BytesRef term : sourceTerms) {\n      if (termsEnum.seekExact(term)) {\n        PostingsEnum postingsEnum = termsEnum.postings(null, PostingsEnum.OFFSETS);\n        if (postingsEnum == null) {\n          // no offsets or positions available\n          throw new IllegalArgumentException(\"field '\" + field + \"' was indexed without offsets, cannot highlight\");\n        }\n        if (doc == postingsEnum.advance(doc)) { // now it's positioned, although may be exhausted\n          results.add(new OffsetsEnum.OfPostings(term, postingsEnum));\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}