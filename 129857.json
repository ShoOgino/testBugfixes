{"path":"lucene/core/src/test/org/apache/lucene/search/TestMaxClauseLimit#testLargeDisjunctionMaxQuery().mjava","commits":[{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMaxClauseLimit#testLargeDisjunctionMaxQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testLargeDisjunctionMaxQuery() throws IOException {\n    IndexSearcher searcher = newSearcher(new MultiReader());\n    Query[] clausesQueryArray = new Query[1050];\n\n    for(int i = 0; i < 1049; i++) {\n      clausesQueryArray[i] = new TermQuery(new Term(\"field\", \"a\"));\n    }\n\n    PhraseQuery pq = new PhraseQuery(\"field\", new String[0]);\n\n    clausesQueryArray[1049] = pq;\n\n    DisjunctionMaxQuery dmq = new DisjunctionMaxQuery(\n        Arrays.asList(clausesQueryArray),\n        0.5f);\n\n    expectThrows(IndexSearcher.TooManyClauses.class, () -> {\n      searcher.rewrite(dmq);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}