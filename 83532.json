{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#applyUpdatesToManagedData(Object).mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Object applyUpdatesToManagedData(Object updates) {\n    if (updates instanceof List) {\n      final List<Map<String,Object>> up = (List<Map<String,Object>>) updates;\n      for (final Map<String,Object> u : up) {\n        final String featureStore = (String) u.get(FEATURE_STORE_NAME_KEY);\n        addFeature(u, featureStore);\n      }\n    }\n\n    if (updates instanceof Map) {\n      // a unique feature\n      Map<String,Object> updatesMap = (Map<String,Object>) updates;\n      final String featureStore = (String) updatesMap.get(FEATURE_STORE_NAME_KEY);\n      addFeature(updatesMap, featureStore);\n    }\n\n    final List<Object> features = new ArrayList<>();\n    for (final FeatureStore fs : stores.values()) {\n      features.addAll(featuresAsManagedResources(fs));\n    }\n    return features;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore#applyUpdatesToManagedData(Object).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Object applyUpdatesToManagedData(Object updates) {\n    if (updates instanceof List) {\n      final List<Map<String,Object>> up = (List<Map<String,Object>>) updates;\n      for (final Map<String,Object> u : up) {\n        final String featureStore = (String) u.get(FEATURE_STORE_NAME_KEY);\n        addFeature(u, featureStore);\n      }\n    }\n\n    if (updates instanceof Map) {\n      // a unique feature\n      Map<String,Object> updatesMap = (Map<String,Object>) updates;\n      final String featureStore = (String) updatesMap.get(FEATURE_STORE_NAME_KEY);\n      addFeature(updatesMap, featureStore);\n    }\n\n    final List<Object> features = new ArrayList<>();\n    for (final FeatureStore fs : stores.values()) {\n      features.addAll(featuresAsManagedResources(fs));\n    }\n    return features;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}