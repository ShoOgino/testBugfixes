{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess, Collections.EMPTY_MAP,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"33c5df47ecbf734182bdfec8f59154a8dbecc2e3","date":1226037101,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess, Collections.EMPTY_MAP,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4dcc747031c8c65e505d3ed59e647cf9209985e","date":1233909487,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da10e2375d3cb7e7ad6f6d630e0ccc310e0a1f14","date":1233950568,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n\n      public Map<String, Object> getStats() {\n        return delegate.getStats();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cda565f1dbc96f12de5c399b6d48418f0e79be5","date":1236799070,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static Context getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new Context() {\n      public String getEntityAttribute(String name) {\n        return entityAttrs == null ? delegate.getEntityAttribute(name)\n                : entityAttrs.get(name);\n      }\n\n      public List<Map<String, String>> getAllEntityFields() {\n        return entityFields == null ? delegate.getAllEntityFields()\n                : entityFields;\n      }\n\n      public VariableResolver getVariableResolver() {\n        return delegate.getVariableResolver();\n      }\n\n      public DataSource getDataSource() {\n        return delegate.getDataSource();\n      }\n\n      public boolean isRootEntity() {\n        return false;\n      }\n\n      public int currentProcess() {\n        return delegate.currentProcess();\n      }\n\n      public Map<String, Object> getRequestParameters() {\n        return delegate.getRequestParameters();\n      }\n\n      public EntityProcessor getEntityProcessor() {\n        return null;\n      }\n\n      public void setSessionAttribute(String name, Object val, String scope) {\n        delegate.setSessionAttribute(name, val, scope);\n      }\n\n      public Object getSessionAttribute(String name, String scope) {\n        return delegate.getSessionAttribute(name, scope);\n      }\n\n      public Context getParentContext() {\n        return delegate.getParentContext();\n      }\n\n      public DataSource getDataSource(String name) {\n        return delegate.getDataSource(name);\n      }\n\n      public SolrCore getSolrCore() {\n        return delegate.getSolrCore();\n      }\n\n      public Map<String, Object> getStats() {\n        return delegate.getStats();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,String,List[Map[String,String]],Map[String,String]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/AbstractDataImportHandlerTest#getContext(DataConfig.Entity,VariableResolverImpl,DataSource,int,List[Map[String,String]],Map[String,String]).mjava","sourceNew":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   String currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields);\n  }\n\n","sourceOld":"  /**\n   * Helper for creating a Context instance. Useful for testing Transformers\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static TestContext getContext(DataConfig.Entity parentEntity,\n                                   VariableResolverImpl resolver, DataSource parentDataSource,\n                                   int currProcess, final List<Map<String, String>> entityFields,\n                                   final Map<String, String> entityAttrs) {\n    if (resolver == null) resolver = new VariableResolverImpl();\n    final Context delegate = new ContextImpl(parentEntity, resolver,\n            parentDataSource, currProcess,\n            new HashMap<String, Object>(), null, null);\n    return new TestContext(entityAttrs, delegate, entityFields);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1cda565f1dbc96f12de5c399b6d48418f0e79be5":["da10e2375d3cb7e7ad6f6d630e0ccc310e0a1f14"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d4dcc747031c8c65e505d3ed59e647cf9209985e":["33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"33c5df47ecbf734182bdfec8f59154a8dbecc2e3":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"da10e2375d3cb7e7ad6f6d630e0ccc310e0a1f14":["d4dcc747031c8c65e505d3ed59e647cf9209985e"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["1cda565f1dbc96f12de5c399b6d48418f0e79be5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1cda565f1dbc96f12de5c399b6d48418f0e79be5":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"d4dcc747031c8c65e505d3ed59e647cf9209985e":["da10e2375d3cb7e7ad6f6d630e0ccc310e0a1f14"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33c5df47ecbf734182bdfec8f59154a8dbecc2e3":["d4dcc747031c8c65e505d3ed59e647cf9209985e"],"da10e2375d3cb7e7ad6f6d630e0ccc310e0a1f14":["1cda565f1dbc96f12de5c399b6d48418f0e79be5"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}