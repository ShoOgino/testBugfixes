{"path":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","commits":[{"id":"ce13e934d6cfdcc82d51e85de460cf9790e97566","date":1563877281,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription(int,int).mjava","sourceNew":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getSizeLimit() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription(int limit, int initialSize) {\n    String description = \"LRU Cache(maxSize=\" + limit + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (maxRamBytes != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (maxRamBytes / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e33a2e75ecee8b06fba2bd570c0fb9273962bc7","date":1565791119,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getSizeLimit() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83","date":1568645407,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","sourceOld":"  /**\n   * \n   * @return Returns the description of this cache. \n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/LRUCache#generateDescription().mjava","sourceNew":null,"sourceOld":"  /**\n   *\n   * @return Returns the description of this cache.\n   */\n  private String generateDescription() {\n    String description = \"LRU Cache(maxSize=\" + getMaxSize() + \", initialSize=\" + initialSize;\n    if (isAutowarmingOn()) {\n      description += \", \" + getAutowarmDescription();\n    }\n    if (getMaxRamBytes() != Long.MAX_VALUE)  {\n      description += \", maxRamMB=\" + (getMaxRamBytes() / 1024L / 1024L);\n    }\n    if (maxIdleTimeNs != Long.MAX_VALUE) {\n      description += \", \" + MAX_IDLE_TIME_PARAM + \"=\" + TimeUnit.SECONDS.convert(maxIdleTimeNs, TimeUnit.NANOSECONDS);\n    }\n    description += ')';\n    return description;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["c44cc06c26e456fe9c215072b79fce30babe3975"],"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83":["a117d95183986014a31f25bb04e5464ca06d6068"],"4d7d3943904804560937e6239effeebda0f920e4":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83"],"a117d95183986014a31f25bb04e5464ca06d6068":["0e33a2e75ecee8b06fba2bd570c0fb9273962bc7"],"ce13e934d6cfdcc82d51e85de460cf9790e97566":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e33a2e75ecee8b06fba2bd570c0fb9273962bc7":["ce13e934d6cfdcc82d51e85de460cf9790e97566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["4d7d3943904804560937e6239effeebda0f920e4"],"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce13e934d6cfdcc82d51e85de460cf9790e97566"],"c44cc06c26e456fe9c215072b79fce30babe3975":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","b0b597c65628ca9e73913a07e81691f8229bae35"],"a117d95183986014a31f25bb04e5464ca06d6068":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83"],"ce13e934d6cfdcc82d51e85de460cf9790e97566":["0e33a2e75ecee8b06fba2bd570c0fb9273962bc7"],"0e33a2e75ecee8b06fba2bd570c0fb9273962bc7":["a117d95183986014a31f25bb04e5464ca06d6068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}