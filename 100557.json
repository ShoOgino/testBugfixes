{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","commits":[{"id":"b11b097f011a298f1a54676482032c2b261e26f3","date":1411698138,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getNextDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    if (liveDocs.length() != info.info.getDocCount()) {\n      throw new CorruptIndexException(\"liveDocs.length()=\" + liveDocs.length() + \"info.docCount=\" + info.info.getDocCount(), filename);\n    }\n    if (liveDocs.count() != info.info.getDocCount() - info.getDelCount() - newDelCount) {\n      throw new CorruptIndexException(\"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" newDelCount=\" + newDelCount, filename);\n    }\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getNextDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    if (liveDocs.length() != info.info.getDocCount()) {\n      throw new CorruptIndexException(\"liveDocs.length()=\" + liveDocs.length() + \"info.docCount=\" + info.info.getDocCount(), filename);\n    }\n    if (liveDocs.count() != info.info.getDocCount() - info.getDelCount() - newDelCount) {\n      throw new CorruptIndexException(\"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" newDelCount=\" + newDelCount, filename);\n    }\n    liveDocs.write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","sourceNew":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getNextDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    if (liveDocs.length() != info.info.getDocCount()) {\n      throw new CorruptIndexException(\"liveDocs.length()=\" + liveDocs.length() + \"info.docCount=\" + info.info.getDocCount(), filename);\n    }\n    if (liveDocs.count() != info.info.getDocCount() - info.getDelCount() - newDelCount) {\n      throw new CorruptIndexException(\"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" newDelCount=\" + newDelCount, filename);\n    }\n    liveDocs.write(dir, filename, context);\n  }\n\n","sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getNextDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    assert liveDocs.count() == info.info.getDocCount() - info.getDelCount() - newDelCount;\n    assert liveDocs.length() == info.info.getDocCount();\n    liveDocs.write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#writeLiveDocs(MutableBits,Directory,SegmentCommitInfo,int,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeLiveDocs(MutableBits bits, Directory dir, SegmentCommitInfo info, int newDelCount, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getNextDelGen());\n    final BitVector liveDocs = (BitVector) bits;\n    if (liveDocs.length() != info.info.getDocCount()) {\n      throw new CorruptIndexException(\"liveDocs.length()=\" + liveDocs.length() + \"info.docCount=\" + info.info.getDocCount(), filename);\n    }\n    if (liveDocs.count() != info.info.getDocCount() - info.getDelCount() - newDelCount) {\n      throw new CorruptIndexException(\"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" newDelCount=\" + newDelCount, filename);\n    }\n    liveDocs.write(dir, filename, context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b11b097f011a298f1a54676482032c2b261e26f3"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"b11b097f011a298f1a54676482032c2b261e26f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f6bd27530a2846413fe2d00030493c0e2d3a072","b11b097f011a298f1a54676482032c2b261e26f3"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"b11b097f011a298f1a54676482032c2b261e26f3":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}