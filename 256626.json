{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Condition#delta(Object).mjava","commits":[{"id":"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb","date":1533364463,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Condition#delta(Object).mjava","pathOld":"/dev/null","sourceNew":"  public Double delta(Object val) {\n    if (val instanceof ReplicaCount) val = ((ReplicaCount) val).getVal(getClause().type);\n    if (this.val instanceof String) {\n      if (op == LESS_THAN || op == GREATER_THAN) {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().tag)\n            .delta(Clause.parseDouble(name, this.val), Clause.parseDouble(name, val));\n      } else {\n        return 0d;\n      }\n    } else {\n      if (this == getClause().getReplica()) {\n        Double delta = op.delta(this.val, val);\n        return getClause().isReplicaZero() ? -1 * delta : delta;\n      } else {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().getTag())\n            .delta(this.val, val);\n      }\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee5183ac042828ef74f90f0874eaba7daeb409bd","date":1536546264,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Condition#delta(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Condition#delta(Object).mjava","sourceNew":"  public Double delta(Object val) {\n    if (this.val instanceof String) {\n      if (op == LESS_THAN || op == GREATER_THAN) {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().tag)\n            .delta(Clause.parseDouble(name, this.val), Clause.parseDouble(name, val));\n      } else {\n        return 0d;\n      }\n    } else {\n      return op\n          .opposite(getClause().isReplicaZero() && this == getClause().getTag())\n          .delta(this.val, val);\n    }\n  }\n\n","sourceOld":"  public Double delta(Object val) {\n    if (val instanceof ReplicaCount) val = ((ReplicaCount) val).getVal(getClause().type);\n    if (this.val instanceof String) {\n      if (op == LESS_THAN || op == GREATER_THAN) {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().tag)\n            .delta(Clause.parseDouble(name, this.val), Clause.parseDouble(name, val));\n      } else {\n        return 0d;\n      }\n    } else {\n      if (this == getClause().getReplica()) {\n        Double delta = op.delta(this.val, val);\n        return getClause().isReplicaZero() ? -1 * delta : delta;\n      } else {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().getTag())\n            .delta(this.val, val);\n      }\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Condition#delta(Object).mjava","sourceNew":null,"sourceOld":"  public Double delta(Object val) {\n    if (this.val instanceof String) {\n      if (op == LESS_THAN || op == GREATER_THAN) {\n        return op\n            .opposite(getClause().isReplicaZero() && this == getClause().tag)\n            .delta(Clause.parseDouble(name, this.val), Clause.parseDouble(name, val));\n      } else {\n        return 0d;\n      }\n    } else {\n      return op\n          .opposite(getClause().isReplicaZero() && this == getClause().getTag())\n          .delta(this.val, val);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["3f504512a03d978990cbff30db0522b354e846db"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}