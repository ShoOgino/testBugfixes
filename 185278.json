{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","commits":[{"id":"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","date":1352818449,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","sourceNew":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","sourceOld":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","sourceNew":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","sourceOld":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","sourceNew":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n    CodecUtil.writeFooter(fieldsIndexOut);\n  }\n\n","sourceOld":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","sourceNew":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n    CodecUtil.writeFooter(fieldsIndexOut);\n  }\n\n","sourceOld":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a88f37cd0154833b5c58daac509eb8be347d0f2","date":1397029487,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexWriter#finish(int).mjava","sourceNew":"  void finish(int numDocs, long maxPointer) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n    fieldsIndexOut.writeVLong(maxPointer);\n    CodecUtil.writeFooter(fieldsIndexOut);\n  }\n\n","sourceOld":"  void finish(int numDocs) throws IOException {\n    if (numDocs != totalDocs) {\n      throw new IllegalStateException(\"Expected \" + numDocs + \" docs, but got \" + totalDocs);\n    }\n    if (blockChunks > 0) {\n      writeBlock();\n    }\n    fieldsIndexOut.writeVInt(0); // end marker\n    CodecUtil.writeFooter(fieldsIndexOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"3a88f37cd0154833b5c58daac509eb8be347d0f2":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a88f37cd0154833b5c58daac509eb8be347d0f2"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","3a88f37cd0154833b5c58daac509eb8be347d0f2"],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3a88f37cd0154833b5c58daac509eb8be347d0f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}