{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#parseStemException(String).mjava","commits":[{"id":"5916de6e2f6deb9da923b2710f6451668e94a20c","date":1403356557,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#parseStemException(String).mjava","pathOld":"/dev/null","sourceNew":"  private String parseStemException(String morphData) {\n    // first see if its an alias\n    if (morphAliasCount > 0) {\n      try {\n        int alias = Integer.parseInt(morphData.trim());\n        morphData = morphAliases[alias-1];\n      } catch (NumberFormatException e) {  \n        // fine\n      }\n    }\n    // try to parse morph entry\n    int index = morphData.indexOf(\" st:\");\n    if (index < 0) {\n      index = morphData.indexOf(\"\\tst:\");\n    }\n    if (index >= 0) {\n      int endIndex = indexOfSpaceOrTab(morphData, index+1);\n      if (endIndex < 0) {\n        endIndex = morphData.length();\n      }\n      return morphData.substring(index+4, endIndex);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#parseStemException(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#parseStemException(String).mjava","sourceNew":"  private String parseStemException(String morphData) {\n    // first see if it's an alias\n    if (morphAliasCount > 0) {\n      try {\n        int alias = Integer.parseInt(morphData.trim());\n        morphData = morphAliases[alias-1];\n      } catch (NumberFormatException e) {  \n        // fine\n      }\n    }\n    // try to parse morph entry\n    int index = morphData.indexOf(\" st:\");\n    if (index < 0) {\n      index = morphData.indexOf(\"\\tst:\");\n    }\n    if (index >= 0) {\n      int endIndex = indexOfSpaceOrTab(morphData, index+1);\n      if (endIndex < 0) {\n        endIndex = morphData.length();\n      }\n      return morphData.substring(index+4, endIndex);\n    }\n    return null;\n  }\n\n","sourceOld":"  private String parseStemException(String morphData) {\n    // first see if its an alias\n    if (morphAliasCount > 0) {\n      try {\n        int alias = Integer.parseInt(morphData.trim());\n        morphData = morphAliases[alias-1];\n      } catch (NumberFormatException e) {  \n        // fine\n      }\n    }\n    // try to parse morph entry\n    int index = morphData.indexOf(\" st:\");\n    if (index < 0) {\n      index = morphData.indexOf(\"\\tst:\");\n    }\n    if (index >= 0) {\n      int endIndex = indexOfSpaceOrTab(morphData, index+1);\n      if (endIndex < 0) {\n        endIndex = morphData.length();\n      }\n      return morphData.substring(index+4, endIndex);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["5916de6e2f6deb9da923b2710f6451668e94a20c"],"5916de6e2f6deb9da923b2710f6451668e94a20c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5916de6e2f6deb9da923b2710f6451668e94a20c":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5916de6e2f6deb9da923b2710f6451668e94a20c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}