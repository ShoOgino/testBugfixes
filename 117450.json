{"path":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6caa0b9d023d447590aa7470d671d277a336508f","date":1280761482,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"188e4c89a674435eaa373e0a911fb5f65a278214","date":1280850307,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase Highlighter appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(getFormatter(fieldName, params), getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getPhraseHighlighter(Query,String,SolrQueryRequest,CachingTokenFilter).mjava","sourceNew":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","sourceOld":"  /**\n   * Return a phrase {@link org.apache.lucene.search.highlight.Highlighter} appropriate for this field.\n   * @param query The current Query\n   * @param fieldName The name of the field\n   * @param request The current SolrQueryRequest\n   * @param tokenStream document text CachingTokenStream\n   * @throws IOException \n   */\n  protected Highlighter getPhraseHighlighter(Query query, String fieldName, SolrQueryRequest request, CachingTokenFilter tokenStream) throws IOException {\n    SolrParams params = request.getParams();\n    Highlighter highlighter = null;\n    \n    highlighter = new Highlighter(\n        getFormatter(fieldName, params),\n        getEncoder(fieldName, params),\n        getSpanQueryScorer(query, fieldName, tokenStream, request));\n    \n    highlighter.setTextFragmenter(getFragmenter(fieldName, params));\n\n    return highlighter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"188e4c89a674435eaa373e0a911fb5f65a278214":["6caa0b9d023d447590aa7470d671d277a336508f"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"6caa0b9d023d447590aa7470d671d277a336508f":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["188e4c89a674435eaa373e0a911fb5f65a278214","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","188e4c89a674435eaa373e0a911fb5f65a278214"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["188e4c89a674435eaa373e0a911fb5f65a278214"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["188e4c89a674435eaa373e0a911fb5f65a278214"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"188e4c89a674435eaa373e0a911fb5f65a278214":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"6caa0b9d023d447590aa7470d671d277a336508f":["188e4c89a674435eaa373e0a911fb5f65a278214"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["6caa0b9d023d447590aa7470d671d277a336508f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}