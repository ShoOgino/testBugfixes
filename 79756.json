{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters LowerCaseTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new LowerCaseTokenizer(TEST_VERSION_CURRENT, reader));\n    }\n\n","sourceOld":"    /** Filters LowerCaseTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new LowerCaseTokenizer(TEST_VERSION_CURRENT, reader));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edb20114e86ec883b0b08bd624eee852c565c06","date":1273941247,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockAnalyzer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters LowerCaseTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new LowerCaseTokenizer(TEST_VERSION_CURRENT, reader));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ade882efb2f2235dafb176284c1e35dbdb1c126","date":1274043418,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockAnalyzer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecaea79e307d83311c31273b0ea89b9fdb0c5a32","date":1287584790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","sourceOld":"    /** Filters MockTokenizer with StopFilter. */\n    @Override\n    public final TokenStream tokenStream(String fieldName, Reader reader) {\n      return new QPTestFilter(new MockTokenizer(reader, MockTokenizer.SIMPLE, true));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"7edb20114e86ec883b0b08bd624eee852c565c06":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["2ade882efb2f2235dafb176284c1e35dbdb1c126"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["8017ab6544f30f93b106e419e7298173bad77f69","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8017ab6544f30f93b106e419e7298173bad77f69":["2ade882efb2f2235dafb176284c1e35dbdb1c126","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["2ade882efb2f2235dafb176284c1e35dbdb1c126","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"2ade882efb2f2235dafb176284c1e35dbdb1c126":["7edb20114e86ec883b0b08bd624eee852c565c06"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"7edb20114e86ec883b0b08bd624eee852c565c06":["2ade882efb2f2235dafb176284c1e35dbdb1c126"],"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["7edb20114e86ec883b0b08bd624eee852c565c06"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"8017ab6544f30f93b106e419e7298173bad77f69":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"2ade882efb2f2235dafb176284c1e35dbdb1c126":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}