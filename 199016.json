{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","commits":[{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void sumOfSquaresFacetAscTest() throws Exception {\n    //Int Date\n    Collection<Double> intDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"int\");\n    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intDate,intDateTest);\n    //Int String\n    Collection<Double> intString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"int\");\n    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intString,intStringTest);\n\n    //Long Date\n    Collection<Double> longDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"long\");\n    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longDate,longDateTest);\n    //Long String\n    Collection<Double> longString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"long\");\n    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longString,longStringTest);\n\n    //Float Date\n    Collection<Double> floatDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"float\");\n    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatDate,floatDateTest);\n    //Float String\n    Collection<Double> floatString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"float\");\n    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatString,floatStringTest);\n\n    //Double Date\n    Collection<Double> doubleDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"double\");\n    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleDate,doubleDateTest);\n    //Double String\n    Collection<Double> doubleString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"double\");\n    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleString,doubleStringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void sumOfSquaresFacetAscTest() throws Exception {\n    //Int Date\n    Collection<Double> intDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"int\");\n    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intDate,intDateTest);\n    //Int String\n    Collection<Double> intString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"int\");\n    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intString,intStringTest);\n\n    //Long Date\n    Collection<Double> longDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"long\");\n    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longDate,longDateTest);\n    //Long String\n    Collection<Double> longString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"long\");\n    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longString,longStringTest);\n\n    //Float Date\n    Collection<Double> floatDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"float\");\n    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatDate,floatDateTest);\n    //Float String\n    Collection<Double> floatString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"float\");\n    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatString,floatStringTest);\n\n    //Double Date\n    Collection<Double> doubleDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"double\");\n    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleDate,doubleDateTest);\n    //Double String\n    Collection<Double> doubleString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"double\");\n    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleString,doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":4,"author":"Dennis Gove","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void sumOfSquaresFacetAscTest() throws Exception {\n    //Int Date\n    Collection<Double> intDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"int\");\n    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intDate,intDateTest);\n    //Int String\n    Collection<Double> intString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"int\");\n    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intString,intStringTest);\n\n    //Long Date\n    Collection<Double> longDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"long\");\n    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longDate,longDateTest);\n    //Long String\n    Collection<Double> longString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"long\");\n    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longString,longStringTest);\n\n    //Float Date\n    Collection<Double> floatDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"float\");\n    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatDate,floatDateTest);\n    //Float String\n    Collection<Double> floatString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"float\");\n    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatString,floatStringTest);\n\n    //Double Date\n    Collection<Double> doubleDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"double\");\n    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleDate,doubleDateTest);\n    //Double String\n    Collection<Double> doubleString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"double\");\n    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleString,doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void sumOfSquaresFacetAscTest() throws Exception {\n    //Int Date\n    Collection<Double> intDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"int\");\n    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intDate,intDateTest);\n    //Int String\n    Collection<Double> intString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"int\");\n    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intString,intStringTest);\n\n    //Long Date\n    Collection<Double> longDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"long\");\n    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longDate,longDateTest);\n    //Long String\n    Collection<Double> longString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"long\");\n    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longString,longStringTest);\n\n    //Float Date\n    Collection<Double> floatDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"float\");\n    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatDate,floatDateTest);\n    //Float String\n    Collection<Double> floatString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"float\");\n    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatString,floatStringTest);\n\n    //Double Date\n    Collection<Double> doubleDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"double\");\n    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleDate,doubleDateTest);\n    //Double String\n    Collection<Double> doubleString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"double\");\n    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleString,doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#sumOfSquaresFacetAscTest().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void sumOfSquaresFacetAscTest() throws Exception {\n    //Int Date\n    Collection<Double> intDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"int\");\n    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intDate,intDateTest);\n    //Int String\n    Collection<Double> intString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"int\");\n    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),intString,intStringTest);\n\n    //Long Date\n    Collection<Double> longDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"long\");\n    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longDate,longDateTest);\n    //Long String\n    Collection<Double> longString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"long\");\n    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),longString,longStringTest);\n\n    //Float Date\n    Collection<Double> floatDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"float\");\n    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatDate,floatDateTest);\n    //Float String\n    Collection<Double> floatString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"float\");\n    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),floatString,floatStringTest);\n\n    //Double Date\n    Collection<Double> doubleDate = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"date_dtd\", \"double\", \"double\");\n    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleDate,doubleDateTest);\n    //Double String\n    Collection<Double> doubleString = getDoubleList(\"sumOfSquares\",\"fieldFacets\", \"string_sd\", \"double\", \"double\");\n    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(),doubleString,doubleStringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["0f719faa74f7213d4a395510dbc1f1b7cb178484","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["0f719faa74f7213d4a395510dbc1f1b7cb178484","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}