{"path":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","commits":[{"id":"a7035935aa89f6951286e9005cbeb16e89a082a2","date":1385258396,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"/dev/null","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager();\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3b5b498d43389225e9bea27630b5d0d55abba2f3","21e7fac07e3482a822efc9cd803d32c7194004b1","1491861ccc4b32acaaafd00c1b50fb7babb02475","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"/dev/null","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager();\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5b498d43389225e9bea27630b5d0d55abba2f3","date":1392683458,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager();\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager();\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21e7fac07e3482a822efc9cd803d32c7194004b1","date":1394940524,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager();\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"16f00cdcee68cf7d655f36b40a37fbe0e9f96451","date":1406219948,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n    clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, cfg.getDistributedSocketTimeout());\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, cfg.getDistributedConnectionTimeout());\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":null,"bugIntro":["3646ead588297558973dbd1162e69791e822b944"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1491861ccc4b32acaaafd00c1b50fb7babb02475","date":1421260700,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    // in the update case, we want to do retries, and to use\n    // the default Solr retry handler that createClient will \n    // give us\n    params.set(HttpClientUtil.PROP_USE_RETRY, true);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(UpdateShardHandlerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":"  public UpdateShardHandler(UpdateShardHandlerConfig cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    // in the update case, we want to do retries, and to use\n    // the default Solr retry handler that createClient will \n    // give us\n    params.set(HttpClientUtil.PROP_USE_RETRY, true);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    // in the update case, we want to do retries, and to use\n    // the default Solr retry handler that createClient will \n    // give us\n    params.set(HttpClientUtil.PROP_USE_RETRY, true);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#UpdateShardHandler(ConfigSolr).mjava","sourceNew":null,"sourceOld":"  public UpdateShardHandler(ConfigSolr cfg) {\n    \n    clientConnectionManager = new PoolingClientConnectionManager(SchemeRegistryFactory.createSystemDefault());\n    if (cfg != null ) {\n      clientConnectionManager.setMaxTotal(cfg.getMaxUpdateConnections());\n      clientConnectionManager.setDefaultMaxPerRoute(cfg.getMaxUpdateConnectionsPerHost());\n    }\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if (cfg != null) {\n      params.set(HttpClientUtil.PROP_SO_TIMEOUT,\n          cfg.getDistributedSocketTimeout());\n      params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT,\n          cfg.getDistributedConnectionTimeout());\n    }\n    // in the update case, we want to do retries, and to use\n    // the default Solr retry handler that createClient will \n    // give us\n    params.set(HttpClientUtil.PROP_USE_RETRY, true);\n    log.info(\"Creating UpdateShardHandler HTTP client with params: {}\", params);\n    client = HttpClientUtil.createClient(params, clientConnectionManager);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1491861ccc4b32acaaafd00c1b50fb7babb02475","e15199583d3635cb940942caed05132dd6c4c7c6"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["16f00cdcee68cf7d655f36b40a37fbe0e9f96451"],"3b5b498d43389225e9bea27630b5d0d55abba2f3":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21e7fac07e3482a822efc9cd803d32c7194004b1":["3b5b498d43389225e9bea27630b5d0d55abba2f3"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a7035935aa89f6951286e9005cbeb16e89a082a2"],"1491861ccc4b32acaaafd00c1b50fb7babb02475":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"16f00cdcee68cf7d655f36b40a37fbe0e9f96451":["21e7fac07e3482a822efc9cd803d32c7194004b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["1491861ccc4b32acaaafd00c1b50fb7babb02475"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"3b5b498d43389225e9bea27630b5d0d55abba2f3":["21e7fac07e3482a822efc9cd803d32c7194004b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","a7035935aa89f6951286e9005cbeb16e89a082a2"],"21e7fac07e3482a822efc9cd803d32c7194004b1":["16f00cdcee68cf7d655f36b40a37fbe0e9f96451"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"1491861ccc4b32acaaafd00c1b50fb7babb02475":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["3b5b498d43389225e9bea27630b5d0d55abba2f3","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"16f00cdcee68cf7d655f36b40a37fbe0e9f96451":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["1491861ccc4b32acaaafd00c1b50fb7babb02475"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}