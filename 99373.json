{"path":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","pathOld":"solr/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","pathOld":"solr/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","pathOld":"solr/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,IndexOptions,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/FieldType#createField(String,String,Field.Store,Field.Index,Field.TermVector,boolean,boolean,float).mjava","sourceNew":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, IndexOptions options, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setIndexOptions(options);\n    f.setBoost(boost);\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Create the field from native Lucene parts.  Mostly intended for use by FieldTypes outputing multiple\n   * Fields per SchemaField\n   * @param name The name of the field\n   * @param val The _internal_ value to index\n   * @param storage {@link org.apache.lucene.document.Field.Store}\n   * @param index {@link org.apache.lucene.document.Field.Index}\n   * @param vec {@link org.apache.lucene.document.Field.TermVector}\n   * @param omitNorms true if norms should be omitted\n   * @param omitTFPos true if term freq and position should be omitted.\n   * @param boost The boost value\n   * @return the {@link org.apache.lucene.document.Fieldable}.\n   */\n  protected Fieldable createField(String name, String val, Field.Store storage, Field.Index index,\n                                    Field.TermVector vec, boolean omitNorms, boolean omitTFPos, float boost){\n    Field f = new Field(name,\n                        val,\n                        storage,\n                        index,\n                        vec);\n    f.setOmitNorms(omitNorms);\n    f.setOmitTermFreqAndPositions(omitTFPos);\n    f.setBoost(boost);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}