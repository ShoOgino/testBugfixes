{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","commits":[{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        input.seek(CodecUtil.headerLength(CODEC_NAME) + 1);\n        source = loadFixedSource(type, input, numDocs);\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","date":1320691430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}