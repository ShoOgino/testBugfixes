{"path":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"4f483a44e10befaaa6da11d433e2eb0f52829eec","date":1175273998,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      throw new SolrException(400, \"missing content stream\");\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5992372a0b4dffa024ea5ce638410723e4687c62","date":1175440405,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      if(!RequestHandlerUtils.handleCommit(req, rsp, false)) {\n        throw new SolrException( 400, \"missing content stream\" );\n      }\n      return;\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      throw new SolrException(400, \"missing content stream\");\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      if(!RequestHandlerUtils.handleCommit(req, rsp, false)) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      if(!RequestHandlerUtils.handleCommit(req, rsp, false)) {\n        throw new SolrException( 400, \"missing content stream\" );\n      }\n      return;\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abf644a9bed9c9f68be70fcfbe59137ec716f54a","date":1206114973,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorFactory processorFactory =\n            req.getCore().getUpdateProcessorFactory( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorFactory.getInstance(req, rsp, null);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if( !RequestHandlerUtils.handleCommit(processor, params, false) ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    CSVLoader loader = new SingleThreadedCSVLoader(req);\n\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if (streams == null) {\n      if(!RequestHandlerUtils.handleCommit(req, rsp, false)) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n\n    for(ContentStream stream : streams) {\n      Reader reader = stream.getReader();\n      try {\n        loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo(); \n        loader.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n\n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d656bfb8102419b4568f368a9606efc4f059912e","date":1217031644,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorChain processorChain =\n            req.getCore().getUpdateProcessingChain( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if( !RequestHandlerUtils.handleCommit(processor, params, false) ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorFactory processorFactory =\n            req.getCore().getUpdateProcessorFactory( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorFactory.getInstance(req, rsp, null);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if( !RequestHandlerUtils.handleCommit(processor, params, false) ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d","date":1224067136,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorChain processorChain =\n            req.getCore().getUpdateProcessingChain( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if (!RequestHandlerUtils.handleCommit(processor, params, false) && !RequestHandlerUtils.handleRollback(processor, params, false)) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\");\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n        RequestHandlerUtils.handleRollback(processor,  params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorChain processorChain =\n            req.getCore().getUpdateProcessingChain( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if( !RequestHandlerUtils.handleCommit(processor, params, false) ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34a66231ee53fe909c5f7c0e71131fcb5246d89","date":1226598668,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/ContentStreamHandlerBase#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/CSVRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorChain processorChain =\n            req.getCore().getUpdateProcessingChain(params.get(UpdateParams.UPDATE_PROCESSOR));\n\n    UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);\n\n    try {\n      ContentStreamLoader documentLoader = newLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if (streams == null) {\n        if (!RequestHandlerUtils.handleCommit(processor, params, false) && !RequestHandlerUtils.handleRollback(processor, params, false)) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\");\n        }\n      } else {\n\n        for (ContentStream stream : streams) {\n          documentLoader.load(req, rsp, stream);\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit(processor, params, false);\n        RequestHandlerUtils.handleRollback(processor, params, false);\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    SolrParams params = req.getParams();\n    UpdateRequestProcessorChain processorChain =\n            req.getCore().getUpdateProcessingChain( params.get( UpdateParams.UPDATE_PROCESSOR ) );\n\n    UpdateRequestProcessor processor = processorChain.createProcessor(req, rsp);\n\n    try {\n      CSVLoader loader = new SingleThreadedCSVLoader(req, processor);\n\n\n      Iterable<ContentStream> streams = req.getContentStreams();\n      if( streams == null ) {\n        if (!RequestHandlerUtils.handleCommit(processor, params, false) && !RequestHandlerUtils.handleRollback(processor, params, false)) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\");\n        }\n      }\n      else {\n\n        for(ContentStream stream : streams) {\n          Reader reader = stream.getReader();\n          try {\n            loader.errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n            loader.load(reader);\n          } finally {\n            IOUtils.closeQuietly(reader);\n          }\n        }\n\n        // Perhaps commit from the parameters\n        RequestHandlerUtils.handleCommit( processor, params, false );\n        RequestHandlerUtils.handleRollback(processor,  params, false );\n      }\n    } finally {\n      // finish the request\n      processor.finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d":["d656bfb8102419b4568f368a9606efc4f059912e"],"abf644a9bed9c9f68be70fcfbe59137ec716f54a":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d656bfb8102419b4568f368a9606efc4f059912e":["abf644a9bed9c9f68be70fcfbe59137ec716f54a"],"5992372a0b4dffa024ea5ce638410723e4687c62":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["5992372a0b4dffa024ea5ce638410723e4687c62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"abf644a9bed9c9f68be70fcfbe59137ec716f54a":["d656bfb8102419b4568f368a9606efc4f059912e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"d656bfb8102419b4568f368a9606efc4f059912e":["c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d"],"5992372a0b4dffa024ea5ce638410723e4687c62":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["abf644a9bed9c9f68be70fcfbe59137ec716f54a"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":[],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["5992372a0b4dffa024ea5ce638410723e4687c62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e34a66231ee53fe909c5f7c0e71131fcb5246d89","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}