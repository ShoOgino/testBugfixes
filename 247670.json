{"path":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.PagingFieldCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      docBase = context.docBase;\n      afterDoc = after.doc - docBase;\n      for (int i = 0; i < comparators.length; i++) {\n        queue.setComparator(i, comparators[i].setNextReader(context));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0","ef0d8a69209261514c5739c770bba706c2308450"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}