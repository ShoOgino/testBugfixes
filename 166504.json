{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 从外部文件夹dctFileRoot加载词典库文件，首先测试是否有coredict.mem文件， 如果有则直接作为序列化对象加载，\n   * 如果没有则加载词典库源文件coredict.dct\n   * \n   * @param dctFileName 词典库文件的路径\n   */\n  public void load(String dctFileRoot) {\n    String dctFilePath = dctFileRoot + \"/coredict.dct\";\n    File serialObj = new File(dctFileRoot + \"/coredict.mem\");\n\n    if (serialObj.exists() && loadFromObj(serialObj)) {\n\n    } else {\n      try {\n        wordIndexTable = new short[PRIME_INDEX_LENGTH];\n        charIndexTable = new char[PRIME_INDEX_LENGTH];\n        for (int i = 0; i < PRIME_INDEX_LENGTH; i++) {\n          charIndexTable[i] = 0;\n          wordIndexTable[i] = -1;\n        }\n        wordItem_charArrayTable = new char[GB2312_CHAR_NUM][][];\n        wordItem_frequencyTable = new int[GB2312_CHAR_NUM][];\n        // int total =\n        loadMainDataFromFile(dctFilePath);\n        expandDelimiterData();\n        mergeSameWords();\n        sortEachItems();\n        // log.info(\"load dictionary: \" + dctFilePath + \" total:\" + total);\n      } catch (IOException e) {\n        throw new RuntimeException(e.getMessage());\n      }\n\n      saveToObj(serialObj);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","sourceNew":"  /**\n   * Attempt to load dictionary from provided directory, first trying coredict.mem, failing back on coredict.dct\n   * \n   * @param dctFileRoot path to dictionary directory\n   */\n  public void load(String dctFileRoot) {\n    String dctFilePath = dctFileRoot + \"/coredict.dct\";\n    File serialObj = new File(dctFileRoot + \"/coredict.mem\");\n\n    if (serialObj.exists() && loadFromObj(serialObj)) {\n\n    } else {\n      try {\n        wordIndexTable = new short[PRIME_INDEX_LENGTH];\n        charIndexTable = new char[PRIME_INDEX_LENGTH];\n        for (int i = 0; i < PRIME_INDEX_LENGTH; i++) {\n          charIndexTable[i] = 0;\n          wordIndexTable[i] = -1;\n        }\n        wordItem_charArrayTable = new char[GB2312_CHAR_NUM][][];\n        wordItem_frequencyTable = new int[GB2312_CHAR_NUM][];\n        // int total =\n        loadMainDataFromFile(dctFilePath);\n        expandDelimiterData();\n        mergeSameWords();\n        sortEachItems();\n        // log.info(\"load dictionary: \" + dctFilePath + \" total:\" + total);\n      } catch (IOException e) {\n        throw new RuntimeException(e.getMessage());\n      }\n\n      saveToObj(serialObj);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * 从外部文件夹dctFileRoot加载词典库文件，首先测试是否有coredict.mem文件， 如果有则直接作为序列化对象加载，\n   * 如果没有则加载词典库源文件coredict.dct\n   * \n   * @param dctFileName 词典库文件的路径\n   */\n  public void load(String dctFileRoot) {\n    String dctFilePath = dctFileRoot + \"/coredict.dct\";\n    File serialObj = new File(dctFileRoot + \"/coredict.mem\");\n\n    if (serialObj.exists() && loadFromObj(serialObj)) {\n\n    } else {\n      try {\n        wordIndexTable = new short[PRIME_INDEX_LENGTH];\n        charIndexTable = new char[PRIME_INDEX_LENGTH];\n        for (int i = 0; i < PRIME_INDEX_LENGTH; i++) {\n          charIndexTable[i] = 0;\n          wordIndexTable[i] = -1;\n        }\n        wordItem_charArrayTable = new char[GB2312_CHAR_NUM][][];\n        wordItem_frequencyTable = new int[GB2312_CHAR_NUM][];\n        // int total =\n        loadMainDataFromFile(dctFilePath);\n        expandDelimiterData();\n        mergeSameWords();\n        sortEachItems();\n        // log.info(\"load dictionary: \" + dctFilePath + \" total:\" + total);\n      } catch (IOException e) {\n        throw new RuntimeException(e.getMessage());\n      }\n\n      saveToObj(serialObj);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/WordDictionary#load(String).mjava","sourceNew":"  /**\n   * Attempt to load dictionary from provided directory, first trying coredict.mem, failing back on coredict.dct\n   * \n   * @param dctFileRoot path to dictionary directory\n   */\n  public void load(String dctFileRoot) {\n    String dctFilePath = dctFileRoot + \"/coredict.dct\";\n    File serialObj = new File(dctFileRoot + \"/coredict.mem\");\n\n    if (serialObj.exists() && loadFromObj(serialObj)) {\n\n    } else {\n      try {\n        wordIndexTable = new short[PRIME_INDEX_LENGTH];\n        charIndexTable = new char[PRIME_INDEX_LENGTH];\n        for (int i = 0; i < PRIME_INDEX_LENGTH; i++) {\n          charIndexTable[i] = 0;\n          wordIndexTable[i] = -1;\n        }\n        wordItem_charArrayTable = new char[GB2312_CHAR_NUM][][];\n        wordItem_frequencyTable = new int[GB2312_CHAR_NUM][];\n        // int total =\n        loadMainDataFromFile(dctFilePath);\n        expandDelimiterData();\n        mergeSameWords();\n        sortEachItems();\n        // log.info(\"load dictionary: \" + dctFilePath + \" total:\" + total);\n      } catch (IOException e) {\n        throw new RuntimeException(e.getMessage());\n      }\n\n      saveToObj(serialObj);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Attempt to load dictionary from provided directory, first trying coredict.mem, failing back on coredict.dct\n   * \n   * @param dctFileRoot path to dictionary directory\n   */\n  public void load(String dctFileRoot) {\n    String dctFilePath = dctFileRoot + \"/coredict.dct\";\n    File serialObj = new File(dctFileRoot + \"/coredict.mem\");\n\n    if (serialObj.exists() && loadFromObj(serialObj)) {\n\n    } else {\n      try {\n        wordIndexTable = new short[PRIME_INDEX_LENGTH];\n        charIndexTable = new char[PRIME_INDEX_LENGTH];\n        for (int i = 0; i < PRIME_INDEX_LENGTH; i++) {\n          charIndexTable[i] = 0;\n          wordIndexTable[i] = -1;\n        }\n        wordItem_charArrayTable = new char[GB2312_CHAR_NUM][][];\n        wordItem_frequencyTable = new int[GB2312_CHAR_NUM][];\n        // int total =\n        loadMainDataFromFile(dctFilePath);\n        expandDelimiterData();\n        mergeSameWords();\n        sortEachItems();\n        // log.info(\"load dictionary: \" + dctFilePath + \" total:\" + total);\n      } catch (IOException e) {\n        throw new RuntimeException(e.getMessage());\n      }\n\n      saveToObj(serialObj);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}