{"path":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","commits":[{"id":"c1af881a1691e32ac2275b4008656709aa96e369","date":1404496493,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrServer(url);\n    collection2 = new HttpSolrServer(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url);\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"collection2\");\n    collection1.request(req);\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    HttpSolrClient nodeClient = new HttpSolrClient(url);\n    try {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n    finally {\n      nodeClient.shutdown();\n    }\n    \n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath(), null, null);\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = new HttpSolrClient(url + \"/collection1\");\n    collection2 = new HttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = new HttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d51e7db479b42602c7e23ba871b177387268179","date":1547581497,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestTolerantSearch#createThings().mjava","sourceNew":"  @BeforeClass\n  public static void createThings() throws Exception {\n    systemSetPropertySolrDisableShardsWhitelist(\"true\");\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","sourceOld":"  @BeforeClass\n  public static void createThings() throws Exception {\n    solrHome = createSolrHome();\n    createAndStartJetty(solrHome.getAbsolutePath());\n    String url = jetty.getBaseUrl().toString();\n    collection1 = getHttpSolrClient(url + \"/collection1\");\n    collection2 = getHttpSolrClient(url + \"/collection2\");\n    \n    String urlCollection1 = jetty.getBaseUrl().toString() + \"/\" + \"collection1\";\n    String urlCollection2 = jetty.getBaseUrl().toString() + \"/\" + \"collection2\";\n    shard1 = urlCollection1.replaceAll(\"https?://\", \"\");\n    shard2 = urlCollection2.replaceAll(\"https?://\", \"\");\n    \n    //create second core\n    try (HttpSolrClient nodeClient = getHttpSolrClient(url)) {\n      CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n      req.setCoreName(\"collection2\");\n      req.setConfigSet(\"collection1\");\n      nodeClient.request(req);\n    }\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"subject\", \"batman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n    doc.setField(\"id\", \"2\");\n    doc.setField(\"subject\", \"superman\");\n    collection2.add(doc);\n    collection2.commit();\n    \n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"subject\", \"aquaman\");\n    doc.setField(\"title\", \"foo bar\");\n    collection1.add(doc);\n    collection1.commit();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d51e7db479b42602c7e23ba871b177387268179":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cc3b13b430571c2e169f98fe38e1e7666f88522d","9bc766d645fa848f86c381c7f6acf2c881c99399"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["bafca15d8e408346a67f4282ad1143b88023893b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["9bc766d645fa848f86c381c7f6acf2c881c99399","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"bafca15d8e408346a67f4282ad1143b88023893b":["c1af881a1691e32ac2275b4008656709aa96e369"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d51e7db479b42602c7e23ba871b177387268179"],"c1af881a1691e32ac2275b4008656709aa96e369":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d51e7db479b42602c7e23ba871b177387268179":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["4d51e7db479b42602c7e23ba871b177387268179"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1af881a1691e32ac2275b4008656709aa96e369"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9bc766d645fa848f86c381c7f6acf2c881c99399"],"bafca15d8e408346a67f4282ad1143b88023893b":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"c1af881a1691e32ac2275b4008656709aa96e369":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}