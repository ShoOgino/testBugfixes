{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/FixedGapTermsIndexWriter.SimpleFieldWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","sourceOld":"    @Override\n    public void finish(long termsFilePointer) throws IOException {\n\n      // write primary terms dict offsets\n      packedIndexStart = out.getFilePointer();\n\n      PackedInts.Writer w = PackedInts.getWriter(out, numIndexTerms, PackedInts.bitsRequired(termsFilePointer), PackedInts.DEFAULT);\n\n      // relative to our indexStart\n      long upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        upto += termsPointerDeltas[i];\n        w.add(upto);\n      }\n      w.finish();\n\n      packedOffsetsStart = out.getFilePointer();\n\n      // write offsets into the byte[] terms\n      w = PackedInts.getWriter(out, 1+numIndexTerms, PackedInts.bitsRequired(totTermLength), PackedInts.DEFAULT);\n      upto = 0;\n      for(int i=0;i<numIndexTerms;i++) {\n        w.add(upto);\n        upto += termLengths[i];\n      }\n      w.add(upto);\n      w.finish();\n\n      // our referrer holds onto us, while other fields are\n      // being written, so don't tie up this RAM:\n      termLengths = null;\n      termsPointerDeltas = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}