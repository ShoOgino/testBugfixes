{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","commits":[{"id":"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","date":1412358952,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  static void assertSameSeekBehavior(String msg, IndexInput expected, IndexInput actual) throws IOException {\n    // seek to 0\n    long point = 0;\n    assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n    \n    // seek to middle\n    point = expected.length() / 2l;\n    assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n    \n    // seek to end - 2\n    point = expected.length() - 2;\n    assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n    \n    // seek to end - 1\n    point = expected.length() - 1;\n    assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n    \n    // seek to the end\n    point = expected.length();\n    assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n    \n    // seek past end\n    point = expected.length() + 1;\n    assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e288a70f2f9b7ebd3942d8608636fe6f825894","date":1412362601,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","sourceNew":"  protected static void assertSameSeekBehavior(String msg, IndexInput expected, IndexInput actual) throws IOException {\n    // seek to 0\n    long point = 0;\n    assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n    \n    // seek to middle\n    point = expected.length() / 2l;\n    assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n    \n    // seek to end - 2\n    point = expected.length() - 2;\n    assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n    \n    // seek to end - 1\n    point = expected.length() - 1;\n    assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n    \n    // seek to the end\n    point = expected.length();\n    assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n    \n    // seek past end\n    point = expected.length() + 1;\n    assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n  }\n\n","sourceOld":"  static void assertSameSeekBehavior(String msg, IndexInput expected, IndexInput actual) throws IOException {\n    // seek to 0\n    long point = 0;\n    assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n    \n    // seek to middle\n    point = expected.length() / 2l;\n    assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n    \n    // seek to end - 2\n    point = expected.length() - 2;\n    assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n    \n    // seek to end - 1\n    point = expected.length() - 1;\n    assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n    \n    // seek to the end\n    point = expected.length();\n    assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n    \n    // seek past end\n    point = expected.length() + 1;\n    assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#assertSameSeekBehavior(String,IndexInput,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  protected static void assertSameSeekBehavior(String msg, IndexInput expected, IndexInput actual) throws IOException {\n    // seek to 0\n    long point = 0;\n    assertSameStreams(msg + \", seek(0)\", expected, actual, point);\n    \n    // seek to middle\n    point = expected.length() / 2l;\n    assertSameStreams(msg + \", seek(mid)\", expected, actual, point);\n    \n    // seek to end - 2\n    point = expected.length() - 2;\n    assertSameStreams(msg + \", seek(end-2)\", expected, actual, point);\n    \n    // seek to end - 1\n    point = expected.length() - 1;\n    assertSameStreams(msg + \", seek(end-1)\", expected, actual, point);\n    \n    // seek to the end\n    point = expected.length();\n    assertSameStreams(msg + \", seek(end)\", expected, actual, point);\n    \n    // seek past end\n    point = expected.length() + 1;\n    assertSameStreams(msg + \", seek(end+1)\", expected, actual, point);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3":["a0e288a70f2f9b7ebd3942d8608636fe6f825894"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04aeacf8a807c3559b1089fdbe6c2c16ac9a07e3","9bb9a29a5e71a90295f175df8919802993142c9a"],"a0e288a70f2f9b7ebd3942d8608636fe6f825894":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}