{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testTimeSeriesGrouping().mjava","commits":[{"id":"22191e72f6c40dec88c9b94f9bb55c7527772a47","date":1553715407,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testTimeSeriesGrouping().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testTimeSeriesGrouping().mjava","sourceNew":"  @Test\n  public void testTimeSeriesGrouping() throws Exception {\n\n\n    new UpdateRequest()\n        .add(id, \"1\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"5\")\n        .add(id, \"2\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"10\")\n        .add(id, \"3\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"30\")\n        .add(id, \"4\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"12\")\n        .add(id, \"5\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"1\", \"item_i\", \"4\")\n        .add(id, \"6\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"3\", \"item_i\", \"5\")\n        .add(id, \"7\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"4\", \"item_i\", \"6\")\n        .add(id, \"8\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"2\", \"item_i\", \"1\")\n\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select year_i, sum(item_i) from collection1 group by year_i order by year_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getDouble(\"EXPR$1\") == 66); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getDouble(\"EXPR$1\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, sum(item_i) from collection1 group by year_i, month_i \" +\n            \"order by year_i desc, month_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 3);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getDouble(\"EXPR$2\") == 57); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getDouble(\"EXPR$2\") == 9); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$2\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, day_i, sum(item_i) from collection1 group by year_i, month_i, day_i \" +\n            \"order by year_i desc, month_i desc, day_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 6);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 8);\n    assert (tuple.getDouble(\"EXPR$3\") == 42); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 7);\n    assert (tuple.getDouble(\"EXPR$3\") == 15); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 3);\n    assert (tuple.getDouble(\"EXPR$3\") == 5); // sum(item_i)\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 1);\n    assert (tuple.getDouble(\"EXPR$3\") == 4); // sum(item_i)\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$3\") == 6); // sum(item_i)\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 2);\n    assert (tuple.getDouble(\"EXPR$3\") == 1); // sum(item_i)\n\n  }\n\n","sourceOld":"  private void testTimeSeriesGrouping() throws Exception {\n\n    del(\"*:*\");\n\n    commit();\n\n    indexr(\"id\", \"1\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"5\");\n    indexr(\"id\", \"2\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"10\");\n    indexr(\"id\", \"3\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"30\");\n    indexr(\"id\", \"4\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"12\");\n    indexr(\"id\", \"5\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"1\", \"item_i\", \"4\");\n    indexr(\"id\", \"6\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"3\", \"item_i\", \"5\");\n    indexr(\"id\", \"7\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"4\", \"item_i\", \"6\");\n    indexr(\"id\", \"8\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"2\", \"item_i\", \"1\");\n\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, sum(item_i) from collection1 group by year_i order by year_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getDouble(\"EXPR$1\") == 66); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getDouble(\"EXPR$1\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, sum(item_i) from collection1 group by year_i, month_i \" +\n            \"order by year_i desc, month_i desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 3);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getDouble(\"EXPR$2\") == 57); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getDouble(\"EXPR$2\") == 9); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$2\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, day_i, sum(item_i) from collection1 group by year_i, month_i, day_i \" +\n            \"order by year_i desc, month_i desc, day_i desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 6);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 8);\n    assert (tuple.getDouble(\"EXPR$3\") == 42); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 7);\n    assert (tuple.getDouble(\"EXPR$3\") == 15); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 3);\n    assert (tuple.getDouble(\"EXPR$3\") == 5); // sum(item_i)\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 1);\n    assert (tuple.getDouble(\"EXPR$3\") == 4); // sum(item_i)\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$3\") == 6); // sum(item_i)\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 2);\n    assert (tuple.getDouble(\"EXPR$3\") == 1); // sum(item_i)\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94e31112925a65b1d36f9064772080e25b5ef373","date":1553715407,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testTimeSeriesGrouping().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testTimeSeriesGrouping().mjava","sourceNew":"  @Test\n  public void testTimeSeriesGrouping() throws Exception {\n\n\n    new UpdateRequest()\n        .add(id, \"1\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"5\")\n        .add(id, \"2\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"10\")\n        .add(id, \"3\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"30\")\n        .add(id, \"4\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"12\")\n        .add(id, \"5\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"1\", \"item_i\", \"4\")\n        .add(id, \"6\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"3\", \"item_i\", \"5\")\n        .add(id, \"7\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"4\", \"item_i\", \"6\")\n        .add(id, \"8\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"2\", \"item_i\", \"1\")\n\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select year_i, sum(item_i) from collection1 group by year_i order by year_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getDouble(\"EXPR$1\") == 66); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getDouble(\"EXPR$1\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, sum(item_i) from collection1 group by year_i, month_i \" +\n            \"order by year_i desc, month_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 3);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getDouble(\"EXPR$2\") == 57); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getDouble(\"EXPR$2\") == 9); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$2\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, day_i, sum(item_i) from collection1 group by year_i, month_i, day_i \" +\n            \"order by year_i desc, month_i desc, day_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 6);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 8);\n    assert (tuple.getDouble(\"EXPR$3\") == 42); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 7);\n    assert (tuple.getDouble(\"EXPR$3\") == 15); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 3);\n    assert (tuple.getDouble(\"EXPR$3\") == 5); // sum(item_i)\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 1);\n    assert (tuple.getDouble(\"EXPR$3\") == 4); // sum(item_i)\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$3\") == 6); // sum(item_i)\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 2);\n    assert (tuple.getDouble(\"EXPR$3\") == 1); // sum(item_i)\n\n  }\n\n","sourceOld":"  @Test\n  public void testTimeSeriesGrouping() throws Exception {\n\n\n    new UpdateRequest()\n        .add(id, \"1\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"5\")\n        .add(id, \"2\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"7\", \"item_i\", \"10\")\n        .add(id, \"3\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"30\")\n        .add(id, \"4\", \"year_i\", \"2015\", \"month_i\", \"11\", \"day_i\", \"8\", \"item_i\", \"12\")\n        .add(id, \"5\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"1\", \"item_i\", \"4\")\n        .add(id, \"6\", \"year_i\", \"2015\", \"month_i\", \"10\", \"day_i\", \"3\", \"item_i\", \"5\")\n        .add(id, \"7\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"4\", \"item_i\", \"6\")\n        .add(id, \"8\", \"year_i\", \"2014\", \"month_i\", \"4\", \"day_i\", \"2\", \"item_i\", \"1\")\n\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select year_i, sum(item_i) from collection1 group by year_i order by year_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getDouble(\"EXPR$1\") == 66); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getDouble(\"EXPR$1\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, sum(item_i) from collection1 group by year_i, month_i \" +\n            \"order by year_i desc, month_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 3);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getDouble(\"EXPR$2\") == 57); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getDouble(\"EXPR$2\") == 9); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$2\") == 7); // sum(item_i)\n\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select year_i, month_i, day_i, sum(item_i) from collection1 group by year_i, month_i, day_i \" +\n            \"order by year_i desc, month_i desc, day_i desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 6);\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 8);\n    assert (tuple.getDouble(\"EXPR$3\") == 42); // sum(item_i)\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 11);\n    assert (tuple.getLong(\"day_i\") == 7);\n    assert (tuple.getDouble(\"EXPR$3\") == 15); // sum(item_i)\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 3);\n    assert (tuple.getDouble(\"EXPR$3\") == 5); // sum(item_i)\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"year_i\") == 2015);\n    assert (tuple.getLong(\"month_i\") == 10);\n    assert (tuple.getLong(\"day_i\") == 1);\n    assert (tuple.getDouble(\"EXPR$3\") == 4); // sum(item_i)\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 4);\n    assert (tuple.getDouble(\"EXPR$3\") == 6); // sum(item_i)\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"year_i\") == 2014);\n    assert (tuple.getLong(\"month_i\") == 4);\n    assert (tuple.getLong(\"day_i\") == 2);\n    assert (tuple.getDouble(\"EXPR$3\") == 1); // sum(item_i)\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94e31112925a65b1d36f9064772080e25b5ef373"],"94e31112925a65b1d36f9064772080e25b5ef373":["22191e72f6c40dec88c9b94f9bb55c7527772a47"]},"commit2Childs":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["94e31112925a65b1d36f9064772080e25b5ef373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22191e72f6c40dec88c9b94f9bb55c7527772a47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"94e31112925a65b1d36f9064772080e25b5ef373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}