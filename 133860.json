{"path":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPResponse#getText().mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPResponse#getText().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Reads all the response data into a buffer and turns it into a string\n     * using the appropriate character converter. Since this uses {@link\n     * #getData() getData()}, the caveats of that method apply here as well.\n     *\n     * @return                     the body as a String. If no data was returned\n     *      then an empty string is returned.\n     * @exception IOException      If any io exception occured while reading the\n     *      data, or if the content is not text\n     * @exception ModuleException  if any module encounters an exception.\n     * @exception ParseException   if an error occured trying to parse the\n     *      content-type header field\n     * @see                        #getData()\n     */\n    public synchronized String getText()\n        throws IOException, ModuleException, ParseException\n    {\n        String ct = getHeader(\"Content-Type\");\n        if (ct == null || !ct.toLowerCase().startsWith(\"text/\"))\n        {\n            throw new IOException(\"Content-Type `\" + ct + \"' is not a text type\");\n        }\n\n        String charset = Util.getParameter(\"charset\", ct);\n        if (charset == null)\n        {\n            charset = \"ISO-8859-1\";\n        }\n\n        return new String(getData(), charset);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPResponse#getText().mjava","sourceNew":null,"sourceOld":"    /**\n     * Reads all the response data into a buffer and turns it into a string\n     * using the appropriate character converter. Since this uses {@link\n     * #getData() getData()}, the caveats of that method apply here as well.\n     *\n     * @return                     the body as a String. If no data was returned\n     *      then an empty string is returned.\n     * @exception IOException      If any io exception occured while reading the\n     *      data, or if the content is not text\n     * @exception ModuleException  if any module encounters an exception.\n     * @exception ParseException   if an error occured trying to parse the\n     *      content-type header field\n     * @see                        #getData()\n     */\n    public synchronized String getText()\n        throws IOException, ModuleException, ParseException\n    {\n        String ct = getHeader(\"Content-Type\");\n        if (ct == null || !ct.toLowerCase().startsWith(\"text/\"))\n        {\n            throw new IOException(\"Content-Type `\" + ct + \"' is not a text type\");\n        }\n\n        String charset = Util.getParameter(\"charset\", ct);\n        if (charset == null)\n        {\n            charset = \"ISO-8859-1\";\n        }\n\n        return new String(getData(), charset);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}