{"path":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46beaf42026a3243140badeb63dddffc563f59a5","date":1330028304,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      m.setAccessible(true);\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      m.setAccessible(true);\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e9ab08ae693306679064ab40d807dff0cee360","date":1442055283,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,Class[#],String,NamedList[Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, Class<?> intf, String property, NamedList<Object> info )\n  {\n    try {\n      String method = \"get\" + Character.toUpperCase( property.charAt(0) ) + property.substring( 1 );\n      Object v = intf.getMethod( method ).invoke( intf.cast(obj) );\n      if( v != null ) {\n        info.add( property, v );\n      }\n    } catch( Exception ex ) {\n      // ignore\n    }\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      m.setAccessible(true);\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","46beaf42026a3243140badeb63dddffc563f59a5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46beaf42026a3243140badeb63dddffc563f59a5":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6e9ab08ae693306679064ab40d807dff0cee360":["46beaf42026a3243140badeb63dddffc563f59a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f6e9ab08ae693306679064ab40d807dff0cee360"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","46beaf42026a3243140badeb63dddffc563f59a5"],"46beaf42026a3243140badeb63dddffc563f59a5":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f6e9ab08ae693306679064ab40d807dff0cee360"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f6e9ab08ae693306679064ab40d807dff0cee360":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}