{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","commits":[{"id":"9a57adc9bfabbc207ed17740dd86e0a2401ea385","date":1355507623,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f26f74e4969851a019d28f10315cb1c77786f22","date":1400539241,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":["f291d2d430e8149d24fdd06b0bcdab0941ec9144"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a282020d6c9a4ea32a359539e283e4771a2fda8","date":1440047542,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerCollectionQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(DistributedQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#setUpOnce().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#setUpOnce().mjava","sourceNew":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerTaskQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setUpOnce() throws Exception {\n    workQueueMock = createMock(OverseerCollectionQueue.class);\n    runningMapMock = createMock(DistributedMap.class);\n    completedMapMock = createMock(DistributedMap.class);\n    failureMapMock = createMock(DistributedMap.class);\n    shardHandlerFactoryMock = createMock(ShardHandlerFactory.class);\n    shardHandlerMock = createMock(ShardHandler.class);\n    zkStateReaderMock = createMock(ZkStateReader.class);\n    clusterStateMock = createMock(ClusterState.class);\n    solrZkClientMock = createMock(SolrZkClient.class);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9a57adc9bfabbc207ed17740dd86e0a2401ea385"],"9a57adc9bfabbc207ed17740dd86e0a2401ea385":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["9a57adc9bfabbc207ed17740dd86e0a2401ea385"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["6f26f74e4969851a019d28f10315cb1c77786f22"],"b7605579001505896d48b07160075a5c8b8e128e":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","6f26f74e4969851a019d28f10315cb1c77786f22"],"6f26f74e4969851a019d28f10315cb1c77786f22":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2209af2c265d2258ec4b29c8cc78622d36994a15"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"9a57adc9bfabbc207ed17740dd86e0a2401ea385":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9a57adc9bfabbc207ed17740dd86e0a2401ea385"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["b7605579001505896d48b07160075a5c8b8e128e","6f26f74e4969851a019d28f10315cb1c77786f22"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"b7605579001505896d48b07160075a5c8b8e128e":[],"6f26f74e4969851a019d28f10315cb1c77786f22":["2a282020d6c9a4ea32a359539e283e4771a2fda8","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}