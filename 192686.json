{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","commits":[{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"/dev/null","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"/dev/null","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"/dev/null","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"/dev/null","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if ((TEST_NIGHTLY && random.nextBoolean()) || r.nextInt(20) == 17) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if ((TEST_NIGHTLY && random.nextBoolean()) || r.nextInt(20) == 17) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0762b640e0d0d12b6edb96db68986e13145c3484","date":1307575932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if ((TEST_NIGHTLY && random.nextBoolean()) || r.nextInt(20) == 17) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (r.nextInt(3) == 2) {\n      tmp.setMaxMergeAtOnce(2);\n      tmp.setMaxMergeAtOnceExplicit(2);\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 20));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 30));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if ((TEST_NIGHTLY && random.nextBoolean()) || r.nextInt(20) == 17) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd689cfe55be97a2d23e2de363cae2d618d73ab7","date":1308350378,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    tmp.setReclaimDeletesWeight(r.nextDouble()*4);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    tmp.setReclaimDeletesWeight(r.nextDouble()*4);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newTieredMergePolicy(Random).mjava","sourceNew":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    tmp.setReclaimDeletesWeight(r.nextDouble()*4);\n    return tmp;\n  }\n\n","sourceOld":"  public static TieredMergePolicy newTieredMergePolicy(Random r) {\n    TieredMergePolicy tmp = new TieredMergePolicy();\n    if (rarely(r)) {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 2, 4));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 2, 4));\n    } else {\n      tmp.setMaxMergeAtOnce(_TestUtil.nextInt(r, 5, 50));\n      tmp.setMaxMergeAtOnceExplicit(_TestUtil.nextInt(r, 5, 50));\n    }\n    tmp.setMaxMergedSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setFloorSegmentMB(0.2 + r.nextDouble() * 2.0);\n    tmp.setExpungeDeletesPctAllowed(0.0 + r.nextDouble() * 30.0);\n    tmp.setSegmentsPerTier(_TestUtil.nextInt(r, 2, 20));\n    tmp.setUseCompoundFile(r.nextBoolean());\n    tmp.setNoCFSRatio(0.1 + r.nextDouble()*0.8);\n    tmp.setReclaimDeletesWeight(r.nextDouble()*4);\n    return tmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["79c2cb24929f2649a8875fb629086171f914d5ce","0762b640e0d0d12b6edb96db68986e13145c3484"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"0762b640e0d0d12b6edb96db68986e13145c3484":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"dd689cfe55be97a2d23e2de363cae2d618d73ab7":["0762b640e0d0d12b6edb96db68986e13145c3484"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["dd689cfe55be97a2d23e2de363cae2d618d73ab7"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","dd689cfe55be97a2d23e2de363cae2d618d73ab7"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","0762b640e0d0d12b6edb96db68986e13145c3484"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["7edfc3f7caa7b49a18fe367692768b33b018e9db"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["0762b640e0d0d12b6edb96db68986e13145c3484","79c2cb24929f2649a8875fb629086171f914d5ce"],"0762b640e0d0d12b6edb96db68986e13145c3484":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","dd689cfe55be97a2d23e2de363cae2d618d73ab7","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"dd689cfe55be97a2d23e2de363cae2d618d73ab7":["7b91922b55d15444d554721b352861d028eb8278","7edfc3f7caa7b49a18fe367692768b33b018e9db"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"79c2cb24929f2649a8875fb629086171f914d5ce":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7edfc3f7caa7b49a18fe367692768b33b018e9db","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}