{"path":"solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc[SlotAcc]#collect(int,int).mjava","commits":[{"id":"694c4ae1a6fef9d2740471ec0f3a8db6367817c8","date":1428290189,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc[SlotAcc]#collect(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void collect(int doc, int slotNum) {\n    subDv.setDocument(doc);\n    int segOrd = (int) subDv.nextOrd();\n    if (segOrd < 0) return;\n\n    FixedBitSet bits = arr[slotNum];\n    if (bits == null) {\n      bits = new FixedBitSet(nTerms);\n      arr[slotNum] = bits;\n    }\n\n    do {\n      int ord = toGlobal == null ? segOrd : (int) toGlobal.get(segOrd);\n      bits.set(ord);\n      segOrd = (int) subDv.nextOrd();\n    } while (segOrd >= 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008","date":1431878853,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc[UniqueSlotAcc]#collect(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc[SlotAcc]#collect(int,int).mjava","sourceNew":"  @Override\n  public void collect(int doc, int slotNum) {\n    subDv.setDocument(doc);\n    int segOrd = (int) subDv.nextOrd();\n    if (segOrd < 0) return;\n\n    FixedBitSet bits = arr[slotNum];\n    if (bits == null) {\n      bits = new FixedBitSet(nTerms);\n      arr[slotNum] = bits;\n    }\n\n    do {\n      int ord = toGlobal == null ? segOrd : (int) toGlobal.get(segOrd);\n      bits.set(ord);\n      segOrd = (int) subDv.nextOrd();\n    } while (segOrd >= 0);\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc, int slotNum) {\n    subDv.setDocument(doc);\n    int segOrd = (int) subDv.nextOrd();\n    if (segOrd < 0) return;\n\n    FixedBitSet bits = arr[slotNum];\n    if (bits == null) {\n      bits = new FixedBitSet(nTerms);\n      arr[slotNum] = bits;\n    }\n\n    do {\n      int ord = toGlobal == null ? segOrd : (int) toGlobal.get(segOrd);\n      bits.set(ord);\n      segOrd = (int) subDv.nextOrd();\n    } while (segOrd >= 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"694c4ae1a6fef9d2740471ec0f3a8db6367817c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008":["694c4ae1a6fef9d2740471ec0f3a8db6367817c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008"]},"commit2Childs":{"694c4ae1a6fef9d2740471ec0f3a8db6367817c8":["2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["694c4ae1a6fef9d2740471ec0f3a8db6367817c8"],"2ddd9456ddbc1edc62d5a14a84ad0e4fcd74a008":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}