{"path":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","commits":[{"id":"b9fc748b8fc4097ccc222bdf2948cc2d20770c54","date":1264591145,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(Version.LUCENE_31, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","sourceNew":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(Version.LUCENE_31, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","sourceOld":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(Version.LUCENE_31, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","sourceNew":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","sourceOld":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(Version.LUCENE_31, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordMarkerTokenFilter#testIncrementToken().mjava","sourceNew":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","sourceOld":"  @Test\n  public void testIncrementToken() throws IOException {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 5, true);\n    set.add(\"lucenefox\");\n    String[] output = new String[] { \"the\", \"quick\", \"brown\", \"LuceneFox\",\n        \"jumps\" };\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set)), output);\n    Set<String> jdkSet = new HashSet<String>();\n    jdkSet.add(\"LuceneFox\");\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), jdkSet)), output);\n    Set<?> set2 = set;\n    assertTokenStreamContents(new LowerCaseFilterMock(\n        new KeywordMarkerTokenFilter(new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"The quIck browN LuceneFox Jumps\")), set2)), output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b9fc748b8fc4097ccc222bdf2948cc2d20770c54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["b9fc748b8fc4097ccc222bdf2948cc2d20770c54"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"]},"commit2Childs":{"b9fc748b8fc4097ccc222bdf2948cc2d20770c54":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9fc748b8fc4097ccc222bdf2948cc2d20770c54"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}