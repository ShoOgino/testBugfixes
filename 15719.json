{"path":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56b73889eb1d01f9e6df4acab29810fb701abf0d","date":1284810631,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    startPointer = in.getFilePointer();\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","date":1320691430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    startPointer = in.getFilePointer();\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","56b73889eb1d01f9e6df4acab29810fb701abf0d"],"e128967bca58657bc0039d4bfe631e63e81f1977":["56b73889eb1d01f9e6df4acab29810fb701abf0d"],"56b73889eb1d01f9e6df4acab29810fb701abf0d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56b73889eb1d01f9e6df4acab29810fb701abf0d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"56b73889eb1d01f9e6df4acab29810fb701abf0d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e128967bca58657bc0039d4bfe631e63e81f1977"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}