{"path":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","sourceNew":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","sourceOld":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","sourceNew":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","sourceOld":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","pathOld":"solr/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","sourceNew":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","sourceOld":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cad4d876350c7790594c78dc3c3fb1718bf06dc7","date":1417321437,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      incrementTokenWasCalled = true;\n      while( true ){\n        if( bufferedToken == null ) {\n          if (!bufferedTokenStream.incrementToken())\n            return false;\n          bufferedToken = bufferedTokenStream.captureState();\n          bufferedStartOffset = bufferedOffsetAtt.startOffset();\n          bufferedEndOffset = bufferedOffsetAtt.endOffset();\n        }\n\n        if( startOffset <= bufferedStartOffset &&\n            bufferedEndOffset <= endOffset ){\n          restoreState(bufferedToken);\n          bufferedToken = null;\n          offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n          return true;\n        }\n        else if( bufferedEndOffset > endOffset ){\n          startOffset += length + 1;\n          return false;\n        }\n        bufferedToken = null;\n      }\n    }\n\n","sourceOld":"      @Override\n      public boolean incrementToken() throws IOException {\n        while( true ){\n          if( bufferedToken == null ) {\n            if (!bufferedTokenStream.incrementToken())\n              return false;\n            bufferedToken = bufferedTokenStream.captureState();\n            bufferedStartOffset = bufferedOffsetAtt.startOffset();\n            bufferedEndOffset = bufferedOffsetAtt.endOffset();\n          }\n          \n          if( startOffset <= bufferedStartOffset &&\n              bufferedEndOffset <= endOffset ){\n            restoreState(bufferedToken);\n            bufferedToken = null;\n            offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n            return true;\n          }\n          else if( bufferedEndOffset > endOffset ){\n            startOffset += length + 1;\n            return false;\n          }\n          bufferedToken = null;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd19a665923f0acf59d3f056adfef60dbe7c1047","date":1419308867,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/TermOffsetsTokenStream[DefaultSolrHighlighter].MultiValuedStream#incrementToken().mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      incrementTokenWasCalled = true;\n      while( true ){\n        if( bufferedToken == null ) {\n          if (!bufferedTokenStream.incrementToken())\n            return false;\n          bufferedToken = bufferedTokenStream.captureState();\n          bufferedStartOffset = bufferedOffsetAtt.startOffset();\n          bufferedEndOffset = bufferedOffsetAtt.endOffset();\n        }\n\n        if( startOffset <= bufferedStartOffset &&\n            bufferedEndOffset <= endOffset ){\n          restoreState(bufferedToken);\n          bufferedToken = null;\n          offsetAtt.setOffset( offsetAtt.startOffset() - startOffset, offsetAtt.endOffset() - startOffset );\n          return true;\n        }\n        else if( bufferedEndOffset > endOffset ){\n          startOffset += length + 1;\n          return false;\n        }\n        bufferedToken = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd19a665923f0acf59d3f056adfef60dbe7c1047":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd19a665923f0acf59d3f056adfef60dbe7c1047"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["bd19a665923f0acf59d3f056adfef60dbe7c1047"],"c26f00b574427b55127e869b935845554afde1fa":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bd19a665923f0acf59d3f056adfef60dbe7c1047":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}