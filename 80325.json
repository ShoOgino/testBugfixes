{"path":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6473e45cde7e2f73ee961148e3272fb52d93a25e","date":1032413465,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","sourceNew":null,"sourceOld":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7087f8343d1904252decbbea451a5324aaf83f00","date":1032414664,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a93e3315d6745a15e035a53c8ea1b80c08eff45","date":1032542713,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","sourceNew":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < readers.length && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n\treturn mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ad07cf326135fbb108f766a0798c8ee00b17dcb","date":1077215339,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#readerIndex(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentsReader#readerIndex(int).mjava","sourceNew":"  private int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < readers.length && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n\treturn mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  private final int readerIndex(int n) {\t  // find reader for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = readers.length - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < readers.length && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n\treturn mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["7a93e3315d6745a15e035a53c8ea1b80c08eff45"],"7a93e3315d6745a15e035a53c8ea1b80c08eff45":["7087f8343d1904252decbbea451a5324aaf83f00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"7087f8343d1904252decbbea451a5324aaf83f00":["6473e45cde7e2f73ee961148e3272fb52d93a25e"],"6473e45cde7e2f73ee961148e3272fb52d93a25e":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6473e45cde7e2f73ee961148e3272fb52d93a25e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a93e3315d6745a15e035a53c8ea1b80c08eff45":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"7087f8343d1904252decbbea451a5324aaf83f00":["7a93e3315d6745a15e035a53c8ea1b80c08eff45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6473e45cde7e2f73ee961148e3272fb52d93a25e":["7087f8343d1904252decbbea451a5324aaf83f00"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}