{"path":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n\n    manager.registerGauge(this, registry, () -> name, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n\n    manager.registerGauge(this, registry, () -> name, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.registryName = registry;\n    this.metricManager = manager;\n    manager.registerGauge(this, registry, () -> name, tag, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, tag, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, tag, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, tag, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, tag, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), tag, true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), tag, true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), tag, true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), tag, true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), tag, true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), tag, true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n\n    manager.registerGauge(this, registry, () -> name, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","bugFix":null,"bugIntro":["df72a23fb74bebe914e3f3972063a884327c0436","df72a23fb74bebe914e3f3972063a884327c0436"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.registryName = registry;\n    this.metricManager = manager;\n    manager.registerGauge(this, registry, () -> name, tag, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, tag, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, tag, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, tag, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, tag, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), tag, true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), tag, true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), tag, true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), tag, true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), tag, true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), tag, true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n\n    manager.registerGauge(this, registry, () -> name, true, \"searcherName\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> cachingEnabled, true, \"caching\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> openTime, true, \"openedAt\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> warmupTime, true, \"warmupTime\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> registerTime, true, \"registeredAt\", Category.SEARCHER.toString(), scope);\n    // reader stats\n    manager.registerGauge(this, registry, () -> reader.numDocs(), true, \"numDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc(), true, \"maxDoc\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.maxDoc() - reader.numDocs(), true, \"deletedDocs\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.toString(), true, \"reader\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.directory().toString(), true, \"readerDir\", Category.SEARCHER.toString(), scope);\n    manager.registerGauge(this, registry, () -> reader.getVersion(), true, \"indexVersion\", Category.SEARCHER.toString(), scope);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bfc52860e6d13d034226a760813c59d984c6817a":["816521ebaad5add9cb96bb88c577394e2938c40b"],"43564cbb30b064675027cfb569564e8531096e97":["816521ebaad5add9cb96bb88c577394e2938c40b","bfc52860e6d13d034226a760813c59d984c6817a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}