{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","commits":[{"id":"56a558aa5aadd60ae850d1ab090098bc63bdfaf9","date":1355245333,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderProps(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 1000);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderProps(String collection, String shard) throws InterruptedException {\n    return getLeaderProps(collection, shard, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 1000);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8637442ad83c44fb10e3c0d2ddbb6c00600f2330","date":1385436640,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 2000);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81a9e7c59461b88de3589d2e666886221abeba31","date":1385778656,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 4000);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 2000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 4000);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0932eb10135843758b2ca508d5aa2b4798aa07f9","date":1426947197,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, GET_LEADER_RETRY_DEFAULT_TIMEOUT);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 4000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#getLeaderRetry(String,String).mjava","sourceNew":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, GET_LEADER_RETRY_DEFAULT_TIMEOUT);\n  }\n\n","sourceOld":"  /**\n   * Get shard leader properties, with retry if none exist.\n   */\n  public Replica getLeaderRetry(String collection, String shard) throws InterruptedException {\n    return getLeaderRetry(collection, shard, 4000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["81a9e7c59461b88de3589d2e666886221abeba31","0932eb10135843758b2ca508d5aa2b4798aa07f9"],"81a9e7c59461b88de3589d2e666886221abeba31":["8637442ad83c44fb10e3c0d2ddbb6c00600f2330"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["56a558aa5aadd60ae850d1ab090098bc63bdfaf9","81a9e7c59461b88de3589d2e666886221abeba31"],"0932eb10135843758b2ca508d5aa2b4798aa07f9":["81a9e7c59461b88de3589d2e666886221abeba31"],"56a558aa5aadd60ae850d1ab090098bc63bdfaf9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8637442ad83c44fb10e3c0d2ddbb6c00600f2330":["56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0932eb10135843758b2ca508d5aa2b4798aa07f9"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"81a9e7c59461b88de3589d2e666886221abeba31":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","0932eb10135843758b2ca508d5aa2b4798aa07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56a558aa5aadd60ae850d1ab090098bc63bdfaf9"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"0932eb10135843758b2ca508d5aa2b4798aa07f9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56a558aa5aadd60ae850d1ab090098bc63bdfaf9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","74f45af4339b0daf7a95c820ab88c1aea74fbce0","8637442ad83c44fb10e3c0d2ddbb6c00600f2330"],"8637442ad83c44fb10e3c0d2ddbb6c00600f2330":["81a9e7c59461b88de3589d2e666886221abeba31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}