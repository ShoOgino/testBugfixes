{"path":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest#testDedup().mjava","commits":[{"id":"a54410d37fe11baed59cc55dcad44db795f732c2","date":1430995912,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest#testDedup().mjava","pathOld":"/dev/null","sourceNew":"  public void testDedup() {\n    Query query1 = new TermsQuery(new Term(\"foo\", \"bar\"));\n    Query query2 = new TermsQuery(new Term(\"foo\", \"bar\"), new Term(\"foo\", \"bar\"));\n    QueryUtils.checkEqual(query1, query2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d73510b39df24d6b65de48e56f8dccb136b9d01","date":1483971905,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest#testDedup().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest#testDedup().mjava","sourceNew":"  public void testDedup() {\n    Query query1 = new TermInSetQuery(new Term(\"foo\", \"bar\"));\n    Query query2 = new TermInSetQuery(new Term(\"foo\", \"bar\"), new Term(\"foo\", \"bar\"));\n    QueryUtils.checkEqual(query1, query2);\n  }\n\n","sourceOld":"  public void testDedup() {\n    Query query1 = new TermsQuery(new Term(\"foo\", \"bar\"));\n    Query query2 = new TermsQuery(new Term(\"foo\", \"bar\"), new Term(\"foo\", \"bar\"));\n    QueryUtils.checkEqual(query1, query2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TermInSetQueryTest#testDedup().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TermsQueryTest#testDedup().mjava","sourceNew":"  public void testDedup() {\n    Query query1 = new TermInSetQuery(new Term(\"foo\", \"bar\"));\n    Query query2 = new TermInSetQuery(new Term(\"foo\", \"bar\"), new Term(\"foo\", \"bar\"));\n    QueryUtils.checkEqual(query1, query2);\n  }\n\n","sourceOld":"  public void testDedup() {\n    Query query1 = new TermsQuery(new Term(\"foo\", \"bar\"));\n    Query query2 = new TermsQuery(new Term(\"foo\", \"bar\"), new Term(\"foo\", \"bar\"));\n    QueryUtils.checkEqual(query1, query2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["a54410d37fe11baed59cc55dcad44db795f732c2"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a54410d37fe11baed59cc55dcad44db795f732c2","8d73510b39df24d6b65de48e56f8dccb136b9d01"],"a54410d37fe11baed59cc55dcad44db795f732c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d73510b39df24d6b65de48e56f8dccb136b9d01"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a54410d37fe11baed59cc55dcad44db795f732c2"],"8d73510b39df24d6b65de48e56f8dccb136b9d01":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"a54410d37fe11baed59cc55dcad44db795f732c2":["8d73510b39df24d6b65de48e56f8dccb136b9d01","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}