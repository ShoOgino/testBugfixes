{"path":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","commits":[{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b907a7568aa04bcad16628b3ede514dd0266ab","date":1392986355,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.shutdown();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.shutdown();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e0dfae671422e7453a9199aa320f91427cd80d60","date":1427895926,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    expectThrows(IllegalStateException.class, () -> {\n      new SearcherManager(w.w, false, false, theEvilOne);\n    });\n\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored, IndexReader previous) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, false, theEvilOne);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":["a9b907a7568aa04bcad16628b3ede514dd0266ab","c380c22ff3b659b2d7412a3335f853d354d17568"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0dfae671422e7453a9199aa320f91427cd80d60":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["68496c2200e559fb7802f7575427b7a482659afb"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a9b907a7568aa04bcad16628b3ede514dd0266ab":["c2045b132a2396bb23dff28d2d9f349a6907d36e"],"68496c2200e559fb7802f7575427b7a482659afb":["e0dfae671422e7453a9199aa320f91427cd80d60","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["a9b907a7568aa04bcad16628b3ede514dd0266ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["e0dfae671422e7453a9199aa320f91427cd80d60"],"0c924d4069ef5a5bc479a493befe0121aada6896":["d0ef034a4f10871667ae75181537775ddcf8ade4","e0dfae671422e7453a9199aa320f91427cd80d60"]},"commit2Childs":{"e0dfae671422e7453a9199aa320f91427cd80d60":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f","0c924d4069ef5a5bc479a493befe0121aada6896"],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["a9b907a7568aa04bcad16628b3ede514dd0266ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2045b132a2396bb23dff28d2d9f349a6907d36e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["e0dfae671422e7453a9199aa320f91427cd80d60","0c924d4069ef5a5bc479a493befe0121aada6896"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68496c2200e559fb7802f7575427b7a482659afb":["05fe562aa248790944d43cdd478f512572835ba0"],"a9b907a7568aa04bcad16628b3ede514dd0266ab":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0c924d4069ef5a5bc479a493befe0121aada6896":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0c924d4069ef5a5bc479a493befe0121aada6896"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}