{"path":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"/dev/null","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad87868b299ae70f519de3945968de8f3604216","date":1380203849,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, getSSLConfig());\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, getSSLConfig());\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", createTempDir().getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", createTempDir().getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", dataDir.getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.data.dir\", createTempDir().getCanonicalPath() );\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", solrHome);\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", solrHome);\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    jetty = new JettySolrRunner(solrHome, configFile, schemaFile, jettyConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", solrHome);\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties nodeProps = new Properties();\n    if (configFile != null)\n      nodeProps.setProperty(\"solrconfig\", configFile);\n    if (schemaFile != null)\n      nodeProps.setProperty(\"schema\", schemaFile);\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProps.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n\n    return createJetty(solrHome, nodeProps, jettyConfig);\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", solrHome);\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    jetty = new JettySolrRunner(solrHome, configFile, schemaFile, jettyConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties nodeProps = new Properties();\n    if (configFile != null)\n      nodeProps.setProperty(\"solrconfig\", configFile);\n    if (schemaFile != null)\n      nodeProps.setProperty(\"schema\", schemaFile);\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProps.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n\n    return createJetty(solrHome, nodeProps, jettyConfig);\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n    initCore(null, null, solrHome);\n\n    Path coresDir = createTempDir().resolve(\"cores\");\n\n    System.setProperty(\"coreRootDirectory\", coresDir.toString());\n    System.setProperty(\"configSetBaseDir\", solrHome);\n\n    Properties props = new Properties();\n    props.setProperty(\"name\", DEFAULT_TEST_CORENAME);\n    props.setProperty(\"configSet\", \"collection1\");\n    props.setProperty(\"config\", \"${solrconfig:solrconfig.xml}\");\n    props.setProperty(\"schema\", \"${schema:schema.xml}\");\n\n    writeCoreProperties(coresDir.resolve(\"core\"), props, \"RestTestBase\");\n\n    ignoreException(\"maxWarmingSearchers\");\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n    jetty = new JettySolrRunner(solrHome, context, 0, configFile, schemaFile, stopAtShutdown, extraServlets, sslConfig);\n\n    // this sets the property for jetty starting SolrDispatchFilter\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      jetty.setDataDir(createTempDir().toFile().getCanonicalPath());\n    }\n    \n    jetty.start();\n    port = jetty.getLocalPort();\n    log.info(\"Jetty Assigned Port#\" + port);\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createAndStartJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrJettyTestBase#createJetty(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static JettySolrRunner createAndStartJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties nodeProps = new Properties();\n    if (configFile != null)\n      nodeProps.setProperty(\"solrconfig\", configFile);\n    if (schemaFile != null)\n      nodeProps.setProperty(\"schema\", schemaFile);\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProps.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n\n    return createAndStartJetty(solrHome, nodeProps, jettyConfig);\n  }\n\n","sourceOld":"  public static JettySolrRunner createJetty(String solrHome, String configFile, String schemaFile, String context,\n                                            boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) \n      throws Exception { \n    // creates the data dir\n\n    context = context==null ? \"/solr\" : context;\n    SolrJettyTestBase.context = context;\n\n    JettyConfig jettyConfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(stopAtShutdown)\n        .withServlets(extraServlets)\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties nodeProps = new Properties();\n    if (configFile != null)\n      nodeProps.setProperty(\"solrconfig\", configFile);\n    if (schemaFile != null)\n      nodeProps.setProperty(\"schema\", schemaFile);\n    if (System.getProperty(\"solr.data.dir\") == null && System.getProperty(\"solr.hdfs.home\") == null) {\n      nodeProps.setProperty(\"solr.data.dir\", createTempDir().toFile().getCanonicalPath());\n    }\n\n    return createJetty(solrHome, nodeProps, jettyConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","19275ba31e621f6da1b83bf13af75233876fd3d4"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"2ad87868b299ae70f519de3945968de8f3604216":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["c66158bb16e902a21272772f1b911f04b1a55abb"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"f4abec28b874149a7223e32cc7a01704c27790de":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","9bc766d645fa848f86c381c7f6acf2c881c99399"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["2ad87868b299ae70f519de3945968de8f3604216"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"c66158bb16e902a21272772f1b911f04b1a55abb":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ad87868b299ae70f519de3945968de8f3604216":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2ad87868b299ae70f519de3945968de8f3604216"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c66158bb16e902a21272772f1b911f04b1a55abb":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}