{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallTest#doTestPivotStatsFromOneShard().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallTest#doTestPivotStatsFromOneShard().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * sanity check the stat values nested under a pivot when at least one shard\n   * has nothing but missing values for the stat\n   */\n  private void doTestPivotStatsFromOneShard() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \"rows\", \"0\", \n                               \"facet\", \"true\", \"stats\", \"true\", \n                               \"facet.pivot\", \"{!stats=s1}place_t,company_t\", \n                               \"stats.field\", \"{!tag=s1}solo_i\",\n                               \"stats.field\", \"{!tag=s1}solo_s\",\n                               \"stats.field\", \"{!tag=s1}solo_dt\");\n                               \n    QueryResponse rsp = query(params);\n\n    List<PivotField> placePivots = rsp.getFacetPivot().get(\"place_t,company_t\");\n\n    PivotField placePivot = placePivots.get(0);\n    assertEquals(\"dublin\", placePivot.getValue());\n    assertEquals(4, placePivot.getCount());\n\n    PivotField companyPivot = placePivot.getPivot().get(2);\n    assertEquals(\"null\", companyPivot.getValue());\n    assertEquals(3, companyPivot.getCount());\n\n    for (PivotField pf : new PivotField[] { placePivot, companyPivot }) {\n      assertThereCanBeOnlyOne(pf, pf.getFieldStatsInfo().get(\"solo_s\"), \"lonely\");\n\n      assertThereCanBeOnlyOne(pf, pf.getFieldStatsInfo().get(\"solo_i\"), 42.0D);\n      assertEquals(pf.getField()+\":\"+pf.getValue()+\": int mean\",\n                   42.0D, pf.getFieldStatsInfo().get(\"solo_i\").getMean());\n\n      Object expected = new Date(194923425000L); // 1976-03-06T01:23:45Z\n      assertThereCanBeOnlyOne(pf, pf.getFieldStatsInfo().get(\"solo_dt\"), expected);\n      assertEquals(pf.getField()+\":\"+pf.getValue()+\": date mean\",\n                   expected, pf.getFieldStatsInfo().get(\"solo_dt\").getMean());\n\n      // TODO: add enum field asserts - blocked by SOLR-6682\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"]},"commit2Childs":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}