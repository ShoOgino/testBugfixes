{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"561c2351baf6dd64061addef891359954c1a7faa","date":1462788487,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    zkServer.buildZooKeeper(getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":["709ec1e7204705625cbd074102a6ced459df9c99"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n\n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n\n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    zkServer.buildZooKeeper(getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    zkServer.buildZooKeeper(getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n\n    Path zkDir = testDir.toPath().resolve(\"zookeeper/server1/data\");\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n\n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    zkServer.buildZooKeeper(getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n\n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n\n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getCloudSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    zkServer.buildZooKeeper(getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66a459d38c1c4a2f97128433dab546f683a9fed":["abb23fcc2461782ab204e61213240feb77d355aa","561c2351baf6dd64061addef891359954c1a7faa"],"561c2351baf6dd64061addef891359954c1a7faa":["abb23fcc2461782ab204e61213240feb77d355aa"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["abb23fcc2461782ab204e61213240feb77d355aa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["abb23fcc2461782ab204e61213240feb77d355aa","561c2351baf6dd64061addef891359954c1a7faa"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"abb23fcc2461782ab204e61213240feb77d355aa":["e66a459d38c1c4a2f97128433dab546f683a9fed","561c2351baf6dd64061addef891359954c1a7faa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"561c2351baf6dd64061addef891359954c1a7faa":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}