{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) throws IOException {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) throws IOException {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) throws IOException {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","bugFix":["31c92b5d86c8bada7f558f974c8bf43e304bea3e"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) throws IOException {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f45457a742a53533c348c4b990b1c579ff364467","date":1353197071,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final int[] values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values[doc];\n        }\n      };\n    }\n\n","bugFix":["31c92b5d86c8bada7f558f974c8bf43e304bea3e","61e20f33ce8ff701576366fdb03955eded5f209b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), INT_FIELD);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), INT_FIELD);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), INT_FIELD);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final FieldCache.Ints values = FieldCache.DEFAULT.getInts(context.reader(), INT_FIELD, false);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery.CustomExternalQuery#getCustomScoreProvider(AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected CustomScoreProvider getCustomScoreProvider(AtomicReaderContext context) throws IOException {\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), INT_FIELD);\n      return new CustomScoreProvider(context) {\n        @Override\n        public float customScore(int doc, float subScore, float valSrcScore) {\n          assertTrue(doc <= context.reader().maxDoc());\n          return values.get(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"56572ec06f1407c066d6b7399413178b33176cd8":["19275ba31e621f6da1b83bf13af75233876fd3d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"f45457a742a53533c348c4b990b1c579ff364467":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","f45457a742a53533c348c4b990b1c579ff364467"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["19275ba31e621f6da1b83bf13af75233876fd3d4","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f45457a742a53533c348c4b990b1c579ff364467":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["f45457a742a53533c348c4b990b1c579ff364467","d4d69c535930b5cce125cff868d40f6373dc27d4","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}