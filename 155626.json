{"path":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandlerApi#createMapping().mjava","commits":[{"id":"81e895c48138613a33de7e1609d4c41cc5832b82","date":1494496160,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandlerApi#createMapping().mjava","pathOld":"/dev/null","sourceNew":"  private static Collection<ApiCommand> createMapping() {\n    Map<ConfigSetMeta, ApiCommand> result = new EnumMap<>(ConfigSetMeta.class);\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values())\n      for (ConfigSetOperation op : ConfigSetOperation.values()) {\n        if (op.action == meta.action) {\n          result.put(meta, new ApiCommand() {\n            @Override\n            public CollectionApiMapping.CommandMeta meta() {\n              return meta;\n            }\n\n            @Override\n            public void invoke(SolrQueryRequest req, SolrQueryResponse rsp, BaseHandlerApiSupport apiHandler) throws Exception {\n              ((ConfigSetsHandlerApi) apiHandler).configSetHandler.invokeAction(req, rsp, op.action);\n            }\n          });\n        }\n      }\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values()) {\n      if(result.get(meta) == null){\n        throw new RuntimeException(\"No implementation for \"+ meta.name());\n      }\n    }\n\n    return result.values();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360b3962efc30aa8b2c39c3087aa36069674bbe7","date":1494557674,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandlerApi#createMapping().mjava","pathOld":"/dev/null","sourceNew":"  private static Collection<ApiCommand> createMapping() {\n    Map<ConfigSetMeta, ApiCommand> result = new EnumMap<>(ConfigSetMeta.class);\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values())\n      for (ConfigSetOperation op : ConfigSetOperation.values()) {\n        if (op.action == meta.action) {\n          result.put(meta, new ApiCommand() {\n            @Override\n            public CollectionApiMapping.CommandMeta meta() {\n              return meta;\n            }\n\n            @Override\n            public void invoke(SolrQueryRequest req, SolrQueryResponse rsp, BaseHandlerApiSupport apiHandler) throws Exception {\n              ((ConfigSetsHandlerApi) apiHandler).configSetHandler.invokeAction(req, rsp, op.action);\n            }\n          });\n        }\n      }\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values()) {\n      if(result.get(meta) == null){\n        throw new RuntimeException(\"No implementation for \"+ meta.name());\n      }\n    }\n\n    return result.values();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandlerApi#createMapping().mjava","pathOld":"/dev/null","sourceNew":"  private static Collection<ApiCommand> createMapping() {\n    Map<ConfigSetMeta, ApiCommand> result = new EnumMap<>(ConfigSetMeta.class);\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values())\n      for (ConfigSetOperation op : ConfigSetOperation.values()) {\n        if (op.action == meta.action) {\n          result.put(meta, new ApiCommand() {\n            @Override\n            public CollectionApiMapping.CommandMeta meta() {\n              return meta;\n            }\n\n            @Override\n            public void invoke(SolrQueryRequest req, SolrQueryResponse rsp, BaseHandlerApiSupport apiHandler) throws Exception {\n              ((ConfigSetsHandlerApi) apiHandler).configSetHandler.invokeAction(req, rsp, op.action);\n            }\n          });\n        }\n      }\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values()) {\n      if(result.get(meta) == null){\n        throw new RuntimeException(\"No implementation for \"+ meta.name());\n      }\n    }\n\n    return result.values();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1852cb03cf4922477072449dd9de2fab588d1adb","date":1600862151,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ConfigSetsHandlerApi#createMapping().mjava","sourceNew":null,"sourceOld":"  private static Collection<ApiCommand> createMapping() {\n    Map<ConfigSetMeta, ApiCommand> result = new EnumMap<>(ConfigSetMeta.class);\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values())\n      for (ConfigSetOperation op : ConfigSetOperation.values()) {\n        if (op.action == meta.action) {\n          result.put(meta, new ApiCommand() {\n            @Override\n            public CollectionApiMapping.CommandMeta meta() {\n              return meta;\n            }\n\n            @Override\n            public void invoke(SolrQueryRequest req, SolrQueryResponse rsp, BaseHandlerApiSupport apiHandler) throws Exception {\n              ((ConfigSetsHandlerApi) apiHandler).configSetHandler.invokeAction(req, rsp, op.action);\n            }\n          });\n        }\n      }\n\n    for (ConfigSetMeta meta : ConfigSetMeta.values()) {\n      if(result.get(meta) == null){\n        throw new RuntimeException(\"No implementation for \"+ meta.name());\n      }\n    }\n\n    return result.values();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","360b3962efc30aa8b2c39c3087aa36069674bbe7"],"81e895c48138613a33de7e1609d4c41cc5832b82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"360b3962efc30aa8b2c39c3087aa36069674bbe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81e895c48138613a33de7e1609d4c41cc5832b82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1852cb03cf4922477072449dd9de2fab588d1adb":["360b3962efc30aa8b2c39c3087aa36069674bbe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1852cb03cf4922477072449dd9de2fab588d1adb"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"81e895c48138613a33de7e1609d4c41cc5832b82":["360b3962efc30aa8b2c39c3087aa36069674bbe7"],"360b3962efc30aa8b2c39c3087aa36069674bbe7":["e9017cf144952056066919f1ebc7897ff9bd71b1","1852cb03cf4922477072449dd9de2fab588d1adb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","81e895c48138613a33de7e1609d4c41cc5832b82","360b3962efc30aa8b2c39c3087aa36069674bbe7"],"1852cb03cf4922477072449dd9de2fab588d1adb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}