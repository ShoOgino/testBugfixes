{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#readChar().mjava","commits":[{"id":"07904fa7a96affc72ebc1658bdbbe4c227843a11","date":1345657879,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#readChar().mjava","pathOld":"/dev/null","sourceNew":"  protected int readChar() throws IOException {\n    switch(random.nextInt(10)) {\n      case 0: {\n        // read(char[])\n        char c[] = new char[1];\n        int ret = input.read(c);\n        return ret < 0 ? ret : c[0];\n      }\n      case 1: {\n        // read(char[], int, int)\n        char c[] = new char[2];\n        int ret = input.read(c, 1, 1);\n        return ret < 0 ? ret : c[1];\n      }\n      case 2: {\n        // read(CharBuffer)\n        char c[] = new char[1];\n        CharBuffer cb = CharBuffer.wrap(c);\n        int ret = input.read(cb);\n        return ret < 0 ? ret : c[0];\n      }\n      default: \n        // read()\n        return input.read();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#readChar().mjava","pathOld":"/dev/null","sourceNew":"  protected int readChar() throws IOException {\n    switch(random.nextInt(10)) {\n      case 0: {\n        // read(char[])\n        char c[] = new char[1];\n        int ret = input.read(c);\n        return ret < 0 ? ret : c[0];\n      }\n      case 1: {\n        // read(char[], int, int)\n        char c[] = new char[2];\n        int ret = input.read(c, 1, 1);\n        return ret < 0 ? ret : c[1];\n      }\n      case 2: {\n        // read(CharBuffer)\n        char c[] = new char[1];\n        CharBuffer cb = CharBuffer.wrap(c);\n        int ret = input.read(cb);\n        return ret < 0 ? ret : c[0];\n      }\n      default: \n        // read()\n        return input.read();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07904fa7a96affc72ebc1658bdbbe4c227843a11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07904fa7a96affc72ebc1658bdbbe4c227843a11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07904fa7a96affc72ebc1658bdbbe4c227843a11"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","07904fa7a96affc72ebc1658bdbbe4c227843a11"],"07904fa7a96affc72ebc1658bdbbe4c227843a11":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}