{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#containsTriangle(int,int,int,int,int,int).mjava","commits":[{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#containsTriangle(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Checks if the rectangle contains the provided triangle\n     **/\n    boolean containsTriangle(int ax, int ay, int bx, int by, int cx, int cy) {\n      if (this.crossesDateline() == true) {\n        return bboxContainsTriangle(ax, ay, bx, by, cx, cy, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n            || bboxContainsTriangle(ax, ay, bx, by, cx, cy, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n      }\n      return bboxContainsTriangle(ax, ay, bx, by, cx, cy, minX, maxX, minY, maxY);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#containsTriangle(int,int,int,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#containsTriangle(int,int,int,int,int,int).mjava","sourceNew":"    /**\n     * Checks if the rectangle contains the provided triangle\n     **/\n    boolean containsTriangle(int aX, int aY, int bX, int bY, int cX, int cY) {\n      if (aY < minY || bY < minY || cY < minY ||\n          aY > maxY || bY > maxY || cY > maxY) {\n        return false;\n      }\n      if (crossesDateline) { // crosses dateline\n        return (aX >= minX && bX >= minX && cX >= minX) ||\n               (aX <= maxX && bX <= maxX && cX <= maxX);\n      } else {\n        return aX >= minX && bX >= minX && cX >= minX &&\n               aX <= maxX && bX <= maxX && cX <= maxX;\n      }\n    }\n\n","sourceOld":"    /**\n     * Checks if the rectangle contains the provided triangle\n     **/\n    boolean containsTriangle(int ax, int ay, int bx, int by, int cx, int cy) {\n      if (this.crossesDateline() == true) {\n        return bboxContainsTriangle(ax, ay, bx, by, cx, cy, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n            || bboxContainsTriangle(ax, ay, bx, by, cx, cy, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n      }\n      return bboxContainsTriangle(ax, ay, bx, by, cx, cy, minX, maxX, minY, maxY);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c568a1e2a5125c2245150eebb030a81baa158b31":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["c568a1e2a5125c2245150eebb030a81baa158b31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}