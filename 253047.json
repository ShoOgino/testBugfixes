{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","commits":[{"id":"f1cd9cffef251190badd40d1da8b604d0185d744","date":1421390175,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      // quiet down the ZK logging for cli tools\n      LogManager.getLogger(\"org.apache.zookeeper\").setLevel(Level.ERROR);\n      LogManager.getLogger(\"org.apache.solr.common.cloud\").setLevel(Level.WARN);\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["22440a249a0bc8ef779d5a60720725614a9460d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22440a249a0bc8ef779d5a60720725614a9460d4","date":1432375174,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      // quiet down the ZK logging for cli tools\n      LogManager.getLogger(\"org.apache.zookeeper\").setLevel(Level.ERROR);\n      LogManager.getLogger(\"org.apache.solr.common.cloud\").setLevel(Level.WARN);\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      // quiet down the ZK logging for cli tools\n      LogManager.getLogger(\"org.apache.zookeeper\").setLevel(Level.ERROR);\n      LogManager.getLogger(\"org.apache.solr.common.cloud\").setLevel(Level.WARN);\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", \"http://localhost:8983/solr\");\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":["f1cd9cffef251190badd40d1da8b604d0185d744"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1a70d04f6bb2fdf51a08d4d2cb919057f29f0b1","date":1437834887,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","sourceNew":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      // quiet down the ZK logging for cli tools\n      LogManager.getLogger(\"org.apache.zookeeper\").setLevel(Level.ERROR);\n      LogManager.getLogger(\"org.apache.solr.common.cloud\").setLevel(Level.WARN);\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":5,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.DeleteTool#runTool(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          deleteCollection(cli);\n        } else {\n          deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n    }\n\n","sourceOld":"    @Override\n    public int runTool(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n\n      int result = 0;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          result = deleteCollection(cli);\n        } else {\n          result = deleteCore(cli, httpClient, solrUrl);\n        }\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["c1a70d04f6bb2fdf51a08d4d2cb919057f29f0b1"],"22440a249a0bc8ef779d5a60720725614a9460d4":["f1cd9cffef251190badd40d1da8b604d0185d744"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1a70d04f6bb2fdf51a08d4d2cb919057f29f0b1":["22440a249a0bc8ef779d5a60720725614a9460d4"],"f1cd9cffef251190badd40d1da8b604d0185d744":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ca20be81c9284c840498143264e583ccbb8525a"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"22440a249a0bc8ef779d5a60720725614a9460d4":["c1a70d04f6bb2fdf51a08d4d2cb919057f29f0b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1cd9cffef251190badd40d1da8b604d0185d744"],"c1a70d04f6bb2fdf51a08d4d2cb919057f29f0b1":["4ca20be81c9284c840498143264e583ccbb8525a"],"f1cd9cffef251190badd40d1da8b604d0185d744":["22440a249a0bc8ef779d5a60720725614a9460d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}