{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","sourceNew":"  @Override\n  protected List<CategoryPath> getCategories(int doc) {\n    nextInt(doc);\n    CategoryPath cp = new CategoryPath(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","sourceOld":"  @Override\n  protected List<CategoryPath> getCategories(int doc) {\n    nextInt(doc);\n    CategoryPath cp = new CategoryPath(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","sourceNew":"  @Override\n  protected List<FacetLabel> getCategories(int doc) {\n    nextInt(doc);\n    FacetLabel cp = new FacetLabel(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","sourceOld":"  @Override\n  protected List<CategoryPath> getCategories(int doc) {\n    nextInt(doc);\n    CategoryPath cp = new CategoryPath(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected List<FacetLabel> getCategories(int doc) {\n    nextInt(doc);\n    FacetLabel cp = new FacetLabel(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/BaseTestTopK#getCategories(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected List<CategoryPath> getCategories(int doc) {\n    nextInt(doc);\n    CategoryPath cp = new CategoryPath(\n        \"a\", \n        Integer.toString(nextInt / 1000), \n        Integer.toString(nextInt / 100), \n        Integer.toString(nextInt / 10));\n    if (VERBOSE) {\n      System.out.println(\"Adding CP: \" + cp.toString());\n    }\n    return Arrays.asList(cp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}