{"path":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","commits":[{"id":"46dfcd540005e76a7db876d494ac74e82c476523","date":1229095104,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/ExtractingRequestHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        try {\n          config = TikaConfig.getDefaultConfig();\n        } catch (TikaException e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        while (configDateFormats.iterator().hasNext()) {\n          String format = (String) configDateFormats.iterator().next();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      try {\n        config = TikaConfig.getDefaultConfig();\n      } catch (TikaException e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, e);\n      }\n    }\n    factory = createFactory();\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        try {\n          config = TikaConfig.getDefaultConfig();\n        } catch (TikaException e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        while (configDateFormats.iterator().hasNext()) {\n          String format = (String) configDateFormats.iterator().next();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      try {\n        config = TikaConfig.getDefaultConfig();\n      } catch (TikaException e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, e);\n      }\n    }\n    factory = createFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4886761bee3fd761629164350d8c47d0352f548","date":1258906729,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        config = TikaConfig.getDefaultConfig();\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        while (configDateFormats.iterator().hasNext()) {\n          String format = (String) configDateFormats.iterator().next();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      config = TikaConfig.getDefaultConfig();\n    }\n    factory = createFactory();\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        try {\n          config = TikaConfig.getDefaultConfig();\n        } catch (TikaException e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        while (configDateFormats.iterator().hasNext()) {\n          String format = (String) configDateFormats.iterator().next();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      try {\n        config = TikaConfig.getDefaultConfig();\n      } catch (TikaException e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, e);\n      }\n    }\n    factory = createFactory();\n  }\n\n","bugFix":null,"bugIntro":["623193e0f05f138bdb5a54e0d149ab4ce4bf51f5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3298d580b9fd7c02c8a8106dd0a7321937be45b2","date":1265301371,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        config = TikaConfig.getDefaultConfig();\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        Iterator<Map.Entry> it = configDateFormats.iterator();\n        while (it.hasNext()) {\n          String format = (String) it.next().getValue();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      config = TikaConfig.getDefaultConfig();\n    }\n    factory = createFactory();\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        config = TikaConfig.getDefaultConfig();\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        while (configDateFormats.iterator().hasNext()) {\n          String format = (String) configDateFormats.iterator().next();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      config = TikaConfig.getDefaultConfig();\n    }\n    factory = createFactory();\n  }\n\n","bugFix":["868e0ed16bb29556f95c00e989da33ab5c9dfe56"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingRequestHandler#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        config = TikaConfig.getDefaultConfig();\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        Iterator<Map.Entry> it = configDateFormats.iterator();\n        while (it.hasNext()) {\n          String format = (String) it.next().getValue();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      config = TikaConfig.getDefaultConfig();\n    }\n    factory = createFactory();\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    if (initArgs != null) {\n      //if relative,then relative to config dir, otherwise, absolute path\n      String tikaConfigLoc = (String) initArgs.get(CONFIG_LOCATION);\n      if (tikaConfigLoc != null) {\n        File configFile = new File(tikaConfigLoc);\n        if (configFile.isAbsolute() == false) {\n          configFile = new File(core.getResourceLoader().getConfigDir(), configFile.getPath());\n        }\n        try {\n          config = new TikaConfig(configFile);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR, e);\n        }\n      } else {\n        config = TikaConfig.getDefaultConfig();\n      }\n      NamedList configDateFormats = (NamedList) initArgs.get(DATE_FORMATS);\n      if (configDateFormats != null && configDateFormats.size() > 0) {\n        dateFormats = new HashSet<String>();\n        Iterator<Map.Entry> it = configDateFormats.iterator();\n        while (it.hasNext()) {\n          String format = (String) it.next().getValue();\n          log.info(\"Adding Date Format: \" + format);\n          dateFormats.add(format);\n        }\n      }\n    } else {\n      config = TikaConfig.getDefaultConfig();\n    }\n    factory = createFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3298d580b9fd7c02c8a8106dd0a7321937be45b2"],"f4886761bee3fd761629164350d8c47d0352f548":["46dfcd540005e76a7db876d494ac74e82c476523"],"3298d580b9fd7c02c8a8106dd0a7321937be45b2":["f4886761bee3fd761629164350d8c47d0352f548"],"46dfcd540005e76a7db876d494ac74e82c476523":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["46dfcd540005e76a7db876d494ac74e82c476523"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f4886761bee3fd761629164350d8c47d0352f548":["3298d580b9fd7c02c8a8106dd0a7321937be45b2"],"3298d580b9fd7c02c8a8106dd0a7321937be45b2":["ad94625fb8d088209f46650c8097196fec67f00c"],"46dfcd540005e76a7db876d494ac74e82c476523":["f4886761bee3fd761629164350d8c47d0352f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}