{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","commits":[{"id":"79854637616b791a00f39ee3d5257ea093804ddb","date":1422697309,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Handle trailing spaces that result in no prefix token LUCENE-6093\n   */\n  public void testNullPrefixToken() throws IOException {\n\n    BytesRef payload = new BytesRef(\"lake\");\n\n    Input keys[] = new Input[]{\n        new Input(\"top of the lake\", 8, payload)\n    };\n\n    Path tempDir = createTempDir(\"BlendedInfixSuggesterTest\");\n\n    Analyzer a = new StandardAnalyzer(CharArraySet.EMPTY_SET);\n    BlendedInfixSuggester suggester = new BlendedInfixSuggester(newFSDirectory(tempDir), a, a,\n                                                                AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS,\n                                                                BlendedInfixSuggester.BlenderType.POSITION_LINEAR,\n                                                                BlendedInfixSuggester.DEFAULT_NUM_FACTOR, false);\n    suggester.build(new InputArrayIterator(keys));\n\n    getInResults(suggester, \"of \", payload, 1);\n    getInResults(suggester, \"the \", payload, 1);\n    getInResults(suggester, \"lake \", payload, 1);\n\n    suggester.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8712eb1280636aa9e2103ef8ad56ec19641709ea","date":1527853961,"type":3,"author":"Alessandro Benedetti","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","sourceNew":"  /**\n   * Handle trailing spaces that result in no prefix token LUCENE-6093\n   */\n  public void testNullPrefixToken() throws IOException {\n\n    BytesRef payload = new BytesRef(\"lake\");\n\n    Input keys[] = new Input[]{\n        new Input(\"top of the lake\", 8, payload)\n    };\n\n    BlendedInfixSuggester suggester = getBlendedInfixSuggester(keys);\n\n    getInResults(suggester, \"of \", payload, 1);\n    getInResults(suggester, \"the \", payload, 1);\n    getInResults(suggester, \"lake \", payload, 1);\n\n    suggester.close();\n  }\n\n","sourceOld":"  /**\n   * Handle trailing spaces that result in no prefix token LUCENE-6093\n   */\n  public void testNullPrefixToken() throws IOException {\n\n    BytesRef payload = new BytesRef(\"lake\");\n\n    Input keys[] = new Input[]{\n        new Input(\"top of the lake\", 8, payload)\n    };\n\n    Path tempDir = createTempDir(\"BlendedInfixSuggesterTest\");\n\n    Analyzer a = new StandardAnalyzer(CharArraySet.EMPTY_SET);\n    BlendedInfixSuggester suggester = new BlendedInfixSuggester(newFSDirectory(tempDir), a, a,\n                                                                AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS,\n                                                                BlendedInfixSuggester.BlenderType.POSITION_LINEAR,\n                                                                BlendedInfixSuggester.DEFAULT_NUM_FACTOR, false);\n    suggester.build(new InputArrayIterator(keys));\n\n    getInResults(suggester, \"of \", payload, 1);\n    getInResults(suggester, \"the \", payload, 1);\n    getInResults(suggester, \"lake \", payload, 1);\n\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c158eec2b5219a049e3632d30502d2d0f25d35dd","date":1536681820,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggesterTest#testNullPrefixToken().mjava","sourceNew":"  /**\n   * Handle trailing spaces that result in no prefix token LUCENE-6093\n   */\n  public void testNullPrefixToken() throws IOException {\n\n    BytesRef payload = new BytesRef(\"lake\");\n\n    Input keys[] = new Input[]{\n        new Input(\"top of the lake\", 8, payload)\n    };\n\n    BlendedInfixSuggester suggester = getBlendedInfixSuggester(keys);\n\n    getInResults(suggester, \"of \", payload, 1);\n    getInResults(suggester, \"the \", payload, 1);\n    getInResults(suggester, \"lake \", payload, 1);\n\n    suggester.close();\n  }\n\n","sourceOld":"  /**\n   * Handle trailing spaces that result in no prefix token LUCENE-6093\n   */\n  public void testNullPrefixToken() throws IOException {\n\n    BytesRef payload = new BytesRef(\"lake\");\n\n    Input keys[] = new Input[]{\n        new Input(\"top of the lake\", 8, payload)\n    };\n\n    Path tempDir = createTempDir(\"BlendedInfixSuggesterTest\");\n\n    Analyzer a = new StandardAnalyzer(CharArraySet.EMPTY_SET);\n    BlendedInfixSuggester suggester = new BlendedInfixSuggester(newFSDirectory(tempDir), a, a,\n                                                                AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS,\n                                                                BlendedInfixSuggester.BlenderType.POSITION_LINEAR,\n                                                                BlendedInfixSuggester.DEFAULT_NUM_FACTOR, false);\n    suggester.build(new InputArrayIterator(keys));\n\n    getInResults(suggester, \"of \", payload, 1);\n    getInResults(suggester, \"the \", payload, 1);\n    getInResults(suggester, \"lake \", payload, 1);\n\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8712eb1280636aa9e2103ef8ad56ec19641709ea":["79854637616b791a00f39ee3d5257ea093804ddb"],"79854637616b791a00f39ee3d5257ea093804ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c158eec2b5219a049e3632d30502d2d0f25d35dd":["79854637616b791a00f39ee3d5257ea093804ddb","8712eb1280636aa9e2103ef8ad56ec19641709ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c158eec2b5219a049e3632d30502d2d0f25d35dd"]},"commit2Childs":{"8712eb1280636aa9e2103ef8ad56ec19641709ea":["c158eec2b5219a049e3632d30502d2d0f25d35dd"],"79854637616b791a00f39ee3d5257ea093804ddb":["8712eb1280636aa9e2103ef8ad56ec19641709ea","c158eec2b5219a049e3632d30502d2d0f25d35dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79854637616b791a00f39ee3d5257ea093804ddb"],"c158eec2b5219a049e3632d30502d2d0f25d35dd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}