{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","pathOld":"/dev/null","sourceNew":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3));\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","pathOld":"/dev/null","sourceNew":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3));\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","sourceNew":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","sourceOld":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3));\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","sourceNew":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeDecimalInterval(17, 100, 3),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","sourceOld":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testInterval().mjava","sourceNew":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeDecimalInterval(17, 100, 3),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","sourceOld":"  public void testInterval() throws Exception {\n    Automaton a = Operations.determinize(Automata.makeInterval(17, 100, 3),\n      DEFAULT_MAX_DETERMINIZED_STATES);\n    assertFalse(Operations.run(a, \"\"));\n    assertTrue(Operations.run(a, \"017\"));\n    assertTrue(Operations.run(a, \"100\"));\n    assertTrue(Operations.run(a, \"073\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2638f781be724518ff6c2263d14a48cf6e68017":["8b316f82baae88f5e279893a9cb7eee51fd8902f","3e8715d826e588419327562287d5d6a8040d63d6"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["5c84485629d80d203608e8975a1139de9933cc38"],"3e8715d826e588419327562287d5d6a8040d63d6":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c84485629d80d203608e8975a1139de9933cc38":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}