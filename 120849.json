{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","commits":[{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, Field.Store.YES,\n          Field.Index.ANALYZED));\n      doc.add(newField(\"id\", docsContent[i].id, Field.Store.YES,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    searcher = new IndexSearcher(rd, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    analyzer = new MockAnalyzer(random());\n    rd = newDirectory();\n    IndexWriter w = new IndexWriter(rd, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (int i = 0; i < docsContent.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"name\", docsContent[i].name, TextField.TYPE_STORED));\n      doc.add(newField(\"id\", docsContent[i].id, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    reader = IndexReader.open(rd);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"a53a291ad9b1cc050d846b68758c061a55d52734":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}