{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","commits":[{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  FieldsIndexWriter(Directory dir, String name, String suffix, String extension,\n      String codecName, byte[] id, int blockShift, IOContext ioContext) throws IOException {\n    this.dir = dir;\n    this.name = name;\n    this.suffix = suffix;\n    this.extension = extension;\n    this.codecName = codecName;\n    this.id = id;\n    this.blockShift = blockShift;\n    this.ioContext = ioContext;\n    this.docsOut = dir.createTempOutput(name, \"doc_ids\", ioContext);\n    IndexOutput filePointersOut = null;\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(docsOut, codecName + \"Docs\", VERSION_CURRENT);\n      this.filePointersOut = filePointersOut = dir.createTempOutput(name, \"file_pointers\", ioContext);\n      CodecUtil.writeHeader(filePointersOut, codecName + \"FilePointers\", VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (success == false) {\n        docsOut.close();\n        dir.deleteFile(docsOut.getName());\n        if (filePointersOut != null) {\n          filePointersOut.close();\n          dir.deleteFile(filePointersOut.getName());\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37f97027a67a589a82403bb0629532f53c8c5938","date":1580974053,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","sourceNew":"  FieldsIndexWriter(Directory dir, String name, String suffix, String extension,\n      String codecName, byte[] id, int blockShift, IOContext ioContext) throws IOException {\n    this.dir = dir;\n    this.name = name;\n    this.suffix = suffix;\n    this.extension = extension;\n    this.codecName = codecName;\n    this.id = id;\n    this.blockShift = blockShift;\n    this.ioContext = ioContext;\n    this.docsOut = dir.createTempOutput(name, codecName + \"-doc_ids\", ioContext);\n    IndexOutput filePointersOut = null;\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(docsOut, codecName + \"Docs\", VERSION_CURRENT);\n      this.filePointersOut = filePointersOut = dir.createTempOutput(name, codecName + \"file_pointers\", ioContext);\n      CodecUtil.writeHeader(filePointersOut, codecName + \"FilePointers\", VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (success == false) {\n        docsOut.close();\n        dir.deleteFile(docsOut.getName());\n        if (filePointersOut != null) {\n          filePointersOut.close();\n          dir.deleteFile(filePointersOut.getName());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  FieldsIndexWriter(Directory dir, String name, String suffix, String extension,\n      String codecName, byte[] id, int blockShift, IOContext ioContext) throws IOException {\n    this.dir = dir;\n    this.name = name;\n    this.suffix = suffix;\n    this.extension = extension;\n    this.codecName = codecName;\n    this.id = id;\n    this.blockShift = blockShift;\n    this.ioContext = ioContext;\n    this.docsOut = dir.createTempOutput(name, \"doc_ids\", ioContext);\n    IndexOutput filePointersOut = null;\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(docsOut, codecName + \"Docs\", VERSION_CURRENT);\n      this.filePointersOut = filePointersOut = dir.createTempOutput(name, \"file_pointers\", ioContext);\n      CodecUtil.writeHeader(filePointersOut, codecName + \"FilePointers\", VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (success == false) {\n        docsOut.close();\n        dir.deleteFile(docsOut.getName());\n        if (filePointersOut != null) {\n          filePointersOut.close();\n          dir.deleteFile(filePointersOut.getName());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe00d8e04108ad8640563c2a3515fc004d8eb8","date":1581005608,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/FieldsIndexWriter#FieldsIndexWriter(Directory,String,String,String,String,byte[],int,IOContext).mjava","sourceNew":"  FieldsIndexWriter(Directory dir, String name, String suffix, String extension,\n      String codecName, byte[] id, int blockShift, IOContext ioContext) throws IOException {\n    this.dir = dir;\n    this.name = name;\n    this.suffix = suffix;\n    this.extension = extension;\n    this.codecName = codecName;\n    this.id = id;\n    this.blockShift = blockShift;\n    this.ioContext = ioContext;\n    this.docsOut = dir.createTempOutput(name, codecName + \"-doc_ids\", ioContext);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(docsOut, codecName + \"Docs\", VERSION_CURRENT);\n      filePointersOut = dir.createTempOutput(name, codecName + \"file_pointers\", ioContext);\n      CodecUtil.writeHeader(filePointersOut, codecName + \"FilePointers\", VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (success == false) {\n        close();\n      }\n    }\n  }\n\n","sourceOld":"  FieldsIndexWriter(Directory dir, String name, String suffix, String extension,\n      String codecName, byte[] id, int blockShift, IOContext ioContext) throws IOException {\n    this.dir = dir;\n    this.name = name;\n    this.suffix = suffix;\n    this.extension = extension;\n    this.codecName = codecName;\n    this.id = id;\n    this.blockShift = blockShift;\n    this.ioContext = ioContext;\n    this.docsOut = dir.createTempOutput(name, codecName + \"-doc_ids\", ioContext);\n    IndexOutput filePointersOut = null;\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(docsOut, codecName + \"Docs\", VERSION_CURRENT);\n      this.filePointersOut = filePointersOut = dir.createTempOutput(name, codecName + \"file_pointers\", ioContext);\n      CodecUtil.writeHeader(filePointersOut, codecName + \"FilePointers\", VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (success == false) {\n        docsOut.close();\n        dir.deleteFile(docsOut.getName());\n        if (filePointersOut != null) {\n          filePointersOut.close();\n          dir.deleteFile(filePointersOut.getName());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09fe00d8e04108ad8640563c2a3515fc004d8eb8":["37f97027a67a589a82403bb0629532f53c8c5938"],"37f97027a67a589a82403bb0629532f53c8c5938":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09fe00d8e04108ad8640563c2a3515fc004d8eb8"]},"commit2Childs":{"70a4487b07c49a1861c05720e04624826ecbe9fa":["37f97027a67a589a82403bb0629532f53c8c5938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70a4487b07c49a1861c05720e04624826ecbe9fa"],"09fe00d8e04108ad8640563c2a3515fc004d8eb8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37f97027a67a589a82403bb0629532f53c8c5938":["09fe00d8e04108ad8640563c2a3515fc004d8eb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}