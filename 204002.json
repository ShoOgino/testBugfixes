{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","commits":[{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   */\n  public Collection<String> getAllCoreNames() {\n    return coreMaps.getAllCoreNames();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   */\n  public Collection<String> getAllCoreNames() {\n    return coreMaps.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   *\n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   *\n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   *\n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7871f9c286dce2a9370bcf517a3e7d12e3bd9602","date":1498708934,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   * @return a list of all the available core names in either permanent or transient cores\n   *\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   *\n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   * @return a list of all the available core names in either permanent or transient cores\n   *\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   * \n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   * @return a list of all the available core names in either permanent or transient cores\n   *\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently loaded\n   * @return a list of al lthe available core names in either permanent or transient core lists.\n   *\n   * Note: this implies that the core is loaded\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   *\n   * @return a list of all the available core names in either permanent or transient cores\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   * @return a list of all the available core names in either permanent or transient cores\n   *\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"520854ee68595e9da7b09828103cea7f22e357ee","date":1593748577,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getAllCoreNames().mjava","sourceNew":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   *\n   * @return a list of all the available core names in either permanent or transient cores\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n  }\n\n","sourceOld":"  /**\n   * get a list of all the cores that are currently known, whether currently loaded or not\n   *\n   * @return a list of all the available core names in either permanent or transient cores\n   */\n  public Collection<String> getAllCoreNames() {\n    return solrCores.getAllCoreNames();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["9409650933cc688e77e565092a25e58adfc2e18d"],"520854ee68595e9da7b09828103cea7f22e357ee":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"7871f9c286dce2a9370bcf517a3e7d12e3bd9602":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"30c8e5574b55d57947e989443dfde611646530ee":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["9409650933cc688e77e565092a25e58adfc2e18d"],"28288370235ed02234a64753cdbf0c6ec096304a":["9435d55e3ea95c5d94406d3affc36f9505b6a736","7871f9c286dce2a9370bcf517a3e7d12e3bd9602"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["8b6a4b585aed7660a589375f6a09b90efd29c961","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["28288370235ed02234a64753cdbf0c6ec096304a"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["9435d55e3ea95c5d94406d3affc36f9505b6a736","a513b6a92751e54c76fb5447948c9e7d437163a7"],"9409650933cc688e77e565092a25e58adfc2e18d":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["9435d55e3ea95c5d94406d3affc36f9505b6a736"],"a837c064b67fa63a9394136e31218b908cdcf783":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["520854ee68595e9da7b09828103cea7f22e357ee"]},"commit2Childs":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["28288370235ed02234a64753cdbf0c6ec096304a","74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7"],"520854ee68595e9da7b09828103cea7f22e357ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7871f9c286dce2a9370bcf517a3e7d12e3bd9602":["28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"8b6a4b585aed7660a589375f6a09b90efd29c961":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","2668c99990e4c94a78bac005aa682b7c5986d23a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["30c8e5574b55d57947e989443dfde611646530ee"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["520854ee68595e9da7b09828103cea7f22e357ee"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["7871f9c286dce2a9370bcf517a3e7d12e3bd9602","e9017cf144952056066919f1ebc7897ff9bd71b1"],"9409650933cc688e77e565092a25e58adfc2e18d":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["9409650933cc688e77e565092a25e58adfc2e18d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}