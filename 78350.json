{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#encodedSize(int).mjava","commits":[{"id":"2d569dbc58dcfe4b83257a5b1d867b66532beef1","date":1344416896,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#encodedSize(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compute the number of bytes required to encode a block of values that require\n   * <code>bitsPerValue</code> bits per value.\n   */\n  private static int encodedSize(int bitsPerValue) {\n    return (BLOCK_SIZE * bitsPerValue) >>> 3;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf88b0fdab72e7a3389fdd9a68ae252142c41511","date":1344435322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#encodedSize(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#encodedSize(int).mjava","sourceNew":"  /**\n   * Compute the number of bytes required to encode a block of values that require\n   * <code>bitsPerValue</code> bits per value.\n   */\n  private int encodedSize(int bitsPerValue) {\n    final FormatAndBits formatAndBits = formats[bitsPerValue];\n    return formatAndBits.format.nblocks(formatAndBits.bitsPerValue, BLOCK_SIZE) << 3;\n  }\n\n","sourceOld":"  /**\n   * Compute the number of bytes required to encode a block of values that require\n   * <code>bitsPerValue</code> bits per value.\n   */\n  private static int encodedSize(int bitsPerValue) {\n    return (BLOCK_SIZE * bitsPerValue) >>> 3;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee0d2b90b9b7c96860f9c096edae6ed8fad95388","date":1344516744,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#encodedSize(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Compute the number of bytes required to encode a block of values that require\n   * <code>bitsPerValue</code> bits per value.\n   */\n  private int encodedSize(int bitsPerValue) {\n    final FormatAndBits formatAndBits = formats[bitsPerValue];\n    return formatAndBits.format.nblocks(formatAndBits.bitsPerValue, BLOCK_SIZE) << 3;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d569dbc58dcfe4b83257a5b1d867b66532beef1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["2d569dbc58dcfe4b83257a5b1d867b66532beef1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d569dbc58dcfe4b83257a5b1d867b66532beef1":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d569dbc58dcfe4b83257a5b1d867b66532beef1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}