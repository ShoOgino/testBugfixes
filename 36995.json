{"path":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    assureMatchVersion();\n    if (luceneMatchVersion.onOrAfter(Version.LUCENE_34)) {\n      delegator = new FSTSynonymFilterFactory();\n    } else {\n      // check if you use the new optional arg \"format\". this makes no sense for the old one, \n      // as its wired to solr's synonyms format only.\n      if (args.containsKey(\"format\") && !args.get(\"format\").equals(\"solr\")) {\n        throw new IllegalArgumentException(\"You must specify luceneMatchVersion >= 3.4 to use alternate synonyms formats\");\n      }\n      delegator = new SlowSynonymFilterFactory();\n    }\n    delegator.init(args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d25aba1848c644c6d22b943d3d66f661445ac7","date":1335238294,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    assureMatchVersion();\n    if (luceneMatchVersion.onOrAfter(Version.LUCENE_34)) {\n      delegator = new FSTSynonymFilterFactory();\n    } else {\n      // check if you use the new optional arg \"format\". this makes no sense for the old one, \n      // as its wired to solr's synonyms format only.\n      if (args.containsKey(\"format\") && !args.get(\"format\").equals(\"solr\")) {\n        throw new InitializationException(\"You must specify luceneMatchVersion >= 3.4 to use alternate synonyms formats\");\n      }\n      delegator = new SlowSynonymFilterFactory();\n    }\n    delegator.init(args);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    assureMatchVersion();\n    if (luceneMatchVersion.onOrAfter(Version.LUCENE_34)) {\n      delegator = new FSTSynonymFilterFactory();\n    } else {\n      // check if you use the new optional arg \"format\". this makes no sense for the old one, \n      // as its wired to solr's synonyms format only.\n      if (args.containsKey(\"format\") && !args.get(\"format\").equals(\"solr\")) {\n        throw new IllegalArgumentException(\"You must specify luceneMatchVersion >= 3.4 to use alternate synonyms formats\");\n      }\n      delegator = new SlowSynonymFilterFactory();\n    }\n    delegator.init(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    assureMatchVersion();\n    if (luceneMatchVersion.onOrAfter(Version.LUCENE_34)) {\n      delegator = new FSTSynonymFilterFactory();\n    } else {\n      // check if you use the new optional arg \"format\". this makes no sense for the old one, \n      // as its wired to solr's synonyms format only.\n      if (args.containsKey(\"format\") && !args.get(\"format\").equals(\"solr\")) {\n        throw new InitializationException(\"You must specify luceneMatchVersion >= 3.4 to use alternate synonyms formats\");\n      }\n      delegator = new SlowSynonymFilterFactory();\n    }\n    delegator.init(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39d25aba1848c644c6d22b943d3d66f661445ac7":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"39d25aba1848c644c6d22b943d3d66f661445ac7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["39d25aba1848c644c6d22b943d3d66f661445ac7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}