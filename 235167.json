{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testMultiValuedPointsSortedCorrectly().mjava","commits":[{"id":"aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d","date":1496915544,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testMultiValuedPointsSortedCorrectly().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiValuedPointsSortedCorrectly() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntPoint(\"ints\", 3));\n    doc.add(new IntPoint(\"ints\", 2));\n    doc.add(new IntPoint(\"ints\", 1));\n    doc.add(new LongPoint(\"longs\", 3L));\n    doc.add(new LongPoint(\"longs\", 2L));\n    doc.add(new LongPoint(\"longs\", 1L));\n    doc.add(new FloatPoint(\"floats\", 3F));\n    doc.add(new FloatPoint(\"floats\", 2F));\n    doc.add(new FloatPoint(\"floats\", 1F));\n    doc.add(new DoublePoint(\"doubles\", 3D));\n    doc.add(new DoublePoint(\"doubles\", 2D));\n    doc.add(new DoublePoint(\"doubles\", 1D));\n\n    MemoryIndex mi = MemoryIndex.fromDocument(doc, analyzer);\n    IndexSearcher s = mi.createSearcher();\n\n    assertEquals(1, s.count(IntPoint.newSetQuery(\"ints\", 2)));\n    assertEquals(1, s.count(LongPoint.newSetQuery(\"longs\", 2)));\n    assertEquals(1, s.count(FloatPoint.newSetQuery(\"floats\", 2)));\n    assertEquals(1, s.count(DoublePoint.newSetQuery(\"doubles\", 2)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testMultiValuedPointsSortedCorrectly().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiValuedPointsSortedCorrectly() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntPoint(\"ints\", 3));\n    doc.add(new IntPoint(\"ints\", 2));\n    doc.add(new IntPoint(\"ints\", 1));\n    doc.add(new LongPoint(\"longs\", 3L));\n    doc.add(new LongPoint(\"longs\", 2L));\n    doc.add(new LongPoint(\"longs\", 1L));\n    doc.add(new FloatPoint(\"floats\", 3F));\n    doc.add(new FloatPoint(\"floats\", 2F));\n    doc.add(new FloatPoint(\"floats\", 1F));\n    doc.add(new DoublePoint(\"doubles\", 3D));\n    doc.add(new DoublePoint(\"doubles\", 2D));\n    doc.add(new DoublePoint(\"doubles\", 1D));\n\n    MemoryIndex mi = MemoryIndex.fromDocument(doc, analyzer);\n    IndexSearcher s = mi.createSearcher();\n\n    assertEquals(1, s.count(IntPoint.newSetQuery(\"ints\", 2)));\n    assertEquals(1, s.count(LongPoint.newSetQuery(\"longs\", 2)));\n    assertEquals(1, s.count(FloatPoint.newSetQuery(\"floats\", 2)));\n    assertEquals(1, s.count(DoublePoint.newSetQuery(\"doubles\", 2)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testMultiValuedPointsSortedCorrectly().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiValuedPointsSortedCorrectly() throws Exception {\n    Document doc = new Document();\n    doc.add(new IntPoint(\"ints\", 3));\n    doc.add(new IntPoint(\"ints\", 2));\n    doc.add(new IntPoint(\"ints\", 1));\n    doc.add(new LongPoint(\"longs\", 3L));\n    doc.add(new LongPoint(\"longs\", 2L));\n    doc.add(new LongPoint(\"longs\", 1L));\n    doc.add(new FloatPoint(\"floats\", 3F));\n    doc.add(new FloatPoint(\"floats\", 2F));\n    doc.add(new FloatPoint(\"floats\", 1F));\n    doc.add(new DoublePoint(\"doubles\", 3D));\n    doc.add(new DoublePoint(\"doubles\", 2D));\n    doc.add(new DoublePoint(\"doubles\", 1D));\n\n    MemoryIndex mi = MemoryIndex.fromDocument(doc, analyzer);\n    IndexSearcher s = mi.createSearcher();\n\n    assertEquals(1, s.count(IntPoint.newSetQuery(\"ints\", 2)));\n    assertEquals(1, s.count(LongPoint.newSetQuery(\"longs\", 2)));\n    assertEquals(1, s.count(FloatPoint.newSetQuery(\"floats\", 2)));\n    assertEquals(1, s.count(DoublePoint.newSetQuery(\"doubles\", 2)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aecfbeab5c1d13c4260cefe5efbd6e48a47bda5d","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}