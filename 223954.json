{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"    /** Construct a vector that is perpendicular to\n     * two other (non-zero) vectors.  If the vectors are parallel,\n     * the result vector will have magnitude 0.\n     *@param A is the first vector\n     *@param B is the second\n     */\n    public Vector(Vector A, Vector B) {\n        // x = u2v3 - u3v2\n        // y = u3v1 - u1v3\n        // z = u1v2 - u2v1\n\n        this(A.y * B.z - A.z * B.y,\n             A.z * B.x - A.x * B.z,\n             A.x * B.y - A.y * B.x);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9908748d960ccb7706a20e81289a656237780b6c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","sourceNew":"    /** Construct a vector that is perpendicular to\n     * two other (non-zero) vectors.  If the vectors are parallel,\n     * the result vector will have magnitude 0.\n     *@param A is the first vector\n     *@param B is the second\n     */\n    public Vector(final Vector A, final Vector B) {\n        // x = u2v3 - u3v2\n        // y = u3v1 - u1v3\n        // z = u1v2 - u2v1\n\n        this(A.y * B.z - A.z * B.y,\n             A.z * B.x - A.x * B.z,\n             A.x * B.y - A.y * B.x);\n    }\n\n","sourceOld":"    /** Construct a vector that is perpendicular to\n     * two other (non-zero) vectors.  If the vectors are parallel,\n     * the result vector will have magnitude 0.\n     *@param A is the first vector\n     *@param B is the second\n     */\n    public Vector(Vector A, Vector B) {\n        // x = u2v3 - u3v2\n        // y = u3v1 - u1v3\n        // z = u1v2 - u2v1\n\n        this(A.y * B.z - A.z * B.y,\n             A.z * B.x - A.x * B.z,\n             A.x * B.y - A.y * B.x);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * the result vector will have magnitude 0.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n\n    this(A.y * B.z - A.z * B.y,\n        A.z * B.x - A.x * B.z,\n        A.x * B.y - A.y * B.x);\n  }\n\n","sourceOld":"    /** Construct a vector that is perpendicular to\n     * two other (non-zero) vectors.  If the vectors are parallel,\n     * the result vector will have magnitude 0.\n     *@param A is the first vector\n     *@param B is the second\n     */\n    public Vector(final Vector A, final Vector B) {\n        // x = u2v3 - u3v2\n        // y = u3v1 - u1v3\n        // z = u1v2 - u2v1\n\n        this(A.y * B.z - A.z * B.y,\n             A.z * B.x - A.x * B.z,\n             A.x * B.y - A.y * B.x);\n    }\n\n","bugFix":null,"bugIntro":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff","9908748d960ccb7706a20e81289a656237780b6c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * the result vector will have magnitude 0.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n\n    this(A.y * B.z - A.z * B.y,\n        A.z * B.x - A.x * B.z,\n        A.x * B.y - A.y * B.x);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9908748d960ccb7706a20e81289a656237780b6c","date":1435716223,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","sourceOld":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * the result vector will have magnitude 0.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n\n    this(A.y * B.z - A.z * B.y,\n        A.z * B.x - A.x * B.z,\n        A.x * B.y - A.y * B.x);\n  }\n\n","bugFix":["e2997acf74723385bd84aff1ea0b12af4aefde77","851e4197476b684154a7b65f996f535522e67400"],"bugIntro":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Vector#Vector(Vector,Vector).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#Vector(Vector,Vector).mjava","sourceNew":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","sourceOld":"  /**\n   * Construct a vector that is perpendicular to\n   * two other (non-zero) vectors.  If the vectors are parallel,\n   * IllegalArgumentException will be thrown.\n   * Produces a normalized final vector.\n   *\n   * @param A is the first vector\n   * @param B is the second\n   */\n  public Vector(final Vector A, final Vector B) {\n    // x = u2v3 - u3v2\n    // y = u3v1 - u1v3\n    // z = u1v2 - u2v1\n    final double thisX = A.y * B.z - A.z * B.y;\n    final double thisY = A.z * B.x - A.x * B.z;\n    final double thisZ = A.x * B.y - A.y * B.x;\n    final double magnitude = magnitude(thisX, thisY, thisZ);\n    if (Math.abs(magnitude) < MINIMUM_RESOLUTION) {\n      throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");\n    }\n    final double inverseMagnitude = 1.0 / magnitude;\n    this.x = thisX * inverseMagnitude;\n    this.y = thisY * inverseMagnitude;\n    this.z = thisZ * inverseMagnitude;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["851e4197476b684154a7b65f996f535522e67400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["9908748d960ccb7706a20e81289a656237780b6c"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9908748d960ccb7706a20e81289a656237780b6c":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["9908748d960ccb7706a20e81289a656237780b6c"],"9908748d960ccb7706a20e81289a656237780b6c":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}