{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#handleCreateCollMessage(byte[]).mjava","commits":[{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#handleCrateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCrateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(\"createcollection\".equals(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2209af2c265d2258ec4b29c8cc78622d36994a15"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}