{"path":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"solr/contrib/solr-morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c170e9d4c93c47801b611c5f124a91c5d27e0d73","date":1392824784,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String,File).mjava","pathOld":"solr/contrib/morphlines-core/src/java/org/apache/solr/morphlines/solr/ZooKeeperDownloader#downloadConfigDir(SolrZkClient,String).mjava","sourceNew":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName, File dir)\n  throws IOException, InterruptedException, KeeperException {\n    Preconditions.checkArgument(dir.exists());\n    Preconditions.checkArgument(dir.isDirectory());\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    verifyConfigDir(confDir);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Download and return the config directory from ZK\n   */\n  public File downloadConfigDir(SolrZkClient zkClient, String configName)\n  throws IOException, InterruptedException, KeeperException {\n    File dir = Files.createTempDir();\n    dir.deleteOnExit();\n    ZkController.downloadConfigDir(zkClient, configName, dir);\n    File confDir = new File(dir, \"conf\");\n    if (!confDir.isDirectory()) {\n      // create a temporary directory with \"conf\" subdir and mv the config in there.  This is\n      // necessary because of CDH-11188; solrctl does not generate nor accept directories with e.g.\n      // conf/solrconfig.xml which is necessary for proper solr operation.  This should work\n      // even if solrctl changes.\n      confDir = new File(Files.createTempDir().getAbsolutePath(), \"conf\");\n      confDir.getParentFile().deleteOnExit();\n      Files.move(dir, confDir);\n      dir = confDir.getParentFile();\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c170e9d4c93c47801b611c5f124a91c5d27e0d73":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c170e9d4c93c47801b611c5f124a91c5d27e0d73"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["c170e9d4c93c47801b611c5f124a91c5d27e0d73","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"c170e9d4c93c47801b611c5f124a91c5d27e0d73":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}