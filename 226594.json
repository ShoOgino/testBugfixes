{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","commits":[{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit,boolean).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the reader.\n   * @param commit the commit point to open\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the reader.\n   * @param commit the commit point to open\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit, boolean readOnly) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), null, commit, readOnly, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dd8cac059f4a5d4491e279aa2d07064392f9357","date":1323099195,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the reader.\n   * @param commit the commit point to open\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit,boolean).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the reader.\n   * @param commit the commit point to open\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit, boolean readOnly) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), null, commit, readOnly, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa","date":1323422392,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit,boolean).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.  You should pass readOnly=true, since it\n   *  gives much better concurrent performance, unless you\n   *  intend to do write operations (delete documents or\n   *  change norms) with the reader.\n   * @param commit the commit point to open\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit, boolean readOnly) throws CorruptIndexException, IOException {\n    return open(commit.getDirectory(), null, commit, readOnly, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated Use {@link DirectoryReader#open(IndexCommit)}\n   */\n  @Deprecated\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated Use {@link DirectoryReader#open(IndexCommit)}\n   */\n  @Deprecated\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, DEFAULT_TERMS_INDEX_DIVISOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated Use {@link DirectoryReader#open(IndexCommit)}\n   */\n  @Deprecated\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param commit the commit point to open\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @deprecated Use {@link DirectoryReader#open(IndexCommit)}\n   */\n  @Deprecated\n  public static DirectoryReader open(final IndexCommit commit) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2dd8cac059f4a5d4491e279aa2d07064392f9357"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa","893d07555f01912f57b453a320e4d46363a31b50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dd8cac059f4a5d4491e279aa2d07064392f9357":["1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa"]},"commit2Childs":{"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"893d07555f01912f57b453a320e4d46363a31b50":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["2dd8cac059f4a5d4491e279aa2d07064392f9357"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["893d07555f01912f57b453a320e4d46363a31b50"],"2dd8cac059f4a5d4491e279aa2d07064392f9357":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}