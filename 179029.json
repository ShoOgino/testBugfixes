{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","commits":[{"id":"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef","date":1339509577,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","pathOld":"/dev/null","sourceNew":"  public void test2WeightedFragList() throws Exception {\n    \n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( pqF( \"the\", \"both\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(theboth((195,203)))/0.86791086(189,289)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"335fa85a41a431b929ff93a0eb831abfc7b91e63","date":1349750333,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","sourceNew":"  public void test2WeightedFragList() throws Exception {\n    \n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( pqF( \"the\", \"both\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(theboth((195,203)))/0.86791086(149,249)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test2WeightedFragList() throws Exception {\n    \n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( pqF( \"the\", \"both\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(theboth((195,203)))/0.86791086(189,289)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3f678348ac6e145f874f56992e8c0f78a1ff3c46","date":1385743501,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","sourceNew":"  public void test2WeightedFragList() throws Exception {\n    testCase( pqF( \"the\", \"both\" ), 100,\n        \"subInfos=(theboth((195,203)))/0.8679108(149,249)\",\n        0.8679108 );\n  }\n\n","sourceOld":"  public void test2WeightedFragList() throws Exception {\n    \n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( pqF( \"the\", \"both\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(theboth((195,203)))/0.86791086(149,249)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","bugFix":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef","335fa85a41a431b929ff93a0eb831abfc7b91e63"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#test2WeightedFragList().mjava","sourceNew":"  public void test2WeightedFragList() throws Exception {\n    testCase( pqF( \"the\", \"both\" ), 100,\n        \"subInfos=(theboth((195,203)))/0.8679108(149,249)\",\n        0.8679108 );\n  }\n\n","sourceOld":"  public void test2WeightedFragList() throws Exception {\n    \n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( pqF( \"the\", \"both\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(theboth((195,203)))/0.86791086(149,249)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"335fa85a41a431b929ff93a0eb831abfc7b91e63":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["335fa85a41a431b929ff93a0eb831abfc7b91e63"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["335fa85a41a431b929ff93a0eb831abfc7b91e63","3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"]},"commit2Childs":{"335fa85a41a431b929ff93a0eb831abfc7b91e63":["3f678348ac6e145f874f56992e8c0f78a1ff3c46","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef":["335fa85a41a431b929ff93a0eb831abfc7b91e63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5c9602de3e9cfe5d0cc9e3a068199b57d5d85ef"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}