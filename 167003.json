{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(State,State,int,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(State,State,int,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(State,State,int,int,int).mjava","sourceNew":"  private void all(State start, State end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      start.addTransition(new Transition(startCode, endCode, end));  // type=all\n    } else {\n      State lastN = newUTF8State();\n      start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      while (left > 1) {\n        State n = newUTF8State();\n        lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        left--;\n        lastN = n;\n      }\n      lastN.addTransition(new Transition(128, 191, end)); // type = all*\n    }\n  }\n\n","sourceOld":"  private void all(State start, State end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      start.addTransition(new Transition(startCode, endCode, end));  // type=all\n    } else {\n      State lastN = newUTF8State();\n      start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      while (left > 1) {\n        State n = newUTF8State();\n        lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        left--;\n        lastN = n;\n      }\n      lastN.addTransition(new Transition(128, 191, end)); // type = all*\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(State,State,int,int,int).mjava","sourceNew":null,"sourceOld":"  private void all(State start, State end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      start.addTransition(new Transition(startCode, endCode, end));  // type=all\n    } else {\n      State lastN = newUTF8State();\n      start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      while (left > 1) {\n        State n = newUTF8State();\n        lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        left--;\n        lastN = n;\n      }\n      lastN.addTransition(new Transition(128, 191, end)); // type = all*\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8#all(State,State,int,int,int).mjava","sourceNew":null,"sourceOld":"  private void all(State start, State end, int startCode, int endCode, int left) {\n    if (left == 0) {\n      start.addTransition(new Transition(startCode, endCode, end));  // type=all\n    } else {\n      State lastN = newUTF8State();\n      start.addTransition(new Transition(startCode, endCode, lastN));  // type=all\n      while (left > 1) {\n        State n = newUTF8State();\n        lastN.addTransition(new Transition(128, 191, n));  // type=all*\n        left--;\n        lastN = n;\n      }\n      lastN.addTransition(new Transition(128, 191, end)); // type = all*\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5c84485629d80d203608e8975a1139de9933cc38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","5c84485629d80d203608e8975a1139de9933cc38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}