{"path":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","commits":[{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinExactHitsMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = new QueryCommand();\n      cmd.setNeedDocSet(true);\n      cmd.setMinExactHits(2);\n      cmd.setQuery(new TermQuery(new Term(\"field1_s\", \"foo\")));\n      searcher.search(new QueryResult(), cmd);\n      QueryResult qr = new QueryResult();\n      searcher.search(qr, cmd);\n      assertMatchesEqual(NUM_DOCS, qr);\n      return null;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b","date":1590101317,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","sourceNew":"  public void testMinExactHitsMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(2, 2, \"field1_s\", \"foo\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      \n      cmd.setNeedDocSet(true);\n      assertMatchesEqual(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n  }\n\n","sourceOld":"  public void testMinExactHitsMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = new QueryCommand();\n      cmd.setNeedDocSet(true);\n      cmd.setMinExactHits(2);\n      cmd.setQuery(new TermQuery(new Term(\"field1_s\", \"foo\")));\n      searcher.search(new QueryResult(), cmd);\n      QueryResult qr = new QueryResult();\n      searcher.search(qr, cmd);\n      assertMatchesEqual(NUM_DOCS, qr);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8ad6d99eb2424679c78255c369b8fac243e7dd","date":1590104557,"type":5,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactCountMatchWithDocSet().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","sourceNew":"  public void testMinExactCountMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(2, 2, \"field1_s\", \"foo\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      \n      cmd.setNeedDocSet(true);\n      assertMatchesEqual(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n  }\n\n","sourceOld":"  public void testMinExactHitsMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(2, 2, \"field1_s\", \"foo\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      \n      cmd.setNeedDocSet(true);\n      assertMatchesEqual(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72afa881b0b5c361ebd0b6d37927fe072151fbe0","date":1590107364,"type":4,"author":"Erick Erickson","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactHitsMatchWithDocSet().mjava","sourceNew":null,"sourceOld":"  public void testMinExactHitsMatchWithDocSet() throws IOException {\n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = new QueryCommand();\n      cmd.setNeedDocSet(true);\n      cmd.setMinExactHits(2);\n      cmd.setQuery(new TermQuery(new Term(\"field1_s\", \"foo\")));\n      searcher.search(new QueryResult(), cmd);\n      QueryResult qr = new QueryResult();\n      searcher.search(qr, cmd);\n      assertMatchesEqual(NUM_DOCS, qr);\n      return null;\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["640ded7811e1b7d29236a5e2934ec3cd266a8199","6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b","72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b":["6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}