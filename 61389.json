{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","commits":[{"id":"856d72a5f63c995cad4c6fd92b7c121aa140285c","date":1572845901,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#createSchemaFromType(Type).mjava","sourceNew":"  private static Map<String, Object> createSchemaFromType(java.lang.reflect.Type t, Map<String, Object> map) {\n    if (natives.containsKey(t)) {\n      map.put(\"type\", natives.get(t));\n    } else if (t instanceof ParameterizedType && ((ParameterizedType) t).getRawType() == List.class) {\n      Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n      map.put(\"type\", \"array\");\n      map.put(\"items\", getSchema(typ));\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","sourceOld":"  private static Map<String, Object> createSchemaFromType(Type t) {\n    Map<String, Object> map = new LinkedHashMap<>();\n    if (t instanceof ParameterizedType) {\n      ParameterizedType typ = (ParameterizedType) t;\n      if (typ.getRawType() == PayloadObj.class) {\n        t = typ.getActualTypeArguments()[0];\n      }\n    }\n\n    if (primitives.containsKey(t)) {\n      map.put(\"type\", primitives.get(t));\n    } else if (t instanceof ParameterizedType && ((ParameterizedType) t).getRawType() == List.class) {\n      Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n      map.put(\"type\", \"array\");\n      map.put(\"items\", createSchemaFromType(typ));\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0b6680904fafe5905f847812d32dc7ad79c96a0","date":1600243603,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","sourceNew":"  private static Map<String, Object> createSchemaFromType(java.lang.reflect.Type t, Map<String, Object> map) {\n    if (natives.containsKey(t)) {\n      map.put(\"type\", natives.get(t));\n    } else if (t instanceof ParameterizedType) {\n      if (((ParameterizedType) t).getRawType() == List.class) {\n        Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n        map.put(\"type\", \"array\");\n        map.put(\"items\", getSchema(typ));\n      } else if (((ParameterizedType) t).getRawType() == Map.class) {\n        Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n        map.put(\"type\", \"object\");\n        map.put(\"additionalProperties\", true);\n      }\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","sourceOld":"  private static Map<String, Object> createSchemaFromType(java.lang.reflect.Type t, Map<String, Object> map) {\n    if (natives.containsKey(t)) {\n      map.put(\"type\", natives.get(t));\n    } else if (t instanceof ParameterizedType && ((ParameterizedType) t).getRawType() == List.class) {\n      Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n      map.put(\"type\", \"array\");\n      map.put(\"items\", getSchema(typ));\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonSchemaCreator#createSchemaFromType(java.lang.reflect.Type,Map[String,Object]).mjava","sourceNew":"  private static Map<String, Object> createSchemaFromType(java.lang.reflect.Type t, Map<String, Object> map) {\n    if (natives.containsKey(t)) {\n      map.put(\"type\", natives.get(t));\n    } else if (t instanceof ParameterizedType) {\n      if (((ParameterizedType) t).getRawType() == List.class) {\n        Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n        map.put(\"type\", \"array\");\n        map.put(\"items\", getSchema(typ));\n      } else if (((ParameterizedType) t).getRawType() == Map.class) {\n        Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n        map.put(\"type\", \"object\");\n        map.put(\"additionalProperties\", true);\n      }\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","sourceOld":"  private static Map<String, Object> createSchemaFromType(java.lang.reflect.Type t, Map<String, Object> map) {\n    if (natives.containsKey(t)) {\n      map.put(\"type\", natives.get(t));\n    } else if (t instanceof ParameterizedType && ((ParameterizedType) t).getRawType() == List.class) {\n      Type typ = ((ParameterizedType) t).getActualTypeArguments()[0];\n      map.put(\"type\", \"array\");\n      map.put(\"items\", getSchema(typ));\n    } else {\n      createObjectSchema((Class) t, map);\n    }\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680b6449f09827f58fe987aff279e014c311d966":["856d72a5f63c995cad4c6fd92b7c121aa140285c","c0b6680904fafe5905f847812d32dc7ad79c96a0"],"856d72a5f63c995cad4c6fd92b7c121aa140285c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c0b6680904fafe5905f847812d32dc7ad79c96a0":["856d72a5f63c995cad4c6fd92b7c121aa140285c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"856d72a5f63c995cad4c6fd92b7c121aa140285c":["680b6449f09827f58fe987aff279e014c311d966","c0b6680904fafe5905f847812d32dc7ad79c96a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["856d72a5f63c995cad4c6fd92b7c121aa140285c"],"c0b6680904fafe5905f847812d32dc7ad79c96a0":["680b6449f09827f58fe987aff279e014c311d966"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}