{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"/dev/null","sourceNew":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = (Document[]) docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"068265517d1fbc623f5aeaee57fcd8df925678e4","date":1286043654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","sourceOld":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = (Document[]) docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","sourceOld":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = (Document[]) docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d53c3f769ca0f9e7434937b792877770271aecf","date":1294785129,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":["2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa1a999d6674423e5c4ac858b410283f6fe03f20","date":1294868331,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (PrefixCodedTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (PrefixCodedTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (PrefixCodedTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":["2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (PrefixCodedTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","sourceOld":"    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      clone.docs = docs.clone();\n      for(int i=0;i<clone.docs.length;i++) {\n        final Document doc = clone.docs[i];\n        if (doc != null) {\n          clone.docs[i] = (Document) doc.clone();\n        }\n      }\n      clone.wrappedTermState = (TermState) wrappedTermState.clone();\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d","date":1304363395,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone = new PulsingTermState();\n      clone.copyFrom(this);\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":["3d53c3f769ca0f9e7434937b792877770271aecf","b1add9ddc0005b07550d4350720aac22dc9886b3","955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone = new PulsingTermState();\n      clone.copyFrom(this);\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":"    @Override\n    public Object clone() {\n      PulsingTermState clone = new PulsingTermState();\n      clone.copyFrom(this);\n      return clone;\n    }\n\n","sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone;\n      clone = (PulsingTermState) super.clone();\n      if (postingsSize != -1) {\n        clone.postings = new byte[postingsSize];\n        System.arraycopy(postings, 0, clone.postings, 0, postingsSize);\n      } else {\n        assert wrappedTermState != null;\n        clone.wrappedTermState = (BlockTermState) wrappedTermState.clone();\n      }\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingTermState#clone().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Object clone() {\n      PulsingTermState clone = new PulsingTermState();\n      clone.copyFrom(this);\n      return clone;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fa1a999d6674423e5c4ac858b410283f6fe03f20"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","068265517d1fbc623f5aeaee57fcd8df925678e4"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b1add9ddc0005b07550d4350720aac22dc9886b3","2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["068265517d1fbc623f5aeaee57fcd8df925678e4","b1add9ddc0005b07550d4350720aac22dc9886b3"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d53c3f769ca0f9e7434937b792877770271aecf":["068265517d1fbc623f5aeaee57fcd8df925678e4"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["29ef99d61cda9641b6250bf9567329a6e65f901d","2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["3d53c3f769ca0f9e7434937b792877770271aecf"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","068265517d1fbc623f5aeaee57fcd8df925678e4"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","29ef99d61cda9641b6250bf9567329a6e65f901d","3d53c3f769ca0f9e7434937b792877770271aecf"],"3d53c3f769ca0f9e7434937b792877770271aecf":["fa1a999d6674423e5c4ac858b410283f6fe03f20"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"2c6ba2c1541cd77ab3e8e8e242abf602d1f4943d":["60ba444201d2570214b6fcf1d15600dc1a01f548","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}