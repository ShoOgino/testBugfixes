{"path":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String).mjava","commits":[{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Override for more efficient moves.\n   * \n   * @throws IOException\n   *           If there is a low-level I/O error.\n   */\n  public void move(Directory fromDir, Directory toDir, String fileName)\n      throws IOException {\n    if (fromDir instanceof FSDirectory && toDir instanceof FSDirectory) {\n      File dir1 = ((FSDirectory) fromDir).getDirectory();\n      File dir2 = ((FSDirectory) toDir).getDirectory();\n      File indexFileInTmpDir = new File(dir1, fileName);\n      File indexFileInIndex = new File(dir2, fileName);\n      boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n      if (success) {\n        return;\n      }\n    }\n\n    super.move(fromDir, toDir, fileName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["38186799b39019eb8ae92e6ee46a91668cac69d3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Override for more efficient moves.\n   * \n   * @throws IOException\n   *           If there is a low-level I/O error.\n   */\n  public void move(Directory fromDir, Directory toDir, String fileName)\n      throws IOException {\n    if (fromDir instanceof FSDirectory && toDir instanceof FSDirectory) {\n      File dir1 = ((FSDirectory) fromDir).getDirectory();\n      File dir2 = ((FSDirectory) toDir).getDirectory();\n      File indexFileInTmpDir = new File(dir1, fileName);\n      File indexFileInIndex = new File(dir2, fileName);\n      boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n      if (success) {\n        return;\n      }\n    }\n\n    super.move(fromDir, toDir, fileName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15fdb1d84f9e74320d318f682fd2b7d370398857","date":1355194688,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String,IOContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String).mjava","sourceNew":"  /**\n   * Override for more efficient moves.\n   * \n   * @throws IOException\n   *           If there is a low-level I/O error.\n   */\n  @Override\n  public void move(Directory fromDir, Directory toDir, String fileName, IOContext ioContext)\n      throws IOException {\n    if (fromDir instanceof FSDirectory && toDir instanceof FSDirectory) {\n      File dir1 = ((FSDirectory) fromDir).getDirectory();\n      File dir2 = ((FSDirectory) toDir).getDirectory();\n      File indexFileInTmpDir = new File(dir1, fileName);\n      File indexFileInIndex = new File(dir2, fileName);\n      boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n      if (success) {\n        return;\n      }\n    }\n\n    super.move(fromDir, toDir, fileName, ioContext);\n  }\n\n","sourceOld":"  /**\n   * Override for more efficient moves.\n   * \n   * @throws IOException\n   *           If there is a low-level I/O error.\n   */\n  public void move(Directory fromDir, Directory toDir, String fileName)\n      throws IOException {\n    if (fromDir instanceof FSDirectory && toDir instanceof FSDirectory) {\n      File dir1 = ((FSDirectory) fromDir).getDirectory();\n      File dir2 = ((FSDirectory) toDir).getDirectory();\n      File indexFileInTmpDir = new File(dir1, fileName);\n      File indexFileInIndex = new File(dir2, fileName);\n      boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n      if (success) {\n        return;\n      }\n    }\n\n    super.move(fromDir, toDir, fileName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory#move(Directory,Directory,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Override for more efficient moves.\n   * \n   * @throws IOException\n   *           If there is a low-level I/O error.\n   */\n  public void move(Directory fromDir, Directory toDir, String fileName)\n      throws IOException {\n    if (fromDir instanceof FSDirectory && toDir instanceof FSDirectory) {\n      File dir1 = ((FSDirectory) fromDir).getDirectory();\n      File dir2 = ((FSDirectory) toDir).getDirectory();\n      File indexFileInTmpDir = new File(dir1, fileName);\n      File indexFileInIndex = new File(dir2, fileName);\n      boolean success = indexFileInTmpDir.renameTo(indexFileInIndex);\n      if (success) {\n        return;\n      }\n    }\n\n    super.move(fromDir, toDir, fileName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15fdb1d84f9e74320d318f682fd2b7d370398857":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["d9405f486872f1e416304dfe389741f4ee2f8a4d","15fdb1d84f9e74320d318f682fd2b7d370398857"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15fdb1d84f9e74320d318f682fd2b7d370398857"]},"commit2Childs":{"15fdb1d84f9e74320d318f682fd2b7d370398857":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["15fdb1d84f9e74320d318f682fd2b7d370398857","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}