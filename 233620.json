{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testWrappedAnalyzerDoesNotReuse().mjava","commits":[{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testWrappedAnalyzerDoesNotReuse().mjava","pathOld":"/dev/null","sourceNew":"  public void testWrappedAnalyzerDoesNotReuse() throws Exception {\n    Analyzer a = new ShingleAnalyzerWrapper(new NonreusableAnalyzer());\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles.\", \"shingles.\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 28, 28 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testWrappedAnalyzerDoesNotReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testWrappedAnalyzerDoesNotReuse().mjava","sourceNew":"  public void testWrappedAnalyzerDoesNotReuse() throws Exception {\n    Analyzer a = new ShingleAnalyzerWrapper(new NonreusableAnalyzer());\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles.\", \"shingles.\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 28, 28 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n  }\n\n","sourceOld":"  public void testWrappedAnalyzerDoesNotReuse() throws Exception {\n    Analyzer a = new ShingleAnalyzerWrapper(new NonreusableAnalyzer());\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles.\", \"shingles.\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 28, 28 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n    assertAnalyzesToReuse(a, \"please divide into shingles.\",\n        new String[] { \"please\", \"please divide\", \"divide\", \"divide into\", \"into\", \"into shingles\", \"shingles\" },\n        new int[] { 0, 0, 7, 7, 14, 14, 19 },\n        new int[] { 6, 13, 13, 18, 18, 27, 27 },\n        new int[] { 1, 0, 1, 0, 1, 0, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"]},"commit2Childs":{"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}