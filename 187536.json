{"path":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !w.codecs.getDefaultFieldCodec().equals(\"PreFlex\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10), w.getConfig().getCodecProvider());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomOptimize();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), new KeepOnlyLastCommitDeletionPolicy(), r.nextBoolean(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae5fea5d5594e69cc0e1aa13b33fa8b6e78dd12b","date":1327849186,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public IndexReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    getReaderCalled = true;\n    if (r.nextInt(4) == 2) {\n      doRandomForceMerge();\n    }\n    // If we are writing with PreFlexRW, force a full\n    // IndexReader.open so terms are sorted in codepoint\n    // order during searching:\n    if (!applyDeletions || !codec.getName().equals(\"Lucene3x\") && r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      switchDoDocValues();\n      if (r.nextBoolean()) {\n        return IndexReader.open(w.getDirectory(), _TestUtil.nextInt(r, 1, 10));\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7b91922b55d15444d554721b352861d028eb8278"],"ae5fea5d5594e69cc0e1aa13b33fa8b6e78dd12b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","ae5fea5d5594e69cc0e1aa13b33fa8b6e78dd12b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","ae5fea5d5594e69cc0e1aa13b33fa8b6e78dd12b","5cab9a86bd67202d20b6adc463008c8e982b070a"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"ae5fea5d5594e69cc0e1aa13b33fa8b6e78dd12b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}