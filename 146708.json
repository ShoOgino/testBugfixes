{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","commits":[{"id":"f3517d617f8b4502b5cca1a57e228d54bda3dd0f","date":1307019502,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","pathOld":"/dev/null","sourceNew":"  private static CharArrayMap<DictEntry> initializeDictHash() {\n    DictEntry defaultEntry;\n    DictEntry entry;\n\n    CharArrayMap<DictEntry> d = new CharArrayMap<DictEntry>(\n        Version.LUCENE_31, 1000, false);\n    \n    d = new CharArrayMap<DictEntry>(Version.LUCENE_31, 1000, false);\n    for (int i = 0; i < exceptionWords.length; i++) {\n      if (!d.containsKey(exceptionWords[i])) {\n        entry = new DictEntry(exceptionWords[i], true);\n        d.put(exceptionWords[i], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + exceptionWords[i]\n            + \"] already in dictionary 1\");\n      }\n    }\n    \n    for (int i = 0; i < directConflations.length; i++) {\n      if (!d.containsKey(directConflations[i][0])) {\n        entry = new DictEntry(directConflations[i][1], false);\n        d.put(directConflations[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + directConflations[i][0]\n            + \"] already in dictionary 2\");\n      }\n    }\n    \n    for (int i = 0; i < countryNationality.length; i++) {\n      if (!d.containsKey(countryNationality[i][0])) {\n        entry = new DictEntry(countryNationality[i][1], false);\n        d.put(countryNationality[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + countryNationality[i][0]\n            + \"] already in dictionary 3\");\n      }\n    }\n    \n    defaultEntry = new DictEntry(null, false);\n    \n    String[] array;\n    array = KStemData1.data;\n    \n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData2.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData3.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData4.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData5.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData6.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData7.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < KStemData8.data.length; i++) {\n      if (!d.containsKey(KStemData8.data[i])) {\n        d.put(KStemData8.data[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + KStemData8.data[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < supplementDict.length; i++) {\n      if (!d.containsKey(supplementDict[i])) {\n        d.put(supplementDict[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + supplementDict[i]\n            + \"] already in dictionary 5\");\n      }\n    }\n    \n    for (int i = 0; i < properNouns.length; i++) {\n      if (!d.containsKey(properNouns[i])) {\n        d.put(properNouns[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + properNouns[i]\n            + \"] already in dictionary 6\");\n      }\n    }\n    \n    return d;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","0bf41419d452997826ec5f17684993377be77f49"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d62f5453a200cec2cbb60148de159dbf55591e9d","date":1307049300,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","pathOld":"/dev/null","sourceNew":"  private static CharArrayMap<DictEntry> initializeDictHash() {\n    DictEntry defaultEntry;\n    DictEntry entry;\n\n    CharArrayMap<DictEntry> d = new CharArrayMap<DictEntry>(\n        Version.LUCENE_31, 1000, false);\n    \n    d = new CharArrayMap<DictEntry>(Version.LUCENE_31, 1000, false);\n    for (int i = 0; i < exceptionWords.length; i++) {\n      if (!d.containsKey(exceptionWords[i])) {\n        entry = new DictEntry(exceptionWords[i], true);\n        d.put(exceptionWords[i], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + exceptionWords[i]\n            + \"] already in dictionary 1\");\n      }\n    }\n    \n    for (int i = 0; i < directConflations.length; i++) {\n      if (!d.containsKey(directConflations[i][0])) {\n        entry = new DictEntry(directConflations[i][1], false);\n        d.put(directConflations[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + directConflations[i][0]\n            + \"] already in dictionary 2\");\n      }\n    }\n    \n    for (int i = 0; i < countryNationality.length; i++) {\n      if (!d.containsKey(countryNationality[i][0])) {\n        entry = new DictEntry(countryNationality[i][1], false);\n        d.put(countryNationality[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + countryNationality[i][0]\n            + \"] already in dictionary 3\");\n      }\n    }\n    \n    defaultEntry = new DictEntry(null, false);\n    \n    String[] array;\n    array = KStemData1.data;\n    \n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData2.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData3.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData4.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData5.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData6.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData7.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < KStemData8.data.length; i++) {\n      if (!d.containsKey(KStemData8.data[i])) {\n        d.put(KStemData8.data[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + KStemData8.data[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < supplementDict.length; i++) {\n      if (!d.containsKey(supplementDict[i])) {\n        d.put(supplementDict[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + supplementDict[i]\n            + \"] already in dictionary 5\");\n      }\n    }\n    \n    for (int i = 0; i < properNouns.length; i++) {\n      if (!d.containsKey(properNouns[i])) {\n        d.put(properNouns[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + properNouns[i]\n            + \"] already in dictionary 6\");\n      }\n    }\n    \n    return d;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c715a0f99152be7566591f323c6c5a25725a1bcb","date":1307118449,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","pathOld":"/dev/null","sourceNew":"  private static CharArrayMap<DictEntry> initializeDictHash() {\n    DictEntry defaultEntry;\n    DictEntry entry;\n\n    CharArrayMap<DictEntry> d = new CharArrayMap<DictEntry>(\n        Version.LUCENE_31, 1000, false);\n    \n    d = new CharArrayMap<DictEntry>(Version.LUCENE_31, 1000, false);\n    for (int i = 0; i < exceptionWords.length; i++) {\n      if (!d.containsKey(exceptionWords[i])) {\n        entry = new DictEntry(exceptionWords[i], true);\n        d.put(exceptionWords[i], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + exceptionWords[i]\n            + \"] already in dictionary 1\");\n      }\n    }\n    \n    for (int i = 0; i < directConflations.length; i++) {\n      if (!d.containsKey(directConflations[i][0])) {\n        entry = new DictEntry(directConflations[i][1], false);\n        d.put(directConflations[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + directConflations[i][0]\n            + \"] already in dictionary 2\");\n      }\n    }\n    \n    for (int i = 0; i < countryNationality.length; i++) {\n      if (!d.containsKey(countryNationality[i][0])) {\n        entry = new DictEntry(countryNationality[i][1], false);\n        d.put(countryNationality[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + countryNationality[i][0]\n            + \"] already in dictionary 3\");\n      }\n    }\n    \n    defaultEntry = new DictEntry(null, false);\n    \n    String[] array;\n    array = KStemData1.data;\n    \n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData2.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData3.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData4.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData5.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData6.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData7.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < KStemData8.data.length; i++) {\n      if (!d.containsKey(KStemData8.data[i])) {\n        d.put(KStemData8.data[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + KStemData8.data[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < supplementDict.length; i++) {\n      if (!d.containsKey(supplementDict[i])) {\n        d.put(supplementDict[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + supplementDict[i]\n            + \"] already in dictionary 5\");\n      }\n    }\n    \n    for (int i = 0; i < properNouns.length; i++) {\n      if (!d.containsKey(properNouns[i])) {\n        d.put(properNouns[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + properNouns[i]\n            + \"] already in dictionary 6\");\n      }\n    }\n    \n    return d;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer#initializeDictHash().mjava","sourceNew":"  private static CharArrayMap<DictEntry> initializeDictHash() {\n    DictEntry defaultEntry;\n    DictEntry entry;\n\n    CharArrayMap<DictEntry> d = new CharArrayMap<DictEntry>(\n        Version.LUCENE_31, 1000, false);\n    \n    d = new CharArrayMap<DictEntry>(Version.LUCENE_31, 1000, false);\n    for (int i = 0; i < exceptionWords.length; i++) {\n      if (!d.containsKey(exceptionWords[i])) {\n        entry = new DictEntry(exceptionWords[i], true);\n        d.put(exceptionWords[i], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + exceptionWords[i]\n            + \"] already in dictionary 1\");\n      }\n    }\n    \n    for (int i = 0; i < directConflations.length; i++) {\n      if (!d.containsKey(directConflations[i][0])) {\n        entry = new DictEntry(directConflations[i][1], false);\n        d.put(directConflations[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + directConflations[i][0]\n            + \"] already in dictionary 2\");\n      }\n    }\n    \n    for (int i = 0; i < countryNationality.length; i++) {\n      if (!d.containsKey(countryNationality[i][0])) {\n        entry = new DictEntry(countryNationality[i][1], false);\n        d.put(countryNationality[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + countryNationality[i][0]\n            + \"] already in dictionary 3\");\n      }\n    }\n    \n    defaultEntry = new DictEntry(null, false);\n    \n    String[] array;\n    array = KStemData1.data;\n    \n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData2.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData3.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData4.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData5.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData6.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData7.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < KStemData8.data.length; i++) {\n      if (!d.containsKey(KStemData8.data[i])) {\n        d.put(KStemData8.data[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + KStemData8.data[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < supplementDict.length; i++) {\n      if (!d.containsKey(supplementDict[i])) {\n        d.put(supplementDict[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + supplementDict[i]\n            + \"] already in dictionary 5\");\n      }\n    }\n    \n    for (int i = 0; i < properNouns.length; i++) {\n      if (!d.containsKey(properNouns[i])) {\n        d.put(properNouns[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + properNouns[i]\n            + \"] already in dictionary 6\");\n      }\n    }\n    \n    return d;\n  }\n\n","sourceOld":"  private static CharArrayMap<DictEntry> initializeDictHash() {\n    DictEntry defaultEntry;\n    DictEntry entry;\n\n    CharArrayMap<DictEntry> d = new CharArrayMap<DictEntry>(\n        Version.LUCENE_31, 1000, false);\n    \n    d = new CharArrayMap<DictEntry>(Version.LUCENE_31, 1000, false);\n    for (int i = 0; i < exceptionWords.length; i++) {\n      if (!d.containsKey(exceptionWords[i])) {\n        entry = new DictEntry(exceptionWords[i], true);\n        d.put(exceptionWords[i], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + exceptionWords[i]\n            + \"] already in dictionary 1\");\n      }\n    }\n    \n    for (int i = 0; i < directConflations.length; i++) {\n      if (!d.containsKey(directConflations[i][0])) {\n        entry = new DictEntry(directConflations[i][1], false);\n        d.put(directConflations[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + directConflations[i][0]\n            + \"] already in dictionary 2\");\n      }\n    }\n    \n    for (int i = 0; i < countryNationality.length; i++) {\n      if (!d.containsKey(countryNationality[i][0])) {\n        entry = new DictEntry(countryNationality[i][1], false);\n        d.put(countryNationality[i][0], entry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + countryNationality[i][0]\n            + \"] already in dictionary 3\");\n      }\n    }\n    \n    defaultEntry = new DictEntry(null, false);\n    \n    String[] array;\n    array = KStemData1.data;\n    \n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData2.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData3.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData4.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData5.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData6.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    array = KStemData7.data;\n    for (int i = 0; i < array.length; i++) {\n      if (!d.containsKey(array[i])) {\n        d.put(array[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + array[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < KStemData8.data.length; i++) {\n      if (!d.containsKey(KStemData8.data[i])) {\n        d.put(KStemData8.data[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + KStemData8.data[i]\n            + \"] already in dictionary 4\");\n      }\n    }\n    \n    for (int i = 0; i < supplementDict.length; i++) {\n      if (!d.containsKey(supplementDict[i])) {\n        d.put(supplementDict[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + supplementDict[i]\n            + \"] already in dictionary 5\");\n      }\n    }\n    \n    for (int i = 0; i < properNouns.length; i++) {\n      if (!d.containsKey(properNouns[i])) {\n        d.put(properNouns[i], defaultEntry);\n      } else {\n        System.out.println(\"Warning: Entry [\" + properNouns[i]\n            + \"] already in dictionary 6\");\n      }\n    }\n    \n    return d;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f3517d617f8b4502b5cca1a57e228d54bda3dd0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c715a0f99152be7566591f323c6c5a25725a1bcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3517d617f8b4502b5cca1a57e228d54bda3dd0f"],"d62f5453a200cec2cbb60148de159dbf55591e9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3517d617f8b4502b5cca1a57e228d54bda3dd0f"],"f3517d617f8b4502b5cca1a57e228d54bda3dd0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c715a0f99152be7566591f323c6c5a25725a1bcb","d62f5453a200cec2cbb60148de159dbf55591e9d","f3517d617f8b4502b5cca1a57e228d54bda3dd0f"],"c715a0f99152be7566591f323c6c5a25725a1bcb":[],"d62f5453a200cec2cbb60148de159dbf55591e9d":[],"f3517d617f8b4502b5cca1a57e228d54bda3dd0f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c715a0f99152be7566591f323c6c5a25725a1bcb","d62f5453a200cec2cbb60148de159dbf55591e9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c715a0f99152be7566591f323c6c5a25725a1bcb","d62f5453a200cec2cbb60148de159dbf55591e9d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}