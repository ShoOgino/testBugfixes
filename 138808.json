{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testSeemsNonEmptyButIsNot2().mjava","commits":[{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testSeemsNonEmptyButIsNot2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestLightAutomaton#testSeemsNonEmptyButIsNot2().mjava","sourceNew":"  public void testSeemsNonEmptyButIsNot2() throws Exception {\n    Automaton a = new Automaton();\n    int init = a.createState();\n    int s = a.createState();\n    a.addTransition(init, s, 'a');\n    // An orphan'd accept state\n    s = a.createState();\n    a.setAccept(s, true);\n    a.finishState();\n    assertTrue(Operations.isEmpty(a));\n  }\n\n","sourceOld":"  public void testSeemsNonEmptyButIsNot2() throws Exception {\n    LightAutomaton a = new LightAutomaton();\n    int init = a.createState();\n    int s = a.createState();\n    a.addTransition(init, s, 'a');\n    // An orphan'd accept state\n    s = a.createState();\n    a.setAccept(s, true);\n    a.finishState();\n    assertTrue(BasicOperations.isEmpty(a));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestAutomaton#testSeemsNonEmptyButIsNot2().mjava","pathOld":"/dev/null","sourceNew":"  public void testSeemsNonEmptyButIsNot2() throws Exception {\n    Automaton a = new Automaton();\n    int init = a.createState();\n    int s = a.createState();\n    a.addTransition(init, s, 'a');\n    // An orphan'd accept state\n    s = a.createState();\n    a.setAccept(s, true);\n    a.finishState();\n    assertTrue(Operations.isEmpty(a));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c84485629d80d203608e8975a1139de9933cc38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}