{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestDuelingAnalyzers#setUp().mjava","commits":[{"id":"0c17d12803da6cadc96b3cdf15b0b940eddb28de","date":1323710889,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestDuelingAnalyzers#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // build an automaton matching this jvm's letter definition\n    State initial = new State();\n    State accept = new State();\n    accept.setAccept(true);\n    for (int i = 0; i <= 0x10FFFF; i++) {\n      if (Character.isLetter(i)) {\n        initial.addTransition(new Transition(i, i, accept));\n      }\n    }\n    Automaton single = new Automaton(initial);\n    single.reduce();\n    Automaton repeat = BasicOperations.repeat(single);\n    jvmLetter = new CharacterRunAutomaton(repeat);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestDuelingAnalyzers#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // build an automaton matching this jvm's letter definition\n    State initial = new State();\n    State accept = new State();\n    accept.setAccept(true);\n    for (int i = 0; i <= 0x10FFFF; i++) {\n      if (Character.isLetter(i)) {\n        initial.addTransition(new Transition(i, i, accept));\n      }\n    }\n    Automaton single = new Automaton(initial);\n    single.reduce();\n    Automaton repeat = BasicOperations.repeat(single);\n    jvmLetter = new CharacterRunAutomaton(repeat);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestDuelingAnalyzers#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestDuelingAnalyzers#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    // build an automaton matching this jvm's letter definition\n    State initial = new State();\n    State accept = new State();\n    accept.setAccept(true);\n    for (int i = 0; i <= 0x10FFFF; i++) {\n      if (Character.isLetter(i)) {\n        initial.addTransition(new Transition(i, i, accept));\n      }\n    }\n    Automaton single = new Automaton(initial);\n    single.reduce();\n    Automaton repeat = BasicOperations.repeat(single);\n    jvmLetter = new CharacterRunAutomaton(repeat);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    // build an automaton matching this jvm's letter definition\n    State initial = new State();\n    State accept = new State();\n    accept.setAccept(true);\n    for (int i = 0; i <= 0x10FFFF; i++) {\n      if (Character.isLetter(i)) {\n        initial.addTransition(new Transition(i, i, accept));\n      }\n    }\n    Automaton single = new Automaton(initial);\n    single.reduce();\n    Automaton repeat = BasicOperations.repeat(single);\n    jvmLetter = new CharacterRunAutomaton(repeat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0c17d12803da6cadc96b3cdf15b0b940eddb28de"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c17d12803da6cadc96b3cdf15b0b940eddb28de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0c17d12803da6cadc96b3cdf15b0b940eddb28de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ceb6a6c707ada1df8bde804e25c98668e699a18","0c17d12803da6cadc96b3cdf15b0b940eddb28de"],"0c17d12803da6cadc96b3cdf15b0b940eddb28de":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4ceb6a6c707ada1df8bde804e25c98668e699a18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}