{"path":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"/dev/null","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo, new AtomicLong());\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo, new AtomicLong());\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, null, 10000, 10000, termIndexInterval, codecInfo, new AtomicLong());\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval,\n                                                    CodecProvider.getDefault());\n\n    final FieldsConsumer consumer = state.codec.fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[],boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields, boolean allowPreFlex) throws Throwable {\n\n    final int termIndexInterval = _TestUtil.nextInt(random, 13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      if (!allowPreFlex && codecInfo.codecs[field.fieldInfo.codecId] instanceof PreFlexCodec) {\n        // code below expects unicode sort order\n        continue;\n      }\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":null,"sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo, new AtomicLong());\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs#write(FieldInfos,Directory,FieldData[]).mjava","sourceNew":null,"sourceOld":"  private void write(final FieldInfos fieldInfos, final Directory dir, final FieldData[] fields) throws Throwable {\n\n    final int termIndexInterval = this.nextInt(13, 27);\n    final SegmentCodecs codecInfo = SegmentCodecs.build(fieldInfos, CodecProvider.getDefault());\n    final SegmentWriteState state = new SegmentWriteState(null, dir, SEGMENT, fieldInfos, 10000, termIndexInterval, codecInfo);\n\n    final FieldsConsumer consumer = state.segmentCodecs.codec().fieldsConsumer(state);\n    Arrays.sort(fields);\n    for (final FieldData field : fields) {\n      field.write(consumer);\n    }\n    consumer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["85a883878c0af761245ab048babc63d099f835f3"],"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","56da903869515527852ee21ea7ef7bfe414cd40d"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"85a883878c0af761245ab048babc63d099f835f3":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["833a7987bc1c94455fde83e3311f72bddedcfb93","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"56da903869515527852ee21ea7ef7bfe414cd40d":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56da903869515527852ee21ea7ef7bfe414cd40d"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"85a883878c0af761245ab048babc63d099f835f3":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","85a883878c0af761245ab048babc63d099f835f3","833a7987bc1c94455fde83e3311f72bddedcfb93"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"833a7987bc1c94455fde83e3311f72bddedcfb93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}