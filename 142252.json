{"path":"lucene/core/src/test/org/apache/lucene/index/TestExitableDirectoryReader#testDocValues().mjava","commits":[{"id":"21158e0d8c55f9d05b17a5fa3bcd714c236a4a39","date":1574109283,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestExitableDirectoryReader#testDocValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testDocValues() throws IOException {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document d1 = new Document();\n    addDVs(d1, 10);\n    writer.addDocument(d1);\n\n    Document d2 = new Document();\n    addDVs(d2, 100);\n    writer.addDocument(d2);\n\n    Document d3 = new Document();\n    addDVs(d3, 1000);\n    writer.addDocument(d3);\n\n    writer.forceMerge(1);\n    writer.commit();\n    writer.close();\n\n    DirectoryReader directoryReader;\n    DirectoryReader exitableDirectoryReader;\n\n    for (DvFactory dvFactory :   Arrays.<DvFactory>asList(\n                 (r) -> r.getSortedDocValues(\"sorted\"),    \n                 (r) -> r.getSortedSetDocValues(\"sortedset\"),\n                 (r) -> r.getSortedNumericDocValues(\"sortednumeric\"),\n                 (r) -> r.getNumericDocValues(\"numeric\"),\n                 (r) -> r.getBinaryDocValues(\"binary\") \n            ))\n    {\n      directoryReader = DirectoryReader.open(directory);\n      exitableDirectoryReader = new ExitableDirectoryReader(directoryReader, immediateQueryTimeout());\n      \n      {\n        IndexReader  reader = new TestReader(getOnlyLeafReader(exitableDirectoryReader));\n      \n        expectThrows(ExitingReaderException.class, () -> {\n          LeafReader leaf = reader.leaves().get(0).reader();\n          DocValuesIterator iter = dvFactory.create(leaf);\n          scan(leaf, iter);\n        });\n        reader.close();\n      }\n  \n      directoryReader = DirectoryReader.open(directory);\n      exitableDirectoryReader = new ExitableDirectoryReader(directoryReader, random().nextBoolean()? \n          infiniteQueryTimeout() : disabledQueryTimeout());\n      {\n        IndexReader reader = new TestReader(getOnlyLeafReader(exitableDirectoryReader));\n        final LeafReader leaf = reader.leaves().get(0).reader();\n        scan(leaf, dvFactory.create(leaf));\n        assertNull(leaf.getNumericDocValues(\"absent\"));\n        assertNull(leaf.getBinaryDocValues(\"absent\"));\n        assertNull(leaf.getSortedDocValues(\"absent\"));\n        assertNull(leaf.getSortedNumericDocValues(\"absent\"));\n        assertNull(leaf.getSortedSetDocValues(\"absent\"));\n        \n        reader.close();\n      }\n    }\n    \n    directory.close();\n  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21158e0d8c55f9d05b17a5fa3bcd714c236a4a39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["21158e0d8c55f9d05b17a5fa3bcd714c236a4a39"]},"commit2Childs":{"21158e0d8c55f9d05b17a5fa3bcd714c236a4a39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21158e0d8c55f9d05b17a5fa3bcd714c236a4a39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}