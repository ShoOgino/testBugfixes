{"path":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee9156bf08d7eaae5e8d8ab5f855ba61012e257","date":1285443157,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator<DocTerms>( field ) );\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1dc03a48fa8ad548632a870b9bacffd800a73f7","date":1287268072,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator(field));\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator<DocTerms>( field ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator(field));\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator<DocTerms>( field ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator(field));\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, new DocTermsCreator(field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(AtomicIndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(AtomicIndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(AtomicReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getTerms(IndexReader,String).mjava","sourceNew":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(AtomicReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","sourceOld":"  // TODO: this if DocTermsIndex was already created, we\n  // should share it...\n  public DocTerms getTerms(IndexReader reader, String field) throws IOException {\n    return getTerms(reader, field, DEFAULT_FASTER_BUT_MORE_RAM);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1dc03a48fa8ad548632a870b9bacffd800a73f7":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","b1dc03a48fa8ad548632a870b9bacffd800a73f7"],"382fe3a6ca9745891afebda9b9a57cc158305545":["b1dc03a48fa8ad548632a870b9bacffd800a73f7"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","b1dc03a48fa8ad548632a870b9bacffd800a73f7"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["382fe3a6ca9745891afebda9b9a57cc158305545","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["382fe3a6ca9745891afebda9b9a57cc158305545"]},"commit2Childs":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["b1dc03a48fa8ad548632a870b9bacffd800a73f7","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1dc03a48fa8ad548632a870b9bacffd800a73f7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","382fe3a6ca9745891afebda9b9a57cc158305545","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"382fe3a6ca9745891afebda9b9a57cc158305545":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}