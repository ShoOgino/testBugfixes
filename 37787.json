{"path":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","commits":[{"id":"4b197567ed7b63994641ee44ec9d13bfae783732","date":1365257860,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"/dev/null","sourceNew":"  /** parse a break iterator type for the specified locale */\n  protected BreakIterator parseBreakIterator(String type, Locale locale) {\n    if (type == null || \"SENTENCE\".equals(type)) {\n      return BreakIterator.getSentenceInstance(locale);\n    } else if (\"LINE\".equals(type)) {\n      return BreakIterator.getLineInstance(locale);\n    } else if (\"WORD\".equals(type)) {\n      return BreakIterator.getWordInstance(locale);\n    } else if (\"CHARACTER\".equals(type)) {\n      return BreakIterator.getCharacterInstance(locale);\n    } else if (\"WHOLE\".equals(type)) {\n      return new WholeBreakIterator();\n    } else {\n      throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79b3c136afb2422d938f87bce41900b92d0b27c1","date":1488420247,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":"  /** parse a break iterator type for the specified locale */\n  protected BreakIterator parseBreakIterator(String type, Locale locale) {\n    if (type == null || \"SENTENCE\".equals(type)) {\n      return BreakIterator.getSentenceInstance(locale);\n    } else if (\"LINE\".equals(type)) {\n      return BreakIterator.getLineInstance(locale);\n    } else if (\"WORD\".equals(type)) {\n      return BreakIterator.getWordInstance(locale);\n    } else if (\"CHARACTER\".equals(type)) {\n      return BreakIterator.getCharacterInstance(locale);\n    } else {\n      throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n    }\n  }\n\n","sourceOld":"  /** parse a break iterator type for the specified locale */\n  protected BreakIterator parseBreakIterator(String type, Locale locale) {\n    if (type == null || \"SENTENCE\".equals(type)) {\n      return BreakIterator.getSentenceInstance(locale);\n    } else if (\"LINE\".equals(type)) {\n      return BreakIterator.getLineInstance(locale);\n    } else if (\"WORD\".equals(type)) {\n      return BreakIterator.getWordInstance(locale);\n    } else if (\"CHARACTER\".equals(type)) {\n      return BreakIterator.getCharacterInstance(locale);\n    } else if (\"WHOLE\".equals(type)) {\n      return new WholeBreakIterator();\n    } else {\n      throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"424b0811c7309a660798cd4e2939a8adee546665","date":1495551772,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":null,"sourceOld":"  /** parse a break iterator type for the specified locale */\n  protected BreakIterator parseBreakIterator(String type, Locale locale) {\n    if (type == null || \"SENTENCE\".equals(type)) {\n      return BreakIterator.getSentenceInstance(locale);\n    } else if (\"LINE\".equals(type)) {\n      return BreakIterator.getLineInstance(locale);\n    } else if (\"WORD\".equals(type)) {\n      return BreakIterator.getWordInstance(locale);\n    } else if (\"CHARACTER\".equals(type)) {\n      return BreakIterator.getCharacterInstance(locale);\n    } else {\n      throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/highlight/PostingsSolrHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":null,"sourceOld":"  /** parse a break iterator type for the specified locale */\n  protected BreakIterator parseBreakIterator(String type, Locale locale) {\n    if (type == null || \"SENTENCE\".equals(type)) {\n      return BreakIterator.getSentenceInstance(locale);\n    } else if (\"LINE\".equals(type)) {\n      return BreakIterator.getLineInstance(locale);\n    } else if (\"WORD\".equals(type)) {\n      return BreakIterator.getWordInstance(locale);\n    } else if (\"CHARACTER\".equals(type)) {\n      return BreakIterator.getCharacterInstance(locale);\n    } else {\n      throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["79b3c136afb2422d938f87bce41900b92d0b27c1","424b0811c7309a660798cd4e2939a8adee546665"],"4b197567ed7b63994641ee44ec9d13bfae783732":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"424b0811c7309a660798cd4e2939a8adee546665":["79b3c136afb2422d938f87bce41900b92d0b27c1"],"79b3c136afb2422d938f87bce41900b92d0b27c1":["4b197567ed7b63994641ee44ec9d13bfae783732"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["424b0811c7309a660798cd4e2939a8adee546665"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"4b197567ed7b63994641ee44ec9d13bfae783732":["79b3c136afb2422d938f87bce41900b92d0b27c1"],"424b0811c7309a660798cd4e2939a8adee546665":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"79b3c136afb2422d938f87bce41900b92d0b27c1":["e9017cf144952056066919f1ebc7897ff9bd71b1","424b0811c7309a660798cd4e2939a8adee546665"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b197567ed7b63994641ee44ec9d13bfae783732"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}