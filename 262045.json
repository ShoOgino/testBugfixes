{"path":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  final void add(Scorer scorer, boolean required, boolean prohibited) {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n\tthrow new IndexOutOfBoundsException\n\t  (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;\t\t\t  // update prohibited mask\n    else if (required)\n      requiredMask |= mask;\t\t\t  // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n\t\t\t    bucketTable.newCollector(mask), scorers);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","sourceNew":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n\tthrow new IndexOutOfBoundsException\n\t  (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;\t\t\t  // update prohibited mask\n    else if (required)\n      requiredMask |= mask;\t\t\t  // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n\t\t\t    bucketTable.newCollector(mask), scorers);\n  }\n\n","sourceOld":"  final void add(Scorer scorer, boolean required, boolean prohibited) {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n\tthrow new IndexOutOfBoundsException\n\t  (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;\t\t\t  // update prohibited mask\n    else if (required)\n      requiredMask |= mask;\t\t\t  // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n\t\t\t    bucketTable.newCollector(mask), scorers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88","date":1095875760,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","sourceNew":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n        throw new IndexOutOfBoundsException\n          (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;                     // update prohibited mask\n    else if (required)\n      requiredMask |= mask;                       // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n                            bucketTable.newCollector(mask), scorers);\n  }\n\n","sourceOld":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n\tthrow new IndexOutOfBoundsException\n\t  (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;\t\t\t  // update prohibited mask\n    else if (required)\n      requiredMask |= mask;\t\t\t  // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n\t\t\t    bucketTable.newCollector(mask), scorers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","sourceNew":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0) {\n        throw new IndexOutOfBoundsException(\n            \"More than 32 required/prohibited clauses in query.\");\n      }\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    }\n\n    if (!prohibited) {\n      maxCoord++;\n      if (required) {\n        requiredMask |= mask;                       // update required mask\n      }\n    } else {\n      // prohibited\n      prohibitedMask |= mask;                     // update prohibited mask\n    }\n\n    scorers = new SubScorer(scorer, required, prohibited,\n                            bucketTable.newCollector(mask), scorers);\n  }\n\n","sourceOld":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0)\n        throw new IndexOutOfBoundsException\n          (\"More than 32 required/prohibited clauses in query.\");\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    } else\n      mask = 0;\n\n    if (!prohibited)\n      maxCoord++;\n\n    if (prohibited)\n      prohibitedMask |= mask;                     // update prohibited mask\n    else if (required)\n      requiredMask |= mask;                       // update required mask\n\n    scorers = new SubScorer(scorer, required, prohibited,\n                            bucketTable.newCollector(mask), scorers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#add(Scorer,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  final void add(Scorer scorer, boolean required, boolean prohibited)\n    throws IOException {\n    int mask = 0;\n    if (required || prohibited) {\n      if (nextMask == 0) {\n        throw new IndexOutOfBoundsException(\n            \"More than 32 required/prohibited clauses in query.\");\n      }\n      mask = nextMask;\n      nextMask = nextMask << 1;\n    }\n\n    if (!prohibited) {\n      maxCoord++;\n      if (required) {\n        requiredMask |= mask;                       // update required mask\n      }\n    } else {\n      // prohibited\n      prohibitedMask |= mask;                     // update prohibited mask\n    }\n\n    scorers = new SubScorer(scorer, required, prohibited,\n                            bucketTable.newCollector(mask), scorers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30a558487f2298c2c19ceca9103c1b6865d64708":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30a558487f2298c2c19ceca9103c1b6865d64708"],"15c469602973ef1a33c9a07367a380d278ffab20":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["30a558487f2298c2c19ceca9103c1b6865d64708"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["15c469602973ef1a33c9a07367a380d278ffab20"],"30a558487f2298c2c19ceca9103c1b6865d64708":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9a53bff5f7abfecc50821f3dfcdca3d4c445cf88":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"15c469602973ef1a33c9a07367a380d278ffab20":["9a53bff5f7abfecc50821f3dfcdca3d4c445cf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}