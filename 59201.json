{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#pruneDeletedSegments().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#pruneDeletedSegments().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#pruneDeletedSegments().mjava","sourceNew":"  /** Prunes any segment whose docs are all deleted. */\n  public void pruneDeletedSegments() {\n    for(final Iterator<SegmentInfo> it = segments.iterator(); it.hasNext();) {\n      final SegmentInfo info = it.next();\n      if (info.getDelCount() == info.docCount) {\n        it.remove();\n        final boolean didRemove = segmentSet.remove(info);\n        assert didRemove;\n      }\n    }\n    assert segmentSet.size() == segments.size();\n  }\n\n","sourceOld":"  /** Prunes any segment whose docs are all deleted. */\n  public void pruneDeletedSegments() {\n    for(final Iterator<SegmentInfo> it = segments.iterator(); it.hasNext();) {\n      final SegmentInfo info = it.next();\n      if (info.getDelCount() == info.docCount) {\n        it.remove();\n        final boolean didRemove = segmentSet.remove(info);\n        assert didRemove;\n      }\n    }\n    assert segmentSet.size() == segments.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80edd476d5b8aeb0b27e9118533b0f982665c005","date":1337129258,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#pruneDeletedSegments().mjava","sourceNew":null,"sourceOld":"  /** Prunes any segment whose docs are all deleted. */\n  public void pruneDeletedSegments() {\n    for(final Iterator<SegmentInfo> it = segments.iterator(); it.hasNext();) {\n      final SegmentInfo info = it.next();\n      if (info.getDelCount() == info.docCount) {\n        it.remove();\n        final boolean didRemove = segmentSet.remove(info);\n        assert didRemove;\n      }\n    }\n    assert segmentSet.size() == segments.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#pruneDeletedSegments().mjava","sourceNew":null,"sourceOld":"  /** Prunes any segment whose docs are all deleted. */\n  public void pruneDeletedSegments() {\n    for(final Iterator<SegmentInfo> it = segments.iterator(); it.hasNext();) {\n      final SegmentInfo info = it.next();\n      if (info.getDelCount() == info.docCount) {\n        it.remove();\n        final boolean didRemove = segmentSet.remove(info);\n        assert didRemove;\n      }\n    }\n    assert segmentSet.size() == segments.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","80edd476d5b8aeb0b27e9118533b0f982665c005"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80edd476d5b8aeb0b27e9118533b0f982665c005":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","80edd476d5b8aeb0b27e9118533b0f982665c005"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"80edd476d5b8aeb0b27e9118533b0f982665c005":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}