{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/StandardGdataSearcher#collectHits(Hits,int,int).mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/StandardGdataSearcher#collectHits(Hits,int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected List<String> collectHits(Hits hits, int hitcount, int offset)\n            throws IOException {\n        int hitLength = hits.length();\n        if (hitLength < offset || hitLength == 0)\n            return new ArrayList<String>(0);\n        if (offset > 0)\n            --offset;\n        /*\n         * include the offset\n         */\n        int remainingHits = hitLength - offset;\n        int returnSize = remainingHits > hitcount ? hitcount : remainingHits;\n        List<String> retVal = new ArrayList<String>(returnSize);\n        for (int i = 0; i < returnSize; i++) {\n            Document doc = hits.doc(offset++);\n            /*\n             * the entry id is sufficient to retrieve the entry from the\n             * storage. the result will be ordered by score (default)\n             */\n            Field field = doc.getField(IndexDocument.FIELD_ENTRY_ID);\n            retVal.add(i, field.stringValue());\n        }\n        return retVal;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/StandardGdataSearcher#collectHits(Hits,int,int).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/StandardGdataSearcher#collectHits(Hits,int,int).mjava","sourceNew":"    protected List<String> collectHits(Hits hits, int hitcount, int offset)\n            throws IOException {\n        int hitLength = hits.length();\n        if (hitLength < offset || hitLength == 0)\n            return new ArrayList<String>(0);\n        if (offset > 0)\n            --offset;\n        /*\n         * include the offset\n         */\n        int remainingHits = hitLength - offset;\n        int returnSize = remainingHits > hitcount ? hitcount : remainingHits;\n        List<String> retVal = new ArrayList<String>(returnSize);\n        for (int i = 0; i < returnSize; i++) {\n            Document doc = hits.doc(offset++);\n            /*\n             * the entry id is sufficient to retrieve the entry from the\n             * storage. the result will be ordered by score (default)\n             */\n            Field field = doc.getField(IndexDocument.FIELD_ENTRY_ID);\n            retVal.add(i, field.stringValue());\n        }\n        return retVal;\n\n    }\n\n","sourceOld":"    protected List<String> collectHits(Hits hits, int hitcount, int offset)\n            throws IOException {\n        int hitLength = hits.length();\n        if (hitLength < offset || hitLength == 0)\n            return new ArrayList<String>(0);\n        if (offset > 0)\n            --offset;\n        /*\n         * include the offset\n         */\n        int remainingHits = hitLength - offset;\n        int returnSize = remainingHits > hitcount ? hitcount : remainingHits;\n        List<String> retVal = new ArrayList<String>(returnSize);\n        for (int i = 0; i < returnSize; i++) {\n            Document doc = hits.doc(offset++);\n            /*\n             * the entry id is sufficient to retrieve the entry from the\n             * storage. the result will be ordered by score (default)\n             */\n            Field field = doc.getField(IndexDocument.FIELD_ENTRY_ID);\n            retVal.add(i, field.stringValue());\n        }\n        return retVal;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}