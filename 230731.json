{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(wrapFilter(query, filter), n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":null,"sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses If a query would exceed \n   *         {@link BooleanQuery#getMaxClauseCount()} clauses.\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(wrapFilter(query, filter), n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb17639909a369c1e64866842e5c213440acc17e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["fb17639909a369c1e64866842e5c213440acc17e"],"fb17639909a369c1e64866842e5c213440acc17e":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}