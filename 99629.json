{"path":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestVersion#test().mjava","sourceNew":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_31));\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_40));\n    assertFalse(Version.LUCENE_30.onOrAfter(Version.LUCENE_31));\n  }\n\n","sourceOld":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_31));\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_40));\n    assertFalse(Version.LUCENE_30.onOrAfter(Version.LUCENE_31));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","sourceNew":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_50.onOrAfter(Version.LUCENE_40));\n    assertFalse(Version.LUCENE_40.onOrAfter(Version.LUCENE_50));\n  }\n\n","sourceOld":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_31));\n    assertTrue(Version.LUCENE_40.onOrAfter(Version.LUCENE_40));\n    assertFalse(Version.LUCENE_30.onOrAfter(Version.LUCENE_31));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd330c9d05eacbd6e952fe0dea852e7ae037eb50","date":1398873035,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","sourceNew":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_5_0.onOrAfter(Version.LUCENE_4_0));\n    assertFalse(Version.LUCENE_4_0.onOrAfter(Version.LUCENE_5_0));\n  }\n\n","sourceOld":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_50.onOrAfter(Version.LUCENE_40));\n    assertFalse(Version.LUCENE_40.onOrAfter(Version.LUCENE_50));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestVersion#test().mjava","sourceNew":null,"sourceOld":"  public void test() {\n    for (Version v : Version.values()) {\n      assertTrue(\"LUCENE_CURRENT must be always onOrAfter(\"+v+\")\", Version.LUCENE_CURRENT.onOrAfter(v));\n    }\n    assertTrue(Version.LUCENE_5_0.onOrAfter(Version.LUCENE_4_0));\n    assertFalse(Version.LUCENE_4_0.onOrAfter(Version.LUCENE_5_0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"057a1793765d068ea9302f1a29e21734ee58d41e":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["057a1793765d068ea9302f1a29e21734ee58d41e"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["dd330c9d05eacbd6e952fe0dea852e7ae037eb50"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dd330c9d05eacbd6e952fe0dea852e7ae037eb50":["057a1793765d068ea9302f1a29e21734ee58d41e"],"057a1793765d068ea9302f1a29e21734ee58d41e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}