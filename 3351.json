{"path":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","commits":[{"id":"824d674c7c80eeddb2c2e429f92d3b15688d8393","date":1379775111,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"/dev/null","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = _TestUtil.getTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      _TestUtil.rmDir(temp);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.getTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rmDir(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = _TestUtil.getTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      _TestUtil.rmDir(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rmDir(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.getTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rmDir(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rm(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rmDir(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rm(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rm(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rm(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = TestUtil.getTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rmDir(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      IOUtils.rm(temp);\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      TestUtil.rm(temp);\n    }\n  }\n\n","bugFix":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\").toFile();\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      IOUtils.rm(temp.toPath());\n    }\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\");\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      IOUtils.rm(temp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n\n    Path temp = createTempDir(\"testEscapeInstanceDir\");\n    Files.write(temp.resolve(\"dummy.txt\"), new byte[]{});\n    Path instanceDir = temp.resolve(\"instance\");\n    Files.createDirectories(instanceDir.resolve(\"conf\"));\n    try (SolrResourceLoader loader = new SolrResourceLoader(instanceDir)) {\n      loader.openResource(\"../../dummy.txt\").close();\n      fail();\n    } catch (IOException ioe) {\n      assertTrue(ioe.getMessage().contains(\"is outside resource loader dir\"));\n    }\n\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n    File temp = createTempDir(\"testEscapeInstanceDir\").toFile();\n    try {\n      temp.mkdirs();\n      new File(temp, \"dummy.txt\").createNewFile();\n      File instanceDir = new File(temp, \"instance\");\n      instanceDir.mkdir();\n      new File(instanceDir, \"conf\").mkdir();\n      SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n      try {\n        loader.openResource(\"../../dummy.txt\").close();\n        fail();\n      } catch (IOException ioe) {\n        assertTrue(ioe.getMessage().startsWith(\"For security reasons, SolrResourceLoader\"));\n      }\n      loader.close();\n    } finally {\n      IOUtils.rm(temp.toPath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68cb00b5f16300efa7bd172de723d9ac91d38cc2","date":1543702774,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/ResourceLoaderTest#testEscapeInstanceDir().mjava","sourceNew":"  public void testEscapeInstanceDir() throws Exception {\n\n    Path temp = createTempDir(\"testEscapeInstanceDir\");\n    Files.write(temp.resolve(\"dummy.txt\"), new byte[]{});\n    Path instanceDir = temp.resolve(\"instance\");\n    Files.createDirectories(instanceDir.resolve(\"conf\"));\n\n    try (SolrResourceLoader loader = new SolrResourceLoader(instanceDir)) {\n      loader.openResource(\"../../dummy.txt\").close();\n      fail();\n    } catch (IOException ioe) {\n      assertTrue(ioe.getMessage().contains(\"is outside resource loader dir\"));\n    }\n\n  }\n\n","sourceOld":"  public void testEscapeInstanceDir() throws Exception {\n\n    Path temp = createTempDir(\"testEscapeInstanceDir\");\n    Files.write(temp.resolve(\"dummy.txt\"), new byte[]{});\n    Path instanceDir = temp.resolve(\"instance\");\n    Files.createDirectories(instanceDir.resolve(\"conf\"));\n    try (SolrResourceLoader loader = new SolrResourceLoader(instanceDir)) {\n      loader.openResource(\"../../dummy.txt\").close();\n      fail();\n    } catch (IOException ioe) {\n      assertTrue(ioe.getMessage().contains(\"is outside resource loader dir\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["f4abec28b874149a7223e32cc7a01704c27790de"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["824d674c7c80eeddb2c2e429f92d3b15688d8393"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"824d674c7c80eeddb2c2e429f92d3b15688d8393":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["d0d579490a72f2e6297eaa648940611234c57cf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"]},"commit2Childs":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["68cb00b5f16300efa7bd172de723d9ac91d38cc2"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["824d674c7c80eeddb2c2e429f92d3b15688d8393"],"68cb00b5f16300efa7bd172de723d9ac91d38cc2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"824d674c7c80eeddb2c2e429f92d3b15688d8393":["6613659748fe4411a7dcf85266e55db1f95f7315"],"f4abec28b874149a7223e32cc7a01704c27790de":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"d0d579490a72f2e6297eaa648940611234c57cf1":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}