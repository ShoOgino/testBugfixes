{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","commits":[{"id":"0eff89b16ebd0046c839c5d02ee44500be5c7886","date":1355766557,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","sourceNew":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setDistributedParams(ModifiableSolrParams).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      // don't set shards, let that be figured out from the cloud state\n    } else {\n      // use shard ids rather than physical locations\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["abb23fcc2461782ab204e61213240feb77d355aa"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["abb23fcc2461782ab204e61213240feb77d355aa","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"abb23fcc2461782ab204e61213240feb77d355aa":["0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4efd3fffdd7acd625bb88e455c8097e17f75735"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"abb23fcc2461782ab204e61213240feb77d355aa":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}