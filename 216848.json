{"path":"lucene/core/src/java/org/apache/lucene/search/CachingCollector#create(Collector,boolean,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector#create(Collector,boolean,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingCollector#create(Collector,boolean,int).mjava","sourceNew":"  /**\n   * Create a new {@link CachingCollector} that wraps the given collector and\n   * caches documents and scores up to the specified max docs threshold.\n   *\n   * @param other\n   *          the Collector to wrap and delegate calls to.\n   * @param cacheScores\n   *          whether to cache scores in addition to document IDs. Note that\n   *          this increases the RAM consumed per doc\n   * @param maxDocsToCache\n   *          the maximum number of documents for caching the documents and\n   *          possible the scores. If the collector exceeds the threshold,\n   *          no documents and scores are cached.\n   */\n  public static CachingCollector create(Collector other, boolean cacheScores, int maxDocsToCache) {\n    return cacheScores ? new ScoreCachingCollector(other, maxDocsToCache) : new NoScoreCachingCollector(other, maxDocsToCache);\n  }\n\n","sourceOld":"  /**\n   * Create a new {@link CachingCollector} that wraps the given collector and\n   * caches documents and scores up to the specified max docs threshold.\n   *\n   * @param other\n   *          the Collector to wrap and delegate calls to.\n   * @param cacheScores\n   *          whether to cache scores in addition to document IDs. Note that\n   *          this increases the RAM consumed per doc\n   * @param maxDocsToCache\n   *          the maximum number of documents for caching the documents and\n   *          possible the scores. If the collector exceeds the threshold,\n   *          no documents and scores are cached.\n   */\n  public static CachingCollector create(Collector other, boolean cacheScores, int maxDocsToCache) {\n    return cacheScores ? new ScoreCachingCollector(other, maxDocsToCache) : new NoScoreCachingCollector(other, maxDocsToCache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}