{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() {\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86762b84c3fc613e3c2250dc9452529a68181a3f","date":1419412618,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() {\n      assertThread(\"Sorted numeric doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      assertThread(\"Sorted numeric doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      assertThread(\"Sorted numeric doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() {\n      assertThread(\"Sorted numeric doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      assert exists;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      assert exists;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingSortedSetDocValues#nextOrd().mjava","sourceNew":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      assert exists;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","sourceOld":"    @Override\n    public long nextOrd() throws IOException {\n      assertThread(\"Sorted set doc values\", creationThread);\n      assert lastOrd != NO_MORE_ORDS;\n      long ord = in.nextOrd();\n      assert ord < valueCount;\n      assert ord == NO_MORE_ORDS || ord > lastOrd;\n      lastOrd = ord;\n      return ord;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11134e449dabe11d6d0ff6a564d84b82cbe93722":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["86762b84c3fc613e3c2250dc9452529a68181a3f","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"86762b84c3fc613e3c2250dc9452529a68181a3f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["86762b84c3fc613e3c2250dc9452529a68181a3f","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"]},"commit2Childs":{"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"86762b84c3fc613e3c2250dc9452529a68181a3f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["86762b84c3fc613e3c2250dc9452529a68181a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}