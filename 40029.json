{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrServer).mjava","sourceNew":"  public abstract SolrResponse process( SolrClient server ) throws SolrServerException, IOException;\n\n","sourceOld":"  public abstract SolrResponse process( SolrServer server ) throws SolrServerException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4eb3c3f8289738e479c1ef1e80191be21aa07a52","date":1424862842,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   * @param client the SolrClient to communicate with\n   * @return the response\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public T process(SolrClient client) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","sourceOld":"  public abstract SolrResponse process( SolrClient server ) throws SolrServerException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa","date":1425039471,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   * @param client the SolrClient to communicate with\n   * @return the response\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","sourceOld":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   * @param client the SolrClient to communicate with\n   * @return the response\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public T process(SolrClient client) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df","date":1425554964,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client) throws SolrServerException, IOException {\n    return process(client, null);\n  }\n\n","sourceOld":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   * @param client the SolrClient to communicate with\n   * @return the response\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client) throws SolrServerException, IOException {\n    return process(client, null);\n  }\n\n","sourceOld":"  public abstract SolrResponse process( SolrClient server ) throws SolrServerException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["4eb3c3f8289738e479c1ef1e80191be21aa07a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"4eb3c3f8289738e479c1ef1e80191be21aa07a52":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa":["7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4eb3c3f8289738e479c1ef1e80191be21aa07a52"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4eb3c3f8289738e479c1ef1e80191be21aa07a52":["b8ed5ba2c6fdd51d5fb71cfabb554a7f2a7d6cfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}