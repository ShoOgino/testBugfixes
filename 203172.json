{"path":"lucene/src/test-framework/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/search/CheckHits#hits2str(ScoreDoc[],ScoreDoc[],int,int).mjava","sourceNew":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String hits2str(ScoreDoc[] hits1, ScoreDoc[] hits2, int start, int end) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    int len1=hits1==null ? 0 : hits1.length;\n    int len2=hits2==null ? 0 : hits2.length;\n    if (end<=0) {\n      end = Math.max(len1,len2);\n    }\n\n      sb.append(\"Hits length1=\").append(len1).append(\"\\tlength2=\").append(len2);\n\n    sb.append('\\n');\n    for (int i=start; i<end; i++) {\n        sb.append(\"hit=\").append(i).append(':');\n      if (i<len1) {\n          sb.append(\" doc\").append(hits1[i].doc).append('=').append(hits1[i].score);\n      } else {\n        sb.append(\"               \");\n      }\n      sb.append(\",\\t\");\n      if (i<len2) {\n        sb.append(\" doc\").append(hits2[i].doc).append('=').append(hits2[i].score);\n      }\n      sb.append('\\n');\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["7b91922b55d15444d554721b352861d028eb8278","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}