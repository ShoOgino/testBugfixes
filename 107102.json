{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"023aa7229ae194442d2c4f36a9aaea1588760416","date":1421349700,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), AssertingCollector.wrap(random, collector));\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), collector);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    assert weight instanceof AssertingWeight;\n    super.search(leaves, weight, AssertingCollector.wrap(random, collector));\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    // TODO: shouldn't we AssertingCollector.wrap(collector) here?\n    super.search(leaves, AssertingWeight.wrap(random, weight), AssertingCollector.wrap(random, collector));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    assert weight instanceof AssertingWeight;\n    super.search(leaves, weight, AssertingCollector.wrap(collector));\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    assert weight instanceof AssertingWeight;\n    super.search(leaves, weight, AssertingCollector.wrap(random, collector));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["023aa7229ae194442d2c4f36a9aaea1588760416"],"023aa7229ae194442d2c4f36a9aaea1588760416":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"023aa7229ae194442d2c4f36a9aaea1588760416":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["023aa7229ae194442d2c4f36a9aaea1588760416"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}