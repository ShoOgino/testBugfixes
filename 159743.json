{"path":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","commits":[{"id":"f45b94f31bcc0de4497b99f7b51993765f64c601","date":1352745246,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","pathOld":"/dev/null","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < source.getValueCount()) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            source.getByOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3538d7872902c19ad619052fb3130f652f35e35","date":1353005395,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < source.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            source.getByOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < source.getValueCount()) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            source.getByOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d374b2bebd0d52acaa61038fbf23068620fba7","date":1353240004,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < source.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            source.getByOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59b3aad76859740c1ab8da298bf0f9ccc903b4cf","date":1353279192,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            ord++;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed9002c5afac843c7f2d04d88e74b40d627e1af","date":1357602069,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SortedDocValuesConsumer.Merger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3538d7872902c19ad619052fb3130f652f35e35":["f45b94f31bcc0de4497b99f7b51993765f64c601"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"59b3aad76859740c1ab8da298bf0f9ccc903b4cf":["a4d374b2bebd0d52acaa61038fbf23068620fba7"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["e3538d7872902c19ad619052fb3130f652f35e35"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":["59b3aad76859740c1ab8da298bf0f9ccc903b4cf"],"f45b94f31bcc0de4497b99f7b51993765f64c601":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3538d7872902c19ad619052fb3130f652f35e35":["a4d374b2bebd0d52acaa61038fbf23068620fba7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f45b94f31bcc0de4497b99f7b51993765f64c601","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59b3aad76859740c1ab8da298bf0f9ccc903b4cf":["1ed9002c5afac843c7f2d04d88e74b40d627e1af"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["59b3aad76859740c1ab8da298bf0f9ccc903b4cf"],"f45b94f31bcc0de4497b99f7b51993765f64c601":["e3538d7872902c19ad619052fb3130f652f35e35"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1ed9002c5afac843c7f2d04d88e74b40d627e1af","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}