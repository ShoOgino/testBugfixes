{"path":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection).mjava","commits":[{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection).mjava","pathOld":"/dev/null","sourceNew":"  /** Blocks until all files in syncing are sync'd */\n  private boolean waitForAllSynced(Collection syncing) throws IOException {\n    synchronized(synced) {\n      Iterator it = syncing.iterator();\n      while(it.hasNext()) {\n        final String fileName = (String) it.next();\n        while(!synced.contains(fileName)) {\n          if (!syncing.contains(fileName))\n            // There was an error because a file that was\n            // previously syncing failed to appear in synced\n            return false;\n          else\n            try {\n              synced.wait();\n            } catch (InterruptedException ie) {\n              continue;\n            }\n        }\n      }\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection).mjava","sourceNew":"  /** Blocks until all files in syncing are sync'd */\n  private boolean waitForAllSynced(Collection syncing) throws IOException {\n    synchronized(synced) {\n      Iterator it = syncing.iterator();\n      while(it.hasNext()) {\n        final String fileName = (String) it.next();\n        while(!synced.contains(fileName)) {\n          if (!syncing.contains(fileName))\n            // There was an error because a file that was\n            // previously syncing failed to appear in synced\n            return false;\n          else\n            try {\n              synced.wait();\n            } catch (InterruptedException ie) {\n              // In 3.0 we will change this to throw\n              // InterruptedException instead\n              Thread.currentThread().interrupt();\n              throw new RuntimeException(ie);\n            }\n        }\n      }\n      return true;\n    }\n  }\n\n","sourceOld":"  /** Blocks until all files in syncing are sync'd */\n  private boolean waitForAllSynced(Collection syncing) throws IOException {\n    synchronized(synced) {\n      Iterator it = syncing.iterator();\n      while(it.hasNext()) {\n        final String fileName = (String) it.next();\n        while(!synced.contains(fileName)) {\n          if (!syncing.contains(fileName))\n            // There was an error because a file that was\n            // previously syncing failed to appear in synced\n            return false;\n          else\n            try {\n              synced.wait();\n            } catch (InterruptedException ie) {\n              continue;\n            }\n        }\n      }\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection[String]).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#waitForAllSynced(Collection).mjava","sourceNew":"  /** Blocks until all files in syncing are sync'd */\n  private boolean waitForAllSynced(Collection<String> syncing) throws IOException {\n    synchronized(synced) {\n      Iterator<String> it = syncing.iterator();\n      while(it.hasNext()) {\n        final String fileName = it.next();\n        while(!synced.contains(fileName)) {\n          if (!syncing.contains(fileName))\n            // There was an error because a file that was\n            // previously syncing failed to appear in synced\n            return false;\n          else\n            try {\n              synced.wait();\n            } catch (InterruptedException ie) {\n              // In 3.0 we will change this to throw\n              // InterruptedException instead\n              Thread.currentThread().interrupt();\n              throw new RuntimeException(ie);\n            }\n        }\n      }\n      return true;\n    }\n  }\n\n","sourceOld":"  /** Blocks until all files in syncing are sync'd */\n  private boolean waitForAllSynced(Collection syncing) throws IOException {\n    synchronized(synced) {\n      Iterator it = syncing.iterator();\n      while(it.hasNext()) {\n        final String fileName = (String) it.next();\n        while(!synced.contains(fileName)) {\n          if (!syncing.contains(fileName))\n            // There was an error because a file that was\n            // previously syncing failed to appear in synced\n            return false;\n          else\n            try {\n              synced.wait();\n            } catch (InterruptedException ie) {\n              // In 3.0 we will change this to throw\n              // InterruptedException instead\n              Thread.currentThread().interrupt();\n              throw new RuntimeException(ie);\n            }\n        }\n      }\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e82780afe6097066eb5befb86e9432f077667e3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["e82780afe6097066eb5befb86e9432f077667e3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e82780afe6097066eb5befb86e9432f077667e3d"],"e82780afe6097066eb5befb86e9432f077667e3d":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}