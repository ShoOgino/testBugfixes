{"path":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testClose().mjava","commits":[{"id":"edfb471a48a4bd226eefc6d6fd96195d9ce1db73","date":1260015437,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testClose() throws IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n    spellChecker.clearIndex();\n    String field = \"field1\";\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n    assertEquals(num_field2, num_field1 + 1);\n    checkCommonSuggestions(r);\n    assertLastSearcherOpen(4);\n    spellChecker.close();\n    assertSearchersClosed();\n    try {\n      spellChecker.close();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    try {\n      checkCommonSuggestions(r);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.clearIndex();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.indexDictionary(new LuceneDictionary(r, field));\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.setSpellIndex(spellindex);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    assertEquals(4, searchers.size());\n    assertSearchersClosed();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","05fe562aa248790944d43cdd478f512572835ba0","05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testClose().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testClose().mjava","sourceNew":"  public void testClose() throws IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n    spellChecker.clearIndex();\n    String field = \"field1\";\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n    assertEquals(num_field2, num_field1 + 1);\n    checkCommonSuggestions(r);\n    assertLastSearcherOpen(4);\n    spellChecker.close();\n    assertSearchersClosed();\n    try {\n      spellChecker.close();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    try {\n      checkCommonSuggestions(r);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.clearIndex();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.indexDictionary(new LuceneDictionary(r, field));\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.setSpellIndex(spellindex);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    assertEquals(4, searchers.size());\n    assertSearchersClosed();\n  }\n\n","sourceOld":"  public void testClose() throws IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n    spellChecker.clearIndex();\n    String field = \"field1\";\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n    assertEquals(num_field2, num_field1 + 1);\n    checkCommonSuggestions(r);\n    assertLastSearcherOpen(4);\n    spellChecker.close();\n    assertSearchersClosed();\n    try {\n      spellChecker.close();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    try {\n      checkCommonSuggestions(r);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.clearIndex();\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.indexDictionary(new LuceneDictionary(r, field));\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    \n    try {\n      spellChecker.setSpellIndex(spellindex);\n      fail(\"spellchecker was already closed\");\n    } catch (AlreadyClosedException e) {\n      // expected\n    }\n    assertEquals(4, searchers.size());\n    assertSearchersClosed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edfb471a48a4bd226eefc6d6fd96195d9ce1db73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["edfb471a48a4bd226eefc6d6fd96195d9ce1db73"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edfb471a48a4bd226eefc6d6fd96195d9ce1db73"],"edfb471a48a4bd226eefc6d6fd96195d9ce1db73":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}