{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","commits":[{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(ConfigSolr).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(ConfigSolr config) {\n    container = new CoreContainer(config);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, new Properties(), coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, new Properties(), coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(NodeConfig,CoresLocator).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific config\n   * @param config the ConfigSolr to use\n   */\n  public TestHarness(NodeConfig config, CoresLocator coresLocator) {\n    container = new CoreContainer(config, new Properties(), coresLocator);\n    container.load();\n    updater = new UpdateRequestHandler();\n    updater.init(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9bc766d645fa848f86c381c7f6acf2c881c99399"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["e15199583d3635cb940942caed05132dd6c4c7c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}