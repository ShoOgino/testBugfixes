{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,String,ZkNodeProps).mjava","commits":[{"id":"30bbdb9dd708c5f7b113e3c7c1ebc06c7453b4e3","date":1329434163,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,SolrCore,String,ZkNodeProps).mjava","sourceNew":"  private SolrCore checkProps(CoreContainer cores, String path,\n      ZkNodeProps zkProps) {\n    String corename;\n    SolrCore core = null;\n    if (cores.getZkController().getNodeName().equals(zkProps.get(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.get(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","sourceOld":"  private SolrCore checkProps(CoreContainer cores, SolrCore core, String path,\n      ZkNodeProps zkProps) {\n    String corename;\n    if (cores.getZkController().getNodeName().equals(zkProps.get(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.get(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,String,ZkNodeProps).mjava","sourceNew":"  private SolrCore checkProps(CoreContainer cores, String path,\n      ZkNodeProps zkProps) {\n    String corename;\n    SolrCore core = null;\n    if (cores.getZkController().getNodeName().equals(zkProps.getStr(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.getStr(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","sourceOld":"  private SolrCore checkProps(CoreContainer cores, String path,\n      ZkNodeProps zkProps) {\n    String corename;\n    SolrCore core = null;\n    if (cores.getZkController().getNodeName().equals(zkProps.get(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.get(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d805d691fbf3ca8aafa5397568ec761790b88622","date":1417093891,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#checkProps(CoreContainer,String,ZkNodeProps).mjava","sourceNew":"  private SolrCore checkProps(CoreContainer cores, ZkNodeProps zkProps) {\n    String corename;\n    SolrCore core = null;\n    if (cores.getZkController().getNodeName().equals(zkProps.getStr(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.getStr(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","sourceOld":"  private SolrCore checkProps(CoreContainer cores, String path,\n      ZkNodeProps zkProps) {\n    String corename;\n    SolrCore core = null;\n    if (cores.getZkController().getNodeName().equals(zkProps.getStr(ZkStateReader.NODE_NAME_PROP))) {\n      corename = zkProps.getStr(ZkStateReader.CORE_NAME_PROP);\n      core = cores.getCore(corename);\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d805d691fbf3ca8aafa5397568ec761790b88622":["fa64435b5902ce266c23755a4a00691a3285dab8"],"fa64435b5902ce266c23755a4a00691a3285dab8":["30bbdb9dd708c5f7b113e3c7c1ebc06c7453b4e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30bbdb9dd708c5f7b113e3c7c1ebc06c7453b4e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d805d691fbf3ca8aafa5397568ec761790b88622"]},"commit2Childs":{"d805d691fbf3ca8aafa5397568ec761790b88622":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa64435b5902ce266c23755a4a00691a3285dab8":["d805d691fbf3ca8aafa5397568ec761790b88622"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30bbdb9dd708c5f7b113e3c7c1ebc06c7453b4e3"],"30bbdb9dd708c5f7b113e3c7c1ebc06c7453b4e3":["fa64435b5902ce266c23755a4a00691a3285dab8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}