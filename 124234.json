{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#jj_add_error_token(int,int).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#jj_add_error_token(int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#jj_add_error_token(int,int).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}