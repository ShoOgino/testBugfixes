{"path":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#getTransitiveDependenciesFromIvyCache(String,String,String).mjava","commits":[{"id":"71b83dcf02fe2854488bc83d70dee29c5baa7e5c","date":1383232808,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#getTransitiveDependenciesFromIvyCache(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Collect transitive compile-scope dependencies for the given artifact's\n   * ivy.xml from the Ivy cache, using the default ivy pattern \n   * \"[organisation]/[module]/ivy-[revision].xml\".  See \n   * <a href=\"http://ant.apache.org/ivy/history/latest-milestone/settings/caches.html\"\n   * >the Ivy cache documentation</a>.\n   */\n  private Collection<String> getTransitiveDependenciesFromIvyCache\n  (String groupId, String artifactId, String version) {\n    SortedSet<String> transitiveDependencies = new TreeSet<String>();\n    //                                      E.g. ~/.ivy2/cache/xerces/xercesImpl/ivy-2.9.1.xml\n    File ivyXmlFile = new File(new File(new File(ivyCacheDir, groupId), artifactId), \"ivy-\" + version + \".xml\");\n    if ( ! ivyXmlFile.exists()) {\n      throw new BuildException(\"File not found: \" + ivyXmlFile.getPath());\n    }\n    try {\n      Document document = documentBuilder.parse(ivyXmlFile);\n      String dependencyPath = \"/ivy-module/dependencies/dependency\"\n                            + \"[   not(starts-with(@conf,'test->'))\"\n                            + \"and not(starts-with(@conf,'provided->'))\"\n                            + \"and not(starts-with(@conf,'optional->'))]\";\n      NodeList dependencies = (NodeList)xpath.evaluate(dependencyPath, document, XPathConstants.NODESET);\n      for (int i = 0 ; i < dependencies.getLength() ; ++i) {\n        Element dependency = (Element)dependencies.item(i);\n        transitiveDependencies.add(dependency.getAttribute(\"org\") + ':' + dependency.getAttribute(\"name\"));\n      }\n    } catch (Exception e) {\n      throw new BuildException( \"Exception collecting transitive dependencies for \" \n                              + groupId + ':' + artifactId + ':' + version + \" from \"\n                              + ivyXmlFile.getAbsolutePath(), e);\n    }\n    return transitiveDependencies;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#getTransitiveDependenciesFromIvyCache(String,String,String).mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#getTransitiveDependenciesFromIvyCache(String,String,String).mjava","sourceNew":"  /**\n   * Collect transitive compile-scope dependencies for the given artifact's\n   * ivy.xml from the Ivy cache, using the default ivy pattern \n   * \"[organisation]/[module]/ivy-[revision].xml\".  See \n   * <a href=\"http://ant.apache.org/ivy/history/latest-milestone/settings/caches.html\"\n   * >the Ivy cache documentation</a>.\n   */\n  private Collection<String> getTransitiveDependenciesFromIvyCache\n  (String groupId, String artifactId, String version) {\n    SortedSet<String> transitiveDependencies = new TreeSet<>();\n    //                                      E.g. ~/.ivy2/cache/xerces/xercesImpl/ivy-2.9.1.xml\n    File ivyXmlFile = new File(new File(new File(ivyCacheDir, groupId), artifactId), \"ivy-\" + version + \".xml\");\n    if ( ! ivyXmlFile.exists()) {\n      throw new BuildException(\"File not found: \" + ivyXmlFile.getPath());\n    }\n    try {\n      Document document = documentBuilder.parse(ivyXmlFile);\n      String dependencyPath = \"/ivy-module/dependencies/dependency\"\n                            + \"[   not(starts-with(@conf,'test->'))\"\n                            + \"and not(starts-with(@conf,'provided->'))\"\n                            + \"and not(starts-with(@conf,'optional->'))]\";\n      NodeList dependencies = (NodeList)xpath.evaluate(dependencyPath, document, XPathConstants.NODESET);\n      for (int i = 0 ; i < dependencies.getLength() ; ++i) {\n        Element dependency = (Element)dependencies.item(i);\n        transitiveDependencies.add(dependency.getAttribute(\"org\") + ':' + dependency.getAttribute(\"name\"));\n      }\n    } catch (Exception e) {\n      throw new BuildException( \"Exception collecting transitive dependencies for \" \n                              + groupId + ':' + artifactId + ':' + version + \" from \"\n                              + ivyXmlFile.getAbsolutePath(), e);\n    }\n    return transitiveDependencies;\n  }\n\n","sourceOld":"  /**\n   * Collect transitive compile-scope dependencies for the given artifact's\n   * ivy.xml from the Ivy cache, using the default ivy pattern \n   * \"[organisation]/[module]/ivy-[revision].xml\".  See \n   * <a href=\"http://ant.apache.org/ivy/history/latest-milestone/settings/caches.html\"\n   * >the Ivy cache documentation</a>.\n   */\n  private Collection<String> getTransitiveDependenciesFromIvyCache\n  (String groupId, String artifactId, String version) {\n    SortedSet<String> transitiveDependencies = new TreeSet<String>();\n    //                                      E.g. ~/.ivy2/cache/xerces/xercesImpl/ivy-2.9.1.xml\n    File ivyXmlFile = new File(new File(new File(ivyCacheDir, groupId), artifactId), \"ivy-\" + version + \".xml\");\n    if ( ! ivyXmlFile.exists()) {\n      throw new BuildException(\"File not found: \" + ivyXmlFile.getPath());\n    }\n    try {\n      Document document = documentBuilder.parse(ivyXmlFile);\n      String dependencyPath = \"/ivy-module/dependencies/dependency\"\n                            + \"[   not(starts-with(@conf,'test->'))\"\n                            + \"and not(starts-with(@conf,'provided->'))\"\n                            + \"and not(starts-with(@conf,'optional->'))]\";\n      NodeList dependencies = (NodeList)xpath.evaluate(dependencyPath, document, XPathConstants.NODESET);\n      for (int i = 0 ; i < dependencies.getLength() ; ++i) {\n        Element dependency = (Element)dependencies.item(i);\n        transitiveDependencies.add(dependency.getAttribute(\"org\") + ':' + dependency.getAttribute(\"name\"));\n      }\n    } catch (Exception e) {\n      throw new BuildException( \"Exception collecting transitive dependencies for \" \n                              + groupId + ':' + artifactId + ':' + version + \" from \"\n                              + ivyXmlFile.getAbsolutePath(), e);\n    }\n    return transitiveDependencies;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#getTransitiveDependenciesFromIvyCache(String,String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Collect transitive compile-scope dependencies for the given artifact's\n   * ivy.xml from the Ivy cache, using the default ivy pattern \n   * \"[organisation]/[module]/ivy-[revision].xml\".  See \n   * <a href=\"http://ant.apache.org/ivy/history/latest-milestone/settings/caches.html\"\n   * >the Ivy cache documentation</a>.\n   */\n  private Collection<String> getTransitiveDependenciesFromIvyCache\n  (String groupId, String artifactId, String version) {\n    SortedSet<String> transitiveDependencies = new TreeSet<>();\n    //                                      E.g. ~/.ivy2/cache/xerces/xercesImpl/ivy-2.9.1.xml\n    File ivyXmlFile = new File(new File(new File(ivyCacheDir, groupId), artifactId), \"ivy-\" + version + \".xml\");\n    if ( ! ivyXmlFile.exists()) {\n      throw new BuildException(\"File not found: \" + ivyXmlFile.getPath());\n    }\n    try {\n      Document document = documentBuilder.parse(ivyXmlFile);\n      String dependencyPath = \"/ivy-module/dependencies/dependency\"\n                            + \"[   not(starts-with(@conf,'test->'))\"\n                            + \"and not(starts-with(@conf,'provided->'))\"\n                            + \"and not(starts-with(@conf,'optional->'))]\";\n      NodeList dependencies = (NodeList)xpath.evaluate(dependencyPath, document, XPathConstants.NODESET);\n      for (int i = 0 ; i < dependencies.getLength() ; ++i) {\n        Element dependency = (Element)dependencies.item(i);\n        transitiveDependencies.add(dependency.getAttribute(\"org\") + ':' + dependency.getAttribute(\"name\"));\n      }\n    } catch (Exception e) {\n      throw new BuildException( \"Exception collecting transitive dependencies for \" \n                              + groupId + ':' + artifactId + ':' + version + \" from \"\n                              + ivyXmlFile.getAbsolutePath(), e);\n    }\n    return transitiveDependencies;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}