{"path":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't can ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't can ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f89581e3ee4ea2e0785d94eba7959f728ba316a","date":1366833200,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't can ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":"  /** Expert: Returns a key for this IndexReader, so CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":["b7d9cdceb051035b069ec36719809d0cd837777b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":"  /** Expert: Returns a key for this IndexReader, so CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":"  /** Expert: Returns a key for this IndexReader, so CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Returns a key for this IndexReader, so FieldCache/CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#getCoreCacheKey().mjava","sourceNew":null,"sourceOld":"  /** Expert: Returns a key for this IndexReader, so CachingWrapperFilter can find\n   * it again.\n   * This key must not have equals()/hashCode() methods, so &quot;equals&quot; means &quot;identical&quot;. */\n  public Object getCoreCacheKey() {\n    // Don't call ensureOpen since FC calls this (to evict)\n    // on close\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9274621789ce990dbfef455dabdf026bb3184821":["1f89581e3ee4ea2e0785d94eba7959f728ba316a"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["1f89581e3ee4ea2e0785d94eba7959f728ba316a","9274621789ce990dbfef455dabdf026bb3184821"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d211216c83f01894810543d1c107160a9ae3650b":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f89581e3ee4ea2e0785d94eba7959f728ba316a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["1f89581e3ee4ea2e0785d94eba7959f728ba316a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d211216c83f01894810543d1c107160a9ae3650b","56572ec06f1407c066d6b7399413178b33176cd8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1f89581e3ee4ea2e0785d94eba7959f728ba316a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f89581e3ee4ea2e0785d94eba7959f728ba316a":["9274621789ce990dbfef455dabdf026bb3184821","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}