{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#isIntegerEquivalent(Object).mjava","commits":[{"id":"9837f40c922407d857991971de6def18eda0857b","date":1529994497,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#isIntegerEquivalent(Object).mjava","pathOld":"/dev/null","sourceNew":"  static boolean isIntegerEquivalent(Object val) {\n    if (val instanceof Number) {\n      Number number = (Number) val;\n      return Math.ceil(number.doubleValue()) == Math.floor(number.doubleValue());\n    } else if (val instanceof String) {\n      try {\n        double dval = Double.parseDouble((String) val);\n        return Math.ceil(dval) == Math.floor(dval);\n      } catch (NumberFormatException e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#isIntegerEquivalent(Object).mjava","pathOld":"/dev/null","sourceNew":"  static boolean isIntegerEquivalent(Object val) {\n    if (val instanceof Number) {\n      Number number = (Number) val;\n      return Math.ceil(number.doubleValue()) == Math.floor(number.doubleValue());\n    } else if (val instanceof String) {\n      try {\n        double dval = Double.parseDouble((String) val);\n        return Math.ceil(dval) == Math.floor(dval);\n      } catch (NumberFormatException e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#isIntegerEquivalent(Object).mjava","pathOld":"/dev/null","sourceNew":"  static boolean isIntegerEquivalent(Object val) {\n    if (val instanceof Number) {\n      Number number = (Number) val;\n      return Math.ceil(number.doubleValue()) == Math.floor(number.doubleValue());\n    } else if (val instanceof String) {\n      try {\n        double dval = Double.parseDouble((String) val);\n        return Math.ceil(dval) == Math.floor(dval);\n      } catch (NumberFormatException e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427edb17549d4bb82462a16eec4ee0533d12d5b7","date":1533006754,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/VariableBase#isIntegerEquivalent(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion#isIntegerEquivalent(Object).mjava","sourceNew":"  static boolean isIntegerEquivalent(Object val) {\n    if (val instanceof Number) {\n      Number number = (Number) val;\n      return Math.ceil(number.doubleValue()) == Math.floor(number.doubleValue());\n    } else if (val instanceof String) {\n      try {\n        double dval = Double.parseDouble((String) val);\n        return Math.ceil(dval) == Math.floor(dval);\n      } catch (NumberFormatException e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n  }\n\n","sourceOld":"  static boolean isIntegerEquivalent(Object val) {\n    if (val instanceof Number) {\n      Number number = (Number) val;\n      return Math.ceil(number.doubleValue()) == Math.floor(number.doubleValue());\n    } else if (val instanceof String) {\n      try {\n        double dval = Double.parseDouble((String) val);\n        return Math.ceil(dval) == Math.floor(dval);\n      } catch (NumberFormatException e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9837f40c922407d857991971de6def18eda0857b"],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["9837f40c922407d857991971de6def18eda0857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9837f40c922407d857991971de6def18eda0857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9837f40c922407d857991971de6def18eda0857b"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9837f40c922407d857991971de6def18eda0857b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9837f40c922407d857991971de6def18eda0857b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","427edb17549d4bb82462a16eec4ee0533d12d5b7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}