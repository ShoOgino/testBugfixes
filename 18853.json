{"path":"lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8#getCodeStart(Random).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8#getCodeStart(Random).mjava","pathOld":"/dev/null","sourceNew":"  // Evenly picks random code point from the 4 \"buckets\"\n  // (bucket = same #bytes when encoded to utf8)\n  private int getCodeStart(Random r) {\n    switch(r.nextInt(4)) {\n    case 0:\n      return _TestUtil.nextInt(r, 0, 128);\n    case 1:\n      return _TestUtil.nextInt(r, 128, 2048);\n    case 2:\n      return _TestUtil.nextInt(r, 2048, 65536);\n    default:\n      return _TestUtil.nextInt(r, 65536, 1+MAX_UNICODE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8#getCodeStart(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/TestUTF32ToUTF8#getCodeStart(Random).mjava","sourceNew":"  // Evenly picks random code point from the 4 \"buckets\"\n  // (bucket = same #bytes when encoded to utf8)\n  private int getCodeStart(Random r) {\n    switch(r.nextInt(4)) {\n    case 0:\n      return _TestUtil.nextInt(r, 0, 128);\n    case 1:\n      return _TestUtil.nextInt(r, 128, 2048);\n    case 2:\n      return _TestUtil.nextInt(r, 2048, 65536);\n    default:\n      return _TestUtil.nextInt(r, 65536, 1+MAX_UNICODE);\n    }\n  }\n\n","sourceOld":"  // Evenly picks random code point from the 4 \"buckets\"\n  // (bucket = same #bytes when encoded to utf8)\n  private int getCodeStart(Random r) {\n    switch(r.nextInt(4)) {\n    case 0:\n      return _TestUtil.nextInt(r, 0, 128);\n    case 1:\n      return _TestUtil.nextInt(r, 128, 2048);\n    case 2:\n      return _TestUtil.nextInt(r, 2048, 65536);\n    default:\n      return _TestUtil.nextInt(r, 65536, 1+MAX_UNICODE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}