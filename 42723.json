{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","commits":[{"id":"20689256739f1d0404e9ad0df081350fbbb733eb","date":1249339527,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = (TermAttribute) source.getAttribute(TermAttribute.class);\n    }\n    if (termAtt != null) {\n      try {\n        Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n        if (date != null) {\n          return true;\n        }\n      } catch (ParseException e) {\n    \n      }\n    }\n    \n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7905a7230fbdf2d3d4c8b5ca30f93cc1e7898339","date":1251044228,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","sourceNew":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = (TermAttribute) source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","sourceOld":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = (TermAttribute) source.getAttribute(TermAttribute.class);\n    }\n    if (termAtt != null) {\n      try {\n        Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n        if (date != null) {\n          return true;\n        }\n      } catch (ParseException e) {\n    \n      }\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","sourceNew":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","sourceOld":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = (TermAttribute) source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","sourceNew":"  @Override\n  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","sourceOld":"  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/sinks/DateRecognizerSinkFilter#accept(AttributeSource).mjava","sourceNew":"  @Override\n  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean accept(AttributeSource source) {\n    if (termAtt == null) {\n      termAtt = source.addAttribute(TermAttribute.class);\n    }\n    try {\n      Date date = dateFormat.parse(termAtt.term());//We don't care about the date, just that we can parse it as a date\n      if (date != null) {\n        return true;\n      }\n    } catch (ParseException e) {\n  \n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7905a7230fbdf2d3d4c8b5ca30f93cc1e7898339":["20689256739f1d0404e9ad0df081350fbbb733eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20689256739f1d0404e9ad0df081350fbbb733eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["7905a7230fbdf2d3d4c8b5ca30f93cc1e7898339"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"7905a7230fbdf2d3d4c8b5ca30f93cc1e7898339":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20689256739f1d0404e9ad0df081350fbbb733eb"],"20689256739f1d0404e9ad0df081350fbbb733eb":["7905a7230fbdf2d3d4c8b5ca30f93cc1e7898339"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}