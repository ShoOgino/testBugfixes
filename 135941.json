{"path":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","commits":[{"id":"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444","date":1132159199,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisifed.\n   *\n   * <p>\n   * By default no optional clauses are neccessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified numebr of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independant of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method will force the use of BooleanWeight2,\n   * regardless of wether setUseScorer14(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setUseScorer14\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8257e528d703ddbff1a8986dd3becee5d152e4b7","date":1184265700,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisifed.\n   *\n   * <p>\n   * By default no optional clauses are neccessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independant of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method may force collecting docs in order,\n   * regardless of wether setAllowDocsOutOfOrder(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setAllowDocsOutOfOrder\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisifed.\n   *\n   * <p>\n   * By default no optional clauses are neccessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified numebr of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independant of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method will force the use of BooleanWeight2,\n   * regardless of wether setUseScorer14(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setUseScorer14\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16b4c47a274459f8f6117722678d8dfe7c97d1fc","date":1196092131,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method may force collecting docs in order,\n   * regardless of whether setAllowDocsOutOfOrder(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setAllowDocsOutOfOrder\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisifed.\n   *\n   * <p>\n   * By default no optional clauses are neccessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independant of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method may force collecting docs in order,\n   * regardless of wether setAllowDocsOutOfOrder(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setAllowDocsOutOfOrder\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ae3763b337aadea2838f75b69d6b00c4e6949c7","date":1257894961,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   * <p>\n   * EXPERT NOTE: Using this method may force collecting docs in order,\n   * regardless of whether setAllowDocsOutOfOrder(true) has been called.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   * @see #setAllowDocsOutOfOrder\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6ae3763b337aadea2838f75b69d6b00c4e6949c7":["16b4c47a274459f8f6117722678d8dfe7c97d1fc"],"16b4c47a274459f8f6117722678d8dfe7c97d1fc":["8257e528d703ddbff1a8986dd3becee5d152e4b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8257e528d703ddbff1a8986dd3becee5d152e4b7":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6ae3763b337aadea2838f75b69d6b00c4e6949c7"]},"commit2Childs":{"6ae3763b337aadea2838f75b69d6b00c4e6949c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"16b4c47a274459f8f6117722678d8dfe7c97d1fc":["6ae3763b337aadea2838f75b69d6b00c4e6949c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6bffc7c3c9ddfcefe91b728c0680af2a3a96444"],"8257e528d703ddbff1a8986dd3becee5d152e4b7":["16b4c47a274459f8f6117722678d8dfe7c97d1fc"],"b6bffc7c3c9ddfcefe91b728c0680af2a3a96444":["8257e528d703ddbff1a8986dd3becee5d152e4b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}