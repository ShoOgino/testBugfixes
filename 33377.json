{"path":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"941b7027a51547b0a38d711bc08ec354f9e2e4a7","date":1411394279,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      // Else we might remove .cfe but not the corresponding .cfs, causing false exc when trying to verify headers:\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","date":1453975275,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    // Use LineFileDocs so we (hopefully) get most Lucene features\n    // tested, e.g. IntPoint was recently added to it:\n    LineFileDocs docs = new LineFileDocs(random());\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(docs.nextDoc());\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"docid\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"docid\", Integer.toString(i)), \"docid_intDV\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","bugFix":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    // Use LineFileDocs so we (hopefully) get most Lucene features\n    // tested, e.g. IntPoint was recently added to it:\n    LineFileDocs docs = new LineFileDocs(random());\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(docs.nextDoc());\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"docid\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"docid\", Integer.toString(i)), \"docid_intDV\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter#test().mjava","sourceNew":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    // Use LineFileDocs so we (hopefully) get most Lucene features\n    // tested, e.g. IntPoint was recently added to it:\n    LineFileDocs docs = new LineFileDocs(random());\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(docs.nextDoc());\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"docid\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"docid\", Integer.toString(i)), \"docid_intDV\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    // these fields should sometimes get term vectors, etc\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","8d15e34266d75e4e8b95da046cd0afc812367b38"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"9bb9a29a5e71a90295f175df8919802993142c9a":["941b7027a51547b0a38d711bc08ec354f9e2e4a7","f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["9bb9a29a5e71a90295f175df8919802993142c9a","3384e6013a93e4d11b7d75388693f8d0388602bf"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","b485ce675d4e8b9dbfafd122ca9b7b33a883be7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["3384e6013a93e4d11b7d75388693f8d0388602bf","9bb9a29a5e71a90295f175df8919802993142c9a"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"9bb9a29a5e71a90295f175df8919802993142c9a":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","1e6acbaae7af722f17204ceccf0f7db5753eccf3","8d15e34266d75e4e8b95da046cd0afc812367b38"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}