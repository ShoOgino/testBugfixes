{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","sourceNew":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    SimpleFacetsCollector sfc = new SimpleFacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","sourceNew":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","sourceNew":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"dim=a path=[] value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetSumValueSource#testRollupValues().mjava","sourceNew":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"dim=a path=[] value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testRollupValues() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"a\", true);\n    //config.setRequireDimCount(\"a\", true);\n    \n    for (int i = 0; i < 4; i++) {\n      Document doc = new Document();\n      doc.add(new NumericDocValuesField(\"price\", (i+1)));\n      doc.add(new FacetField(\"a\", Integer.toString(i % 2), \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    ValueSource valueSource = new LongFieldSource(\"price\");\n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets = new TaxonomyFacetSumValueSource(taxoReader, config, sfc, valueSource);\n    \n    assertEquals(\"dim=a path=[] value=10.0 childCount=2\\n  1 (6.0)\\n  0 (4.0)\\n\", facets.getTopChildren(10, \"a\").toString());\n    \n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}