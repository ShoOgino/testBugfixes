{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86658da8ce1e761bc0f5a05cf8795d1f78c388e2","date":1365796110,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#rarely(Random).mjava","sourceNew":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 1;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","sourceOld":"  /**\n   * Returns true if something should happen rarely,\n   * <p>\n   * The actual number returned will be influenced by whether {@link #TEST_NIGHTLY}\n   * is active and {@link #RANDOM_MULTIPLIER}.\n   */\n  public static boolean rarely(Random random) {\n    int p = TEST_NIGHTLY ? 10 : 5;\n    p += (p * Math.log(RANDOM_MULTIPLIER));\n    int min = 100 - Math.min(p, 50); // never more than 50\n    return random.nextInt(100) >= min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86658da8ce1e761bc0f5a05cf8795d1f78c388e2"],"86658da8ce1e761bc0f5a05cf8795d1f78c388e2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["86658da8ce1e761bc0f5a05cf8795d1f78c388e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"86658da8ce1e761bc0f5a05cf8795d1f78c388e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}