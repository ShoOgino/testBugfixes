{"path":"src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","commits":[{"id":"966b079690131e434b39530d82cc413f5aff4cd5","date":1264751025,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    termAtt = addAttribute(TermAttribute.class);\n    useOldAPI = useOldAPI(matchVersion);\n    ioBuffer = CharacterUtils.newCharacterBuffer(IO_BUFFER_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"966b079690131e434b39530d82cc413f5aff4cd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["966b079690131e434b39530d82cc413f5aff4cd5"]},"commit2Childs":{"966b079690131e434b39530d82cc413f5aff4cd5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["966b079690131e434b39530d82cc413f5aff4cd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}