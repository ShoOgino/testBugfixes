{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","sourceNew":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","sourceOld":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","sourceNew":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","sourceOld":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","sourceNew":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","sourceOld":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,FieldType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getField(String,Store,Index,TermVector).mjava","sourceNew":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, FieldType ft) {\n      if (!reuseFields) {\n        return new Field(name, ft, \"\");\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, ft, \"\");\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","sourceOld":"    /**\n     * Returns a field corresponding to the field name. If\n     * <code>reuseFields</code> was set to true, then it attempts to reuse a\n     * Field instance. If such a field does not exist, it creates a new one.\n     */\n    Field getField(String name, Store store, Index index, TermVector termVector) {\n      if (!reuseFields) {\n        return new Field(name, \"\", store, index, termVector);\n      }\n      \n      Field f = fields.get(name);\n      if (f == null) {\n        f = new Field(name, \"\", store, index, termVector);\n        fields.put(name, f);\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","1509f151d7692d84fae414b2b799ac06ba60fcb4","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}