{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.deletedDocsRef.get());\n  }\n\n","sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.deletedDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.liveDocsRef.get());\n  }\n\n","sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.deletedDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.liveDocsRef.get());\n  }\n\n","sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.deletedDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.liveDocsRef.get());\n  }\n\n","sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.deletedDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef53d1d25057e41eff3dce2a7f3e880a78ed7069","date":1323523707,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":null,"sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.liveDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#assertDelDocsRefCountEquals(int,SegmentReader).mjava","sourceNew":null,"sourceOld":"  private void assertDelDocsRefCountEquals(int refCount, SegmentReader reader) {\n    assertEquals(refCount, reader.liveDocsRef.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["9454a6510e2db155fb01faa5c049b06ece95fab9","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}