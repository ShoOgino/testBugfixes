{"path":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","commits":[{"id":"5c2cf5832e0f01230bc2c4886e16887a0d1f3341","date":1301042882,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = new FieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = new FieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = new FieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = new FieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#testReadOnly().mjava","sourceNew":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadOnly() throws IOException {\n    String name = \"testFile\";\n    Directory dir = newDirectory();\n    FieldInfos fieldInfos = createAndWriteFieldInfos(dir, name);\n    FieldInfos readOnly = readFieldInfos(dir, name);\n    assertReadOnly(readOnly, fieldInfos);\n    FieldInfos readOnlyClone = (FieldInfos)readOnly.clone();\n    assertNotSame(readOnly, readOnlyClone);\n    // clone is also read only - no global field map\n    assertReadOnly(readOnlyClone, fieldInfos);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3cc749c053615f5871f3b95715fe292f34e70a53"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}