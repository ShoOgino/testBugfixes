{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","sourceNew":"  public void testWrapping() throws Exception {\n    CharStream cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correctOffset(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrapping() throws Exception {\n    CharStream cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correctOffset(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","sourceNew":"  public void testWrapping() throws Exception {\n    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correct(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrapping() throws Exception {\n    CharStream cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correctOffset(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","sourceNew":"  public void testWrapping() throws Exception {\n    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correct(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrapping() throws Exception {\n    CharStream cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correctOffset(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","sourceNew":"  public void testWrapping() throws Exception {\n    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correct(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","sourceOld":"  public void testWrapping() throws Exception {\n    CharStream cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correctOffset(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething#testWrapping().mjava","sourceNew":"  public void testWrapping() throws Exception {\n    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    Exception expected = expectThrows(Exception.class, () -> {\n      cs.mark(1);\n    });\n    assertEquals(\"mark(int)\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.markSupported();\n    });\n    assertEquals(\"markSupported()\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.read();\n    });\n    assertEquals(\"read()\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.read(new char[0]);\n    });\n    assertEquals(\"read(char[])\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.read(CharBuffer.wrap(new char[0]));\n    });\n    assertEquals(\"read(CharBuffer)\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.reset();\n    });\n    assertEquals(\"reset()\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.skip(1);\n    });\n    assertEquals(\"skip(long)\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.correctOffset(1);\n    });\n    assertEquals(\"correct(int)\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.close();\n    });\n    assertEquals(\"close()\", expected.getMessage());\n    \n    expected = expectThrows(Exception.class, () -> {\n      cs.read(new char[0], 0, 0);\n    });\n    assertEquals(\"read(char[], int, int)\", expected.getMessage());\n  }\n\n","sourceOld":"  public void testWrapping() throws Exception {\n    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);\n    try {\n      cs.mark(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"mark(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.markSupported();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"markSupported()\", e.getMessage());\n    }\n    \n    try {\n      cs.read();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0]);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[])\", e.getMessage());\n    }\n    \n    try {\n      cs.read(CharBuffer.wrap(new char[0]));\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(CharBuffer)\", e.getMessage());\n    }\n    \n    try {\n      cs.reset();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"reset()\", e.getMessage());\n    }\n    \n    try {\n      cs.skip(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"skip(long)\", e.getMessage());\n    }\n    \n    try {\n      cs.correctOffset(1);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"correct(int)\", e.getMessage());\n    }\n    \n    try {\n      cs.close();\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"close()\", e.getMessage());\n    }\n    \n    try {\n      cs.read(new char[0], 0, 0);\n      fail();\n    } catch (Exception e) {\n      assertEquals(\"read(char[], int, int)\", e.getMessage());\n    }\n  }\n\n","bugFix":["fc706b1e03a539d44d99998108feb684bb44cbb2","2602029912c6a4c1b72fa240b2973eca21d0b09c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","05fe562aa248790944d43cdd478f512572835ba0"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}