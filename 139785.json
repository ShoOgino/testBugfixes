{"path":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f411c79281946a184efeab34a673deffc25edcb","date":1303995312,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriter is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldConsumer#freeRAM().mjava","sourceNew":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","sourceOld":"  /** Called when DocumentsWriterPerThread is using too much RAM.\n   *  The consumer should free RAM, if possible, returning\n   *  true if any RAM was in fact freed. */\n  abstract boolean freeRAM();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f411c79281946a184efeab34a673deffc25edcb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9454a6510e2db155fb01faa5c049b06ece95fab9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["9454a6510e2db155fb01faa5c049b06ece95fab9","5f411c79281946a184efeab34a673deffc25edcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5f411c79281946a184efeab34a673deffc25edcb":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5f411c79281946a184efeab34a673deffc25edcb","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}