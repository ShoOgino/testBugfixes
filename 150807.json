{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#setMaxRetries(int).mjava","sourceNew":"  /**\n   * Set maximum number of retries to attempt in the event of transient errors.\n   * <p>\n   * Maximum number of retries to attempt in the event of transient errors.\n   * Default: 0 (no) retries. No more than 1 recommended.\n   * </p>\n   * @param maxRetries\n   *          No more than 1 recommended\n   */\n  public void setMaxRetries(int maxRetries) {\n    if (maxRetries > 1) {\n      log.warn(\"HttpSolrServer: maximum Retries \" + maxRetries\n          + \" > 1. Maximum recommended retries is 1.\");\n    }\n    this.maxRetries = maxRetries;\n  }\n\n","sourceOld":"  /**\n   * Set maximum number of retries to attempt in the event of transient errors.\n   * <p>\n   * Maximum number of retries to attempt in the event of transient errors.\n   * Default: 0 (no) retries. No more than 1 recommended.\n   * </p>\n   * @param maxRetries\n   *          No more than 1 recommended\n   */\n  public void setMaxRetries(int maxRetries) {\n    if (maxRetries > 1) {\n      log.warn(\"HttpSolrServer: maximum Retries \" + maxRetries\n          + \" > 1. Maximum recommended retries is 1.\");\n    }\n    this.maxRetries = maxRetries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022960bd0a67a6f828074db6d078b29b254d1f5","date":1427366542,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","sourceNew":"  /**\n   * @deprecated retries should be implemented in client code, and should be considered carefully per-request\n   */\n  public void setMaxRetries(int maxRetries) { }\n\n","sourceOld":"  /**\n   * Set maximum number of retries to attempt in the event of transient errors.\n   * <p>\n   * Maximum number of retries to attempt in the event of transient errors.\n   * Default: 0 (no) retries. No more than 1 recommended.\n   * </p>\n   * @param maxRetries\n   *          No more than 1 recommended\n   */\n  public void setMaxRetries(int maxRetries) {\n    if (maxRetries > 1) {\n      log.warn(\"HttpSolrServer: maximum Retries \" + maxRetries\n          + \" > 1. Maximum recommended retries is 1.\");\n    }\n    this.maxRetries = maxRetries;\n  }\n\n","bugFix":["212912761d471e5bfe06cf8027bad27e60a37695","7321b77a7bc3edfebd637ef273e9dfaa9969eba6","eb99886ff640d94edb43e0d36112a2b7023379ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","sourceNew":"  /**\n   * @deprecated retries should be implemented in client code, and should be considered carefully per-request\n   */\n  public void setMaxRetries(int maxRetries) { }\n\n","sourceOld":"  /**\n   * Set maximum number of retries to attempt in the event of transient errors.\n   * <p>\n   * Maximum number of retries to attempt in the event of transient errors.\n   * Default: 0 (no) retries. No more than 1 recommended.\n   * </p>\n   * @param maxRetries\n   *          No more than 1 recommended\n   */\n  public void setMaxRetries(int maxRetries) {\n    if (maxRetries > 1) {\n      log.warn(\"HttpSolrServer: maximum Retries \" + maxRetries\n          + \" > 1. Maximum recommended retries is 1.\");\n    }\n    this.maxRetries = maxRetries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated retries should be implemented in client code, and should be considered carefully per-request\n   */\n  public void setMaxRetries(int maxRetries) { }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#setMaxRetries(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated retries should be implemented in client code, and should be considered carefully per-request\n   */\n  public void setMaxRetries(int maxRetries) { }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","3022960bd0a67a6f828074db6d078b29b254d1f5"],"3022960bd0a67a6f828074db6d078b29b254d1f5":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["3022960bd0a67a6f828074db6d078b29b254d1f5","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["3022960bd0a67a6f828074db6d078b29b254d1f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"3022960bd0a67a6f828074db6d078b29b254d1f5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3022960bd0a67a6f828074db6d078b29b254d1f5"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}