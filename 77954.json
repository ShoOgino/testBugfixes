{"path":"lucene/src/java/org/apache/lucene/analysis/tokenattributes/TermAttribute#term().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/tokenattributes/TermAttribute#term().mjava","pathOld":"src/java/org/apache/lucene/analysis/tokenattributes/TermAttribute#term().mjava","sourceNew":"  /** Returns the Token's term text.\n   * \n   * This method has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use this method, which is nothing more than\n   * a convenience call to <b>new String(token.termBuffer(), 0, token.termLength())</b>\n   */\n  public String term();\n\n","sourceOld":"  /** Returns the Token's term text.\n   * \n   * This method has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use this method, which is nothing more than\n   * a convenience call to <b>new String(token.termBuffer(), 0, token.termLength())</b>\n   */\n  public String term();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3ba5366b7a7f11839e9c824b23007f048d002f6","date":1275996475,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/analysis/tokenattributes/TermAttribute#term().mjava","sourceNew":null,"sourceOld":"  /** Returns the Token's term text.\n   * \n   * This method has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use this method, which is nothing more than\n   * a convenience call to <b>new String(token.termBuffer(), 0, token.termLength())</b>\n   */\n  public String term();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}