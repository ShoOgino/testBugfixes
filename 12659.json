{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean() || w.getConfig().getSoftDeletesField() != null) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb0130363fa13c53e4e78317c35b3b45a3089276","date":1523267438,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        DirectoryReader reader = DirectoryReader.open(w.getDirectory());\n        if (w.getConfig().getSoftDeletesField() != null) {\n          return new SoftDeletesDirectoryReaderWrapper(reader, w.getConfig().getSoftDeletesField());\n        } else {\n          return reader;\n        }\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean() || w.getConfig().getSoftDeletesField() != null) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        DirectoryReader reader = DirectoryReader.open(w.getDirectory());\n        if (w.getConfig().getSoftDeletesField() != null) {\n          return new SoftDeletesDirectoryReaderWrapper(reader, w.getConfig().getSoftDeletesField());\n        } else {\n          return reader;\n        }\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean() || w.getConfig().getSoftDeletesField() != null) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        return DirectoryReader.open(w.getDirectory());\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e84628e1e00d06556b67af150a13dbfb1849a818","date":1588191102,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#getReader(boolean,boolean).mjava","sourceNew":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, config);\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        DirectoryReader reader = DirectoryReader.open(w.getDirectory());\n        if (config.getSoftDeletesField() != null) {\n          return new SoftDeletesDirectoryReaderWrapper(reader, config.getSoftDeletesField());\n        } else {\n          return reader;\n        }\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","sourceOld":"  public DirectoryReader getReader(boolean applyDeletions, boolean writeAllDeletes) throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    getReaderCalled = true;\n    if (r.nextInt(20) == 2) {\n      doRandomForceMerge();\n    }\n    if (!applyDeletions || r.nextBoolean()) {\n      // if we have soft deletes we can't open from a directory\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: use NRT reader\");\n      }\n      if (r.nextInt(5) == 1) {\n        w.commit();\n      }\n      return w.getReader(applyDeletions, writeAllDeletes);\n    } else {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.getReader: open new reader\");\n      }\n      w.commit();\n      if (r.nextBoolean()) {\n        DirectoryReader reader = DirectoryReader.open(w.getDirectory());\n        if (w.getConfig().getSoftDeletesField() != null) {\n          return new SoftDeletesDirectoryReaderWrapper(reader, w.getConfig().getSoftDeletesField());\n        } else {\n          return reader;\n        }\n      } else {\n        return w.getReader(applyDeletions, writeAllDeletes);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["5ee0394b8176abd7c90a4be8c05465be1879db79","cb0130363fa13c53e4e78317c35b3b45a3089276"],"e84628e1e00d06556b67af150a13dbfb1849a818":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb0130363fa13c53e4e78317c35b3b45a3089276":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e84628e1e00d06556b67af150a13dbfb1849a818"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["e84628e1e00d06556b67af150a13dbfb1849a818"],"e84628e1e00d06556b67af150a13dbfb1849a818":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["d58e44159788900f4a2113b84463dc3fbbf80f20","cb0130363fa13c53e4e78317c35b3b45a3089276"],"cb0130363fa13c53e4e78317c35b3b45a3089276":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}