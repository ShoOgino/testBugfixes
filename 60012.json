{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException If an I/O error occurs\n   */\n  @Override\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["7530de27b87b961b51f01bd1299b7004d46e8823","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}