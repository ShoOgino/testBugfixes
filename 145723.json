{"path":"lucene/src/java/org/apache/lucene/util/CommandLineUtil#newFSDirectory(Class[#-extends-FSDirectory],File).mjava","commits":[{"id":"768c48159710aa63efa67c049db149c35c4f423a","date":1323797698,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/CommandLineUtil#newFSDirectory(Class[#-extends-FSDirectory],File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new specific FSDirectory instance\n   * @param clazz The class of the object to be created\n   * @param file The file to be used as parameter constructor\n   * @return The new FSDirectory instance\n   * @throws NoSuchMethodException\n   * @throws InstantiationException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static FSDirectory newFSDirectory(Class<? extends FSDirectory> clazz, File file) \n      throws NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n    // Assuming every FSDirectory has a ctor(File):\n    Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n    return ctor.newInstance(file);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/CommandLineUtil#newFSDirectory(Class[#-extends-FSDirectory],File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new specific FSDirectory instance\n   * @param clazz The class of the object to be created\n   * @param file The file to be used as parameter constructor\n   * @return The new FSDirectory instance\n   * @throws NoSuchMethodException\n   * @throws InstantiationException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static FSDirectory newFSDirectory(Class<? extends FSDirectory> clazz, File file) \n      throws NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n    // Assuming every FSDirectory has a ctor(File):\n    Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n    return ctor.newInstance(file);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CommandLineUtil#newFSDirectory(Class[#-extends-FSDirectory],File).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CommandLineUtil#newFSDirectory(Class[#-extends-FSDirectory],File).mjava","sourceNew":"  /**\n   * Creates a new specific FSDirectory instance\n   * @param clazz The class of the object to be created\n   * @param file The file to be used as parameter constructor\n   * @return The new FSDirectory instance\n   * @throws NoSuchMethodException\n   * @throws InstantiationException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static FSDirectory newFSDirectory(Class<? extends FSDirectory> clazz, File file) \n      throws NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n    // Assuming every FSDirectory has a ctor(File):\n    Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n    return ctor.newInstance(file);\n  }\n\n","sourceOld":"  /**\n   * Creates a new specific FSDirectory instance\n   * @param clazz The class of the object to be created\n   * @param file The file to be used as parameter constructor\n   * @return The new FSDirectory instance\n   * @throws NoSuchMethodException\n   * @throws InstantiationException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static FSDirectory newFSDirectory(Class<? extends FSDirectory> clazz, File file) \n      throws NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {\n    // Assuming every FSDirectory has a ctor(File):\n    Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);\n    return ctor.newInstance(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","768c48159710aa63efa67c049db149c35c4f423a"],"768c48159710aa63efa67c049db149c35c4f423a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["768c48159710aa63efa67c049db149c35c4f423a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"768c48159710aa63efa67c049db149c35c4f423a":["4ceb6a6c707ada1df8bde804e25c98668e699a18","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ceb6a6c707ada1df8bde804e25c98668e699a18","768c48159710aa63efa67c049db149c35c4f423a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}