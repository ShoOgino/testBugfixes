{"path":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#getReverseReader().mjava","commits":[{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#getReverseReader().mjava","pathOld":"/dev/null","sourceNew":"  public FST.BytesReader getReverseReader() {\n    if (blocks.size() == 1) {\n      return new ReverseBytesReader(blocks.get(0));\n    }\n    return new FST.BytesReader() {\n      private byte[] current = blocks.size() == 0 ? null : blocks.get(0);\n      private int nextBuffer = -1;\n      private int nextRead = 0;\n\n      @Override\n      public byte readByte() {\n        if (nextRead == -1) {\n          current = blocks.get(nextBuffer--);\n          nextRead = blockSize-1;\n        }\n        return current[nextRead--];\n      }\n\n      @Override\n      public void skipBytes(int count) {\n        setPosition(getPosition() - count);\n      }\n\n      @Override\n      public void readBytes(byte[] b, int offset, int len) {\n        for(int i=0;i<len;i++) {\n          b[offset+i] = readByte();\n        }\n      }\n\n      @Override\n      public int getPosition() {\n        return (nextBuffer+1)*blockSize + nextRead;\n      }\n\n      @Override\n      public void setPosition(int pos) {\n        // NOTE: a little weird because if you\n        // setPosition(0), the next byte you read is\n        // bytes[0] ... but I would expect bytes[-1] (ie,\n        // EOF)...?\n        int bufferIndex = pos >> blockBits;\n        nextBuffer = bufferIndex-1;\n        current = blocks.get(bufferIndex);\n        nextRead = pos & blockMask;\n        assert getPosition() == pos: \"pos=\" + pos + \" getPos()=\" + getPosition();\n      }\n\n      @Override\n      public boolean reversed() {\n        return true;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4612a1625257c97ec7983c15cbc6289689e42fed","date":1358010116,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#getReverseReader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#getReverseReader().mjava","sourceNew":"  public FST.BytesReader getReverseReader() {\n    return getReverseReader(true);\n  }\n\n","sourceOld":"  public FST.BytesReader getReverseReader() {\n    if (blocks.size() == 1) {\n      return new ReverseBytesReader(blocks.get(0));\n    }\n    return new FST.BytesReader() {\n      private byte[] current = blocks.size() == 0 ? null : blocks.get(0);\n      private int nextBuffer = -1;\n      private int nextRead = 0;\n\n      @Override\n      public byte readByte() {\n        if (nextRead == -1) {\n          current = blocks.get(nextBuffer--);\n          nextRead = blockSize-1;\n        }\n        return current[nextRead--];\n      }\n\n      @Override\n      public void skipBytes(int count) {\n        setPosition(getPosition() - count);\n      }\n\n      @Override\n      public void readBytes(byte[] b, int offset, int len) {\n        for(int i=0;i<len;i++) {\n          b[offset+i] = readByte();\n        }\n      }\n\n      @Override\n      public int getPosition() {\n        return (nextBuffer+1)*blockSize + nextRead;\n      }\n\n      @Override\n      public void setPosition(int pos) {\n        // NOTE: a little weird because if you\n        // setPosition(0), the next byte you read is\n        // bytes[0] ... but I would expect bytes[-1] (ie,\n        // EOF)...?\n        int bufferIndex = pos >> blockBits;\n        nextBuffer = bufferIndex-1;\n        current = blocks.get(bufferIndex);\n        nextRead = pos & blockMask;\n        assert getPosition() == pos: \"pos=\" + pos + \" getPos()=\" + getPosition();\n      }\n\n      @Override\n      public boolean reversed() {\n        return true;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BytesStore#getReverseReader().mjava","pathOld":"/dev/null","sourceNew":"  public FST.BytesReader getReverseReader() {\n    return getReverseReader(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4612a1625257c97ec7983c15cbc6289689e42fed":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4612a1625257c97ec7983c15cbc6289689e42fed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4612a1625257c97ec7983c15cbc6289689e42fed"]},"commit2Childs":{"4612a1625257c97ec7983c15cbc6289689e42fed":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8917bfede3b4ca30f4305c1e391e9218959cd723","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["4612a1625257c97ec7983c15cbc6289689e42fed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}