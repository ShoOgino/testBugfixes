{"path":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#assertNumFound(String,int).mjava","commits":[{"id":"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f","date":1190223065,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#assertNumFound(String,int).mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#assertNumFound(String,int).mjava","sourceNew":"  protected void assertNumFound( String query, int num ) throws SolrServerException, IOException\n  {\n    QueryResponse rsp = getSolrServer().query( new SolrQuery( query ) );\n    if( num != rsp.getResults().getNumFound() ) {\n      fail( \"expected: \"+num +\" but had: \"+rsp.getResults().getNumFound() + \" :: \" + rsp.getResults() );\n    }\n  }\n\n","sourceOld":"  protected void assertNumFound( String query, int num ) throws SolrServerException, IOException\n  {\n    QueryResponse rsp = getSolrServer().query( new SolrQuery( query ) );\n    if( num != rsp.getResults().getNumFound() ) {\n      fail( \"expected: \"+num +\" but had: \"+rsp.getResults().getNumFound() + \" :: \" + rsp.getResults() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/SolrExampleTests#assertNumFound(String,int).mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#assertNumFound(String,int).mjava","sourceNew":"  protected void assertNumFound( String query, int num ) throws SolrServerException, IOException\n  {\n    QueryResponse rsp = getSolrServer().query( new SolrQuery( query ) );\n    if( num != rsp.getResults().getNumFound() ) {\n      fail( \"expected: \"+num +\" but had: \"+rsp.getResults().getNumFound() + \" :: \" + rsp.getResults() );\n    }\n  }\n\n","sourceOld":"  protected void assertNumFound( String query, int num ) throws SolrServerException, IOException\n  {\n    QueryResponse rsp = getSolrServer().query( new SolrQuery( query ) );\n    if( num != rsp.getResults().getNumFound() ) {\n      fail( \"expected: \"+num +\" but had: \"+rsp.getResults().getNumFound() + \" :: \" + rsp.getResults() );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f"],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}