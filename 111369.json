{"path":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClassCore(PrintWriter,ClassDoc,int,String,boolean).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClassCore(PrintWriter,ClassDoc,int,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"\tvoid writeClassCore(PrintWriter out, ClassDoc cls, int type, String dstpath, boolean thiscls) { // <tr>...</tr>\n\t\tout.print(\"<tr><td bgcolor=#\");\n\t\tif (cls.isInterface())\n\t\t\tout.print(configuration().interfacecolor);\n\t\telse if (cls.isFinal())\n\t\t\tout.print(configuration().finalclasscolor);\n\t\telse if (cls.isAbstract())\n\t\t\tout.print(configuration().abstractclasscolor);\n\t\telse\n\t\t\tout.print(configuration().classcolor);\n\t\tout.println(\"><table border cellspacing=0 cellpadding=0 width=100%><tr><td>\");\n\t\tif (configuration().packagename) {\n\t\t\tString pkgs = cls.containingPackage().name();\n\t\t\tif (pkgs.length() > 0)\n\t\t\t\tout.print(pkgs + \". \");\n\t\t}\n\t\twriteClassName(out, cls, dstpath, thiscls);\n\t\twriteClassTag(out, cls);\n\t\t\n\t\tint dt = configuration().detail[type];\n\t\tif (dt > 0) {\n\t\t\tFieldDoc[] fld = cls.fields();\n\t\t\tif (fld.length > 0) {\n\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\tfor (int i = 0; i < fld.length; i++)\n\t\t\t\t\twriteField(out, fld[i], dt, dstpath);\n\t\t\t}\n\t\t\tConstructorDoc[] con = cls.constructors();\n\t\t\tboolean sep = false;\n\t\t\tif (con.length > 0) {\n\t\t\t\tfor (int i = 0; i < con.length; i++) {\n\t\t\t\t\tParameter[] param = con[i].parameters();\n\t\t\t\t\tif (param.length == 1 && param[0].name().startsWith(\"this$\"))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!sep) {\n\t\t\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t\twriteConstructor(out, con[i], dt, dstpath);\n\t\t\t\t}\n\t\t\t}\n\t\t\tMethodDoc[] met = cls.methods();\n\t\t\tif (met.length > 0) {\n\t\t\t\tif (!sep)\n\t\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\tfor (int i = 0; i < met.length; i++)\n\t\t\t\t\twriteMethod(out, met[i], dt, dstpath);\n\t\t\t}\n\t\t}\n\t\tout.println(\"</td></tr></table></td></tr>\");\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35ba86e9cc568fdc800d780c620749584b1d5bc","date":1051838861,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClassCore(PrintWriter,ClassDoc,int,String,boolean).mjava","sourceNew":null,"sourceOld":"\tvoid writeClassCore(PrintWriter out, ClassDoc cls, int type, String dstpath, boolean thiscls) { // <tr>...</tr>\n\t\tout.print(\"<tr><td bgcolor=#\");\n\t\tif (cls.isInterface())\n\t\t\tout.print(configuration().interfacecolor);\n\t\telse if (cls.isFinal())\n\t\t\tout.print(configuration().finalclasscolor);\n\t\telse if (cls.isAbstract())\n\t\t\tout.print(configuration().abstractclasscolor);\n\t\telse\n\t\t\tout.print(configuration().classcolor);\n\t\tout.println(\"><table border cellspacing=0 cellpadding=0 width=100%><tr><td>\");\n\t\tif (configuration().packagename) {\n\t\t\tString pkgs = cls.containingPackage().name();\n\t\t\tif (pkgs.length() > 0)\n\t\t\t\tout.print(pkgs + \". \");\n\t\t}\n\t\twriteClassName(out, cls, dstpath, thiscls);\n\t\twriteClassTag(out, cls);\n\t\t\n\t\tint dt = configuration().detail[type];\n\t\tif (dt > 0) {\n\t\t\tFieldDoc[] fld = cls.fields();\n\t\t\tif (fld.length > 0) {\n\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\tfor (int i = 0; i < fld.length; i++)\n\t\t\t\t\twriteField(out, fld[i], dt, dstpath);\n\t\t\t}\n\t\t\tConstructorDoc[] con = cls.constructors();\n\t\t\tboolean sep = false;\n\t\t\tif (con.length > 0) {\n\t\t\t\tfor (int i = 0; i < con.length; i++) {\n\t\t\t\t\tParameter[] param = con[i].parameters();\n\t\t\t\t\tif (param.length == 1 && param[0].name().startsWith(\"this$\"))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!sep) {\n\t\t\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t\twriteConstructor(out, con[i], dt, dstpath);\n\t\t\t\t}\n\t\t\t}\n\t\t\tMethodDoc[] met = cls.methods();\n\t\t\tif (met.length > 0) {\n\t\t\t\tif (!sep)\n\t\t\t\t\tout.println(\"</td></tr><tr><td>\");\n\t\t\t\tfor (int i = 0; i < met.length; i++)\n\t\t\t\t\twriteMethod(out, met[i], dt, dstpath);\n\t\t\t}\n\t\t}\n\t\tout.println(\"</td></tr></table></td></tr>\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35ba86e9cc568fdc800d780c620749584b1d5bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}