{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","commits":[{"id":"cea5f7a2e31566bda38c740c37affa52b0e9c46e","date":1323436632,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","pathOld":"/dev/null","sourceNew":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\"),\n          map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","pathOld":"/dev/null","sourceNew":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\"),\n          map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","sourceNew":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\", jetty.getLocalPort()), map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","sourceOld":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\"),\n          map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","sourceNew":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\", jetty.getLocalPort()), map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","sourceOld":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\"),\n          map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","sourceNew":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\", jetty.getLocalPort()), map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","sourceOld":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\"),\n          map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorEndToEnd#testFullImportMultiThreaded().mjava","sourceNew":null,"sourceOld":"  public void testFullImportMultiThreaded() {\n    assertQ(req(\"*:*\"), \"//result[@numFound='0']\");\n    int numDocs = 37;\n    List<Map<String,Object>> docList = generateSolrDocuments(numDocs);\n    \n    try {\n      addDocumentsToSolr(docList);\n      Map<String,String> map = new HashMap<String,String>();\n      map.put(\"rows\", \"50\");\n      runFullImport(generateDIHConfig(\"query='*:*' rows='6' numThreads='4'\", jetty.getLocalPort()), map);\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      fail(e.getMessage());\n    }\n    \n    assertQ(req(\"*:*\"), \"//result[@numFound='\" + numDocs + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cea5f7a2e31566bda38c740c37affa52b0e9c46e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cea5f7a2e31566bda38c740c37affa52b0e9c46e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["cea5f7a2e31566bda38c740c37affa52b0e9c46e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b84e23a1c994ea309896dd9424563e0092f3607"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"cea5f7a2e31566bda38c740c37affa52b0e9c46e":["0d22ac6a4146774c1bc8400160fc0b6150294e92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cea5f7a2e31566bda38c740c37affa52b0e9c46e","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["4b84e23a1c994ea309896dd9424563e0092f3607","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}