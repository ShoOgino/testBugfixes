{"path":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSInputStream#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n            synchronized (base) {\n              long start = getFilePointer();\n              if(start + len > length)\n                throw new IOException(\"read past EOF\");\n              base.seek(fileOffset + start);\n              base.readBytes(b, offset, len);\n            }\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n            synchronized (base) {\n              long start = getFilePointer();\n              if(start + len > length)\n                throw new IOException(\"read past EOF\");\n              base.seek(fileOffset + start);\n              base.readBytes(b, offset, len);\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"522694005b60ff76bab9584c0afb66ae309ffada","date":1183568422,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n            synchronized (base) {\n              long start = getFilePointer();\n              if(start + len > length)\n                throw new IOException(\"read past EOF\");\n              base.seek(fileOffset + start);\n              base.readBytes(b, offset, len, false);\n            }\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n            synchronized (base) {\n              long start = getFilePointer();\n              if(start + len > length)\n                throw new IOException(\"read past EOF\");\n              base.seek(fileOffset + start);\n              base.readBytes(b, offset, len);\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"385e2d9c17fe505794d82f2776a4151e9a47c7ca","date":1214999847,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n            synchronized (base) {\n              long start = getFilePointer();\n              if(start + len > length)\n                throw new IOException(\"read past EOF\");\n              base.seek(fileOffset + start);\n              base.readBytes(b, offset, len, false);\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#readInternal(byte[],int,int).mjava","sourceNew":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","sourceOld":"        /** Expert: implements buffer refill.  Reads bytes from the current\n         *  position in the input.\n         * @param b the array to read bytes into\n         * @param offset the offset in the array to start storing bytes\n         * @param len the number of bytes to read\n         */\n        @Override\n        protected void readInternal(byte[] b, int offset, int len)\n        throws IOException\n        {\n          long start = getFilePointer();\n          if(start + len > length)\n            throw new IOException(\"read past EOF\");\n          base.seek(fileOffset + start);\n          base.readBytes(b, offset, len, false);\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"385e2d9c17fe505794d82f2776a4151e9a47c7ca":["522694005b60ff76bab9584c0afb66ae309ffada"],"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["385e2d9c17fe505794d82f2776a4151e9a47c7ca"],"522694005b60ff76bab9584c0afb66ae309ffada":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"385e2d9c17fe505794d82f2776a4151e9a47c7ca":["8a9e385641d717e641408d8fbbc62be8fc766357"],"e971ba25509e21a130fef61f0687be0446ca27a0":["522694005b60ff76bab9584c0afb66ae309ffada"],"522694005b60ff76bab9584c0afb66ae309ffada":["385e2d9c17fe505794d82f2776a4151e9a47c7ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}