{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.initCoreDataDir.getCanonicalPath() ); \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.initCoreDataDir.getCanonicalPath() ); \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.dataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception\n  {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty( \"solr.solr.home\", this.getSolrHome() ); \n    System.setProperty( \"solr.data.dir\", this.initCoreDataDir.getCanonicalPath() ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6554f36a4636755009195a7840518bf6b4f03d6c","date":1481906808,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"maxWarmingSearchers\");\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ddba243900a65c26afa3346a93d6c71e58a226","date":1513880422,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestBase#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    // this sets the property for jetty starting SolrDispatchFilter\n    System.setProperty(\"solr.solr.home\", this.getSolrHome());\n    System.setProperty(\"solr.data.dir\", this.initCoreDataDir.getCanonicalPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["c26f00b574427b55127e869b935845554afde1fa"],"6554f36a4636755009195a7840518bf6b4f03d6c":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["c26f00b574427b55127e869b935845554afde1fa","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452","6554f36a4636755009195a7840518bf6b4f03d6c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64ddba243900a65c26afa3346a93d6c71e58a226":["6554f36a4636755009195a7840518bf6b4f03d6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ddba243900a65c26afa3346a93d6c71e58a226"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"6554f36a4636755009195a7840518bf6b4f03d6c":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","64ddba243900a65c26afa3346a93d6c71e58a226"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["6554f36a4636755009195a7840518bf6b4f03d6c","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"64ddba243900a65c26afa3346a93d6c71e58a226":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}