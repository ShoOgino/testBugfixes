{"path":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new StandardAnalyzer(\n              LuceneTestCase.TEST_VERSION_CURRENT)));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new StandardAnalyzer(\n              LuceneTestCase.TEST_VERSION_CURRENT)));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"548ff344959e717dd71ef5eb652cf5904835c4b3","date":1358776200,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new StandardAnalyzer(\n              LuceneTestCase.TEST_VERSION_CURRENT)));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(\n      Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new StandardAnalyzer(\n              LuceneTestCase.TEST_VERSION_CURRENT)));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc","date":1359570667,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":null,"sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestUtils#createIndexTaxonomyWriterPair(Directory[][]).mjava","sourceNew":null,"sourceOld":"  public static IndexTaxonomyWriterPair[] createIndexTaxonomyWriterPair(Directory[][] dirs) throws IOException {\n    IndexTaxonomyWriterPair[] pairs = new IndexTaxonomyWriterPair[dirs.length];\n    for (int i = 0; i < dirs.length; i++) {\n      IndexTaxonomyWriterPair pair = new IndexTaxonomyWriterPair();\n      pair.indexWriter = new IndexWriter(dirs[i][0], new IndexWriterConfig(\n          LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(LuceneTestCase.random())));\n      pair.taxWriter = new DirectoryTaxonomyWriter(dirs[i][1]);\n      pair.indexWriter.commit();\n      pair.taxWriter.commit();\n      pairs[i] = pair;\n    }\n    return pairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["548ff344959e717dd71ef5eb652cf5904835c4b3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["07155cdd910937cdf6877e48884d5782845c8b8b","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"548ff344959e717dd71ef5eb652cf5904835c4b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"]},"commit2Childs":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc","07155cdd910937cdf6877e48884d5782845c8b8b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["548ff344959e717dd71ef5eb652cf5904835c4b3","07155cdd910937cdf6877e48884d5782845c8b8b"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"548ff344959e717dd71ef5eb652cf5904835c4b3":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"07155cdd910937cdf6877e48884d5782845c8b8b":["61d5f95d14e5b9b046998c51e16709a398c15226"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}