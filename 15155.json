{"path":"src/test/org/apache/lucene/index/TestIndexWriter#fillUnicode(char[],char[],int,int).mjava","commits":[{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#fillUnicode(char[],char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  private boolean fillUnicode(char[] buffer, char[] expected, int offset, int count) {\n    final int len = offset + count;\n    boolean hasIllegal = false;\n\n    if (offset > 0 && buffer[offset] >= 0xdc00 && buffer[offset] < 0xe000)\n      // Don't start in the middle of a valid surrogate pair\n      offset--;\n\n    for(int i=offset;i<len;i++) {\n      int t = nextInt(6);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        expected[i] = buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        expected[i] = buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        expected[i] = buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      else if (4 == t)\n        expected[i] = buffer[i] = (char) nextInt(0xe000, 0xffff);\n      else if (5 == t && i < len-1) {\n        // Illegal unpaired surrogate\n        if (nextInt(10) == 7) {\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n          expected[i++] = 0xfffd;\n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n          hasIllegal = true;\n        } else \n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      } else {\n        expected[i] = buffer[i] = ' ';\n      }\n    }\n\n    return hasIllegal;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#fillUnicode(char[],char[],int,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#fillUnicode(char[],char[],int,int).mjava","sourceNew":"  private boolean fillUnicode(char[] buffer, char[] expected, int offset, int count) {\n    final int len = offset + count;\n    boolean hasIllegal = false;\n\n    if (offset > 0 && buffer[offset] >= 0xdc00 && buffer[offset] < 0xe000)\n      // Don't start in the middle of a valid surrogate pair\n      offset--;\n\n    for(int i=offset;i<len;i++) {\n      int t = nextInt(6);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        expected[i] = buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        expected[i] = buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        expected[i] = buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      else if (4 == t)\n        expected[i] = buffer[i] = (char) nextInt(0xe000, 0xffff);\n      else if (5 == t && i < len-1) {\n        // Illegal unpaired surrogate\n        if (nextInt(10) == 7) {\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n          expected[i++] = 0xfffd;\n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n          hasIllegal = true;\n        } else \n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      } else {\n        expected[i] = buffer[i] = ' ';\n      }\n    }\n\n    return hasIllegal;\n  }\n\n","sourceOld":"  private boolean fillUnicode(char[] buffer, char[] expected, int offset, int count) {\n    final int len = offset + count;\n    boolean hasIllegal = false;\n\n    if (offset > 0 && buffer[offset] >= 0xdc00 && buffer[offset] < 0xe000)\n      // Don't start in the middle of a valid surrogate pair\n      offset--;\n\n    for(int i=offset;i<len;i++) {\n      int t = nextInt(6);\n      if (0 == t && i < len-1) {\n        // Make a surrogate pair\n        // High surrogate\n        expected[i] = buffer[i++] = (char) nextInt(0xd800, 0xdc00);\n        // Low surrogate\n        expected[i] = buffer[i] = (char) nextInt(0xdc00, 0xe000);\n      } else if (t <= 1)\n        expected[i] = buffer[i] = (char) nextInt(0x80);\n      else if (2 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x80, 0x800);\n      else if (3 == t)\n        expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      else if (4 == t)\n        expected[i] = buffer[i] = (char) nextInt(0xe000, 0xffff);\n      else if (5 == t && i < len-1) {\n        // Illegal unpaired surrogate\n        if (nextInt(10) == 7) {\n          if (r.nextBoolean())\n            buffer[i] = (char) nextInt(0xd800, 0xdc00);\n          else\n            buffer[i] = (char) nextInt(0xdc00, 0xe000);\n          expected[i++] = 0xfffd;\n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n          hasIllegal = true;\n        } else \n          expected[i] = buffer[i] = (char) nextInt(0x800, 0xd800);\n      } else {\n        expected[i] = buffer[i] = ' ';\n      }\n    }\n\n    return hasIllegal;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}