{"path":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testBigIntegerValuesInAdd().mjava","commits":[{"id":"e3cfdc85a0c5d23bc0bacfd44398b148058cb350","date":1370393263,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testBigIntegerValuesInAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBigIntegerValuesInAdd() throws Exception {\n    String str = (\"{'add':[{'id':'1','bi1':123456789012345678901,'bi2':1098765432109876543210,\"\n                 + \"'bi3':[1234567890123456789012,10987654321098765432109]}]}\").replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    assertEquals(1, p.addCommands.size());\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    SolrInputDocument d = add.solrDoc;\n    SolrInputField f = d.getField(\"bi1\");\n    assertTrue(f.getValue() instanceof BigInteger);\n    assertEquals(new BigInteger(\"123456789012345678901\"), f.getValue());\n    f = d.getField(\"bi2\");\n    assertTrue(f.getValue() instanceof BigInteger);\n    assertEquals(new BigInteger(\"1098765432109876543210\"), f.getValue());\n    f = d.getField(\"bi3\");\n    assertEquals(2, ((List)f.getValue()).size());\n    assertTrue(((List)f.getValue()).contains(new BigInteger(\"1234567890123456789012\")));\n    assertTrue(((List)f.getValue()).contains(new BigInteger(\"10987654321098765432109\")));\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7cc06bf372c14250dd19e96f105b987c528618aa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7cc06bf372c14250dd19e96f105b987c528618aa","date":1370446051,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testBigIntegerValuesInAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testBigIntegerValuesInAdd().mjava","sourceNew":"  @Test\n  public void testBigIntegerValuesInAdd() throws Exception {\n    String str = (\"{'add':[{'id':'1','bi1':123456789012345678901,'bi2':1098765432109876543210,\"\n                 + \"'bi3':[1234567890123456789012,10987654321098765432109]}]}\").replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    assertEquals(1, p.addCommands.size());\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    SolrInputDocument d = add.solrDoc;\n    SolrInputField f = d.getField(\"bi1\");\n    assertTrue(f.getValue() instanceof String);\n    assertEquals(\"123456789012345678901\", f.getValue());\n    f = d.getField(\"bi2\");\n    assertTrue(f.getValue() instanceof String);\n    assertEquals(\"1098765432109876543210\", f.getValue());\n    f = d.getField(\"bi3\");\n    assertEquals(2, ((List)f.getValue()).size());\n    assertTrue(((List)f.getValue()).contains(\"1234567890123456789012\"));\n    assertTrue(((List)f.getValue()).contains(\"10987654321098765432109\"));\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBigIntegerValuesInAdd() throws Exception {\n    String str = (\"{'add':[{'id':'1','bi1':123456789012345678901,'bi2':1098765432109876543210,\"\n                 + \"'bi3':[1234567890123456789012,10987654321098765432109]}]}\").replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    assertEquals(1, p.addCommands.size());\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    SolrInputDocument d = add.solrDoc;\n    SolrInputField f = d.getField(\"bi1\");\n    assertTrue(f.getValue() instanceof BigInteger);\n    assertEquals(new BigInteger(\"123456789012345678901\"), f.getValue());\n    f = d.getField(\"bi2\");\n    assertTrue(f.getValue() instanceof BigInteger);\n    assertEquals(new BigInteger(\"1098765432109876543210\"), f.getValue());\n    f = d.getField(\"bi3\");\n    assertEquals(2, ((List)f.getValue()).size());\n    assertTrue(((List)f.getValue()).contains(new BigInteger(\"1234567890123456789012\")));\n    assertTrue(((List)f.getValue()).contains(new BigInteger(\"10987654321098765432109\")));\n\n    req.close();\n  }\n\n","bugFix":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7cc06bf372c14250dd19e96f105b987c528618aa":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"e3cfdc85a0c5d23bc0bacfd44398b148058cb350":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7cc06bf372c14250dd19e96f105b987c528618aa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3cfdc85a0c5d23bc0bacfd44398b148058cb350"],"7cc06bf372c14250dd19e96f105b987c528618aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3cfdc85a0c5d23bc0bacfd44398b148058cb350":["7cc06bf372c14250dd19e96f105b987c528618aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}