{"path":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String,Replica.Type).mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String,Replica.Type).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String).mjava","sourceNew":"  public static String buildCoreName(DocCollection collection, String shard, Replica.Type type) {\n    Slice slice = collection.getSlice(shard);\n    int replicaNum = slice.getReplicas().size();\n    for (; ; ) {\n      String replicaName = buildCoreName(collection.getName(), shard, type, replicaNum);\n      boolean exists = false;\n      for (Replica replica : slice.getReplicas()) {\n        if (replicaName.equals(replica.getStr(CORE_NAME_PROP))) {\n          exists = true;\n          break;\n        }\n      }\n      if (exists) replicaNum++;\n      else return replicaName;\n    }\n  }\n\n","sourceOld":"  static String buildCoreName(DocCollection collection, String shard) {\n    Slice slice = collection.getSlice(shard);\n    int replicaNum = slice.getReplicas().size();\n    for (; ; ) {\n      String replicaName = collection.getName() + \"_\" + shard + \"_replica\" + replicaNum;\n      boolean exists = false;\n      for (Replica replica : slice.getReplicas()) {\n        if (replicaName.equals(replica.getStr(CORE_NAME_PROP))) {\n          exists = true;\n          break;\n        }\n      }\n      if (exists) replicaNum++;\n      else break;\n    }\n    return collection.getName() + \"_\" + shard + \"_replica\" + replicaNum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String,Replica.Type).mjava","pathOld":"/dev/null","sourceNew":"  public static String buildCoreName(DocCollection collection, String shard, Replica.Type type) {\n    Slice slice = collection.getSlice(shard);\n    int replicaNum = slice.getReplicas().size();\n    for (; ; ) {\n      String replicaName = buildCoreName(collection.getName(), shard, type, replicaNum);\n      boolean exists = false;\n      for (Replica replica : slice.getReplicas()) {\n        if (replicaName.equals(replica.getStr(CORE_NAME_PROP))) {\n          exists = true;\n          break;\n        }\n      }\n      if (exists) replicaNum++;\n      else return replicaName;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f100e4a037a938ee4b027674f1ca80fc208badf","date":1500526196,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String,Replica.Type).mjava","sourceNew":null,"sourceOld":"  public static String buildCoreName(DocCollection collection, String shard, Replica.Type type) {\n    Slice slice = collection.getSlice(shard);\n    int replicaNum = slice.getReplicas().size();\n    for (; ; ) {\n      String replicaName = buildCoreName(collection.getName(), shard, type, replicaNum);\n      boolean exists = false;\n      for (Replica replica : slice.getReplicas()) {\n        if (replicaName.equals(replica.getStr(CORE_NAME_PROP))) {\n          exists = true;\n          break;\n        }\n      }\n      if (exists) replicaNum++;\n      else return replicaName;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DocCollection,String,Replica.Type).mjava","sourceNew":null,"sourceOld":"  public static String buildCoreName(DocCollection collection, String shard, Replica.Type type) {\n    Slice slice = collection.getSlice(shard);\n    int replicaNum = slice.getReplicas().size();\n    for (; ; ) {\n      String replicaName = buildCoreName(collection.getName(), shard, type, replicaNum);\n      boolean exists = false;\n      for (Replica replica : slice.getReplicas()) {\n        if (replicaName.equals(replica.getStr(CORE_NAME_PROP))) {\n          exists = true;\n          break;\n        }\n      }\n      if (exists) replicaNum++;\n      else return replicaName;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9f100e4a037a938ee4b027674f1ca80fc208badf":["61c45e99cf6676da48f19d7511c73712ad39402b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["e9017cf144952056066919f1ebc7897ff9bd71b1","9f100e4a037a938ee4b027674f1ca80fc208badf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9f100e4a037a938ee4b027674f1ca80fc208badf"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","9f100e4a037a938ee4b027674f1ca80fc208badf"],"9f100e4a037a938ee4b027674f1ca80fc208badf":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}