{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161","date":1373673910,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3802d95c3a31be21ea2971945049b711d95ef8d5","date":1455055616,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id:[42 TO 45]\"\n              ,\"facet.query\", \"id:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c64189697927b548f74ba66dfa5051548662938","date":1455059336,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id:[42 TO 45]\"\n              ,\"facet.query\", \"id:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    assertQ(\"check counts for facet queries\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"trait_s:Obnoxious\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=6]\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n \n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    assertQ(\"check multi-select facets with naming\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n    assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n    assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n    // check that the default sort is by count\n    assertQ(\"check sorted paging\",\n            req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n    //\n    // check that legacy facet.sort=true/false works\n    //\n    assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n\n\n     assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.method\",\"fc\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int)=1]\"\n     );\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id_i1:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id_i1:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id_i1:[42 TO 45]\"\n              ,\"facet.query\", \"id_i1:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id_i1:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id_i1:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id_i1:[42 TO 45]\"\n                ,\"facet.query\", \"id_i1:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id:[42 TO 45]\"\n              ,\"facet.query\", \"id:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id_i1:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id_i1:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id_i1:[42 TO 45]\"\n              ,\"facet.query\", \"id_i1:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id_i1:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id_i1:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id_i1:[42 TO 45]\"\n                ,\"facet.query\", \"id_i1:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id:[42 TO 45]\"\n              ,\"facet.query\", \"id:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleFacetCounts().mjava","sourceNew":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id_i1:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id_i1:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id_i1:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id_i1:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id_i1:[42 TO 45]\"\n              ,\"facet.query\", \"id_i1:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id_i1:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id_i1:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id_i1:[42 TO 45]\"\n                ,\"facet.query\", \"id_i1:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id_i1:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id_i1:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id_i1:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleFacetCounts() {\n \n    assertQ(\"standard request handler returns all matches\",\n            req(\"id:[42 TO 47]\"),\n            \"*[count(//doc)=6]\"\n            );\n \n    assertQ(\"filter results using fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=4]\"\n            );\n    \n    assertQ(\"don't filter results using blank fq\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \" \"),\n            \"*[count(//doc)=5]\"\n            );\n     \n    assertQ(\"filter results using multiple fq params\",\n            req(\"q\",\"id:[42 TO 46]\",\n                \"fq\", \"trait_s:Obnoxious\",\n                \"fq\", \"id:[43 TO 47]\"),\n            \"*[count(//doc)=1]\"\n            );\n \n    final String[] uifSwitch = new String[]{(random().nextBoolean() ? \"\":\"f.trait_s.\")+\"facet.method\", \"uif\"};\n    final String[] none = new String[]{};\n    \n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for facet queries\",\n          req(methodParam\n              ,\"q\", \"id:[42 TO 47]\"\n              ,\"facet\", \"true\"\n              ,\"facet.query\", \"trait_s:Obnoxious\"\n              ,\"facet.query\", \"id:[42 TO 45]\"\n              ,\"facet.query\", \"id:[43 TO 47]\"\n              ,\"facet.field\", \"trait_s\"\n              )\n          ,\"*[count(//doc)=6]\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n          ,\"//lst[@name='facet_queries']/int[@name='trait_s:Obnoxious'][.='2']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n          ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='5']\"\n\n          ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n          ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n          ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n          ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n          ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n          );\n      \n      assertQ(\"check multi-select facets with naming\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.query\", \"{!ex=1}trait_s:Obnoxious\"\n                ,\"facet.query\", \"{!ex=2 key=foo}id:[42 TO 45]\"    // tag=2 same as 1\n                ,\"facet.query\", \"{!ex=3,4 key=bar}id:[43 TO 47]\"  // tag=3,4 don't exist\n                ,\"facet.field\", \"{!ex=3,1}trait_s\"                // 3,1 same as 1\n                ,\"fq\", \"{!tag=1,2}id:47\"                          // tagged as 1 and 2\n                )\n            ,\"*[count(//doc)=1]\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='{!ex=1}trait_s:Obnoxious'][.='2']\"\n            ,\"//lst[@name='facet_queries']/int[@name='foo'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_fields']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='trait_s']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='1']\"\n            );\n    }\n    // test excluding main query\n    assertQ(req(\"q\", \"{!tag=main}id:43\"\n                 ,\"facet\", \"true\"\n                 ,\"facet.query\", \"{!key=foo}id:42\"\n                 ,\"facet.query\", \"{!ex=main key=bar}id:42\"    // only matches when we exclude main query\n                 )\n             ,\"//lst[@name='facet_queries']/int[@name='foo'][.='0']\"\n             ,\"//lst[@name='facet_queries']/int[@name='bar'][.='1']\"\n             );\n\n    for(String[] methodParam : new String[][]{ none, uifSwitch}){\n      assertQ(\"check counts for applied facet queries using filtering (fq)\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.query\", \"id:[42 TO 45]\"\n                ,\"facet.query\", \"id:[43 TO 47]\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"//lst[@name='facet_counts']/lst[@name='facet_queries']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[42 TO 45]'][.='4']\"\n            ,\"//lst[@name='facet_queries']/int[@name='id:[43 TO 47]'][.='3']\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n \n      assertQ(\"check counts with facet.zero=false&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.zeros\", \"false\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=1&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"1\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"\n            );\n\n      assertQ(\"check counts with facet.mincount=2&facet.missing=true using fq\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"facet.mincount\", \"2\"\n                ,\"f.trait_s.facet.missing\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                )\n            ,\"*[count(//doc)=4]\"\n            ,\"*[count(//lst[@name='trait_s']/int)=2]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[not(@name)][.='1']\"               \n            );\n\n      assertQ(\"check sorted paging\",\n            req(methodParam\n                ,\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"4\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=4]\"\n            ,\"//lst[@name='trait_s']/int[@name='Tool'][.='2']\"\n            ,\"//lst[@name='trait_s']/int[@name='Obnoxious'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Chauvinist'][.='1']\"\n            ,\"//lst[@name='trait_s']/int[@name='Pig'][.='0']\"\n            );\n\n      // check that the default sort is by count\n      assertQ(\"check sorted paging\",\n            req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n      //\n      // check that legacy facet.sort=true/false works\n      //\n      assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"0\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"true\"  // true means sort-by-count\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Tool'][.='2']\"\n            ,\"//int[2][@name='Chauvinist'][.='1']\"\n            ,\"//int[3][@name='Obnoxious'][.='1']\"\n            );\n\n       assertQ(req(methodParam, \"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"trait_s\"\n                ,\"facet.mincount\",\"1\"\n                ,\"facet.offset\",\"0\"\n                ,\"facet.limit\",\"3\"\n                ,\"facet.sort\",\"false\"  // false means sort by index order\n                )\n            ,\"*[count(//lst[@name='trait_s']/int)=3]\"\n            ,\"//int[1][@name='Chauvinist'][.='1']\"\n            ,\"//int[2][@name='Obnoxious'][.='1']\"\n            ,\"//int[3][@name='Tool'][.='2']\"\n            );\n    }\n\n    for(String method : new String[]{ \"fc\",\"uif\"}){\n       assertQ(req(\"q\", \"id:[42 TO 47]\"\n                ,\"facet\", \"true\"\n                ,\"fq\", \"id:[42 TO 45]\"\n                ,\"facet.field\", \"zerolen_s\"\n                ,(random().nextBoolean() ? \"\":\"f.zerolen_s.\")+\"facet.method\", method\n                )\n            ,\"*[count(//lst[@name='zerolen_s']/int[@name=''])=1]\"\n       );\n    }\n\n    assertQ(\"a facet.query that analyzes to no query shoud not NPE\",\n        req(\"q\", \"*:*\",\n            \"facet\", \"true\",\n            \"facet.query\", \"{!field key=k f=lengthfilt}a\"),//2 char minimum\n        \"//lst[@name='facet_queries']/int[@name='k'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["3c64189697927b548f74ba66dfa5051548662938"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3c64189697927b548f74ba66dfa5051548662938":["83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161","3802d95c3a31be21ea2971945049b711d95ef8d5"],"83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161":["c26f00b574427b55127e869b935845554afde1fa"],"28288370235ed02234a64753cdbf0c6ec096304a":["3c64189697927b548f74ba66dfa5051548662938","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["3c64189697927b548f74ba66dfa5051548662938","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"3802d95c3a31be21ea2971945049b711d95ef8d5":["83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["37a0f60745e53927c4c876cfe5b5a58170f0646c","83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3c64189697927b548f74ba66dfa5051548662938":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"83d5056adea94bfcf3d0b12e4c2cbbbcabfe7161":["37a0f60745e53927c4c876cfe5b5a58170f0646c","3c64189697927b548f74ba66dfa5051548662938","3802d95c3a31be21ea2971945049b711d95ef8d5"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"3802d95c3a31be21ea2971945049b711d95ef8d5":["3c64189697927b548f74ba66dfa5051548662938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}