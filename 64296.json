{"path":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","commits":[{"id":"0637f89202e27b25802435a9cf789fc0890c8a67","date":1288436161,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","pathOld":"/dev/null","sourceNew":"  public void setCache(SourceCache cache) {\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a70ca68767fddebc8ae07a188691ac017fa02325","date":1292863311,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   */\n  public void setCache(SourceCache cache) {\n    assert cache != null : \"cache must not be null\";\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","sourceOld":"  public void setCache(SourceCache cache) {\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a465ec8e22527bb8add54f75551ee9557a56de25","date":1295309224,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   * @throws IllegalArgumentException if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   */\n  public void setCache(SourceCache cache) {\n    assert cache != null : \"cache must not be null\";\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85130289d2ed101fcc2d8798511c7c5b020ffab4","date":1297239859,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   * @throws IllegalArgumentException if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link IndexDocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} or\n   * {@link #loadSorted(Comparator)} is called. All {@link Source} or\n   * {@link SortedSource} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} or\n   * {@link #loadSorted(Comparator)} will be closed.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (this.cache) {\n      this.cache.close(this);\n      this.cache = cache;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a70ca68767fddebc8ae07a188691ac017fa02325":["0637f89202e27b25802435a9cf789fc0890c8a67"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["a465ec8e22527bb8add54f75551ee9557a56de25"],"a465ec8e22527bb8add54f75551ee9557a56de25":["a70ca68767fddebc8ae07a188691ac017fa02325"],"0637f89202e27b25802435a9cf789fc0890c8a67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a70ca68767fddebc8ae07a188691ac017fa02325":["a465ec8e22527bb8add54f75551ee9557a56de25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0637f89202e27b25802435a9cf789fc0890c8a67","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":[],"85130289d2ed101fcc2d8798511c7c5b020ffab4":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"0637f89202e27b25802435a9cf789fc0890c8a67":["a70ca68767fddebc8ae07a188691ac017fa02325"],"a465ec8e22527bb8add54f75551ee9557a56de25":["85130289d2ed101fcc2d8798511c7c5b020ffab4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["41e5bbad683f7546e96f08ffe8bc50cf447f2586","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}