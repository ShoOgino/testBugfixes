{"path":"solr/core/src/test/org/apache/solr/search/stats/TestExactStatsCache#getShardsStringWithOneDeadShard().mjava","commits":[{"id":"b4d143a4ed5613dfe05afe5990093198084c693e","date":1601294688,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/stats/TestExactStatsCache#getShardsStringWithOneDeadShard().mjava","pathOld":"/dev/null","sourceNew":"  protected String getShardsStringWithOneDeadShard() {\n    assertNotNull(\"this test requires deadServers to be non-null\", deadServers);\n    assertTrue(\"this test requires at least 2 shards\", shardsArr.length > 1);\n\n    StringBuilder sb = new StringBuilder();\n    // copy over the real shard names except for the last one,\n    // replace it with a dead server\n    for (int shardN = 0; shardN < shardsArr.length; shardN++) {\n      if (sb.length() > 0) sb.append(',');\n\n      String shard;\n      if (shardN != shardsArr.length - 1) {\n        shard = shardsArr[shardN];\n      } else {\n        if (deadServers[0].endsWith(\"/\")) shard = deadServers[0] + DEFAULT_TEST_COLLECTION_NAME;\n        else shard = deadServers[0] + \"/\" + DEFAULT_TEST_CORENAME;\n      }\n      sb.append(shard);\n    }\n\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4d143a4ed5613dfe05afe5990093198084c693e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4d143a4ed5613dfe05afe5990093198084c693e"]},"commit2Childs":{"b4d143a4ed5613dfe05afe5990093198084c693e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4d143a4ed5613dfe05afe5990093198084c693e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}