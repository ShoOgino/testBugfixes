{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","commits":[{"id":"839ca1793cd9a8eb5bd7c7c62918192d47972f73","date":1399544004,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"/dev/null","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      assert freeCount < freeList.length;\n      freeList[freeCount++] = state;\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c02b804ab16489b95429791a2d8fb0e0728354d4","date":1436551798,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      assert freeCount < freeList.length;\n      freeList[freeCount++] = state;\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":["db6de97440ffb8133143037bae4ed8c567a16587"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state; notify() should be sufficient but we do\n      // notifyAll defensively:\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db6de97440ffb8133143037bae4ed8c567a16587","date":1502146420,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","bugFix":["f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n    }\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n      // In case any thread is waiting, wake one of them up since we just released a thread state:\n      notify();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#marksAsFreeAndUnlock(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#release(ThreadState).mjava","sourceNew":"  void marksAsFreeAndUnlock(DocumentsWriterPerThread state) {\n    synchronized (this) {\n      assert dwpts.contains(state) : \"we tried to add a DWPT back to the pool but the pool doesn't know aobut this DWPT\";\n      freeList.add(state);\n    }\n    state.unlock();\n  }\n\n","sourceOld":"  void release(ThreadState state) {\n    state.unlock();\n    synchronized (this) {\n      freeList.add(state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["db6de97440ffb8133143037bae4ed8c567a16587"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["28288370235ed02234a64753cdbf0c6ec096304a","db6de97440ffb8133143037bae4ed8c567a16587"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","db6de97440ffb8133143037bae4ed8c567a16587"],"db6de97440ffb8133143037bae4ed8c567a16587":["28288370235ed02234a64753cdbf0c6ec096304a"],"839ca1793cd9a8eb5bd7c7c62918192d47972f73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["c02b804ab16489b95429791a2d8fb0e0728354d4","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["c02b804ab16489b95429791a2d8fb0e0728354d4","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"c02b804ab16489b95429791a2d8fb0e0728354d4":["839ca1793cd9a8eb5bd7c7c62918192d47972f73"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"db6de97440ffb8133143037bae4ed8c567a16587":["264935965977b4a9e2f3920420647072c9c49176","58884af1f68e9d61c217c753fbd6266d86a63b14","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"839ca1793cd9a8eb5bd7c7c62918192d47972f73":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["839ca1793cd9a8eb5bd7c7c62918192d47972f73"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"28288370235ed02234a64753cdbf0c6ec096304a":["58884af1f68e9d61c217c753fbd6266d86a63b14","db6de97440ffb8133143037bae4ed8c567a16587"],"c02b804ab16489b95429791a2d8fb0e0728354d4":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}