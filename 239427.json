{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"                private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 28\n                    // test, line 30\n                    v_1 = cursor;\n                    // repeat, line 30\n                    replab0: while(true)\n                    {\n                        v_2 = cursor;\n                        lab1: do {\n                            // goto, line 30\n                            golab2: while(true)\n                            {\n                                v_3 = cursor;\n                                lab3: do {\n                                    // (, line 30\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab3;\n                                    }\n                                    // [, line 31\n                                    bra = cursor;\n                                    // or, line 31\n                                    lab4: do {\n                                        v_4 = cursor;\n                                        lab5: do {\n                                            // (, line 31\n                                            // literal, line 31\n                                            if (!(eq_s(1, \"u\")))\n                                            {\n                                                break lab5;\n                                            }\n                                            // ], line 31\n                                            ket = cursor;\n                                            if (!(in_grouping(g_v, 97, 252)))\n                                            {\n                                                break lab5;\n                                            }\n                                            // <-, line 31\n                                            slice_from(\"U\");\n                                            break lab4;\n                                        } while (false);\n                                        cursor = v_4;\n                                        // (, line 32\n                                        // literal, line 32\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab3;\n                                        }\n                                        // ], line 32\n                                        ket = cursor;\n                                        if (!(in_grouping(g_v, 97, 252)))\n                                        {\n                                            break lab3;\n                                        }\n                                        // <-, line 32\n                                        slice_from(\"Y\");\n                                    } while (false);\n                                    cursor = v_3;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_3;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_2;\n                        break replab0;\n                    }\n                    cursor = v_1;\n                    // repeat, line 35\n                    replab6: while(true)\n                    {\n                        v_5 = cursor;\n                        lab7: do {\n                            // (, line 35\n                            // [, line 36\n                            bra = cursor;\n                            // substring, line 36\n                            among_var = find_among(a_0, 6);\n                            if (among_var == 0)\n                            {\n                                break lab7;\n                            }\n                            // ], line 36\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab7;\n                                case 1:\n                                    // (, line 37\n                                    // <-, line 37\n                                    slice_from(\"ss\");\n                                    break;\n                                case 2:\n                                    // (, line 38\n                                    // <-, line 38\n                                    slice_from(\"\\u00E4\");\n                                    break;\n                                case 3:\n                                    // (, line 39\n                                    // <-, line 39\n                                    slice_from(\"\\u00F6\");\n                                    break;\n                                case 4:\n                                    // (, line 40\n                                    // <-, line 40\n                                    slice_from(\"\\u00FC\");\n                                    break;\n                                case 5:\n                                    // (, line 41\n                                    // hop, line 41\n                                    {\n                                        int c = cursor + 2;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab7;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 6:\n                                    // (, line 42\n                                    // next, line 42\n                                    if (cursor >= limit)\n                                    {\n                                        break lab7;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab6;\n                        } while (false);\n                        cursor = v_5;\n                        break replab6;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"                private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 28\n                    // test, line 30\n                    v_1 = cursor;\n                    // repeat, line 30\n                    replab0: while(true)\n                    {\n                        v_2 = cursor;\n                        lab1: do {\n                            // goto, line 30\n                            golab2: while(true)\n                            {\n                                v_3 = cursor;\n                                lab3: do {\n                                    // (, line 30\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab3;\n                                    }\n                                    // [, line 31\n                                    bra = cursor;\n                                    // or, line 31\n                                    lab4: do {\n                                        v_4 = cursor;\n                                        lab5: do {\n                                            // (, line 31\n                                            // literal, line 31\n                                            if (!(eq_s(1, \"u\")))\n                                            {\n                                                break lab5;\n                                            }\n                                            // ], line 31\n                                            ket = cursor;\n                                            if (!(in_grouping(g_v, 97, 252)))\n                                            {\n                                                break lab5;\n                                            }\n                                            // <-, line 31\n                                            slice_from(\"U\");\n                                            break lab4;\n                                        } while (false);\n                                        cursor = v_4;\n                                        // (, line 32\n                                        // literal, line 32\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab3;\n                                        }\n                                        // ], line 32\n                                        ket = cursor;\n                                        if (!(in_grouping(g_v, 97, 252)))\n                                        {\n                                            break lab3;\n                                        }\n                                        // <-, line 32\n                                        slice_from(\"Y\");\n                                    } while (false);\n                                    cursor = v_3;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_3;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_2;\n                        break replab0;\n                    }\n                    cursor = v_1;\n                    // repeat, line 35\n                    replab6: while(true)\n                    {\n                        v_5 = cursor;\n                        lab7: do {\n                            // (, line 35\n                            // [, line 36\n                            bra = cursor;\n                            // substring, line 36\n                            among_var = find_among(a_0, 6);\n                            if (among_var == 0)\n                            {\n                                break lab7;\n                            }\n                            // ], line 36\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab7;\n                                case 1:\n                                    // (, line 37\n                                    // <-, line 37\n                                    slice_from(\"ss\");\n                                    break;\n                                case 2:\n                                    // (, line 38\n                                    // <-, line 38\n                                    slice_from(\"\\u00E4\");\n                                    break;\n                                case 3:\n                                    // (, line 39\n                                    // <-, line 39\n                                    slice_from(\"\\u00F6\");\n                                    break;\n                                case 4:\n                                    // (, line 40\n                                    // <-, line 40\n                                    slice_from(\"\\u00FC\");\n                                    break;\n                                case 5:\n                                    // (, line 41\n                                    // hop, line 41\n                                    {\n                                        int c = cursor + 2;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab7;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 6:\n                                    // (, line 42\n                                    // next, line 42\n                                    if (cursor >= limit)\n                                    {\n                                        break lab7;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab6;\n                        } while (false);\n                        cursor = v_5;\n                        break replab6;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"                private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 28\n                    // test, line 30\n                    v_1 = cursor;\n                    // repeat, line 30\n                    replab0: while(true)\n                    {\n                        v_2 = cursor;\n                        lab1: do {\n                            // goto, line 30\n                            golab2: while(true)\n                            {\n                                v_3 = cursor;\n                                lab3: do {\n                                    // (, line 30\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab3;\n                                    }\n                                    // [, line 31\n                                    bra = cursor;\n                                    // or, line 31\n                                    lab4: do {\n                                        v_4 = cursor;\n                                        lab5: do {\n                                            // (, line 31\n                                            // literal, line 31\n                                            if (!(eq_s(1, \"u\")))\n                                            {\n                                                break lab5;\n                                            }\n                                            // ], line 31\n                                            ket = cursor;\n                                            if (!(in_grouping(g_v, 97, 252)))\n                                            {\n                                                break lab5;\n                                            }\n                                            // <-, line 31\n                                            slice_from(\"U\");\n                                            break lab4;\n                                        } while (false);\n                                        cursor = v_4;\n                                        // (, line 32\n                                        // literal, line 32\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab3;\n                                        }\n                                        // ], line 32\n                                        ket = cursor;\n                                        if (!(in_grouping(g_v, 97, 252)))\n                                        {\n                                            break lab3;\n                                        }\n                                        // <-, line 32\n                                        slice_from(\"Y\");\n                                    } while (false);\n                                    cursor = v_3;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_3;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_2;\n                        break replab0;\n                    }\n                    cursor = v_1;\n                    // repeat, line 35\n                    replab6: while(true)\n                    {\n                        v_5 = cursor;\n                        lab7: do {\n                            // (, line 35\n                            // [, line 36\n                            bra = cursor;\n                            // substring, line 36\n                            among_var = find_among(a_0, 6);\n                            if (among_var == 0)\n                            {\n                                break lab7;\n                            }\n                            // ], line 36\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab7;\n                                case 1:\n                                    // (, line 37\n                                    // <-, line 37\n                                    slice_from(\"ss\");\n                                    break;\n                                case 2:\n                                    // (, line 38\n                                    // <-, line 38\n                                    slice_from(\"\\u00E4\");\n                                    break;\n                                case 3:\n                                    // (, line 39\n                                    // <-, line 39\n                                    slice_from(\"\\u00F6\");\n                                    break;\n                                case 4:\n                                    // (, line 40\n                                    // <-, line 40\n                                    slice_from(\"\\u00FC\");\n                                    break;\n                                case 5:\n                                    // (, line 41\n                                    // hop, line 41\n                                    {\n                                        int c = cursor + 2;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab7;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 6:\n                                    // (, line 42\n                                    // next, line 42\n                                    if (cursor >= limit)\n                                    {\n                                        break lab7;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab6;\n                        } while (false);\n                        cursor = v_5;\n                        break replab6;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"private boolean r_prelude() {\n  int among_var;\n  int v_1 = cursor;\n  while(true)\n  {\n    int v_2 = cursor;\n    lab0: {\n      golab1: while(true)\n      {\n        int v_3 = cursor;\n        lab2: {\n          if (!(in_grouping(g_v, 97, 252)))\n          {\n            break lab2;\n          }\n          bra = cursor;\n          lab3: {\n            int v_4 = cursor;\n            lab4: {\n              if (!(eq_s(\"u\")))\n              {\n                break lab4;\n              }\n              ket = cursor;\n              if (!(in_grouping(g_v, 97, 252)))\n              {\n                break lab4;\n              }\n              slice_from(\"U\");\n              break lab3;\n            }\n            cursor = v_4;\n            if (!(eq_s(\"y\")))\n            {\n              break lab2;\n            }\n            ket = cursor;\n            if (!(in_grouping(g_v, 97, 252)))\n            {\n              break lab2;\n            }\n            slice_from(\"Y\");\n          }\n          cursor = v_3;\n          break golab1;\n        }\n        cursor = v_3;\n        if (cursor >= limit)\n        {\n          break lab0;\n        }\n        cursor++;\n      }\n      continue;\n    }\n    cursor = v_2;\n    break;\n  }\n  cursor = v_1;\n  while(true)\n  {\n    int v_5 = cursor;\n    lab5: {\n      bra = cursor;\n      among_var = find_among(a_0);\n      if (among_var == 0)\n      {\n        break lab5;\n      }\n      ket = cursor;\n      switch (among_var) {\n        case 1:\n          slice_from(\"ss\");\n          break;\n        case 2:\n          slice_from(\"\\u00E4\");\n          break;\n        case 3:\n          slice_from(\"\\u00F6\");\n          break;\n        case 4:\n          slice_from(\"\\u00FC\");\n          break;\n        case 5:\n          {\n            int c = cursor + 2;\n            if (0 > c || c > limit)\n            {\n              break lab5;\n            }\n            cursor = c;\n          }\n          break;\n        case 6:\n          if (cursor >= limit)\n          {\n            break lab5;\n          }\n          cursor++;\n          break;\n      }\n      continue;\n    }\n    cursor = v_5;\n    break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 28\n                    // test, line 30\n                    v_1 = cursor;\n                    // repeat, line 30\n                    replab0: while(true)\n                    {\n                        v_2 = cursor;\n                        lab1: do {\n                            // goto, line 30\n                            golab2: while(true)\n                            {\n                                v_3 = cursor;\n                                lab3: do {\n                                    // (, line 30\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab3;\n                                    }\n                                    // [, line 31\n                                    bra = cursor;\n                                    // or, line 31\n                                    lab4: do {\n                                        v_4 = cursor;\n                                        lab5: do {\n                                            // (, line 31\n                                            // literal, line 31\n                                            if (!(eq_s(1, \"u\")))\n                                            {\n                                                break lab5;\n                                            }\n                                            // ], line 31\n                                            ket = cursor;\n                                            if (!(in_grouping(g_v, 97, 252)))\n                                            {\n                                                break lab5;\n                                            }\n                                            // <-, line 31\n                                            slice_from(\"U\");\n                                            break lab4;\n                                        } while (false);\n                                        cursor = v_4;\n                                        // (, line 32\n                                        // literal, line 32\n                                        if (!(eq_s(1, \"y\")))\n                                        {\n                                            break lab3;\n                                        }\n                                        // ], line 32\n                                        ket = cursor;\n                                        if (!(in_grouping(g_v, 97, 252)))\n                                        {\n                                            break lab3;\n                                        }\n                                        // <-, line 32\n                                        slice_from(\"Y\");\n                                    } while (false);\n                                    cursor = v_3;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_3;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            continue replab0;\n                        } while (false);\n                        cursor = v_2;\n                        break replab0;\n                    }\n                    cursor = v_1;\n                    // repeat, line 35\n                    replab6: while(true)\n                    {\n                        v_5 = cursor;\n                        lab7: do {\n                            // (, line 35\n                            // [, line 36\n                            bra = cursor;\n                            // substring, line 36\n                            among_var = find_among(a_0, 6);\n                            if (among_var == 0)\n                            {\n                                break lab7;\n                            }\n                            // ], line 36\n                            ket = cursor;\n                            switch(among_var) {\n                                case 0:\n                                    break lab7;\n                                case 1:\n                                    // (, line 37\n                                    // <-, line 37\n                                    slice_from(\"ss\");\n                                    break;\n                                case 2:\n                                    // (, line 38\n                                    // <-, line 38\n                                    slice_from(\"\\u00E4\");\n                                    break;\n                                case 3:\n                                    // (, line 39\n                                    // <-, line 39\n                                    slice_from(\"\\u00F6\");\n                                    break;\n                                case 4:\n                                    // (, line 40\n                                    // <-, line 40\n                                    slice_from(\"\\u00FC\");\n                                    break;\n                                case 5:\n                                    // (, line 41\n                                    // hop, line 41\n                                    {\n                                        int c = cursor + 2;\n                                        if (0 > c || c > limit)\n                                        {\n                                            break lab7;\n                                        }\n                                        cursor = c;\n                                    }\n                                    break;\n                                case 6:\n                                    // (, line 42\n                                    // next, line 42\n                                    if (cursor >= limit)\n                                    {\n                                        break lab7;\n                                    }\n                                    cursor++;\n                                    break;\n                            }\n                            continue replab6;\n                        } while (false);\n                        cursor = v_5;\n                        break replab6;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}