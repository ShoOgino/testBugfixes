{"path":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","commits":[{"id":"e4b4e97a5e8ab5b96cc56c561131d720c756756b","date":1269362401,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14fe3e39e307a3142473ce571df73c1624ddfcb","date":1309114104,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      assert isOpen;\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#flushBuffer(byte[],int,int).mjava","sourceNew":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      assert isOpen;\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","sourceOld":"    /** output methods: */\n    @Override\n    public void flushBuffer(byte[] b, int offset, int size) throws IOException {\n      assert isOpen;\n      if (rateLimiter != null) {\n        rateLimiter.pause(size);\n      }\n      file.write(b, offset, size);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b14fe3e39e307a3142473ce571df73c1624ddfcb":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","b14fe3e39e307a3142473ce571df73c1624ddfcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"b14fe3e39e307a3142473ce571df73c1624ddfcb":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["60ba444201d2570214b6fcf1d15600dc1a01f548","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["b14fe3e39e307a3142473ce571df73c1624ddfcb","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}