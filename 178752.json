{"path":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","pathOld":"solr/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","sourceNew":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","sourceOld":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","pathOld":"solr/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","sourceNew":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","sourceOld":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","pathOld":"solr/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","sourceNew":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","sourceOld":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","sourceNew":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","sourceOld":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<Comparable, Set<Comparable>>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<Comparable>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/TestJoin#createJoinMap(Map[Comparable,Doc],String,String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","sourceOld":"  Map<Comparable, Set<Comparable>> createJoinMap(Map<Comparable, Doc> model, String fromField, String toField) {\n    Map<Comparable, Set<Comparable>> id_to_id = new HashMap<>();\n\n    Map<Comparable, List<Comparable>> value_to_id = invertField(model, toField);\n\n    for (Comparable fromId : model.keySet()) {\n      Doc doc = model.get(fromId);\n      List<Comparable> vals = doc.getValues(fromField);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> toIds = value_to_id.get(val);\n        if (toIds == null) continue;\n        Set<Comparable> ids = id_to_id.get(fromId);\n        if (ids == null) {\n          ids = new HashSet<>();\n          id_to_id.put(fromId, ids);\n        }\n        for (Comparable toId : toIds)\n          ids.add(toId);\n      }\n    }\n\n    return id_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}