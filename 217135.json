{"path":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","commits":[{"id":"0d154325f4d910828621eb42e4b1caadeb80aa60","date":1498774713,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n        final Path path = createTempDir();\n\n        final SolrResourceLoader loader = new SolrResourceLoader(path);\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", loader)\n                .setConfigSetBaseDirectory(Paths.get(TEST_HOME()).resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n        final Path path = createTempDir();\n\n        final SolrResourceLoader loader = new SolrResourceLoader(path);\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", loader)\n                .setConfigSetBaseDirectory(Paths.get(TEST_HOME()).resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","pathOld":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","sourceNew":"    @Test\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", TEST_PATH())\n                .setConfigSetBaseDirectory(TEST_PATH().resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","sourceOld":"    @Test\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n        final Path path = createTempDir();\n\n        final SolrResourceLoader loader = new SolrResourceLoader(path);\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", loader)\n                .setConfigSetBaseDirectory(Paths.get(TEST_HOME()).resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","pathOld":"solr/core/src/test/org/apache/solr/client/solrj/embedded/TestEmbeddedSolrServerAdminHandler#testPathIsAddedToContext().mjava","sourceNew":"    @Test\n    @SuppressWarnings({\"rawtypes\"})\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", TEST_PATH())\n                .setConfigSetBaseDirectory(TEST_PATH().resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","sourceOld":"    @Test\n    public void testPathIsAddedToContext() throws IOException, SolrServerException {\n\n        final NodeConfig config = new NodeConfig.NodeConfigBuilder(\"testnode\", TEST_PATH())\n                .setConfigSetBaseDirectory(TEST_PATH().resolve(\"configsets\").toString())\n                .build();\n\n        try (final EmbeddedSolrServer server = new EmbeddedSolrServer(config, \"collection1\")) {\n            final SystemInfoRequest info = new SystemInfoRequest();\n            final NamedList response = server.request(info);\n            assertTrue(response.size() > 0);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["0d154325f4d910828621eb42e4b1caadeb80aa60"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d154325f4d910828621eb42e4b1caadeb80aa60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d154325f4d910828621eb42e4b1caadeb80aa60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["9ba1b632c041956c93c41aa1143d16a567014891"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","0d154325f4d910828621eb42e4b1caadeb80aa60"],"0d154325f4d910828621eb42e4b1caadeb80aa60":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}