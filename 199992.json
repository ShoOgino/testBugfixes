{"path":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildTemplate(String).mjava","commits":[{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildTemplate(String).mjava","pathOld":"/dev/null","sourceNew":"  // Package-private for testing\n  // We replace the existing <cores></cores> contents with a template pattern\n  // that we can later replace with the up-to-date core definitions.  We also\n  // need to extract the <shardHandlerFactory> section, as, annoyingly, it's\n  // kept inside <cores/>.\n  static String buildTemplate(String originalXML) {\n\n    String shardHandlerConfig = \"\";\n    Matcher shfMatcher = SHARD_HANDLER_TAG.matcher(originalXML);\n    if (shfMatcher.find()) {\n      shardHandlerConfig = shfMatcher.group(0);\n    }\n\n    Matcher popMatcher = POPULATED_CORES_TAG.matcher(originalXML);\n    if (popMatcher.matches()) {\n      return new StringBuilder(popMatcher.group(1))\n          .append(CORES_PLACEHOLDER).append(shardHandlerConfig).append(popMatcher.group(3)).toString();\n    }\n\n    // Self-closing <cores/> tag gets expanded to <cores></cores>\n    Matcher emptyMatcher = EMPTY_CORES_TAG.matcher(originalXML);\n    if (emptyMatcher.matches())\n      return new StringBuilder(emptyMatcher.group(1))\n          .append(\">\").append(CORES_PLACEHOLDER).append(\"</cores>\")\n          .append(emptyMatcher.group(2)).toString();\n\n    // If there's no <cores> tag at all, add one at the end of the file\n    return originalXML.replace(\"</solr>\", \"<cores>\" + CORES_PLACEHOLDER + \"</cores></solr>\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildTemplate(String).mjava","pathOld":"/dev/null","sourceNew":"  // Package-private for testing\n  // We replace the existing <cores></cores> contents with a template pattern\n  // that we can later replace with the up-to-date core definitions.  We also\n  // need to extract the <shardHandlerFactory> section, as, annoyingly, it's\n  // kept inside <cores/>.\n  static String buildTemplate(String originalXML) {\n\n    String shardHandlerConfig = \"\";\n    Matcher shfMatcher = SHARD_HANDLER_TAG.matcher(originalXML);\n    if (shfMatcher.find()) {\n      shardHandlerConfig = shfMatcher.group(0);\n    }\n\n    Matcher popMatcher = POPULATED_CORES_TAG.matcher(originalXML);\n    if (popMatcher.matches()) {\n      return new StringBuilder(popMatcher.group(1))\n          .append(CORES_PLACEHOLDER).append(shardHandlerConfig).append(popMatcher.group(3)).toString();\n    }\n\n    // Self-closing <cores/> tag gets expanded to <cores></cores>\n    Matcher emptyMatcher = EMPTY_CORES_TAG.matcher(originalXML);\n    if (emptyMatcher.matches())\n      return new StringBuilder(emptyMatcher.group(1))\n          .append(\">\").append(CORES_PLACEHOLDER).append(\"</cores>\")\n          .append(emptyMatcher.group(2)).toString();\n\n    // If there's no <cores> tag at all, add one at the end of the file\n    return originalXML.replace(\"</solr>\", \"<cores>\" + CORES_PLACEHOLDER + \"</cores></solr>\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXMLCoresLocator#buildTemplate(String).mjava","sourceNew":null,"sourceOld":"  // Package-private for testing\n  // We replace the existing <cores></cores> contents with a template pattern\n  // that we can later replace with the up-to-date core definitions.  We also\n  // need to extract the <shardHandlerFactory> section, as, annoyingly, it's\n  // kept inside <cores/>.\n  static String buildTemplate(String originalXML) {\n\n    String shardHandlerConfig = \"\";\n    Matcher shfMatcher = SHARD_HANDLER_TAG.matcher(originalXML);\n    if (shfMatcher.find()) {\n      shardHandlerConfig = shfMatcher.group(0);\n    }\n\n    Matcher popMatcher = POPULATED_CORES_TAG.matcher(originalXML);\n    if (popMatcher.matches()) {\n      return new StringBuilder(popMatcher.group(1))\n          .append(CORES_PLACEHOLDER).append(shardHandlerConfig).append(popMatcher.group(3)).toString();\n    }\n\n    // Self-closing <cores/> tag gets expanded to <cores></cores>\n    Matcher emptyMatcher = EMPTY_CORES_TAG.matcher(originalXML);\n    if (emptyMatcher.matches())\n      return new StringBuilder(emptyMatcher.group(1))\n          .append(\">\").append(CORES_PLACEHOLDER).append(\"</cores>\")\n          .append(emptyMatcher.group(2)).toString();\n\n    // If there's no <cores> tag at all, add one at the end of the file\n    return originalXML.replace(\"</solr>\", \"<cores>\" + CORES_PLACEHOLDER + \"</cores></solr>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}