{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","commits":[{"id":"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b","date":1331053459,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testJSP().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testJSP() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    adminPath += \"admin/\";\n    bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    // analysis\n    bytes = IOUtils.toByteArray( new URL(adminPath+\"analysis.jsp\").openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    // schema browser\n    bytes = IOUtils.toByteArray( new URL(adminPath+\"schema.jsp\").openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    // schema browser\n    bytes = IOUtils.toByteArray( new URL(adminPath+\"threaddump.jsp\").openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"/dev/null","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://localhost:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fb2b12b2408a672ea95299757dbda27408ee84","date":1440773278,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m);\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n  }\n\n","bugFix":null,"bugIntro":["a9fc06abc0d6f2a5063a52f371c98bd3327bf849"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9fc06abc0d6f2a5063a52f371c98bd3327bf849","date":1440794580,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m);\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n\n    HttpClient client = HttpClientUtil.createClient(null);\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m);\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":["05fb2b12b2408a672ea95299757dbda27408ee84"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m);\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"070b525fb213c5643ba35e1b60f1a1d4f7b23312","date":1475678176,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext(null));\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07cebc9816f8c940e8e9683abbdc742fe95e25d7","date":1475696954,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext(null));\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d108aa89491a609eab235fa2459dc3ab78b4c838","date":1576707883,"type":3,"author":"Matthias Krueger","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make\n    // sure they compile ok\n\n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest#testAdminUI().mjava","sourceNew":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make\n    // sure they compile ok\n\n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","sourceOld":"  public void testAdminUI() throws Exception\n  {\n    // Currently not an extensive test, but it does fire up the JSP pages and make \n    // sure they compile ok\n    \n    String adminPath = \"http://127.0.0.1:\"+port+context+\"/\";\n    byte[] bytes = IOUtils.toByteArray( new URL(adminPath).openStream() );\n    assertNotNull( bytes ); // real error will be an exception\n\n    HttpClient client = HttpClients.createDefault();\n    HttpRequestBase m = new HttpGet(adminPath);\n    HttpResponse response = client.execute(m, HttpClientUtil.createNewHttpClientRequestContext());\n    assertEquals(200, response.getStatusLine().getStatusCode());\n    Header header = response.getFirstHeader(\"X-Frame-Options\");\n    assertEquals(\"DENY\", header.getValue().toUpperCase(Locale.ROOT));\n    m.releaseConnection();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9fc06abc0d6f2a5063a52f371c98bd3327bf849":["05fb2b12b2408a672ea95299757dbda27408ee84"],"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"859081acf00749f5dd462772c571d611d4a4d2db":["a9fc06abc0d6f2a5063a52f371c98bd3327bf849"],"05fb2b12b2408a672ea95299757dbda27408ee84":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d108aa89491a609eab235fa2459dc3ab78b4c838":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["07cebc9816f8c940e8e9683abbdc742fe95e25d7","d108aa89491a609eab235fa2459dc3ab78b4c838"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d108aa89491a609eab235fa2459dc3ab78b4c838"]},"commit2Childs":{"a9fc06abc0d6f2a5063a52f371c98bd3327bf849":["859081acf00749f5dd462772c571d611d4a4d2db"],"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b":["47c952a4f0f0e9b74763a0609a3726dbb217164a","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"859081acf00749f5dd462772c571d611d4a4d2db":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"05fb2b12b2408a672ea95299757dbda27408ee84":["a9fc06abc0d6f2a5063a52f371c98bd3327bf849"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["05fb2b12b2408a672ea95299757dbda27408ee84"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["d108aa89491a609eab235fa2459dc3ab78b4c838","4c66470e527299cc148ad0b3441d08dfb7cb9e03"],"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0522cfff00d3b7d3e18129f5658b6e0304b7bc4b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"d108aa89491a609eab235fa2459dc3ab78b4c838":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}