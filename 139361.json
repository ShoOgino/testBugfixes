{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#addBeans(Iterator[#],int).mjava","commits":[{"id":"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052","date":1316003309,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#addBeans(Iterator[#],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds the beans supplied by the given iterator, specifying max time before they become committed\n   * @param commitWithinMs  the time in milliseconds before a commit automatically is triggered\n   * @param beanIterator  the iterator which returns Beans\n   * @return the response from the SolrServer\n   */\n  public UpdateResponse addBeans(final Iterator<?> beanIterator, int commitWithinMs)\n          throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.setDocIterator(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return beanIterator.hasNext();\n      }\n\n      public SolrInputDocument next() {\n        Object o = beanIterator.next();\n        if (o == null) return null;\n        return getBinder().toSolrInputDocument(o);\n      }\n\n      public void remove() {\n        beanIterator.remove();\n      }\n    });\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":5,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#addBeans(Iterator[#]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CommonsHttpSolrServer#addBeans(Iterator[#],int).mjava","sourceNew":"  /**\n   * Adds the beans supplied by the given iterator.\n   * \n   * @param beanIterator\n   *          the iterator which returns Beans\n   * \n   * @return the response from the SolrServer\n   */\n  public UpdateResponse addBeans(final Iterator<?> beanIterator)\n      throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.setDocIterator(new Iterator<SolrInputDocument>() {\n      \n      public boolean hasNext() {\n        return beanIterator.hasNext();\n      }\n      \n      public SolrInputDocument next() {\n        Object o = beanIterator.next();\n        if (o == null) return null;\n        return getBinder().toSolrInputDocument(o);\n      }\n      \n      public void remove() {\n        beanIterator.remove();\n      }\n    });\n    return req.process(this);\n  }\n\n","sourceOld":"  /**\n   * Adds the beans supplied by the given iterator, specifying max time before they become committed\n   * @param commitWithinMs  the time in milliseconds before a commit automatically is triggered\n   * @param beanIterator  the iterator which returns Beans\n   * @return the response from the SolrServer\n   */\n  public UpdateResponse addBeans(final Iterator<?> beanIterator, int commitWithinMs)\n          throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.setDocIterator(new Iterator<SolrInputDocument>() {\n\n      public boolean hasNext() {\n        return beanIterator.hasNext();\n      }\n\n      public SolrInputDocument next() {\n        Object o = beanIterator.next();\n        if (o == null) return null;\n        return getBinder().toSolrInputDocument(o);\n      }\n\n      public void remove() {\n        beanIterator.remove();\n      }\n    });\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"]},"commit2Childs":{"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}