{"path":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","commits":[{"id":"45a4348f3ba3bf4ff6cbb4169fe5bf7d28288cd0","date":1383246815,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    ss = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    List<CloudJettyRunner> runners = shardToJetty.get(bucket2);\n    CloudJettyRunner leader = shardToLeaderJetty.get(bucket2);\n    CloudJettyRunner replica =  null;\n    for (CloudJettyRunner r : runners) {\n      if (r != leader) replica = r;\n    }\n\n    ss = replica.client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a094a3cf22dfb1f022ba368c1605239343aa873","date":1384012589,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","sourceNew":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    ss = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    // use a leader so we test both forwarding and non-forwarding logic\n    ss = shardToLeaderJetty.get(bucket1).client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","sourceOld":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    ss = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    List<CloudJettyRunner> runners = shardToJetty.get(bucket2);\n    CloudJettyRunner leader = shardToLeaderJetty.get(bucket2);\n    CloudJettyRunner replica =  null;\n    for (CloudJettyRunner r : runners) {\n      if (r != leader) replica = r;\n    }\n\n    ss = replica.client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","sourceNew":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    solrClient = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    // use a leader so we test both forwarding and non-forwarding logic\n    solrClient = shardToLeaderJetty.get(bucket1).client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","sourceOld":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    ss = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    // use a leader so we test both forwarding and non-forwarding logic\n    ss = shardToLeaderJetty.get(bucket1).client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f8973f28b29873ff0d7a016e562c9036ae649a9","date":1428098193,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion#doTestDocVersions().mjava","sourceNew":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    solrClient = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    // use a leader so we test both forwarding and non-forwarding logic\n    solrClient = shardToLeaderJetty.get(bucket1).client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","sourceOld":"  private void doTestDocVersions() throws Exception {\n    log.info(\"### STARTING doTestDocVersions\");\n    assertEquals(2, cloudClient.getZkStateReader().getClusterState().getCollection(DEFAULT_COLLECTION).getSlices().size());\n\n    solrClient = cloudClient;\n\n    vadd(\"b!doc1\", 10);\n    vadd(\"c!doc2\", 11);\n    vadd(\"d!doc3\", 10);\n    vadd(\"e!doc4\", 11);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 5);\n    vadd(\"c!doc2\", 10);\n    vadd(\"d!doc3\", 9);\n    vadd(\"e!doc4\", 8);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"10,11,10,11\");\n\n    vadd(\"b!doc1\", 24);\n    vadd(\"c!doc2\", 23);\n    vadd(\"d!doc3\", 22);\n    vadd(\"e!doc4\", 21);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 20);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"24,23,22,21\");\n\n    vdelete(\"b!doc1\", 30);\n\n    doRTG(\"b!doc1,c!doc2,d!doc3,e!doc4\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc123\", 100);\n    vadd(\"b!doc123\", 99);\n    doRTG(\"b!doc123\", \"100\");\n    // now add greater\n    vadd(\"b!doc123\", 101);\n    doRTG(\"b!doc123\", \"101\");\n\n\n    //\n    // now test with a non-smart client\n    //\n    // use a leader so we test both forwarding and non-forwarding logic\n    solrClient = shardToLeaderJetty.get(bucket1).client.solrClient;\n\n    vadd(\"b!doc5\", 10);\n    vadd(\"c!doc6\", 11);\n    vadd(\"d!doc7\", 10);\n    vadd(\"e!doc8\", 11);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 5);\n    vadd(\"c!doc6\", 10);\n    vadd(\"d!doc7\", 9);\n    vadd(\"e!doc8\", 8);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"10,11,10,11\");\n\n    vadd(\"b!doc5\", 24);\n    vadd(\"c!doc6\", 23);\n    vadd(\"d!doc7\", 22);\n    vadd(\"e!doc8\", 21);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 20);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"24,23,22,21\");\n\n    vdelete(\"b!doc5\", 30);\n\n    doRTG(\"b!doc5,c!doc6,d!doc7,e!doc8\", \"30,23,22,21\");\n\n    // try delete before add\n    vdelete(\"b!doc1234\", 100);\n    vadd(\"b!doc1234\", 99);\n    doRTG(\"b!doc1234\", \"100\");\n    // now add greater\n    vadd(\"b!doc1234\", 101);\n    doRTG(\"b!doc1234\", \"101\");\n\n    commit();\n\n    // check liveness for all docs\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,e!doc4,21,b!doc1234,101,c!doc6,23,d!doc7,22,e!doc8,21\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc1,30,b!doc5,30\", \"q\",\"live_b:false\");\n\n    // delete by query should just work like normal\n    doDBQ(\"id:b!doc1 OR id:e*\");\n    commit();\n\n    doQuery(\"b!doc123,101,c!doc2,23,d!doc3,22,b!doc1234,101,c!doc6,23,d!doc7,22\", \"q\",\"live_b:true\");\n    doQuery(\"b!doc5,30\", \"q\",\"live_b:false\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45a4348f3ba3bf4ff6cbb4169fe5bf7d28288cd0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["9a094a3cf22dfb1f022ba368c1605239343aa873"],"3f8973f28b29873ff0d7a016e562c9036ae649a9":["bafca15d8e408346a67f4282ad1143b88023893b"],"9a094a3cf22dfb1f022ba368c1605239343aa873":["45a4348f3ba3bf4ff6cbb4169fe5bf7d28288cd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f8973f28b29873ff0d7a016e562c9036ae649a9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45a4348f3ba3bf4ff6cbb4169fe5bf7d28288cd0"],"45a4348f3ba3bf4ff6cbb4169fe5bf7d28288cd0":["9a094a3cf22dfb1f022ba368c1605239343aa873"],"bafca15d8e408346a67f4282ad1143b88023893b":["3f8973f28b29873ff0d7a016e562c9036ae649a9"],"3f8973f28b29873ff0d7a016e562c9036ae649a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9a094a3cf22dfb1f022ba368c1605239343aa873":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}