{"path":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","commits":[{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(AtomicReader).mjava","sourceNew":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(AtomicReader).mjava","sourceNew":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#initReader(AtomicReader).mjava","sourceNew":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","sourceOld":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7704e64a78bc9f245268f5c002d1e66b6c9f309f","date":1400878491,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","sourceNew":"  private void initReader(AtomicReader reader) {\n    reader.addCoreClosedListener(purgeCore);\n  }\n\n","sourceOld":"  private void initReader(AtomicReader reader) {\n    if (reader instanceof SegmentReader) {\n      ((SegmentReader) reader).addCoreClosedListener(purgeCore);\n    } else {\n      // we have a slow reader of some sort, try to register a purge event\n      // rather than relying on gc:\n      Object key = reader.getCoreCacheKey();\n      if (key instanceof AtomicReader) {\n        ((AtomicReader)key).addReaderClosedListener(purgeReader); \n      } else {\n        // last chance\n        reader.addReaderClosedListener(purgeReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#initReader(AtomicReader).mjava","sourceNew":null,"sourceOld":"  private void initReader(AtomicReader reader) {\n    reader.addCoreClosedListener(purgeCore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7704e64a78bc9f245268f5c002d1e66b6c9f309f":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["7704e64a78bc9f245268f5c002d1e66b6c9f309f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"7704e64a78bc9f245268f5c002d1e66b6c9f309f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["7704e64a78bc9f245268f5c002d1e66b6c9f309f","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}