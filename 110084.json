{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","commits":[{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","sourceNew":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","sourceOld":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    prepareForCollection();\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c705a0d590cf911e7c942df49563ca2ea176e22","date":1526916174,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#processStats(SimpleOrderedMap[Object],Query,DocSet,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","sourceNew":"  protected void processStats(SimpleOrderedMap<Object> bucket, Query bucketQ, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    int collected = collect(docs, 0, slotNum -> { return new SlotContext(bucketQ); });\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","sourceOld":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c705a0d590cf911e7c942df49563ca2ea176e22"]},"commit2Childs":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}