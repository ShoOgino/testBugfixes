{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","sourceNew":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","sourceOld":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbe9946d3cd818d329255e4c325597ac3480503e","date":1385580921,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","sourceNew":null,"sourceOld":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#setDelimiter(char).mjava","sourceNew":null,"sourceOld":"  /**\n   * setDelimiter changes the character that the taxonomy uses in its\n   * internal storage as a delimiter between category components. Do not\n   * use this method unless you really know what you are doing.\n   * <P>\n   * If you do use this method, make sure you call it before any other\n   * methods that actually queries the taxonomy. Moreover, make sure you\n   * always pass the same delimiter for all LuceneTaxonomyWriter and\n   * LuceneTaxonomyReader objects you create.\n   */\n  public void setDelimiter(char delimiter) {\n    ensureOpen();\n    this.delimiter = delimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b89678825b68eccaf09e6ab71675fc0b0af1e099","bbe9946d3cd818d329255e4c325597ac3480503e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"bbe9946d3cd818d329255e4c325597ac3480503e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc728b07df73b197e6d940d27f9b08b63918f13","bbe9946d3cd818d329255e4c325597ac3480503e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bbe9946d3cd818d329255e4c325597ac3480503e":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}