{"path":"src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","commits":[{"id":"d5229735899537281238acb6547abec2144fc39b","date":1227210731,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","pathOld":"/dev/null","sourceNew":"    private void _scheduleCommitWithin(long commitMaxTime) \n    {\n      // Check if there is a commit already scheduled for longer then this time\n      if( pending != null && \n          pending.getDelay(TimeUnit.MILLISECONDS) >= commitMaxTime ) \n      {\n        pending.cancel(false);\n        pending = null;\n      }\n      \n      // schedule a new commit\n      if( pending == null ) {\n        pending = scheduler.schedule( this, commitMaxTime, TimeUnit.MILLISECONDS );\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1","date":1232905968,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","sourceNew":"    private void _scheduleCommitWithin(long commitMaxTime)\n    {\n      // Check if there is a commit already scheduled for longer then this time\n      if( pending != null &&\n          pending.getDelay(TimeUnit.MILLISECONDS) >= commitMaxTime )\n      {\n        pending.cancel(false);\n        pending = null;\n      }\n\n      // schedule a new commit\n      if( pending == null ) {\n        pending = scheduler.schedule( this, commitMaxTime, TimeUnit.MILLISECONDS );\n      }\n    }\n\n","sourceOld":"    private void _scheduleCommitWithin(long commitMaxTime) \n    {\n      // Check if there is a commit already scheduled for longer then this time\n      if( pending != null && \n          pending.getDelay(TimeUnit.MILLISECONDS) >= commitMaxTime ) \n      {\n        pending.cancel(false);\n        pending = null;\n      }\n      \n      // schedule a new commit\n      if( pending == null ) {\n        pending = scheduler.schedule( this, commitMaxTime, TimeUnit.MILLISECONDS );\n      }\n    }\n\n","bugFix":["d5229735899537281238acb6547abec2144fc39b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","pathOld":"src/java/org/apache/solr/update/DirectUpdateHandler2.CommitTracker#_scheduleCommitWithin(long).mjava","sourceNew":"    private void _scheduleCommitWithin(long commitMaxTime)\n    {\n      // Check if there is a commit already scheduled for longer then this time\n      if( pending != null &&\n          pending.getDelay(TimeUnit.MILLISECONDS) >= commitMaxTime )\n      {\n        pending.cancel(false);\n        pending = null;\n      }\n\n      // schedule a new commit\n      if( pending == null ) {\n        pending = scheduler.schedule( this, commitMaxTime, TimeUnit.MILLISECONDS );\n      }\n    }\n\n","sourceOld":"    private void _scheduleCommitWithin(long commitMaxTime)\n    {\n      // Check if there is a commit already scheduled for longer then this time\n      if( pending != null &&\n          pending.getDelay(TimeUnit.MILLISECONDS) >= commitMaxTime )\n      {\n        pending.cancel(false);\n        pending = null;\n      }\n\n      // schedule a new commit\n      if( pending == null ) {\n        pending = scheduler.schedule( this, commitMaxTime, TimeUnit.MILLISECONDS );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1":["d5229735899537281238acb6547abec2144fc39b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d5229735899537281238acb6547abec2144fc39b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d5229735899537281238acb6547abec2144fc39b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d5229735899537281238acb6547abec2144fc39b":["114670ecb9adf4ed6e7a80d6f0ce64fec0c91fb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}