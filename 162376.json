{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","commits":[{"id":"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7","date":1493327009,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      System.out.println(\"###### Field:\"+fieldName);\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf","date":1493604855,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      System.out.println(\"###### Field:\"+fieldName);\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12cb83a3f761dc612e1ece020f46e1886fc2550e","date":1495722768,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ColumnEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ColumnEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ColumnEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    List<Tuple> tuples = (List<Tuple>)tuple.get(name);\n    List<Number> column = new ArrayList(tuples.size());\n    for(Tuple t : tuples) {\n      Object o = t.get(fieldName);\n      if(o instanceof Number) {\n        column.add((Number)o);\n      } else {\n        throw new IOException(\"Found non-numeric in column:\"+o.toString());\n      }\n    }\n    return column;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf":["ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7"],"12cb83a3f761dc612e1ece020f46e1886fc2550e":["fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf","12cb83a3f761dc612e1ece020f46e1886fc2550e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7":["fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf"],"fa984a6a3c379ee388cc5e56bf6b6a54ec44f6bf":["12cb83a3f761dc612e1ece020f46e1886fc2550e","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"12cb83a3f761dc612e1ece020f46e1886fc2550e":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}