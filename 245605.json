{"path":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","commits":[{"id":"dd657606b6786db7b4cf5f88ce642f11168d5437","date":1411160355,"type":1,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard, String dataDir) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc2bafa00000be70227a04c29e3f885ff41e531d","date":1412182669,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrClient,Replica,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrClient client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["dd657606b6786db7b4cf5f88ce642f11168d5437","dc2bafa00000be70227a04c29e3f885ff41e531d"],"bafca15d8e408346a67f4282ad1143b88023893b":["dc2bafa00000be70227a04c29e3f885ff41e531d"],"dc2bafa00000be70227a04c29e3f885ff41e531d":["dd657606b6786db7b4cf5f88ce642f11168d5437"],"dd657606b6786db7b4cf5f88ce642f11168d5437":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd657606b6786db7b4cf5f88ce642f11168d5437"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dc2bafa00000be70227a04c29e3f885ff41e531d":["d9a47902d6207303f5ed3e7aaca62ca33433af66","bafca15d8e408346a67f4282ad1143b88023893b"],"dd657606b6786db7b4cf5f88ce642f11168d5437":["d9a47902d6207303f5ed3e7aaca62ca33433af66","dc2bafa00000be70227a04c29e3f885ff41e531d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}