{"path":"lucene/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","commits":[{"id":"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2","date":1311898374,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CoalescedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      \n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private final Iterator<Map.Entry<Query,Integer>> iter = queries.entrySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            final Map.Entry<Query,Integer> ent = iter.next();\n            return new QueryAndLimit(ent.getKey(), ent.getValue());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fa5ed548a2e7179ad03d6dfef30e19b8c06a8e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}