{"path":"src/java/org/apache/lucene/search/TopFieldCollector#TopFieldCollector(Sort,int,IndexReader[],boolean).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopFieldCollector#TopFieldCollector(Sort,int,IndexReader[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public TopFieldCollector(Sort sort, int numHits,  IndexReader[] subReaders, boolean fillFields)\n      throws IOException {\n\n    if (sort.fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    queue = new FieldValueHitQueue(sort.fields, numHits, subReaders);\n    comparators = queue.getComparators(); \n    reverseMul = queue.getReverseMul(); \n    numComparators = comparators.length;\n\n    if (numComparators == 1) {\n      comparator1 = comparators[0];\n      reverseMul1 = reverseMul[0];\n    } else {\n      comparator1 = null;\n      reverseMul1 = 0;\n    }\n    this.numHits = numHits;\n    this.fillFields = fillFields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/TopFieldCollector#TopFieldCollector(Sort,int,IndexReader[],boolean).mjava","sourceNew":null,"sourceOld":"  public TopFieldCollector(Sort sort, int numHits,  IndexReader[] subReaders, boolean fillFields)\n      throws IOException {\n\n    if (sort.fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    queue = new FieldValueHitQueue(sort.fields, numHits, subReaders);\n    comparators = queue.getComparators(); \n    reverseMul = queue.getReverseMul(); \n    numComparators = comparators.length;\n\n    if (numComparators == 1) {\n      comparator1 = comparators[0];\n      reverseMul1 = reverseMul[0];\n    } else {\n      comparator1 = null;\n      reverseMul1 = 0;\n    }\n    this.numHits = numHits;\n    this.fillFields = fillFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64714133cf5ec732e3bbceee63351bb9af0117dc"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}