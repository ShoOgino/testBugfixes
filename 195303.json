{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40aa98241c87d86a0077beb8023713d93a0becfe","date":1459784560,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel,\n    final List<GeoPoint> pointList,\n    final BitSet internalEdgeFlags,\n    final boolean returnEdgeInternal) {\n    this(planetModel, pointList, null, internalEdgeFlags, returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#GeoConvexPolygon(PlanetModel,List[GeoPoint],BitSet,boolean).mjava","sourceNew":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel,\n    final List<GeoPoint> pointList,\n    final BitSet internalEdgeFlags,\n    final boolean returnEdgeInternal) {\n    this(planetModel, pointList, null, internalEdgeFlags, returnEdgeInternal);\n  }\n\n","sourceOld":"  /**\n   * Create a convex polygon from a list of points, keeping track of which boundaries\n   * are internal.  This is used when creating a polygon as a building block for another shape.\n   *@param planetModel is the planet model.\n   *@param pointList is the set of points to create the polygon from.\n   *@param internalEdgeFlags is a bitset describing whether each edge is internal or not.\n   *@param returnEdgeInternal is true when the final return edge is an internal one.\n   */\n  public GeoConvexPolygon(final PlanetModel planetModel, final List<GeoPoint> pointList, final BitSet internalEdgeFlags,\n                          final boolean returnEdgeInternal) {\n    super(planetModel);\n    this.points = pointList;\n    this.isInternalEdges = internalEdgeFlags;\n    done(returnEdgeInternal);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":["b4e444678504caf66a8060b1d514383aa4feac0c","40aa98241c87d86a0077beb8023713d93a0becfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40aa98241c87d86a0077beb8023713d93a0becfe":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40aa98241c87d86a0077beb8023713d93a0becfe"]},"commit2Childs":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"40aa98241c87d86a0077beb8023713d93a0becfe":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e444678504caf66a8060b1d514383aa4feac0c":["09af2c9610ce53a4b25fd99344299b40318a4a1a","40aa98241c87d86a0077beb8023713d93a0becfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}