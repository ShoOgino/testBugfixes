{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10ddcde450bb525af01593bf6aa68f1f67e81b0d","date":1343104612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ResourceAsStreamResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ResourceAsStreamResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ResourceAsStreamResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e456307e9593d8518ec97cd724d8a7d3a109297b","date":1343503424,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ResourceAsStreamResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3106630d90d0d9e238f170a5cb83cd1dee5ddd72","date":1343657007,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/util/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ClasspathResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    ResourceLoader loader = new ResourceAsStreamResourceLoader(getClass());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"10ddcde450bb525af01593bf6aa68f1f67e81b0d":["3241e06e642196396b80bb293acd9c0814d079e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"e456307e9593d8518ec97cd724d8a7d3a109297b":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["e456307e9593d8518ec97cd724d8a7d3a109297b"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","10ddcde450bb525af01593bf6aa68f1f67e81b0d"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3106630d90d0d9e238f170a5cb83cd1dee5ddd72"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"10ddcde450bb525af01593bf6aa68f1f67e81b0d":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"e456307e9593d8518ec97cd724d8a7d3a109297b":["3106630d90d0d9e238f170a5cb83cd1dee5ddd72"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","e456307e9593d8518ec97cd724d8a7d3a109297b"],"3241e06e642196396b80bb293acd9c0814d079e0":["10ddcde450bb525af01593bf6aa68f1f67e81b0d"],"3106630d90d0d9e238f170a5cb83cd1dee5ddd72":["d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}