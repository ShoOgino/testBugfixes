{"path":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","commits":[{"id":"0b631a3d48258df52a36daa975d3f8deee09b75d","date":1438887563,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","pathOld":"/dev/null","sourceNew":"  private void add2Mapping(Permission permission) {\n    //this is to do optimized lookup of permissions for a given collection/path\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609b959cb2dad7c9d9b3237fa2b806629e9206d","date":1439303330,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","sourceNew":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","sourceOld":"  private void add2Mapping(Permission permission) {\n    //this is to do optimized lookup of permissions for a given collection/path\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":5,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#add2Mapping(Permission).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","sourceNew":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","sourceOld":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["c609b959cb2dad7c9d9b3237fa2b806629e9206d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c609b959cb2dad7c9d9b3237fa2b806629e9206d":["0b631a3d48258df52a36daa975d3f8deee09b75d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8076096f334b0665d0a69a63ee98ac09baad402b"],"0b631a3d48258df52a36daa975d3f8deee09b75d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b631a3d48258df52a36daa975d3f8deee09b75d"],"c609b959cb2dad7c9d9b3237fa2b806629e9206d":["8076096f334b0665d0a69a63ee98ac09baad402b"],"0b631a3d48258df52a36daa975d3f8deee09b75d":["c609b959cb2dad7c9d9b3237fa2b806629e9206d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}