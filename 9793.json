{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode).mjava","commits":[{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode).mjava","pathOld":"/dev/null","sourceNew":"  private void readRecursively(DataInput in, org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode).mjava","sourceNew":null,"sourceOld":"  private void readRecursively(DataInput in, org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode kid = new org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode('\\0', node);\n      node.relatives[org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}