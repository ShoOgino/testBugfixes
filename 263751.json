{"path":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","commits":[{"id":"89ae495191648c27a6ed94d2ace7e34b763a535c","date":1476855250,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Template\")\n            .add(\"Template.field\", \"id:${firstName}_${lastName}\")\n            .add(\"Template.field\", \"another:${lastName}_${firstName}\")\n            .add(\"Template.field\", \"missing:${lastName}_${unKnown}\")\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Template\")\n            .add(\"Template.field\", \"id:${firstName}_${lastName}\")\n            .add(\"Template.field\", \"another:${lastName}_${firstName}\")\n            .add(\"Template.field\", \"missing:${lastName}_${unKnown}\")\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed1b270b5ea6e1859f4b77233891fbb991898dba","date":1497429460,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"Template\")\n        .add(\"Template.field\", \"id:{firstName}_{lastName}\")\n        .add(\"Template.field\", \"another:{lastName}_{firstName}\")\n        .add(\"Template.field\", \"missing:{lastName}_{unKnown}\");\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        params\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n    SolrInputDocument solrDoc = new SolrInputDocument();\n    solrDoc.addField(\"id\", \"1\");\n\n   params = new ModifiableSolrParams()\n        .add(\"processor\", \"Template\")\n        .add(\"commit\", \"true\")\n        .add(\"Template.field\", \"x_s:key_{id}\");\n    params.add(\"commit\", \"true\");\n    UpdateRequest add = new UpdateRequest().add(solrDoc);\n    add.setParams(params);\n    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection(\"c\", \"conf1\", 1, 1));\n    Utils.toJSONString(result.asMap(4));\n    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), \"c\",1);\n    cluster.getSolrClient().request(add, \"c\");\n    QueryResponse rsp = cluster.getSolrClient().query(\"c\",\n        new ModifiableSolrParams().add(\"q\",\"id:1\"));\n    assertEquals( \"key_1\", rsp.getResults().get(0).getFieldValue(\"x_s\"));\n\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Template\")\n            .add(\"Template.field\", \"id:${firstName}_${lastName}\")\n            .add(\"Template.field\", \"another:${lastName}_${firstName}\")\n            .add(\"Template.field\", \"missing:${lastName}_${unKnown}\")\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"526bbf21a282a0aeaa55d4963d2646fd87ea5722","date":1497595167,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"template.field\", \"id:{firstName}_{lastName}\")\n        .add(\"template.field\", \"another:{lastName}_{firstName}\")\n        .add(\"template.field\", \"missing:{lastName}_{unKnown}\");\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        params\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n    SolrInputDocument solrDoc = new SolrInputDocument();\n    solrDoc.addField(\"id\", \"1\");\n\n   params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"commit\", \"true\")\n        .add(\"template.field\", \"x_s:key_{id}\");\n    params.add(\"commit\", \"true\");\n    UpdateRequest add = new UpdateRequest().add(solrDoc);\n    add.setParams(params);\n    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection(\"c\", \"conf1\", 1, 1));\n    Utils.toJSONString(result.asMap(4));\n    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), \"c\",1);\n    cluster.getSolrClient().request(add, \"c\");\n    QueryResponse rsp = cluster.getSolrClient().query(\"c\",\n        new ModifiableSolrParams().add(\"q\",\"id:1\"));\n    assertEquals( \"key_1\", rsp.getResults().get(0).getFieldValue(\"x_s\"));\n\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"Template\")\n        .add(\"Template.field\", \"id:{firstName}_{lastName}\")\n        .add(\"Template.field\", \"another:{lastName}_{firstName}\")\n        .add(\"Template.field\", \"missing:{lastName}_{unKnown}\");\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        params\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n    SolrInputDocument solrDoc = new SolrInputDocument();\n    solrDoc.addField(\"id\", \"1\");\n\n   params = new ModifiableSolrParams()\n        .add(\"processor\", \"Template\")\n        .add(\"commit\", \"true\")\n        .add(\"Template.field\", \"x_s:key_{id}\");\n    params.add(\"commit\", \"true\");\n    UpdateRequest add = new UpdateRequest().add(solrDoc);\n    add.setParams(params);\n    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection(\"c\", \"conf1\", 1, 1));\n    Utils.toJSONString(result.asMap(4));\n    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), \"c\",1);\n    cluster.getSolrClient().request(add, \"c\");\n    QueryResponse rsp = cluster.getSolrClient().query(\"c\",\n        new ModifiableSolrParams().add(\"q\",\"id:1\"));\n    assertEquals( \"key_1\", rsp.getResults().get(0).getFieldValue(\"x_s\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"template.field\", \"id:{firstName}_{lastName}\")\n        .add(\"template.field\", \"another:{lastName}_{firstName}\")\n        .add(\"template.field\", \"missing:{lastName}_{unKnown}\");\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        params\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n    SolrInputDocument solrDoc = new SolrInputDocument();\n    solrDoc.addField(\"id\", \"1\");\n\n   params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"commit\", \"true\")\n        .add(\"template.field\", \"x_s:key_{id}\");\n    params.add(\"commit\", \"true\");\n    UpdateRequest add = new UpdateRequest().add(solrDoc);\n    add.setParams(params);\n    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection(\"c\", \"conf1\", 1, 1));\n    Utils.toJSONString(result.asMap(4));\n    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), \"c\",1);\n    cluster.getSolrClient().request(add, \"c\");\n    QueryResponse rsp = cluster.getSolrClient().query(\"c\",\n        new ModifiableSolrParams().add(\"q\",\"id:1\"));\n    assertEquals( \"key_1\", rsp.getResults().get(0).getFieldValue(\"x_s\"));\n\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Template\")\n            .add(\"Template.field\", \"id:${firstName}_${lastName}\")\n            .add(\"Template.field\", \"another:${lastName}_${firstName}\")\n            .add(\"Template.field\", \"missing:${lastName}_${unKnown}\")\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/TemplateUpdateProcessorTest#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n\n    ModifiableSolrParams params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"template.field\", \"id:{firstName}_{lastName}\")\n        .add(\"template.field\", \"another:{lastName}_{firstName}\")\n        .add(\"template.field\", \"missing:{lastName}_{unKnown}\");\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        params\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n    SolrInputDocument solrDoc = new SolrInputDocument();\n    solrDoc.addField(\"id\", \"1\");\n\n   params = new ModifiableSolrParams()\n        .add(\"processor\", \"template\")\n        .add(\"commit\", \"true\")\n        .add(\"template.field\", \"x_s:key_{id}\");\n    params.add(\"commit\", \"true\");\n    UpdateRequest add = new UpdateRequest().add(solrDoc);\n    add.setParams(params);\n    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection(\"c\", \"conf1\", 1, 1));\n    Utils.toJSONString(result.asMap(4));\n    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), \"c\",1);\n    cluster.getSolrClient().request(add, \"c\");\n    QueryResponse rsp = cluster.getSolrClient().query(\"c\",\n        new ModifiableSolrParams().add(\"q\",\"id:1\"));\n    assertEquals( \"key_1\", rsp.getResults().get(0).getFieldValue(\"x_s\"));\n\n\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n\n    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,\n        new ModifiableSolrParams()\n            .add(\"processor\", \"Template\")\n            .add(\"Template.field\", \"id:${firstName}_${lastName}\")\n            .add(\"Template.field\", \"another:${lastName}_${firstName}\")\n            .add(\"Template.field\", \"missing:${lastName}_${unKnown}\")\n\n    ));\n    cmd.solrDoc = new SolrInputDocument();\n    cmd.solrDoc.addField(\"firstName\", \"Tom\");\n    cmd.solrDoc.addField(\"lastName\", \"Cruise\");\n\n    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);\n    assertEquals(\"Tom_Cruise\", cmd.solrDoc.getFieldValue(\"id\"));\n    assertEquals(\"Cruise_Tom\", cmd.solrDoc.getFieldValue(\"another\"));\n    assertEquals(\"Cruise_\", cmd.solrDoc.getFieldValue(\"missing\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"526bbf21a282a0aeaa55d4963d2646fd87ea5722":["ed1b270b5ea6e1859f4b77233891fbb991898dba"],"ed1b270b5ea6e1859f4b77233891fbb991898dba":["89ae495191648c27a6ed94d2ace7e34b763a535c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89ae495191648c27a6ed94d2ace7e34b763a535c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["89ae495191648c27a6ed94d2ace7e34b763a535c","526bbf21a282a0aeaa55d4963d2646fd87ea5722"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["89ae495191648c27a6ed94d2ace7e34b763a535c","526bbf21a282a0aeaa55d4963d2646fd87ea5722"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89ae495191648c27a6ed94d2ace7e34b763a535c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"526bbf21a282a0aeaa55d4963d2646fd87ea5722":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"ed1b270b5ea6e1859f4b77233891fbb991898dba":["526bbf21a282a0aeaa55d4963d2646fd87ea5722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89ae495191648c27a6ed94d2ace7e34b763a535c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["ed1b270b5ea6e1859f4b77233891fbb991898dba","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}