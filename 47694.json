{"path":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","commits":[{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    MutableBits mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d","date":1525873214,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean delete(int docID) throws IOException {\n    MutableBits mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert assertPendingDeletes();\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert assertPendingDeletes();\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#delete(int).mjava","sourceNew":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert assertPendingDeletes();\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  boolean delete(int docID) throws IOException {\n    FixedBitSet mutableBits = getMutableBits(); // we need to fetch this first it might be a shared instance with hardDeletes\n    if (hardDeletes.delete(docID)) {\n      if (mutableBits.get(docID)) { // delete it here too!\n        mutableBits.clear(docID);\n        assert hardDeletes.delete(docID) == false;\n      } else {\n        // if it was deleted subtract the delCount\n        pendingDeleteCount--;\n        assert pendingDeleteCount >= 0 : \" illegal pending delete count: \" + pendingDeleteCount;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["aef2a94da918b657d107b616a643e1759db43b6a"],"aef2a94da918b657d107b616a643e1759db43b6a":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"],"f592209545c71895260367152601e9200399776d":["aef2a94da918b657d107b616a643e1759db43b6a","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"]},"commit2Childs":{"fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d":["aef2a94da918b657d107b616a643e1759db43b6a"],"5ee0394b8176abd7c90a4be8c05465be1879db79":["fb8a3dfca2d8b39c20bdfc87eb7171c06ea9400d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aef2a94da918b657d107b616a643e1759db43b6a":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}