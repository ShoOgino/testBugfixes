{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","commits":[{"id":"5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f","date":1425902085,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"/dev/null","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection) throws SolrServerException, IOException {\n    return executeMethod(createMethod(request, collection),processor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"/dev/null","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection) throws SolrServerException, IOException {\n    return executeMethod(createMethod(request, collection),processor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e39c4a00751908441a407ce8d531a436658d9fd6","date":1442313930,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor);\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection) throws SolrServerException, IOException {\n    return executeMethod(createMethod(request, collection),processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556","date":1497937593,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb519c79b76e52145e37b6681a7012525ed5f4b","date":1544694716,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, request.getUserPrincipal(), processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, processor, isV2ApiRequest(request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    if (request.getHeaders() != null) {\n      Map<String, String> headers = request.getHeaders();\n      for (Map.Entry<String, String> entry : headers.entrySet()) {\n        method.setHeader(entry.getKey(), entry.getValue());\n      }\n    }\n    return executeMethod(method, request.getUserPrincipal(), processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    return executeMethod(method, request.getUserPrincipal(), processor, isV2ApiRequest(request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#request(SolrRequest,ResponseParser,String).mjava","sourceNew":"  public NamedList<Object> request(@SuppressWarnings({\"rawtypes\"})final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    if (request.getHeaders() != null) {\n      @SuppressWarnings({\"unchecked\"})\n      Map<String, String> headers = request.getHeaders();\n      for (Map.Entry<String, String> entry : headers.entrySet()) {\n        method.setHeader(entry.getKey(), entry.getValue());\n      }\n    }\n    return executeMethod(method, request.getUserPrincipal(), processor, isV2ApiRequest(request));\n  }\n\n","sourceOld":"  public NamedList<Object> request(final SolrRequest request, final ResponseParser processor, String collection)\n      throws SolrServerException, IOException {\n    HttpRequestBase method = createMethod(request, collection);\n    setBasicAuthHeader(request, method);\n    if (request.getHeaders() != null) {\n      Map<String, String> headers = request.getHeaders();\n      for (Map.Entry<String, String> entry : headers.entrySet()) {\n        method.setHeader(entry.getKey(), entry.getValue());\n      }\n    }\n    return executeMethod(method, request.getUserPrincipal(), processor, isV2ApiRequest(request));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f"],"e39c4a00751908441a407ce8d531a436658d9fd6":["5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556":["e39c4a00751908441a407ce8d531a436658d9fd6"],"28288370235ed02234a64753cdbf0c6ec096304a":["e39c4a00751908441a407ce8d531a436658d9fd6","2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e39c4a00751908441a407ce8d531a436658d9fd6","2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e39c4a00751908441a407ce8d531a436658d9fd6":["2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f"],"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"5c7e2b481e19bdaf52e10f5b2fd6faecc4ec952f":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e39c4a00751908441a407ce8d531a436658d9fd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}