{"path":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","commits":[{"id":"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90","date":1216996119,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"/dev/null","sourceNew":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90"],"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}