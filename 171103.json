{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"/dev/null","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"/dev/null","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"/dev/null","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":null,"sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d425927013f8263511a6bacea2a0d81715310b","date":1302519406,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    this.segment = segment;\n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    this.segment = segment;\n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    this.segment = segment;\n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    \n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":null,"sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    this.segment = segment;\n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexReader#VariableGapTermsIndexReader(Directory,FieldInfos,String,int,String).mjava","sourceNew":null,"sourceOld":"  public VariableGapTermsIndexReader(Directory dir, FieldInfos fieldInfos, String segment, int indexDivisor, String codecId)\n    throws IOException {\n\n    in = dir.openInput(IndexFileNames.segmentFileName(segment, codecId, VariableGapTermsIndexWriter.TERMS_INDEX_EXTENSION));\n    this.segment = segment;\n    boolean success = false;\n\n    try {\n      \n      readHeader(in);\n      this.indexDivisor = indexDivisor;\n\n      seekDir(in, dirOffset);\n\n      // Read directory\n      final int numFields = in.readVInt();\n\n      for(int i=0;i<numFields;i++) {\n        final int field = in.readVInt();\n        final long indexStart = in.readVLong();\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(field);\n        fields.put(fieldInfo, new FieldIndexData(fieldInfo, indexStart));\n      }\n      success = true;\n    } finally {\n      if (indexDivisor > 0) {\n        in.close();\n        in = null;\n        if (success) {\n          indexLoaded = true;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","2e8d7ba2175f47e280231533f7d3016249cea88b"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["11d425927013f8263511a6bacea2a0d81715310b","d619839baa8ce5503e496b94a9e42ad6f079293f"],"11d425927013f8263511a6bacea2a0d81715310b":["56da903869515527852ee21ea7ef7bfe414cd40d"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["56da903869515527852ee21ea7ef7bfe414cd40d","11d425927013f8263511a6bacea2a0d81715310b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"962d04139994fce5193143ef35615499a9a96d78":["868da859b43505d9d2a023bfeae6dd0c795f5295","11d425927013f8263511a6bacea2a0d81715310b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e8d7ba2175f47e280231533f7d3016249cea88b"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"70ad682703b8585f5d0a637efec044d57ec05efb":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11d425927013f8263511a6bacea2a0d81715310b":["2e8d7ba2175f47e280231533f7d3016249cea88b","a3776dccca01c11e7046323cfad46a3b4a471233","962d04139994fce5193143ef35615499a9a96d78"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","11d425927013f8263511a6bacea2a0d81715310b","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"962d04139994fce5193143ef35615499a9a96d78":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}