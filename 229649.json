{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = (int)Float.parseFloat(fuzzySlop.image.substring(1));\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = (int)Float.parseFloat(fuzzySlop.image.substring(1));\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#handleQuotedTerm(String,Token,Token).mjava","sourceNew":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = (int)Float.parseFloat(fuzzySlop.image.substring(1));\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","sourceOld":"  // extracted from the .jj grammar\n  Query handleQuotedTerm(String qfield, Token term, Token fuzzySlop) throws ParseException {\n    int s = phraseSlop;  // default\n    if (fuzzySlop != null) {\n      try {\n        s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n      }\n      catch (Exception ignored) { }\n    }\n    return getFieldQuery(qfield, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab68488225b6a6c357dda72ed11dedca9914a192":["b89678825b68eccaf09e6ab71675fc0b0af1e099","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}