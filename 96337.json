{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#BKDTreeReader(IndexInput,int).mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#BKDTreeReader(IndexInput,int).mjava","pathOld":"/dev/null","sourceNew":"  public BKDTreeReader(IndexInput in, int maxDoc) throws IOException {\n\n    // Read index:\n    int numLeaves = in.readVInt();\n    leafNodeOffset = numLeaves;\n\n    // Tree is fully balanced binary tree, so number of nodes = numLeaves-1, except our nodeIDs are 1-based (splitValues[0] is unused):\n    splitValues = new int[numLeaves];\n    for(int i=0;i<numLeaves;i++) {\n      splitValues[i] = in.readInt();\n    }\n    leafBlockFPs = new long[numLeaves];\n    for(int i=0;i<numLeaves;i++) {\n      leafBlockFPs[i] = in.readVLong();\n    }\n\n    this.maxDoc = maxDoc;\n    this.in = in;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#BKDTreeReader(IndexInput,int).mjava","sourceNew":null,"sourceOld":"  public BKDTreeReader(IndexInput in, int maxDoc) throws IOException {\n\n    // Read index:\n    int numLeaves = in.readVInt();\n    leafNodeOffset = numLeaves;\n\n    // Tree is fully balanced binary tree, so number of nodes = numLeaves-1, except our nodeIDs are 1-based (splitValues[0] is unused):\n    splitValues = new int[numLeaves];\n    for(int i=0;i<numLeaves;i++) {\n      splitValues[i] = in.readInt();\n    }\n    leafBlockFPs = new long[numLeaves];\n    for(int i=0;i<numLeaves;i++) {\n      leafBlockFPs[i] = in.readVLong();\n    }\n\n    this.maxDoc = maxDoc;\n    this.in = in;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}