{"path":"lucene/src/java/org/apache/lucene/index/values/BytesRefUtils#copyShort(BytesRef,short).mjava","commits":[{"id":"94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b","date":1322155235,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/BytesRefUtils#copyShort(BytesRef,short).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#copyShort(short).mjava","sourceNew":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the\n   * reference array if needed.\n   */\n  public static void copyShort(BytesRef ref, short value) {\n    if (ref.bytes.length < 2) {\n      ref.bytes = new byte[2];\n    }\n    ref.bytes[ref.offset] = (byte) (value >> 8);\n    ref.bytes[ref.offset + 1] = (byte) (value);\n    ref.length = 2;\n  }\n\n","sourceOld":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the reference array\n   * if needed.\n   */\n  public void copyShort(short value) {\n    if (bytes.length < 2) {\n      bytes = new byte[2];\n    }\n    bytes[offset] = (byte) (value >> 8);\n    bytes[offset + 1] = (byte) (value);\n    length = 2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/BytesRefUtils#copyShort(BytesRef,short).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/BytesRefUtils#copyShort(BytesRef,short).mjava","sourceNew":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the\n   * reference array if needed.\n   */\n  public static void copyShort(BytesRef ref, short value) {\n    if (ref.bytes.length < 2) {\n      ref.bytes = new byte[2];\n    }\n    ref.bytes[ref.offset] = (byte) (value >> 8);\n    ref.bytes[ref.offset + 1] = (byte) (value);\n    ref.length = 2;\n  }\n\n","sourceOld":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the\n   * reference array if needed.\n   */\n  public static void copyShort(BytesRef ref, short value) {\n    if (ref.bytes.length < 2) {\n      ref.bytes = new byte[2];\n    }\n    ref.bytes[ref.offset] = (byte) (value >> 8);\n    ref.bytes[ref.offset + 1] = (byte) (value);\n    ref.length = 2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/BytesRefUtils#copyShort(BytesRef,short).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/BytesRefUtils#copyShort(BytesRef,short).mjava","sourceNew":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the\n   * reference array if needed.\n   */\n  public static void copyShort(BytesRef ref, short value) {\n    if (ref.bytes.length < 2) {\n      ref.bytes = new byte[2];\n    }\n    ref.bytes[ref.offset] = (byte) (value >> 8);\n    ref.bytes[ref.offset + 1] = (byte) (value);\n    ref.length = 2;\n  }\n\n","sourceOld":"  /**\n   * Copies the given short value and encodes it as a 2 byte Big-Endian.\n   * <p>\n   * NOTE: this method resets the offset to 0, length to 2 and resizes the\n   * reference array if needed.\n   */\n  public static void copyShort(BytesRef ref, short value) {\n    if (ref.bytes.length < 2) {\n      ref.bytes = new byte[2];\n    }\n    ref.bytes[ref.offset] = (byte) (value >> 8);\n    ref.bytes[ref.offset + 1] = (byte) (value);\n    ref.length = 2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b"],"94e8fdd836dbd4f01a00be6ffbe2c2df8d74898b":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}