{"path":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#sloppySimScorer(SimWeight,AtomicReaderContext).mjava","commits":[{"id":"660345363f16c7d4c38aa11a35bf59aa99466cf1","date":1328227279,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#sloppySimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#sloppyDocScorer(Stats,String,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public SloppySimScorer sloppySimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SloppySimScorer subScorers[] = new SloppySimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiSloppyDocScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n    }\n  }\n\n","sourceOld":"  @Override\n  public SloppyDocScorer sloppyDocScorer(Stats stats, String fieldName,\n      AtomicReaderContext context) throws IOException {\n    DocValues norms = context.reader().normValues(fieldName);\n    \n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      Stats subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SloppyDocScorer subScorers[] = new SloppyDocScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        subScorers[i] = new BasicSloppyDocScorer((BasicStats)subStats[i], norms);\n      }\n      return new MultiSimilarity.MultiSloppyDocScorer(subScorers);\n    } else {\n      return new BasicSloppyDocScorer((BasicStats) stats, norms);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase#sloppySimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/SimilarityBase#sloppySimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public SloppySimScorer sloppySimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SloppySimScorer subScorers[] = new SloppySimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiSloppyDocScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n    }\n  }\n\n","sourceOld":"  @Override\n  public SloppySimScorer sloppySimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SloppySimScorer subScorers[] = new SloppySimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiSloppyDocScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicSloppyDocScorer(basicstats, context.reader().normValues(basicstats.field));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"660345363f16c7d4c38aa11a35bf59aa99466cf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["660345363f16c7d4c38aa11a35bf59aa99466cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"660345363f16c7d4c38aa11a35bf59aa99466cf1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["660345363f16c7d4c38aa11a35bf59aa99466cf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}