{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","commits":[{"id":"78e3613d9274c0d98ca67d976e415c82e9f9cf46","date":1352285414,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testUndefinedCreateTime().mjava","sourceNew":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    taxoReader.refresh();\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUndefinedCreateTime() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_CREATE_TIME\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes createTime to null.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    // we cannot commit null keys/values, this ensures that if DirTW.createTime is null, we can still commit.\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    taxoReader.refresh();\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","sourceNew":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    taxoReader.refresh();\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","sourceNew":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    taxoReader.refresh();\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","sourceNew":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).shutdown();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testBackwardsCompatibility().mjava","sourceNew":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testBackwardsCompatibility() throws Exception {\n    // tests that if the taxonomy index doesn't have the INDEX_EPOCH\n    // property (supports pre-3.6 indexes), all still works.\n    Directory dir = newDirectory();\n    \n    // create an empty index first, so that DirTaxoWriter initializes indexEpoch to 1.\n    new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null)).shutdown();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.close();\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n    assertNull(TaxonomyReader.openIfChanged(taxoReader));\n    taxoReader.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["78e3613d9274c0d98ca67d976e415c82e9f9cf46","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}