{"path":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testMultipleDocuments().mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testMultipleDocuments().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleDocuments() {\n\n    try {\n      TermVectorsWriter writer = new TermVectorsWriter(dir, seg, fieldInfos);\n      assertTrue(writer != null);\n      for (int i = 0; i < 10; i++) {\n        writeDocument(writer, testFields.length);\n      }\n      writer.close();\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }      \n    //Do some arbitrary tests\n    try {\n      TermVectorsReader reader = new TermVectorsReader(dir, seg, fieldInfos);\n      for (int i = 0; i < 10; i++) {        \n        assertTrue(reader != null);\n        checkTermVector(reader, 5, testFields[0]);\n        checkTermVector(reader, 2, testFields[2]);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1229e4509cad6bf268c0fe18199b63a72216c66b","date":1120256033,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testMultipleDocuments().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testMultipleDocuments().mjava","sourceNew":"  public void testMultipleDocuments() throws IOException {\n    TermVectorsWriter writer = new TermVectorsWriter(dir, seg, fieldInfos);\n    assertTrue(writer != null);\n    for (int i = 0; i < 10; i++) {\n      writeDocument(writer, testFields.length);\n    }\n    writer.close();\n    //Do some arbitrary tests\n    TermVectorsReader reader = new TermVectorsReader(dir, seg, fieldInfos);\n    for (int i = 0; i < 10; i++) {        \n      assertTrue(reader != null);\n      checkTermVector(reader, 5, testFields[0]);\n      checkTermVector(reader, 2, testFields[2]);\n    }\n  }\n\n","sourceOld":"  public void testMultipleDocuments() {\n\n    try {\n      TermVectorsWriter writer = new TermVectorsWriter(dir, seg, fieldInfos);\n      assertTrue(writer != null);\n      for (int i = 0; i < 10; i++) {\n        writeDocument(writer, testFields.length);\n      }\n      writer.close();\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }      \n    //Do some arbitrary tests\n    try {\n      TermVectorsReader reader = new TermVectorsReader(dir, seg, fieldInfos);\n      for (int i = 0; i < 10; i++) {        \n        assertTrue(reader != null);\n        checkTermVector(reader, 5, testFields[0]);\n        checkTermVector(reader, 2, testFields[2]);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11764865fb318bf86302eab36bdf9cd00c50c110","date":1190109214,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testMultipleDocuments().mjava","sourceNew":null,"sourceOld":"  public void testMultipleDocuments() throws IOException {\n    TermVectorsWriter writer = new TermVectorsWriter(dir, seg, fieldInfos);\n    assertTrue(writer != null);\n    for (int i = 0; i < 10; i++) {\n      writeDocument(writer, testFields.length);\n    }\n    writer.close();\n    //Do some arbitrary tests\n    TermVectorsReader reader = new TermVectorsReader(dir, seg, fieldInfos);\n    for (int i = 0; i < 10; i++) {        \n      assertTrue(reader != null);\n      checkTermVector(reader, 5, testFields[0]);\n      checkTermVector(reader, 2, testFields[2]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11764865fb318bf86302eab36bdf9cd00c50c110":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1229e4509cad6bf268c0fe18199b63a72216c66b":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11764865fb318bf86302eab36bdf9cd00c50c110"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["1229e4509cad6bf268c0fe18199b63a72216c66b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"11764865fb318bf86302eab36bdf9cd00c50c110":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1229e4509cad6bf268c0fe18199b63a72216c66b":["11764865fb318bf86302eab36bdf9cd00c50c110"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}