{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#testOperation(Shape,SpatialOperation,Shape,boolean).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#testOperation(Shape,SpatialOperation,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#testOperation(Shape,SpatialOperation,Shape,boolean).mjava","sourceNew":"  protected void testOperation(Shape indexedShape, SpatialOperation operation,\n                               Shape queryShape, boolean match) throws IOException {\n    assertTrue(\"Faulty test\",\n        operation.evaluate(indexedShape, queryShape) == match ||\n            indexedShape.equals(queryShape) &&\n              (operation == SpatialOperation.Contains || operation == SpatialOperation.IsWithin));\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","sourceOld":"  protected void testOperation(Shape indexedShape, SpatialOperation operation,\n                               Shape queryShape, boolean match) throws IOException {\n    assertTrue(\"Faulty test\",\n        operation.evaluate(indexedShape, queryShape) == match ||\n            indexedShape.equals(queryShape) &&\n              (operation == SpatialOperation.Contains || operation == SpatialOperation.IsWithin));\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#testOperation(Shape,SpatialOperation,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#testOperation(Shape,SpatialOperation,Shape,boolean).mjava","sourceNew":"  protected void testOperation(Shape indexedShape, SpatialOperation operation,\n                               Shape queryShape, boolean match) throws IOException {\n    assertTrue(\"Faulty test\",\n        operation.evaluate(indexedShape, queryShape) == match ||\n            indexedShape.equals(queryShape) &&\n              (operation == SpatialOperation.Contains || operation == SpatialOperation.IsWithin));\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","sourceOld":"  protected void testOperation(Shape indexedShape, SpatialOperation operation,\n                               Shape queryShape, boolean match) throws IOException {\n    assertTrue(\"Faulty test\",\n        operation.evaluate(indexedShape, queryShape) == match ||\n            indexedShape.equals(queryShape) &&\n              (operation == SpatialOperation.Contains || operation == SpatialOperation.IsWithin));\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}