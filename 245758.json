{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","commits":[{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new TextField(fieldName, docs[j]));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a53a291ad9b1cc050d846b68758c061a55d52734"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a53a291ad9b1cc050d846b68758c061a55d52734":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}