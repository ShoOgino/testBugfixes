{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#resolveEvaluator(String,String).mjava","commits":[{"id":"d30d20145e9c54b7890711c3307fade007068e9f","date":1354032746,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#resolveEvaluator(String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#resolveEvaluator(String).mjava","sourceNew":"  private Object resolveEvaluator(String namespace, String name) {\n    if (evaluators == null) {\n      return \"\";\n    }\n    Matcher m = EVALUATOR_FORMAT_PATTERN.matcher(name\n        .substring(namespace.length()));\n    if (m.find()) {\n      String fname = m.group(1);\n      Evaluator evaluator = evaluators.get(fname);\n      if (evaluator == null) return \"\";\n      ContextImpl ctx = new ContextImpl(null, this, null, null, null, null,\n          null);\n      String g2 = m.group(2);\n      return evaluator.evaluate(g2, ctx);\n    } else {\n      return \"\";\n    }\n  }\n\n","sourceOld":"  private Object resolveEvaluator(String name) {\n    if (evaluators == null) {\n      return \"\";\n    }\n    Matcher m = EVALUATOR_FORMAT_PATTERN.matcher(name\n        .substring(FUNCTIONS_NAMESPACE.length()));\n    if (m.find()) {\n      String fname = m.group(1);\n      Evaluator evaluator = evaluators.get(fname);\n      if (evaluator == null) return \"\";\n      ContextImpl ctx = new ContextImpl(null, this, null, null, null, null,\n          null);\n      String g2 = m.group(2);\n      return evaluator.evaluate(g2, ctx);\n    } else {\n      return \"\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#resolveEvaluator(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private Object resolveEvaluator(String namespace, String name) {\n    if (evaluators == null) {\n      return \"\";\n    }\n    Matcher m = EVALUATOR_FORMAT_PATTERN.matcher(name\n        .substring(namespace.length()));\n    if (m.find()) {\n      String fname = m.group(1);\n      Evaluator evaluator = evaluators.get(fname);\n      if (evaluator == null) return \"\";\n      ContextImpl ctx = new ContextImpl(null, this, null, null, null, null,\n          null);\n      String g2 = m.group(2);\n      return evaluator.evaluate(g2, ctx);\n    } else {\n      return \"\";\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#resolveEvaluator(String,String).mjava","sourceNew":null,"sourceOld":"  private Object resolveEvaluator(String namespace, String name) {\n    if (evaluators == null) {\n      return \"\";\n    }\n    Matcher m = EVALUATOR_FORMAT_PATTERN.matcher(name\n        .substring(namespace.length()));\n    if (m.find()) {\n      String fname = m.group(1);\n      Evaluator evaluator = evaluators.get(fname);\n      if (evaluator == null) return \"\";\n      ContextImpl ctx = new ContextImpl(null, this, null, null, null, null,\n          null);\n      String g2 = m.group(2);\n      return evaluator.evaluate(g2, ctx);\n    } else {\n      return \"\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["d30d20145e9c54b7890711c3307fade007068e9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d30d20145e9c54b7890711c3307fade007068e9f"],"d30d20145e9c54b7890711c3307fade007068e9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","d30d20145e9c54b7890711c3307fade007068e9f"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d30d20145e9c54b7890711c3307fade007068e9f":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}