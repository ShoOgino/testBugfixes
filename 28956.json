{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#flush().mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#flush().mjava","pathOld":"/dev/null","sourceNew":"  /** Ask the primary node process to flush.  We send it all currently up replicas so it can notify them about the new NRT point.  Returns the newly\n   *  flushed version, or a negative (current) version if there were no changes. */\n  public synchronized long flush() throws IOException {\n    assert isPrimary;\n    try (Connection c = new Connection(tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_FLUSH);\n      c.flush();\n      c.s.shutdownOutput();\n      return c.in.readLong();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec317d5d3de749e12abcc9e6f976d765638fe9e2","date":1454411397,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#flush(int).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/NodeProcess#flush().mjava","sourceNew":"  /** Ask the primary node process to flush.  We send it all currently up replicas so it can notify them about the new NRT point.  Returns the newly\n   *  flushed version, or a negative (current) version if there were no changes. */\n  public synchronized long flush(int atLeastMarkerCount) throws IOException {\n    assert isPrimary;\n    try (Connection c = new Connection(tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_FLUSH);\n      c.out.writeVInt(atLeastMarkerCount);\n      c.flush();\n      c.s.shutdownOutput();\n      return c.in.readLong();\n    }\n  }\n\n","sourceOld":"  /** Ask the primary node process to flush.  We send it all currently up replicas so it can notify them about the new NRT point.  Returns the newly\n   *  flushed version, or a negative (current) version if there were no changes. */\n  public synchronized long flush() throws IOException {\n    assert isPrimary;\n    try (Connection c = new Connection(tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_FLUSH);\n      c.flush();\n      c.s.shutdownOutput();\n      return c.in.readLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":["0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["ec317d5d3de749e12abcc9e6f976d765638fe9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ec317d5d3de749e12abcc9e6f976d765638fe9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}