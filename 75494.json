{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/DimensionalRoutedAlias#calculateActions(String).mjava","commits":[{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/DimensionalRoutedAlias#calculateActions(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Determine the combination of adds/deletes implied by the arrival of a document destined for the\n   * specified collection.\n   *\n   * @param targetCol the collection for which a document is destined.\n   * @return A list of actions across the DRA.\n   */\n  @Override\n  protected List<Action> calculateActions(String targetCol) {\n    String[] routeValues = SEP_MATCHER.split(targetCol);\n    // remove the alias name to avoid all manner of off by one errors...\n    routeValues = Arrays.copyOfRange(routeValues,1,routeValues.length);\n    List<List<Action>> dimActs = new ArrayList<>(routeValues.length);\n    contextualizeDimensions(routeValues);\n    for (int i = 0; i < routeValues.length; i++) {\n      String routeValue = routeValues[i];\n      RoutedAlias dim = dimensions.get(i);\n      dimActs.add(dim.calculateActions(dim.getAliasName() + getSeparatorPrefix(dim)+ routeValue) );\n    }\n    Set <Action> result = new LinkedHashSet<>();\n    StringBuilder currentSuffix = new StringBuilder();\n    for (int i = routeValues.length -1; i >=0 ; i--) { // also lowest up to match\n      String routeValue = routeValues[i];\n      RoutedAlias dim = dimensions.get(i);\n      String dimStr = dim.getRoutedAliasType().getSeparatorPrefix() + routeValue;\n      List<Action> actions = dimActs.get(i);\n      for (Iterator<Action> iterator = actions.iterator(); iterator.hasNext(); ) {\n        Action action = iterator.next();\n        iterator.remove();\n        result.add(new Action(action.sourceAlias, action.actionType, action.targetCollection + currentSuffix));\n      }\n      result.addAll(actions);\n      Set <Action> revisedResult = new LinkedHashSet<>();\n\n      for (Action action : result) {\n        if (action.sourceAlias == dim) {\n          revisedResult.add(action); // should already have the present value\n          continue;\n        }\n        // the rest are from lower dimensions and thus require a prefix.\n        revisedResult.add(new Action(action.sourceAlias, action.actionType,dimStr + action.targetCollection));\n      }\n      result = revisedResult;\n      currentSuffix.append(dimStr);\n    }\n    Set <Action> revisedResult = new LinkedHashSet<>();\n    for (Action action : result) {\n      revisedResult.add(new Action(action.sourceAlias, action.actionType,getAliasName() + action.targetCollection));\n    }\n    return new ArrayList<>(revisedResult);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}