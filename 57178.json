{"path":"src/java/org/apache/lucene/store/InputStream#clone().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#clone().mjava","pathOld":"/dev/null","sourceNew":"  public Object clone() {\n    InputStream clone = null;\n    try {\n      clone = (InputStream)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    if (buffer != null) {\n      clone.buffer = new byte[BUFFER_SIZE];\n      System.arraycopy(buffer, 0, clone.buffer, 0, bufferLength);\n    }\n\n    clone.chars = null;\n\n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"823c992e3b766654f2a25f9b125dc5e849b4775e","date":1028137634,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#clone().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#clone().mjava","sourceNew":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  public Object clone() {\n    InputStream clone = null;\n    try {\n      clone = (InputStream)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    if (buffer != null) {\n      clone.buffer = new byte[BUFFER_SIZE];\n      System.arraycopy(buffer, 0, clone.buffer, 0, bufferLength);\n    }\n\n    clone.chars = null;\n\n    return clone;\n  }\n\n","sourceOld":"  public Object clone() {\n    InputStream clone = null;\n    try {\n      clone = (InputStream)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    if (buffer != null) {\n      clone.buffer = new byte[BUFFER_SIZE];\n      System.arraycopy(buffer, 0, clone.buffer, 0, bufferLength);\n    }\n\n    clone.chars = null;\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#clone().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#clone().mjava","sourceNew":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  public Object clone() {\n    IndexInput clone = null;\n    try {\n      clone = (IndexInput)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    clone.chars = null;\n\n    return clone;\n  }\n\n","sourceOld":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  public Object clone() {\n    InputStream clone = null;\n    try {\n      clone = (InputStream)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    if (buffer != null) {\n      clone.buffer = new byte[BUFFER_SIZE];\n      System.arraycopy(buffer, 0, clone.buffer, 0, bufferLength);\n    }\n\n    clone.chars = null;\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["e971ba25509e21a130fef61f0687be0446ca27a0"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}