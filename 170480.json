{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","sourceNew":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<String,Step>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<String,Step>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","sourceNew":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<String,Step>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","sourceNew":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, StandardCharsets.UTF_8));\n      Map<String,Step> steps = new HashMap<>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/RSLPStemmerBase#parse(Class[#-extends-RSLPStemmerBase],String).mjava","sourceNew":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, StandardCharsets.UTF_8));\n      Map<String,Step> steps = new HashMap<>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Parse a resource file into an RSLP stemmer description.\n   * @return a Map containing the named Steps in this description.\n   */\n  protected static Map<String,Step> parse(Class<? extends RSLPStemmerBase> clazz, String resource) {\n    // TODO: this parser is ugly, but works. use a jflex grammar instead.\n    try {\n      InputStream is = clazz.getResourceAsStream(resource);\n      LineNumberReader r = new LineNumberReader(new InputStreamReader(is, \"UTF-8\"));\n      Map<String,Step> steps = new HashMap<>();\n      String step;\n      while ((step = readLine(r)) != null) {\n        Step s = parseStep(r, step);\n        steps.put(s.name, s);\n      }\n      r.close();\n      return steps;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","7d89d7e4e5101347833eea558851bf4209218619"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}