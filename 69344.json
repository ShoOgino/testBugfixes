{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testExactPointQuery() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34d6426cef006e0c3625cabe7a7ec1c2b08bc501","date":1454683374,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86cab68ee900a31d093b114182b488ea8e85c59d","date":1456171815,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","34d6426cef006e0c3625cabe7a7ec1c2b08bc501"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","b470f36a9372c97283360b1304eacbde22df6c0d"],"419a8f52c6635419beb951255cacbbb281044c57":["5a207d19eac354d649c3f0e2cce070017c78125e","86cab68ee900a31d093b114182b488ea8e85c59d"],"86cab68ee900a31d093b114182b488ea8e85c59d":["5a207d19eac354d649c3f0e2cce070017c78125e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["419a8f52c6635419beb951255cacbbb281044c57"]},"commit2Childs":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["34d6426cef006e0c3625cabe7a7ec1c2b08bc501","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["419a8f52c6635419beb951255cacbbb281044c57","86cab68ee900a31d093b114182b488ea8e85c59d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"419a8f52c6635419beb951255cacbbb281044c57":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86cab68ee900a31d093b114182b488ea8e85c59d":["419a8f52c6635419beb951255cacbbb281044c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}