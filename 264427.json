{"path":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(commandName);\n    sb.append(':');\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf4e1373c1497f3587ee815b1bddda10850a0f37","date":1375195916,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    Joiner joiner = Joiner.on(\",\");\n    Iterable<String> directories = Iterables.transform(readers, new Function<DirectoryReader, String>() {\n      public String apply(DirectoryReader reader) {\n        return reader.directory().toString();\n      }\n    });\n    joiner.skipNulls().join(sb, directories);\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","bugFix":["0a3f35d651410616f5a600589b0096c31f88f9a6","61da3ca2ecb2710b1cc3080ea9d08114b9365cca"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    Joiner joiner = Joiner.on(\",\");\n    Iterable<String> directories = Iterables.transform(readers, new Function<DirectoryReader, String>() {\n      public String apply(DirectoryReader reader) {\n        return reader.directory().toString();\n      }\n    });\n    joiner.skipNulls().join(sb, directories);\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    if (readers != null && readers.length > 0) {\n      sb.append(readers[0].directory());\n      for (int i = 1; i < readers.length; i++) {\n        sb.append(\",\").append(readers[i].directory());\n      }\n    }\n    sb.append('}');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","date":1477689538,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    sb.append(readers.stream().map(reader-> reader.directory().toString()).collect(Collectors.joining(\",\")));\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    Joiner joiner = Joiner.on(\",\");\n    Iterable<String> directories = Iterables.transform(readers, new Function<DirectoryReader, String>() {\n      public String apply(DirectoryReader reader) {\n        return reader.directory().toString();\n      }\n    });\n    joiner.skipNulls().join(sb, directories);\n    sb.append('}');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/MergeIndexesCommand#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    sb.append(readers.stream().map(reader-> reader.directory().toString()).collect(Collectors.joining(\",\")));\n    sb.append('}');\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(super.toString());\n    Joiner joiner = Joiner.on(\",\");\n    Iterable<String> directories = Iterables.transform(readers, new Function<DirectoryReader, String>() {\n      public String apply(DirectoryReader reader) {\n        return reader.directory().toString();\n      }\n    });\n    joiner.skipNulls().join(sb, directories);\n    sb.append('}');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","cf4e1373c1497f3587ee815b1bddda10850a0f37"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf4e1373c1497f3587ee815b1bddda10850a0f37":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["cf4e1373c1497f3587ee815b1bddda10850a0f37"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"320888923ec13b91f53082558f01f4c9960dd226":["cf4e1373c1497f3587ee815b1bddda10850a0f37","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"cf4e1373c1497f3587ee815b1bddda10850a0f37":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","320888923ec13b91f53082558f01f4c9960dd226"],"c26f00b574427b55127e869b935845554afde1fa":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0d22ac6a4146774c1bc8400160fc0b6150294e92","cf4e1373c1497f3587ee815b1bddda10850a0f37","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"320888923ec13b91f53082558f01f4c9960dd226":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a258fbb26824fd104ed795e5d9033d2d040049ee","320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}