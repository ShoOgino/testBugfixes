{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","commits":[{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms, float[] lengthCache) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = lengthCache[norm & 0xff];\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms, float[] lengthCache) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = lengthCache[norm & 0xff];\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","sourceNew":null,"sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms, float[] lengthCache) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = lengthCache[norm & 0xff];\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","615370d2b876c3435773b5174df2e2242ad7981a"],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}