{"path":"lucene/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testEquality1().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testEquality1().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testEquality1().mjava","sourceNew":"  public void testEquality1() {\n    SpanQuery q1 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q2 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q3 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"XXXXX\");\n    SpanQuery q4 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"XXXXX\")) , \"first\");\n    SpanQuery q5 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"xXXX\", \"sally\")) , \"first\");\n    QueryUtils.checkEqual(q1, q2);\n    QueryUtils.checkUnequal(q1, q3);\n    QueryUtils.checkUnequal(q1, q4);\n    QueryUtils.checkUnequal(q1, q5);\n    \n    SpanQuery qA = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    qA.setBoost(9f);\n    SpanQuery qB = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    QueryUtils.checkUnequal(qA, qB);\n    qB.setBoost(9f);\n    QueryUtils.checkEqual(qA, qB);\n    \n  }\n\n","sourceOld":"  public void testEquality1() {\n    SpanQuery q1 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q2 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q3 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"XXXXX\");\n    SpanQuery q4 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"XXXXX\")) , \"first\");\n    SpanQuery q5 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"xXXX\", \"sally\")) , \"first\");\n    QueryUtils.checkEqual(q1, q2);\n    QueryUtils.checkUnequal(q1, q3);\n    QueryUtils.checkUnequal(q1, q4);\n    QueryUtils.checkUnequal(q1, q5);\n    \n    SpanQuery qA = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    qA.setBoost(9f);\n    SpanQuery qB = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    QueryUtils.checkUnequal(qA, qB);\n    qB.setBoost(9f);\n    QueryUtils.checkEqual(qA, qB);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testEquality1().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testEquality1().mjava","sourceNew":"  public void testEquality1() {\n    SpanQuery q1 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q2 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q3 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"XXXXX\");\n    SpanQuery q4 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"XXXXX\")) , \"first\");\n    SpanQuery q5 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"xXXX\", \"sally\")) , \"first\");\n    QueryUtils.checkEqual(q1, q2);\n    QueryUtils.checkUnequal(q1, q3);\n    QueryUtils.checkUnequal(q1, q4);\n    QueryUtils.checkUnequal(q1, q5);\n    \n    SpanQuery qA = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    qA.setBoost(9f);\n    SpanQuery qB = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    QueryUtils.checkUnequal(qA, qB);\n    qB.setBoost(9f);\n    QueryUtils.checkEqual(qA, qB);\n    \n  }\n\n","sourceOld":"  public void testEquality1() {\n    SpanQuery q1 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q2 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    SpanQuery q3 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"XXXXX\");\n    SpanQuery q4 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"XXXXX\")) , \"first\");\n    SpanQuery q5 = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"xXXX\", \"sally\")) , \"first\");\n    QueryUtils.checkEqual(q1, q2);\n    QueryUtils.checkUnequal(q1, q3);\n    QueryUtils.checkUnequal(q1, q4);\n    QueryUtils.checkUnequal(q1, q5);\n    \n    SpanQuery qA = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    qA.setBoost(9f);\n    SpanQuery qB = new FieldMaskingSpanQuery\n      (new SpanTermQuery(new Term(\"last\", \"sally\")) , \"first\");\n    QueryUtils.checkUnequal(qA, qB);\n    qB.setBoost(9f);\n    QueryUtils.checkEqual(qA, qB);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}