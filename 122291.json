{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d68b012e2c254aa7a4e9c125b76daf501111c8ae","date":1358889889,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n      valid = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n      valid = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20db107ec17c4b65835b6f0caf527fcc325e1c5e","date":1363894370,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n      valid = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = DocValues.getSorted(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d","date":1399983810,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    this(vs, open(context, field));\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = DocValues.getSorted(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    this(vs, open(context, field));\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    this(vs, open(context, field));\n  }\n\n","sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    try {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), field);\n    } catch (RuntimeException e) {\n      throw new DocTermsIndexException(field, e);\n    }\n    this.vs = vs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues#DocTermsIndexDocValues(ValueSource,AtomicReaderContext,String).mjava","sourceNew":null,"sourceOld":"  public DocTermsIndexDocValues(ValueSource vs, AtomicReaderContext context, String field) throws IOException {\n    this(vs, open(context, field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["20db107ec17c4b65835b6f0caf527fcc325e1c5e"],"56572ec06f1407c066d6b7399413178b33176cd8":["19275ba31e621f6da1b83bf13af75233876fd3d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"20db107ec17c4b65835b6f0caf527fcc325e1c5e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d68b012e2c254aa7a4e9c125b76daf501111c8ae"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["19275ba31e621f6da1b83bf13af75233876fd3d4","278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["20db107ec17c4b65835b6f0caf527fcc325e1c5e"],"d68b012e2c254aa7a4e9c125b76daf501111c8ae":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20db107ec17c4b65835b6f0caf527fcc325e1c5e":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d4d69c535930b5cce125cff868d40f6373dc27d4","d68b012e2c254aa7a4e9c125b76daf501111c8ae"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["20db107ec17c4b65835b6f0caf527fcc325e1c5e"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d68b012e2c254aa7a4e9c125b76daf501111c8ae":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}