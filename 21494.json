{"path":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","commits":[{"id":"7c4ae300fc0d2aff199cc445aa3acbe1d4629d15","date":1347889619,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs);\n    } else {\n      processIds(rb, rc.docs);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d29f8f13574628ca144c13cf3b321011c3857b59","date":1347987871,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    IndexSchema schema = rb.req.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    SolrIndexSearcher searcher = rb.req.getSearcher();    \n    \n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs, schema, searcher);\n    } else {\n      processIds(rb, rc.docs, schema, searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs);\n    } else {\n      processIds(rb, rc.docs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    SolrIndexSearcher searcher = rb.req.getSearcher();\n    IndexSchema schema = searcher.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    \n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs, schema, searcher);\n    } else {\n      processIds(rb, rc.docs, schema, searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    IndexSchema schema = rb.req.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    SolrIndexSearcher searcher = rb.req.getSearcher();    \n    \n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs, schema, searcher);\n    } else {\n      processIds(rb, rc.docs, schema, searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    SolrIndexSearcher searcher = rb.req.getSearcher();\n    IndexSchema schema = searcher.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n\n    DocList docs = rc.getDocList();\n    if (docs.hasScores()) {\n      processScores(rb, docs, schema, searcher);\n    } else {\n      processIds(rb, docs, schema, searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    SolrIndexSearcher searcher = rb.req.getSearcher();\n    IndexSchema schema = searcher.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n    \n    if (rc.docs.hasScores()) {\n      processScores(rb, rc.docs, schema, searcher);\n    } else {\n      processIds(rb, rc.docs, schema, searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd75942508378ccc92c3a26f71db6cba9f25784","date":1450708761,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseLogComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    SolrIndexSearcher searcher = rb.req.getSearcher();\n    IndexSchema schema = searcher.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getResponse();\n\n    DocList docs = rc.getDocList();\n    if (docs.hasScores()) {\n      processScores(rb, docs, schema, searcher);\n    } else {\n      processIds(rb, docs, schema, searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrParams params = rb.req.getParams();\n    if (!params.getBool(COMPONENT_NAME, false)) return;\n    \n    SolrIndexSearcher searcher = rb.req.getSearcher();\n    IndexSchema schema = searcher.getSchema();\n    if (schema.getUniqueKeyField() == null) return;\n\n    ResultContext rc = (ResultContext) rb.rsp.getValues().get(\"response\");\n\n    DocList docs = rc.getDocList();\n    if (docs.hasScores()) {\n      processScores(rb, docs, schema, searcher);\n    } else {\n      processIds(rb, docs, schema, searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d29f8f13574628ca144c13cf3b321011c3857b59":["7c4ae300fc0d2aff199cc445aa3acbe1d4629d15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c4ae300fc0d2aff199cc445aa3acbe1d4629d15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["08970e5b8411182a29412c177eff67ec1110095b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"08970e5b8411182a29412c177eff67ec1110095b":["d29f8f13574628ca144c13cf3b321011c3857b59"]},"commit2Childs":{"d29f8f13574628ca144c13cf3b321011c3857b59":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c4ae300fc0d2aff199cc445aa3acbe1d4629d15"],"7c4ae300fc0d2aff199cc445aa3acbe1d4629d15":["d29f8f13574628ca144c13cf3b321011c3857b59"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"08970e5b8411182a29412c177eff67ec1110095b":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}