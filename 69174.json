{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInputStream,TSTNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInputStream,TSTNode).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInputStream,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInputStream in, TSTNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInputStream in, TSTNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":5,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInput,TSTNode).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#readRecursively(DataInputStream,TSTNode).mjava","sourceNew":"  private void readRecursively(DataInput in, TSTNode node) throws IOException {\n    node.splitchar = in.readString().charAt(0);\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","sourceOld":"  private void readRecursively(DataInputStream in, TSTNode node) throws IOException {\n    node.splitchar = in.readChar();\n    byte mask = in.readByte();\n    if ((mask & HAS_VALUE) != 0) {\n      node.data = Long.valueOf(in.readLong());\n    }\n    if ((mask & LO_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.LOKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & EQ_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.EQKID] = kid;\n      readRecursively(in, kid);\n    }\n    if ((mask & HI_KID) != 0) {\n      TSTNode kid = trie.new TSTNode('\\0', node);\n      node.relatives[TSTNode.HIKID] = kid;\n      readRecursively(in, kid);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a645276cbaf5dc96a42fd473b9019bde352996c8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}