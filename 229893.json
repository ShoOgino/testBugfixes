{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","commits":[{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery.Builder bq = new BooleanQuery.Builder();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq.build(), doc, maxTopN);\n    }\n  }\n\n","sourceOld":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery bq = new BooleanQuery();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"381618eac2691bb34ab9a3fca76ad55c6274517e","date":1495564791,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","sourceNew":null,"sourceOld":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery.Builder bq = new BooleanQuery.Builder();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq.build(), doc, maxTopN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestPostingsHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","sourceNew":null,"sourceOld":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char)ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      BooleanQuery.Builder bq = new BooleanQuery.Builder();\n      bq.add(new TermQuery(term), BooleanClause.Occur.SHOULD);\n      Term nextTerm = new Term(\"body\", \"\" + (char)(ch+1));\n      bq.add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD);\n      checkQuery(is, bq.build(), doc, maxTopN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","381618eac2691bb34ab9a3fca76ad55c6274517e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["381618eac2691bb34ab9a3fca76ad55c6274517e"]},"commit2Childs":{"381618eac2691bb34ab9a3fca76ad55c6274517e":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["381618eac2691bb34ab9a3fca76ad55c6274517e","e9017cf144952056066919f1ebc7897ff9bd71b1"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}