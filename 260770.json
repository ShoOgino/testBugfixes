{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","pathOld":"/dev/null","sourceNew":"  public void remove(String trackingId) throws KeeperException, InterruptedException {\n    zookeeper.delete(dir + \"/\" + prefix + trackingId, -1, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0b734049423191fc1079a874b216c07ad0722a0","date":1454966146,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","sourceNew":"  /**\n   * return true if the znode was successfully deleted\n   *        false if the node didn't exist and therefore not deleted\n   *        exception an exception occurred while deleting\n   */\n  public boolean remove(String trackingId) throws KeeperException, InterruptedException {\n    try {\n      zookeeper.delete(dir + \"/\" + prefix + trackingId, -1, true);\n    } catch (KeeperException.NoNodeException e) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  public void remove(String trackingId) throws KeeperException, InterruptedException {\n    zookeeper.delete(dir + \"/\" + prefix + trackingId, -1, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5de502b5478255493125e7e801411ba17a6682ec","date":1490974101,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","sourceNew":"  /**\n   * return true if the znode was successfully deleted\n   *        false if the node didn't exist and therefore not deleted\n   *        exception an exception occurred while deleting\n   */\n  public boolean remove(String trackingId) throws KeeperException, InterruptedException {\n    try {\n      zookeeper.delete(dir + \"/\" + PREFIX + trackingId, -1, true);\n    } catch (KeeperException.NoNodeException e) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * return true if the znode was successfully deleted\n   *        false if the node didn't exist and therefore not deleted\n   *        exception an exception occurred while deleting\n   */\n  public boolean remove(String trackingId) throws KeeperException, InterruptedException {\n    try {\n      zookeeper.delete(dir + \"/\" + prefix + trackingId, -1, true);\n    } catch (KeeperException.NoNodeException e) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f20fd35e3055a0c5b387df0b986a68d65d86441","date":1491045405,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#remove(String).mjava","sourceNew":"  /**\n   * return true if the znode was successfully deleted\n   *        false if the node didn't exist and therefore not deleted\n   *        exception an exception occurred while deleting\n   */\n  public boolean remove(String trackingId) throws KeeperException, InterruptedException {\n    try {\n      zookeeper.delete(dir + \"/\" + PREFIX + trackingId, -1, true);\n    } catch (KeeperException.NoNodeException e) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * return true if the znode was successfully deleted\n   *        false if the node didn't exist and therefore not deleted\n   *        exception an exception occurred while deleting\n   */\n  public boolean remove(String trackingId) throws KeeperException, InterruptedException {\n    try {\n      zookeeper.delete(dir + \"/\" + prefix + trackingId, -1, true);\n    } catch (KeeperException.NoNodeException e) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5de502b5478255493125e7e801411ba17a6682ec":["e0b734049423191fc1079a874b216c07ad0722a0"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":["e0b734049423191fc1079a874b216c07ad0722a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0b734049423191fc1079a874b216c07ad0722a0":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5de502b5478255493125e7e801411ba17a6682ec"]},"commit2Childs":{"5de502b5478255493125e7e801411ba17a6682ec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"e0b734049423191fc1079a874b216c07ad0722a0":["5de502b5478255493125e7e801411ba17a6682ec","6f20fd35e3055a0c5b387df0b986a68d65d86441"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["e0b734049423191fc1079a874b216c07ad0722a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6f20fd35e3055a0c5b387df0b986a68d65d86441","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}