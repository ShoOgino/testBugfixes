{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/server/TestGDataRequest#testCategoryQuery().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/server/TestGDataRequest#testCategoryQuery().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/TestGDataRequest#testCategoryQuery().mjava","sourceNew":"    public void testCategoryQuery() throws GDataRequestException{\n        String host = \"www.apache.org\"; \n        String feedAndEntryID = \"/feed\"; \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNotNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset();\n        this.feedRequest = new GDataRequest(this.request,GDataRequestType.GET); \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset(); \n    }\n\n","sourceOld":"    public void testCategoryQuery() throws GDataRequestException{\n        String host = \"www.apache.org\"; \n        String feedAndEntryID = \"/feed\"; \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNotNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset();\n        this.feedRequest = new GDataRequest(this.request,GDataRequestType.GET); \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset(); \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/server/TestGDataRequest#testCategoryQuery().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/server/TestGDataRequest#testCategoryQuery().mjava","sourceNew":"    public void testCategoryQuery() throws GDataRequestException{\n        String host = \"www.apache.org\"; \n        String feedAndEntryID = \"/feed\"; \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNotNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset();\n        this.feedRequest = new GDataRequest(this.request,GDataRequestType.GET); \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset(); \n    }\n\n","sourceOld":"    public void testCategoryQuery() throws GDataRequestException{\n        String host = \"www.apache.org\"; \n        String feedAndEntryID = \"/feed\"; \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/-/test\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNotNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset();\n        this.feedRequest = new GDataRequest(this.request,GDataRequestType.GET); \n        this.control.expectAndDefaultReturn(this.request.getParameterMap(),this.parametermap);\n        this.control.expectAndDefaultReturn(this.request.getHeader(\"Host\"),host); \n        this.control.expectAndDefaultReturn(this.request.getRequestURI(),\"/host\"+\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n        this.control.expectAndDefaultReturn(this.request.getPathInfo(),\"/\"+ProvidedServiceStub.SERVICE_NAME+\"/feed/\"); \n         \n        this.control.expectAndDefaultReturn(this.request.getParameter(\"alt\"), \n                null); \n        this.control.expectAndDefaultReturn(this.request.getQueryString(), \n                null); \n        this.control.replay(); \n        this.feedRequest.initializeRequest(); \n         \n     \n        assertTrue(this.feedRequest.isFeedRequested()); \n        assertFalse(this.feedRequest.isEntryRequested()); \n        assertNull(this.feedRequest.getTranslatedQuery());\n        this.control.verify();\n        this.control.reset(); \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}