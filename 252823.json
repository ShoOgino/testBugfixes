{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#deleteFeed(String).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#deleteFeed(String).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#deleteFeed(String).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#deleteFeed(java.lang.String)\n     */\n    public void deleteFeed(String feedId) throws StorageException {\n        if (feedId == null)\n            throw new StorageException(\"can not delete feed id is null \");\n        ReferenceCounter<StorageQuery> query = null;\n        try {\n            query = this.controller.getStorageQuery();\n            if (!query.get().isFeedStored(feedId))\n                throw new StorageException(\"Account does not exist\");\n            StorageModifier modifier = this.controller.getStorageModifier();\n\n            modifier.deleteFeed(feedId);\n\n        } catch (Exception e) {\n            LOG.error(\"Can't delete feed -- \" + e.getMessage(), e);\n            StorageException ex = new StorageException(\"Can't create feed -- \"\n                    + e.getMessage(), e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n\n        } finally {\n            if (query != null)\n                query.decrementRef();\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#deleteFeed(java.lang.String)\n     */\n    public void deleteFeed(String feedId) throws StorageException {\n        if (feedId == null)\n            throw new StorageException(\"can not delete feed id is null \");\n        ReferenceCounter<StorageQuery> query = null;\n        try {\n            query = this.controller.getStorageQuery();\n            if (!query.get().isFeedStored(feedId))\n                throw new StorageException(\"Account does not exist\");\n            StorageModifier modifier = this.controller.getStorageModifier();\n\n            modifier.deleteFeed(feedId);\n\n        } catch (Exception e) {\n            LOG.error(\"Can't delete feed -- \" + e.getMessage(), e);\n            StorageException ex = new StorageException(\"Can't create feed -- \"\n                    + e.getMessage(), e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n\n        } finally {\n            if (query != null)\n                query.decrementRef();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#deleteFeed(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#deleteFeed(java.lang.String)\n     */\n    public void deleteFeed(String feedId) throws StorageException {\n        if (feedId == null)\n            throw new StorageException(\"can not delete feed id is null \");\n        ReferenceCounter<StorageQuery> query = null;\n        try {\n            query = this.controller.getStorageQuery();\n            if (!query.get().isFeedStored(feedId))\n                throw new StorageException(\"Account does not exist\");\n            StorageModifier modifier = this.controller.getStorageModifier();\n\n            modifier.deleteFeed(feedId);\n\n        } catch (Exception e) {\n            LOG.error(\"Can't delete feed -- \" + e.getMessage(), e);\n            StorageException ex = new StorageException(\"Can't create feed -- \"\n                    + e.getMessage(), e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n\n        } finally {\n            if (query != null)\n                query.decrementRef();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}