{"path":"src/java/org/apache/lucene/search/RangeFilter#equals(Object).mjava","commits":[{"id":"6e2b6f149337b50b690941f5f18371fcc423b5cc","date":1130360735,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/RangeFilter#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    /** Returns true if <code>o</code> is equal to this. */\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof RangeFilter)) return false;\n        RangeFilter other = (RangeFilter) o;\n\n        if (!this.fieldName.equals(other.fieldName)\n            || this.includeLower != other.includeLower\n            || this.includeUpper != other.includeUpper\n           ) { return false; }\n        if (this.lowerTerm != null ? !this.lowerTerm.equals(other.lowerTerm) : other.lowerTerm != null) return false;\n        if (this.upperTerm != null ? !this.upperTerm.equals(other.upperTerm) : other.upperTerm != null) return false;\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b33dc4652df2747e38f9782fde82bd426b77c538","date":1221599001,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/RangeFilter#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/RangeFilter#equals(Object).mjava","sourceNew":"    /** Returns true if <code>o</code> is equal to this. */\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof RangeFilter)) return false;\n        RangeFilter other = (RangeFilter) o;\n\n        if (!this.fieldName.equals(other.fieldName)\n            || this.includeLower != other.includeLower\n            || this.includeUpper != other.includeUpper\n            || (this.collator != null && ! this.collator.equals(other.collator))\n           ) { return false; }\n        if (this.lowerTerm != null ? !this.lowerTerm.equals(other.lowerTerm) : other.lowerTerm != null) return false;\n        if (this.upperTerm != null ? !this.upperTerm.equals(other.upperTerm) : other.upperTerm != null) return false;\n        return true;\n    }\n\n","sourceOld":"    /** Returns true if <code>o</code> is equal to this. */\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof RangeFilter)) return false;\n        RangeFilter other = (RangeFilter) o;\n\n        if (!this.fieldName.equals(other.fieldName)\n            || this.includeLower != other.includeLower\n            || this.includeUpper != other.includeUpper\n           ) { return false; }\n        if (this.lowerTerm != null ? !this.lowerTerm.equals(other.lowerTerm) : other.lowerTerm != null) return false;\n        if (this.upperTerm != null ? !this.upperTerm.equals(other.upperTerm) : other.upperTerm != null) return false;\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aa365c0765407d280cd5df0569b430c6f36832e","date":1239881843,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/RangeFilter#equals(Object).mjava","sourceNew":null,"sourceOld":"    /** Returns true if <code>o</code> is equal to this. */\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof RangeFilter)) return false;\n        RangeFilter other = (RangeFilter) o;\n\n        if (!this.fieldName.equals(other.fieldName)\n            || this.includeLower != other.includeLower\n            || this.includeUpper != other.includeUpper\n            || (this.collator != null && ! this.collator.equals(other.collator))\n           ) { return false; }\n        if (this.lowerTerm != null ? !this.lowerTerm.equals(other.lowerTerm) : other.lowerTerm != null) return false;\n        if (this.upperTerm != null ? !this.upperTerm.equals(other.upperTerm) : other.upperTerm != null) return false;\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b33dc4652df2747e38f9782fde82bd426b77c538":["6e2b6f149337b50b690941f5f18371fcc423b5cc"],"6e2b6f149337b50b690941f5f18371fcc423b5cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2aa365c0765407d280cd5df0569b430c6f36832e":["b33dc4652df2747e38f9782fde82bd426b77c538"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2aa365c0765407d280cd5df0569b430c6f36832e"]},"commit2Childs":{"b33dc4652df2747e38f9782fde82bd426b77c538":["2aa365c0765407d280cd5df0569b430c6f36832e"],"6e2b6f149337b50b690941f5f18371fcc423b5cc":["b33dc4652df2747e38f9782fde82bd426b77c538"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2b6f149337b50b690941f5f18371fcc423b5cc"],"2aa365c0765407d280cd5df0569b430c6f36832e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}