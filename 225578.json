{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testUniqueTermCount().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testUniqueTermCount().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testUniqueTermCount().mjava","sourceNew":"  // LUCENE-1586: getUniqueTermCount\n  public void testUniqueTermCount() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c d e f g h i j k l m n o p q r s t u v w x y z\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"number\", \"0 1 2 3 4 5 6 7 8 9\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    AtomicReader r1 = getOnlySegmentReader(r);\n    assertEquals(36, r1.getUniqueTermCount());\n    writer.addDocument(doc);\n    writer.commit();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    r.close();\n\n    IndexReader[] subs = r2.getSequentialSubReaders();\n    for(int i=0;i<subs.length;i++) {\n      assertEquals(36, ((AtomicReader) subs[i]).getUniqueTermCount());\n    }\n    r2.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1586: getUniqueTermCount\n  public void testUniqueTermCount() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c d e f g h i j k l m n o p q r s t u v w x y z\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"number\", \"0 1 2 3 4 5 6 7 8 9\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    AtomicReader r1 = getOnlySegmentReader(r);\n    assertEquals(36, r1.getUniqueTermCount());\n    writer.addDocument(doc);\n    writer.commit();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    r.close();\n\n    IndexReader[] subs = r2.getSequentialSubReaders();\n    for(int i=0;i<subs.length;i++) {\n      assertEquals(36, ((AtomicReader) subs[i]).getUniqueTermCount());\n    }\n    r2.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#testUniqueTermCount().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testUniqueTermCount().mjava","sourceNew":"  // LUCENE-1586: getUniqueTermCount\n  public void testUniqueTermCount() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c d e f g h i j k l m n o p q r s t u v w x y z\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"number\", \"0 1 2 3 4 5 6 7 8 9\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n  \n    DirectoryReader r = DirectoryReader.open(dir);\n    AtomicReader r1 = getOnlySegmentReader(r);\n    assertEquals(36, r1.getUniqueTermCount());\n    writer.addDocument(doc);\n    writer.commit();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    r.close();\n  \n    IndexReader[] subs = r2.getSequentialSubReaders();\n    for(int i=0;i<subs.length;i++) {\n      assertEquals(36, ((AtomicReader) subs[i]).getUniqueTermCount());\n    }\n    r2.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1586: getUniqueTermCount\n  public void testUniqueTermCount() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c d e f g h i j k l m n o p q r s t u v w x y z\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"number\", \"0 1 2 3 4 5 6 7 8 9\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n\n    DirectoryReader r = DirectoryReader.open(dir);\n    AtomicReader r1 = getOnlySegmentReader(r);\n    assertEquals(36, r1.getUniqueTermCount());\n    writer.addDocument(doc);\n    writer.commit();\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    r.close();\n\n    IndexReader[] subs = r2.getSequentialSubReaders();\n    for(int i=0;i<subs.length;i++) {\n      assertEquals(36, ((AtomicReader) subs[i]).getUniqueTermCount());\n    }\n    r2.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"]},"commit2Childs":{"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}