{"path":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#doOpenIfChanged(IndexWriter,boolean).mjava","commits":[{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#doOpenIfChanged(IndexWriter,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#doOpenIfChanged(IndexWriter,boolean).mjava","sourceNew":"  /**\n   * If the index has changed since it was opened, open and return a new reader;\n   * else, return {@code null}.\n   * \n   * @see #openIfChanged(IndexReader, IndexWriter, boolean)\n   */\n  protected CompositeIndexReader doOpenIfChanged(IndexWriter writer, boolean applyAllDeletes) throws CorruptIndexException, IOException {\n    return writer.getReader(applyAllDeletes);\n  }\n\n","sourceOld":"  /**\n   * If the index has changed since it was opened, open and return a new reader;\n   * else, return {@code null}.\n   * \n   * @see #openIfChanged(IndexReader, IndexWriter, boolean)\n   */\n  protected IndexReader doOpenIfChanged(IndexWriter writer, boolean applyAllDeletes) throws CorruptIndexException, IOException {\n    return writer.getReader(applyAllDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#doOpenIfChanged(IndexWriter,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * If the index has changed since it was opened, open and return a new reader;\n   * else, return {@code null}.\n   * \n   * @see #openIfChanged(IndexReader, IndexWriter, boolean)\n   */\n  protected CompositeIndexReader doOpenIfChanged(IndexWriter writer, boolean applyAllDeletes) throws CorruptIndexException, IOException {\n    return writer.getReader(applyAllDeletes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"893d07555f01912f57b453a320e4d46363a31b50":[],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["893d07555f01912f57b453a320e4d46363a31b50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["893d07555f01912f57b453a320e4d46363a31b50","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}