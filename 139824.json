{"path":"contrib/snowball/src/java/net/sf/snowball/ext/RussianStemmer#r_derivational().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/RussianStemmer#r_derivational().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/RussianStemmer#r_derivational().mjava","sourceNew":"        private boolean r_derivational() {\n            int among_var;\n            // (, line 214\n            // [, line 215\n            ket = cursor;\n            // substring, line 215\n            among_var = find_among_b(a_6, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 215\n            bra = cursor;\n            // call R2, line 215\n            if (!r_R2())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_derivational() {\n            int among_var;\n            // (, line 214\n            // [, line 215\n            ket = cursor;\n            // substring, line 215\n            among_var = find_among_b(a_6, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 215\n            bra = cursor;\n            // call R2, line 215\n            if (!r_R2())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":5,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/RussianStemmer#r_derivational().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/RussianStemmer#r_derivational().mjava","sourceNew":"        private boolean r_derivational() {\n            int among_var;\n            // (, line 175\n            // [, line 176\n            ket = cursor;\n            // substring, line 176\n            among_var = find_among_b(a_6, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 176\n            bra = cursor;\n            // call R2, line 176\n            if (!r_R2())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 179\n                    // delete, line 179\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_derivational() {\n            int among_var;\n            // (, line 214\n            // [, line 215\n            ket = cursor;\n            // substring, line 215\n            among_var = find_among_b(a_6, 2);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 215\n            bra = cursor;\n            // call R2, line 215\n            if (!r_R2())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 218\n                    // delete, line 218\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b62da6a75575f59a016a076b4753dc6e20c74b44"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}