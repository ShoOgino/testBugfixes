{"path":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","commits":[{"id":"c5cce0f7b01252c7a642adf28f43c26da11011ee","date":1452620968,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"/dev/null","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(contentEncoding)));\n      } catch (UnsupportedEncodingException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902e859084b318fdf5739f233482b82ec438f456","date":1452631492,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(contentEncoding)));\n      } catch (UnsupportedEncodingException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f151b9e2e36c815b7e709361706344cf77c3b006","date":1468853133,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d057970b5f9fcaabc49d2f54c59a5d2a09da1769","date":1495200448,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = getParam(CommonParams.DF);\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/XmlQParserPlugin.XmlQParser#parse().mjava","sourceNew":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = getParam(CommonParams.DF);\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","sourceOld":"    public Query parse() throws SyntaxError {\n      final String qstr = getString();\n      if (qstr == null || qstr.isEmpty()) {\n        return null;\n      }\n      final IndexSchema schema = req.getSchema();\n      final String defaultField = QueryParsing.getDefaultField(schema, getParam(CommonParams.DF));\n      final Analyzer analyzer = schema.getQueryAnalyzer();\n\n      final SolrCoreParser solrParser = new SolrCoreParser(defaultField, analyzer, req);\n      solrParser.init(args);\n      try {\n        return solrParser.parse(new ByteArrayInputStream(qstr.getBytes(StandardCharsets.UTF_8)));\n      } catch (ParserException e) {\n        throw new SyntaxError(e.getMessage() + \" in \" + req.toString());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f151b9e2e36c815b7e709361706344cf77c3b006":["902e859084b318fdf5739f233482b82ec438f456"],"c5cce0f7b01252c7a642adf28f43c26da11011ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"902e859084b318fdf5739f233482b82ec438f456":["c5cce0f7b01252c7a642adf28f43c26da11011ee"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["f151b9e2e36c815b7e709361706344cf77c3b006","d057970b5f9fcaabc49d2f54c59a5d2a09da1769"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["f151b9e2e36c815b7e709361706344cf77c3b006"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["902e859084b318fdf5739f233482b82ec438f456","f151b9e2e36c815b7e709361706344cf77c3b006"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d057970b5f9fcaabc49d2f54c59a5d2a09da1769"]},"commit2Childs":{"f151b9e2e36c815b7e709361706344cf77c3b006":["e9017cf144952056066919f1ebc7897ff9bd71b1","d057970b5f9fcaabc49d2f54c59a5d2a09da1769","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c5cce0f7b01252c7a642adf28f43c26da11011ee":["902e859084b318fdf5739f233482b82ec438f456"],"902e859084b318fdf5739f233482b82ec438f456":["f151b9e2e36c815b7e709361706344cf77c3b006","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5cce0f7b01252c7a642adf28f43c26da11011ee"],"d057970b5f9fcaabc49d2f54c59a5d2a09da1769":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}