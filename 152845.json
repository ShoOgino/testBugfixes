{"path":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClasses(PrintWriter,List,int,String).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClasses(PrintWriter,List,int,String).mjava","pathOld":"/dev/null","sourceNew":"\tvoid writeClasses(PrintWriter out, List clss, int type, String dstpath) {\n\t\tif (clss.size() > 1) {\n\t\t\tout.print(\"<table border=\\\"1\\\"  width=100% cellpadding=0 cellspacing=3>\");\n\t\t\tfor (Iterator it = clss.iterator(); it.hasNext();) {\n\t\t\t\tClassDoc c = (ClassDoc)it.next();\n\t\t\t\tif (c.isInterface())\n\t\t\t\t\twriteClassCore(out, c, type, dstpath, false);\n\t\t\t}\n\t\t\tfor (Iterator it = clss.iterator(); it.hasNext();) {\n\t\t\t\tClassDoc c = (ClassDoc)it.next();\n\t\t\t\tif (!c.isInterface())\n\t\t\t\t\twriteClassCore(out, c, type, dstpath, false);\n\t\t\t}\n\t\t\tout.println(\"</table>\");\n\t\t} else\n\t\t\twriteClass(out, (ClassDoc)clss.get(0), type, dstpath, false);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35ba86e9cc568fdc800d780c620749584b1d5bc","date":1051838861,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/scratchpad/src/JP/co/esm/caddies/doclets/UMLDoclet#writeClasses(PrintWriter,List,int,String).mjava","sourceNew":null,"sourceOld":"\tvoid writeClasses(PrintWriter out, List clss, int type, String dstpath) {\n\t\tif (clss.size() > 1) {\n\t\t\tout.print(\"<table border=\\\"1\\\"  width=100% cellpadding=0 cellspacing=3>\");\n\t\t\tfor (Iterator it = clss.iterator(); it.hasNext();) {\n\t\t\t\tClassDoc c = (ClassDoc)it.next();\n\t\t\t\tif (c.isInterface())\n\t\t\t\t\twriteClassCore(out, c, type, dstpath, false);\n\t\t\t}\n\t\t\tfor (Iterator it = clss.iterator(); it.hasNext();) {\n\t\t\t\tClassDoc c = (ClassDoc)it.next();\n\t\t\t\tif (!c.isInterface())\n\t\t\t\t\twriteClassCore(out, c, type, dstpath, false);\n\t\t\t}\n\t\t\tout.println(\"</table>\");\n\t\t} else\n\t\t\twriteClass(out, (ClassDoc)clss.get(0), type, dstpath, false);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35ba86e9cc568fdc800d780c620749584b1d5bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}