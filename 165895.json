{"path":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","sourceNew":"  public void testBQ22() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    boostedQuery.setBoost(0);\n    query.add(boostedQuery, Occur.MUST);\n    query.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    query.setBoost(0);\n\n    bqtest(query, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testBQ22() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    boostedQuery.setBoost(0);\n    query.add(boostedQuery, Occur.MUST);\n    query.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    query.setBoost(0);\n\n    bqtest(query, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","sourceNew":"  public void testBQ22() throws Exception {\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();;\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    boostedQuery.setBoost(0);\n    builder.add(boostedQuery, Occur.MUST);\n    builder.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    BooleanQuery query = builder.build();\n    query.setBoost(0);\n\n    bqtest(query, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testBQ22() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    boostedQuery.setBoost(0);\n    query.add(boostedQuery, Occur.MUST);\n    query.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    query.setBoost(0);\n\n    bqtest(query, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestComplexExplanations#testBQ22().mjava","sourceNew":"  public void testBQ22() throws Exception {\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();;\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    builder.add(new BoostQuery(boostedQuery, 0), Occur.MUST);\n    builder.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    BooleanQuery query = builder.build();\n\n    bqtest(new BoostQuery(query, 0), new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testBQ22() throws Exception {\n    BooleanQuery.Builder builder = new BooleanQuery.Builder();;\n    TermQuery boostedQuery = new TermQuery(new Term(FIELD, \"w1\"));\n    boostedQuery.setBoost(0);\n    builder.add(boostedQuery, Occur.MUST);\n    builder.add(new TermQuery(new Term(FIELD, \"w2\")), Occur.SHOULD);\n    BooleanQuery query = builder.build();\n    query.setBoost(0);\n\n    bqtest(query, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}