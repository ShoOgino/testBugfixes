{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da47e95aa8dbf16793306d1a42d22d75213c880f","date":1283182125,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getDeletedDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getDeletedDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can call {@link #isDeleted(int)} with the requested document ID to verify\n   * the document is not deleted.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getLiveDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getDeletedDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getLiveDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getDeletedDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getLiveDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getDeletedDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#document(int,FieldSelector).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get the {@link org.apache.lucene.document.Document} at the <code>n</code>\n   * <sup>th</sup> position. The {@link FieldSelector} may be used to determine\n   * what {@link org.apache.lucene.document.Field}s to load and how they should\n   * be loaded. <b>NOTE:</b> If this Reader (more specifically, the underlying\n   * <code>FieldsReader</code>) is closed before the lazy\n   * {@link org.apache.lucene.document.Field} is loaded an exception may be\n   * thrown. If you want the value of a lazy\n   * {@link org.apache.lucene.document.Field} to be available after closing you\n   * must explicitly load it or fetch the Document again with a new loader.\n   * <p>\n   * <b>NOTE:</b> for performance reasons, this method does not check if the\n   * requested document is deleted, and therefore asking for a deleted document\n   * may yield unspecified results. Usually this is not required, however you\n   * can test if the doc is deleted by checking the {@link\n   * Bits} returned from {@link MultiFields#getLiveDocs}.\n   * \n   * @param n Get the document at the <code>n</code><sup>th</sup> position\n   * @param fieldSelector The {@link FieldSelector} to use to determine what\n   *        Fields should be loaded on the Document. May be null, in which case\n   *        all Fields will be loaded.\n   * @return The stored fields of the\n   *         {@link org.apache.lucene.document.Document} at the nth position\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   * @see org.apache.lucene.document.Fieldable\n   * @see org.apache.lucene.document.FieldSelector\n   * @see org.apache.lucene.document.SetBasedFieldSelector\n   * @see org.apache.lucene.document.LoadFirstFieldSelector\n   */\n  // TODO (1.5): When we convert to JDK 1.5 make this Set<String>\n  public abstract Document document(int n, FieldSelector fieldSelector) throws CorruptIndexException, IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da47e95aa8dbf16793306d1a42d22d75213c880f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["da47e95aa8dbf16793306d1a42d22d75213c880f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","da47e95aa8dbf16793306d1a42d22d75213c880f"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["da47e95aa8dbf16793306d1a42d22d75213c880f","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["da47e95aa8dbf16793306d1a42d22d75213c880f","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da47e95aa8dbf16793306d1a42d22d75213c880f":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["1509f151d7692d84fae414b2b799ac06ba60fcb4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["da47e95aa8dbf16793306d1a42d22d75213c880f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}