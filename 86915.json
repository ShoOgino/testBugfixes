{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) return;\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null)\n        entitySession = new ConcurrentHashMap<String, Object>();\n\n      putVal(name, val,entitySession);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        putVal(name, val,globalSession);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null)\n        doc.setSessionAttribute(name, val);\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        putVal(name, val,dataImporter.getCoreScopeSession());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) return;\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null)\n        entitySession = new ConcurrentHashMap<String, Object>();\n\n      putVal(name, val,entitySession);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        putVal(name, val,globalSession);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null)\n        doc.setSessionAttribute(name, val);\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        putVal(name, val,dataImporter.getCoreScopeSession());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) return;\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null)\n        entitySession = new ConcurrentHashMap<String, Object>();\n\n      putVal(name, val,entitySession);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        putVal(name, val,globalSession);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null)\n        doc.setSessionAttribute(name, val);\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        putVal(name, val,dataImporter.getCoreScopeSession());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) return;\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null)\n        entitySession = new ConcurrentHashMap<String, Object>();\n\n      putVal(name, val,entitySession);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        putVal(name, val,globalSession);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null)\n        doc.setSessionAttribute(name, val);\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        putVal(name, val,dataImporter.getCoreScopeSession());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.getCoreScopeSession().put(name, val);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) return;\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null)\n        entitySession = new ConcurrentHashMap<String, Object>();\n\n      putVal(name, val,entitySession);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        putVal(name, val,globalSession);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null)\n        doc.setSessionAttribute(name, val);\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        putVal(name, val,dataImporter.getCoreScopeSession());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["5101aff20e65c9a285c274627ec956eb5409d253"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5101aff20e65c9a285c274627ec956eb5409d253","date":1344005120,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.getCoreScopeSession().put(name, val);\n      }\n    }\n  }\n\n","bugFix":["4b84e23a1c994ea309896dd9424563e0092f3607"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.getCoreScopeSession().put(name, val);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.getCoreScopeSession().put(name, val);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<String, Object>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl#setSessionAttribute(String,Object,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setSessionAttribute(String name, Object val, String scope) {\n    if(name == null) {\n      return;\n    }\n    if (Context.SCOPE_ENTITY.equals(scope)) {\n      if (entitySession == null) {\n        entitySession = new HashMap<>();\n      }\n      entitySession.put(name, val);\n    } else if (Context.SCOPE_GLOBAL.equals(scope)) {\n      if (globalSession != null) {\n        globalSession.put(name, val);\n      }\n    } else if (Context.SCOPE_DOC.equals(scope)) {\n      DocBuilder.DocWrapper doc = getDocument();\n      if (doc != null) {\n        doc.setSessionAttribute(name, val);\n      }\n    } else if (SCOPE_SOLR_CORE.equals(scope)){\n      if(dataImporter != null) {\n        dataImporter.putToCoreScopeSession(name, val);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["c26f00b574427b55127e869b935845554afde1fa"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5101aff20e65c9a285c274627ec956eb5409d253"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["4b84e23a1c994ea309896dd9424563e0092f3607","5101aff20e65c9a285c274627ec956eb5409d253"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["4b84e23a1c994ea309896dd9424563e0092f3607","5101aff20e65c9a285c274627ec956eb5409d253"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5101aff20e65c9a285c274627ec956eb5409d253":["4b84e23a1c994ea309896dd9424563e0092f3607"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","5101aff20e65c9a285c274627ec956eb5409d253"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4b84e23a1c994ea309896dd9424563e0092f3607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"5101aff20e65c9a285c274627ec956eb5409d253":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}