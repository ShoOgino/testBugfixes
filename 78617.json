{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#Lucene41SimpleDocValuesProducer(SegmentReadState).mjava","commits":[{"id":"bfc53d09502e7e9683618107ef3cd087df2d6152","date":1357571745,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#Lucene41SimpleDocValuesProducer(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"    Lucene41SimpleDocValuesProducer(SegmentReadState state) throws IOException {\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n      // slurpy slurp\n      IndexInput in = state.directory.openInput(metaName, state.context);\n      boolean success = false;\n      try {\n        numerics = new HashMap<Integer,NumericEntry>();\n        binaries = new HashMap<Integer,BinaryEntry>();\n        readFields(numerics, binaries, in, state.fieldInfos);\n        success = true;\n      } finally {\n        if (success) {\n          IOUtils.close(in);\n        } else {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      \n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n      data = state.directory.openInput(dataName, state.context);\n      maxDoc = state.segmentInfo.getDocCount();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be442aa722f1c08c70ec5d9938c9f80a8138e627","date":1357613095,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#Lucene41SimpleDocValuesProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#Lucene41SimpleDocValuesProducer(SegmentReadState).mjava","sourceNew":"    Lucene41SimpleDocValuesProducer(SegmentReadState state) throws IOException {\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n      // slurpy slurp\n      IndexInput in = state.directory.openInput(metaName, state.context);\n      boolean success = false;\n      try {\n        numerics = new HashMap<Integer,NumericEntry>();\n        ords = new HashMap<Integer,NumericEntry>();\n        binaries = new HashMap<Integer,BinaryEntry>();\n        readFields(numerics, ords, binaries, in, state.fieldInfos);\n        success = true;\n      } finally {\n        if (success) {\n          IOUtils.close(in);\n        } else {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      \n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n      data = state.directory.openInput(dataName, state.context);\n    }\n\n","sourceOld":"    Lucene41SimpleDocValuesProducer(SegmentReadState state) throws IOException {\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n      // slurpy slurp\n      IndexInput in = state.directory.openInput(metaName, state.context);\n      boolean success = false;\n      try {\n        numerics = new HashMap<Integer,NumericEntry>();\n        binaries = new HashMap<Integer,BinaryEntry>();\n        readFields(numerics, binaries, in, state.fieldInfos);\n        success = true;\n      } finally {\n        if (success) {\n          IOUtils.close(in);\n        } else {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      \n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n      data = state.directory.openInput(dataName, state.context);\n      maxDoc = state.segmentInfo.getDocCount();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68acf69be1b41192ae2278afc452bb66f6349cba","date":1357657311,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesFormat.Lucene41SimpleDocValuesProducer#Lucene41SimpleDocValuesProducer(SegmentReadState).mjava","sourceNew":null,"sourceOld":"    Lucene41SimpleDocValuesProducer(SegmentReadState state) throws IOException {\n      String metaName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvm\");\n      // slurpy slurp\n      IndexInput in = state.directory.openInput(metaName, state.context);\n      boolean success = false;\n      try {\n        numerics = new HashMap<Integer,NumericEntry>();\n        ords = new HashMap<Integer,NumericEntry>();\n        binaries = new HashMap<Integer,BinaryEntry>();\n        readFields(numerics, ords, binaries, in, state.fieldInfos);\n        success = true;\n      } finally {\n        if (success) {\n          IOUtils.close(in);\n        } else {\n          IOUtils.closeWhileHandlingException(in);\n        }\n      }\n      \n      String dataName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dvd\");\n      data = state.directory.openInput(dataName, state.context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"68acf69be1b41192ae2278afc452bb66f6349cba":["be442aa722f1c08c70ec5d9938c9f80a8138e627"],"bfc53d09502e7e9683618107ef3cd087df2d6152":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be442aa722f1c08c70ec5d9938c9f80a8138e627":["bfc53d09502e7e9683618107ef3cd087df2d6152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"68acf69be1b41192ae2278afc452bb66f6349cba":[],"bfc53d09502e7e9683618107ef3cd087df2d6152":["be442aa722f1c08c70ec5d9938c9f80a8138e627"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfc53d09502e7e9683618107ef3cd087df2d6152","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be442aa722f1c08c70ec5d9938c9f80a8138e627":["68acf69be1b41192ae2278afc452bb66f6349cba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["68acf69be1b41192ae2278afc452bb66f6349cba","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}