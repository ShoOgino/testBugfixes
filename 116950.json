{"path":"lucene/facet/src/java/org/apache/lucene/facet/LongValueFacetCounts#countMultiValued(String,List[MatchingDocs]).mjava","commits":[{"id":"4513731041236fcf659e5bfc43d8862e1721a310","date":1504022253,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongValueFacetCounts#countMultiValued(String,List[MatchingDocs]).mjava","pathOld":"/dev/null","sourceNew":"  /** Counts directly from SortedNumericDocValues. */\n  private void countMultiValued(String field, List<MatchingDocs> matchingDocs) throws IOException {\n\n    for (MatchingDocs hits : matchingDocs) {\n      SortedNumericDocValues values = hits.context.reader().getSortedNumericDocValues(field);\n      if (values == null) {\n        // this field has no doc values for this segment\n        continue;\n      }\n\n      NumericDocValues singleValues = DocValues.unwrapSingleton(values);\n\n      if (singleValues != null) {\n        countOneSegment(singleValues, hits);\n      } else {\n\n        DocIdSetIterator it = ConjunctionDISI.intersectIterators(\n                                 Arrays.asList(hits.bits.iterator(), values));\n      \n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          int limit = values.docValueCount();\n          totCount += limit;\n          for (int i = 0; i < limit; i++) {\n            increment(values.nextValue());\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6028626aa0f7c266ef725110257eed11e5b3d1d7","date":1504104056,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongValueFacetCounts#countMultiValued(String,List[MatchingDocs]).mjava","pathOld":"/dev/null","sourceNew":"  /** Counts directly from SortedNumericDocValues. */\n  private void countMultiValued(String field, List<MatchingDocs> matchingDocs) throws IOException {\n\n    for (MatchingDocs hits : matchingDocs) {\n      SortedNumericDocValues values = hits.context.reader().getSortedNumericDocValues(field);\n      if (values == null) {\n        // this field has no doc values for this segment\n        continue;\n      }\n\n      NumericDocValues singleValues = DocValues.unwrapSingleton(values);\n\n      if (singleValues != null) {\n        countOneSegment(singleValues, hits);\n      } else {\n\n        DocIdSetIterator it = ConjunctionDISI.intersectIterators(\n                                 Arrays.asList(hits.bits.iterator(), values));\n      \n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          int limit = values.docValueCount();\n          totCount += limit;\n          for (int i = 0; i < limit; i++) {\n            increment(values.nextValue());\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/LongValueFacetCounts#countMultiValued(String,List[MatchingDocs]).mjava","pathOld":"/dev/null","sourceNew":"  /** Counts directly from SortedNumericDocValues. */\n  private void countMultiValued(String field, List<MatchingDocs> matchingDocs) throws IOException {\n\n    for (MatchingDocs hits : matchingDocs) {\n      SortedNumericDocValues values = hits.context.reader().getSortedNumericDocValues(field);\n      if (values == null) {\n        // this field has no doc values for this segment\n        continue;\n      }\n\n      NumericDocValues singleValues = DocValues.unwrapSingleton(values);\n\n      if (singleValues != null) {\n        countOneSegment(singleValues, hits);\n      } else {\n\n        DocIdSetIterator it = ConjunctionDISI.intersectIterators(\n                                 Arrays.asList(hits.bits.iterator(), values));\n      \n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          int limit = values.docValueCount();\n          totCount += limit;\n          for (int i = 0; i < limit; i++) {\n            increment(values.nextValue());\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6028626aa0f7c266ef725110257eed11e5b3d1d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4513731041236fcf659e5bfc43d8862e1721a310"],"4513731041236fcf659e5bfc43d8862e1721a310":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6028626aa0f7c266ef725110257eed11e5b3d1d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6028626aa0f7c266ef725110257eed11e5b3d1d7"]},"commit2Childs":{"6028626aa0f7c266ef725110257eed11e5b3d1d7":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4513731041236fcf659e5bfc43d8862e1721a310":["6028626aa0f7c266ef725110257eed11e5b3d1d7"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6028626aa0f7c266ef725110257eed11e5b3d1d7","4513731041236fcf659e5bfc43d8862e1721a310","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}