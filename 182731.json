{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  public DocValues.Type getDocValuesType(\n      final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","sourceOld":"  public DocValues.Type getDocValuesType(\n      final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"035bfd1088cdad8e71e315033daf330d0cd95923","date":1348092980,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  private static DocValues.Type getDocValuesType(final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","sourceOld":"  public DocValues.Type getDocValuesType(\n      final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1af57d1da0dceaad2640da652698505d6a621ce5","date":1358285398,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesTypeFake(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  private static DocValuesType getDocValuesTypeFake(byte b) {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else {\n      throw new AssertionError();\n    }\n  }\n/*\n  private static DocValues.Type getDocValuesType(final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }*/\n\n","sourceOld":"  private static DocValues.Type getDocValuesType(final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a061a4d303d4aee0918ec2e41c078d900ec23f6","date":1358896586,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"/dev/null","sourceNew":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","sourceOld":"  private static DocValues.Type getDocValuesType(final byte b) {\n    switch(b) {\n      case 0:\n        return null;\n      case 1:\n        return DocValues.Type.VAR_INTS;\n      case 2:\n        return DocValues.Type.FLOAT_32;\n      case 3:\n        return DocValues.Type.FLOAT_64;\n      case 4:\n        return DocValues.Type.BYTES_FIXED_STRAIGHT;\n      case 5:\n        return DocValues.Type.BYTES_FIXED_DEREF;\n      case 6:\n        return DocValues.Type.BYTES_VAR_STRAIGHT;\n      case 7:\n        return DocValues.Type.BYTES_VAR_DEREF;\n      case 8:\n        return DocValues.Type.FIXED_INTS_16;\n      case 9:\n        return DocValues.Type.FIXED_INTS_32;\n      case 10:\n        return DocValues.Type.FIXED_INTS_64;\n      case 11:\n        return DocValues.Type.FIXED_INTS_8;\n      case 12:\n        return DocValues.Type.BYTES_FIXED_SORTED;\n      case 13:\n        return DocValues.Type.BYTES_VAR_SORTED;\n      default:\n        throw new IllegalStateException(\"unhandled indexValues type \" + b);\n    }\n  }\n\n","bugFix":["035bfd1088cdad8e71e315033daf330d0cd95923","9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","sourceOld":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40FieldInfosReader#getDocValuesType(byte).mjava","sourceNew":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","sourceOld":"  // decodes a 4.0 type\n  private static LegacyDocValuesType getDocValuesType(byte b) {\n    return LegacyDocValuesType.values()[b];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1af57d1da0dceaad2640da652698505d6a621ce5":["035bfd1088cdad8e71e315033daf330d0cd95923"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["035bfd1088cdad8e71e315033daf330d0cd95923","3a061a4d303d4aee0918ec2e41c078d900ec23f6"],"035bfd1088cdad8e71e315033daf330d0cd95923":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3a061a4d303d4aee0918ec2e41c078d900ec23f6":["1af57d1da0dceaad2640da652698505d6a621ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d4d69c535930b5cce125cff868d40f6373dc27d4","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"1af57d1da0dceaad2640da652698505d6a621ce5":["3a061a4d303d4aee0918ec2e41c078d900ec23f6"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"035bfd1088cdad8e71e315033daf330d0cd95923":["1af57d1da0dceaad2640da652698505d6a621ce5","d4d69c535930b5cce125cff868d40f6373dc27d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["035bfd1088cdad8e71e315033daf330d0cd95923"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"3a061a4d303d4aee0918ec2e41c078d900ec23f6":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}