{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int,int).mjava","commits":[{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int minLength, int maxLength) {\n    if(minLength > maxLength)\n      throw new IllegalArgumentException(\"minLength must be >= maxLength\");\n    final boolean lenEqual = minLength==maxLength;\n    final int end = lenEqual?minLength:minLength + r.nextInt(maxLength-minLength+1);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    \n    // TODO(simonw): check this\n    final int fixedPlane = 5;//minLength % 5;\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = lenEqual? fixedPlane: r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1 && !lenEqual) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int minLength, int maxLength) {\n    if(minLength > maxLength)\n      throw new IllegalArgumentException(\"minLength must be >= maxLength\");\n    final boolean lenEqual = minLength==maxLength;\n    final int end = lenEqual?minLength:minLength + r.nextInt(maxLength-minLength+1);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    \n    // TODO(simonw): check this\n    final int fixedPlane = 5;//minLength % 5;\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = lenEqual? fixedPlane: r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1 && !lenEqual) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int,int).mjava","sourceNew":null,"sourceOld":"  public static String randomUnicodeString(Random r, int minLength, int maxLength) {\n    if(minLength > maxLength)\n      throw new IllegalArgumentException(\"minLength must be >= maxLength\");\n    final boolean lenEqual = minLength==maxLength;\n    final int end = lenEqual?minLength:minLength + r.nextInt(maxLength-minLength+1);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    \n    // TODO(simonw): check this\n    final int fixedPlane = 5;//minLength % 5;\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = lenEqual? fixedPlane: r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1 && !lenEqual) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}