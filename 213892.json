{"path":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","pathOld":"/dev/null","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn);\n        this.size = size;\n        final int sizeInBytes = size*maxDoc;\n        data = new byte[sizeInBytes];\n        assert data.length <= datIn.length() : \" file size is less than the expected size diff: \" + (data.length - datIn.length()) + \" size: \" + size + \" maxDoc \" + maxDoc + \" pos: \" + datIn.getFilePointer();\n        datIn.readBytes(data, 0, sizeInBytes);\n        bytesRef.bytes = data;\n        bytesRef.length = size;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn);\n        this.size = size;\n        final int sizeInBytes = size*maxDoc;\n        data = new byte[sizeInBytes];\n        assert data.length <= datIn.length() : \" file size is less than the expected size diff: \" + (data.length - datIn.length()) + \" size: \" + size + \" maxDoc \" + maxDoc + \" pos: \" + datIn.getFilePointer();\n        datIn.readBytes(data, 0, sizeInBytes);\n        bytesRef.bytes = data;\n        bytesRef.length = size;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n        this.missingValues.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n        this.missingValue.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n        this.missingValues.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","sourceNew":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc)\n          throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size * maxDoc);\n        this.size = size;\n        this.missingValue.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc) throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size*maxDoc);\n        this.size = size;\n        this.missingValue.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16dc5aef9648bb8fedce2ef55874f52e62c2766d","date":1293994163,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Reader.Source#Source(IndexInput,IndexInput,int,int).mjava","sourceNew":"      public Source(IndexInput datIn, int size, int maxDoc)\n          throws IOException {\n        super(datIn, null, new PagedBytes(PAGED_BYTES_BITS), size * maxDoc);\n        this.size = size;\n        this.missingValue.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","sourceOld":"      public Source(IndexInput datIn, IndexInput idxIn, int size, int maxDoc)\n          throws IOException {\n        super(datIn, idxIn, new PagedBytes(PAGED_BYTES_BITS), size * maxDoc);\n        this.size = size;\n        this.missingValue.bytesValue = new BytesRef(size);\n        this.maxDoc = maxDoc;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["16dc5aef9648bb8fedce2ef55874f52e62c2766d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}