{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","commits":[{"id":"db5a3aeba34624ea274f34df5691d40ca25f2b67","date":1358965297,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n                                                     \"nrm\", \n                                                     IndexFileNames.COMPOUND_FILE_EXTENSION);\n    return new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n                                                     \"nrm\", \n                                                     IndexFileNames.COMPOUND_FILE_EXTENSION);\n    return new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c0ecdaef6f1405eb02cc90e5aba6405c82ef093","date":1378031758,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public DocValuesConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      return new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n                                                     \"nrm\", \n                                                     IndexFileNames.COMPOUND_FILE_EXTENSION);\n    return new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public NormsConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      final Lucene40DocValuesWriter impl = new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n      return new NormsConsumer() {\n        @Override\n        public void addNormsField(FieldInfo field, Iterable<Number> values) throws IOException {\n          impl.addNumericField(field, values);\n        }\n        \n        @Override\n        public void close() throws IOException {\n          impl.close();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      return new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public NormsConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      final Lucene40DocValuesWriter impl = new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n      return new NormsConsumer() {\n        @Override\n        public void addNormsField(FieldInfo field, Iterable<Number> values) throws IOException {\n          impl.addNumericField(field, values);\n        }\n        \n        @Override\n        public void close() throws IOException {\n          impl.close();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public NormsConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      final Lucene40DocValuesWriter impl = new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n      return new NormsConsumer() {\n        @Override\n        public void addNormsField(FieldInfo field, Iterable<Number> values) throws IOException {\n          impl.addNumericField(field, values);\n        }\n        \n        @Override\n        public void close() throws IOException {\n          impl.close();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40RWNormsFormat#normsConsumer(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public NormsConsumer normsConsumer(SegmentWriteState state) throws IOException {\n    if (!LuceneTestCase.OLD_FORMAT_IMPERSONATION_IS_ACTIVE) {\n      return super.normsConsumer(state);\n    } else {\n      String filename = IndexFileNames.segmentFileName(state.segmentInfo.name, \n          \"nrm\", \n          IndexFileNames.COMPOUND_FILE_EXTENSION);\n      final Lucene40DocValuesWriter impl = new Lucene40DocValuesWriter(state, filename, Lucene40FieldInfosReader.LEGACY_NORM_TYPE_KEY);\n      return new NormsConsumer() {\n        @Override\n        public void addNormsField(FieldInfo field, Iterable<Number> values) throws IOException {\n          impl.addNumericField(field, values);\n        }\n        \n        @Override\n        public void close() throws IOException {\n          impl.close();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db5a3aeba34624ea274f34df5691d40ca25f2b67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","db5a3aeba34624ea274f34df5691d40ca25f2b67"],"3c0ecdaef6f1405eb02cc90e5aba6405c82ef093":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["3c0ecdaef6f1405eb02cc90e5aba6405c82ef093"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["22a2e66dfda83847e80095b8693c660742ab3e9c","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"db5a3aeba34624ea274f34df5691d40ca25f2b67":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3c0ecdaef6f1405eb02cc90e5aba6405c82ef093"],"3c0ecdaef6f1405eb02cc90e5aba6405c82ef093":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db5a3aeba34624ea274f34df5691d40ca25f2b67","d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}