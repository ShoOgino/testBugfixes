{"path":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","commits":[{"id":"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","date":1282571040,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n    }\n    // dictionary based on the current index may need refreshing\n    if (dictionary instanceof HighFrequencyDictionary) {\n      reader = reader.reopen();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n      try {\n        lookup.build(dictionary);\n        if (storeDir != null) {\n          lookup.store(storeDir);\n        }\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4","date":1287612974,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n    }\n    // dictionary based on the current index may need refreshing\n    if (dictionary instanceof HighFrequencyDictionary) {\n      reader = reader.reopen();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n      try {\n        lookup.build(dictionary);\n        if (storeDir != null) {\n          lookup.store(storeDir);\n        }\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n  }\n\n","bugFix":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n    }\n    // dictionary based on the current index may need refreshing\n    if (dictionary instanceof HighFrequencyDictionary) {\n      reader = reader.reopen();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n      try {\n        lookup.build(dictionary);\n        if (storeDir != null) {\n          lookup.store(storeDir);\n        }\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#reload(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","sourceOld":"  @Override\n  public void reload(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"reload()\");\n    if (dictionary == null && storeDir != null) {\n      // this may be a firstSearcher event, try loading it\n      if (lookup.load(storeDir)) {\n        return;  // loaded ok\n      }\n      LOG.debug(\"load failed, need to build Lookup again\");\n    }\n    // loading was unsuccessful - build it again\n    build(core, searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"c26f00b574427b55127e869b935845554afde1fa":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","b12d3e81e0f95a4527b5703953c503f71120ffcc","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b12d3e81e0f95a4527b5703953c503f71120ffcc","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}