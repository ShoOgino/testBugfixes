{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesConsumer#doAddSortedField(FieldInfo,DocValuesProducer).mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesConsumer#doAddSortedField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  private void doAddSortedField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    SortedDocValues values = valuesProducer.getSorted(field);\n    int numDocsWithField = 0;\n    for (int doc = values.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = values.nextDoc()) {\n      numDocsWithField++;\n    }\n\n    if (numDocsWithField == 0) {\n      meta.writeLong(-2); // docsWithFieldOffset\n      meta.writeLong(0L); // docsWithFieldLength\n      meta.writeShort((short) -1); // jumpTableEntryCount\n      meta.writeByte((byte) -1);   // denseRankPower\n    } else if (numDocsWithField == maxDoc) {\n      meta.writeLong(-1); // docsWithFieldOffset\n      meta.writeLong(0L); // docsWithFieldLength\n      meta.writeShort((short) -1); // jumpTableEntryCount\n      meta.writeByte((byte) -1);   // denseRankPower\n    } else {\n      long offset = data.getFilePointer();\n      meta.writeLong(offset); // docsWithFieldOffset\n      values = valuesProducer.getSorted(field);\n      final short jumpTableentryCount = IndexedDISI.writeBitSet(values, data, IndexedDISI.DEFAULT_DENSE_RANK_POWER);\n      meta.writeLong(data.getFilePointer() - offset); // docsWithFieldLength\n      meta.writeShort(jumpTableentryCount);\n      meta.writeByte(IndexedDISI.DEFAULT_DENSE_RANK_POWER);\n    }\n\n    meta.writeInt(numDocsWithField);\n    if (values.getValueCount() <= 1) {\n      meta.writeByte((byte) 0); // bitsPerValue\n      meta.writeLong(0L); // ordsOffset\n      meta.writeLong(0L); // ordsLength\n    } else {\n      int numberOfBitsPerOrd = DirectWriter.unsignedBitsRequired(values.getValueCount() - 1);\n      meta.writeByte((byte) numberOfBitsPerOrd); // bitsPerValue\n      long start = data.getFilePointer();\n      meta.writeLong(start); // ordsOffset\n      DirectWriter writer = DirectWriter.getInstance(data, numDocsWithField, numberOfBitsPerOrd);\n      values = valuesProducer.getSorted(field);\n      for (int doc = values.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = values.nextDoc()) {\n        writer.add(values.ordValue());\n      }\n      writer.finish();\n      meta.writeLong(data.getFilePointer() - start); // ordsLength\n    }\n\n    addTermsDict(DocValues.singleton(valuesProducer.getSorted(field)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesConsumer#doAddSortedField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  private void doAddSortedField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    SortedDocValues values = valuesProducer.getSorted(field);\n    int numDocsWithField = 0;\n    for (int doc = values.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = values.nextDoc()) {\n      numDocsWithField++;\n    }\n\n    if (numDocsWithField == 0) {\n      meta.writeLong(-2); // docsWithFieldOffset\n      meta.writeLong(0L); // docsWithFieldLength\n      meta.writeShort((short) -1); // jumpTableEntryCount\n      meta.writeByte((byte) -1);   // denseRankPower\n    } else if (numDocsWithField == maxDoc) {\n      meta.writeLong(-1); // docsWithFieldOffset\n      meta.writeLong(0L); // docsWithFieldLength\n      meta.writeShort((short) -1); // jumpTableEntryCount\n      meta.writeByte((byte) -1);   // denseRankPower\n    } else {\n      long offset = data.getFilePointer();\n      meta.writeLong(offset); // docsWithFieldOffset\n      values = valuesProducer.getSorted(field);\n      final short jumpTableentryCount = IndexedDISI.writeBitSet(values, data, IndexedDISI.DEFAULT_DENSE_RANK_POWER);\n      meta.writeLong(data.getFilePointer() - offset); // docsWithFieldLength\n      meta.writeShort(jumpTableentryCount);\n      meta.writeByte(IndexedDISI.DEFAULT_DENSE_RANK_POWER);\n    }\n\n    meta.writeInt(numDocsWithField);\n    if (values.getValueCount() <= 1) {\n      meta.writeByte((byte) 0); // bitsPerValue\n      meta.writeLong(0L); // ordsOffset\n      meta.writeLong(0L); // ordsLength\n    } else {\n      int numberOfBitsPerOrd = DirectWriter.unsignedBitsRequired(values.getValueCount() - 1);\n      meta.writeByte((byte) numberOfBitsPerOrd); // bitsPerValue\n      long start = data.getFilePointer();\n      meta.writeLong(start); // ordsOffset\n      DirectWriter writer = DirectWriter.getInstance(data, numDocsWithField, numberOfBitsPerOrd);\n      values = valuesProducer.getSorted(field);\n      for (int doc = values.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = values.nextDoc()) {\n        writer.add(values.ordValue());\n      }\n      writer.finish();\n      meta.writeLong(data.getFilePointer() - start); // ordsLength\n    }\n\n    addTermsDict(DocValues.singleton(valuesProducer.getSorted(field)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}