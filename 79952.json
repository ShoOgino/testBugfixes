{"path":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n        highlighter.initalize(core.getSolrConfig());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        highlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        highlighter = defHighlighter;\n      }\n    } else {\n      highlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ca0b2af130e4c7bf39b7cc2e4e86ee04658f722","date":1515077687,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      assertWarnOrFail(\"solrconfig.xml <highlighting> configuration is deprecated since SOLR-1696 \"\n              + \"and no longer supported from Solr 7.3 onwards. \"\n              + \"Please configure via <searchComponent> instead.\",\n          (null == pluginInfo),\n          core.getSolrConfig().luceneMatchVersion.onOrAfter(Version.LUCENE_7_3_0));\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7d97f18229b4f04bf96ee7c6e171878f1980882","date":1515079327,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n      defHighlighter.init(PluginInfo.EMPTY_INFO);\n      solrConfigHighlighter = defHighlighter;\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      assertWarnOrFail(\"solrconfig.xml <highlighting> configuration is deprecated since SOLR-1696 \"\n              + \"and no longer supported from Solr 7.3 onwards. \"\n              + \"Please configure via <searchComponent> instead.\",\n          (null == pluginInfo),\n          core.getSolrConfig().luceneMatchVersion.onOrAfter(Version.LUCENE_7_3_0));\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n      defHighlighter.init(PluginInfo.EMPTY_INFO);\n      solrConfigHighlighter = defHighlighter;\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    List<PluginInfo> children = info.getChildren(\"highlighting\");\n    if(children.isEmpty()) {\n      PluginInfo pluginInfo = core.getSolrConfig().getPluginInfo(SolrHighlighter.class.getName()); //TODO deprecated configuration remove later\n      if (pluginInfo != null) {\n        solrConfigHighlighter = core.createInitInstance(pluginInfo, SolrHighlighter.class, null, DefaultSolrHighlighter.class.getName());\n      } else {\n        DefaultSolrHighlighter defHighlighter = new DefaultSolrHighlighter(core);\n        defHighlighter.init(PluginInfo.EMPTY_INFO);\n        solrConfigHighlighter = defHighlighter;\n      }\n    } else {\n      solrConfigHighlighter = core.createInitInstance(children.get(0),SolrHighlighter.class,null, DefaultSolrHighlighter.class.getName());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"b94236357aaa22b76c10629851fe4e376e0cea82":["75babd1dfc2521603bfeb0968042e921d8c6c652","d7d97f18229b4f04bf96ee7c6e171878f1980882"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"727bb765ff2542275f6d31f67be18d7104bae148":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","75babd1dfc2521603bfeb0968042e921d8c6c652"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d7d97f18229b4f04bf96ee7c6e171878f1980882":["7ca0b2af130e4c7bf39b7cc2e4e86ee04658f722"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"7ca0b2af130e4c7bf39b7cc2e4e86ee04658f722":["75babd1dfc2521603bfeb0968042e921d8c6c652"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["b94236357aaa22b76c10629851fe4e376e0cea82","727bb765ff2542275f6d31f67be18d7104bae148","7ca0b2af130e4c7bf39b7cc2e4e86ee04658f722"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652","727bb765ff2542275f6d31f67be18d7104bae148"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d7d97f18229b4f04bf96ee7c6e171878f1980882":["b94236357aaa22b76c10629851fe4e376e0cea82"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"7ca0b2af130e4c7bf39b7cc2e4e86ee04658f722":["d7d97f18229b4f04bf96ee7c6e171878f1980882"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","727bb765ff2542275f6d31f67be18d7104bae148","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}