{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doReopen(boolean,IndexCommit).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doReopen(boolean,IndexCommit).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#doReopen(boolean,IndexCommit).mjava","sourceNew":"  private IndexReader doReopen(final boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    ensureOpen();\n\n    assert commit == null || openReadOnly;\n\n    // If we were obtained by writer.getReader(), re-ask the\n    // writer to get a new reader.\n    if (writer != null) {\n      return doReopenFromWriter(openReadOnly, commit);\n    } else {\n      return doReopenNoWriter(openReadOnly, commit);\n    }\n  }\n\n","sourceOld":"  private IndexReader doReopen(final boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    ensureOpen();\n\n    assert commit == null || openReadOnly;\n\n    // If we were obtained by writer.getReader(), re-ask the\n    // writer to get a new reader.\n    if (writer != null) {\n      return doReopenFromWriter(openReadOnly, commit);\n    } else {\n      return doReopenNoWriter(openReadOnly, commit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenIfChanged(boolean,IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doReopen(boolean,IndexCommit).mjava","sourceNew":"  private IndexReader doOpenIfChanged(final boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    ensureOpen();\n\n    assert commit == null || openReadOnly;\n\n    // If we were obtained by writer.getReader(), re-ask the\n    // writer to get a new reader.\n    if (writer != null) {\n      return doOpenFromWriter(openReadOnly, commit);\n    } else {\n      return doOpenNoWriter(openReadOnly, commit);\n    }\n  }\n\n","sourceOld":"  private IndexReader doReopen(final boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    ensureOpen();\n\n    assert commit == null || openReadOnly;\n\n    // If we were obtained by writer.getReader(), re-ask the\n    // writer to get a new reader.\n    if (writer != null) {\n      return doReopenFromWriter(openReadOnly, commit);\n    } else {\n      return doReopenNoWriter(openReadOnly, commit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8a8259c922a83abc544609227a60d48e5ee93e7e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}