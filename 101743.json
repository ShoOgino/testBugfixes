{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    log.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        log.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    log.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        log.warn(\"no key was available for deleted pk query. keyName = {}\", keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    log.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        log.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":null,"sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    log.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = currentEntityProcessorWrapper.getEntity().isDocRoot() ? currentEntityProcessorWrapper.getEntity().getPk() : currentEntityProcessorWrapper.getEntity().getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        log.warn(\"no key was available for deleted pk query. keyName = {}\", keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}