{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","commits":[{"id":"f1db7bd2068060be0b68fcca95c8270c7cb60f6c","date":1419003415,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /** If the dir is an {@link FSDirectory} or wraps one via possibly\n   *  nested {@link FilterDirectory} or {@link FileSwitchDirectory},\n   *  this returns {@link #spins(Path)} for the wrapped directory,\n   *  else, true.\n   *\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Directory dir) throws IOException {\n    dir = FilterDirectory.unwrap(dir);\n    if (dir instanceof FileSwitchDirectory) {\n      FileSwitchDirectory fsd = (FileSwitchDirectory) dir;\n      // Spinning is contagious:\n      return spins(fsd.getPrimaryDir()) || spins(fsd.getSecondaryDir());\n    } else if (dir instanceof RAMDirectory) {\n      return false;\n    } else if (dir instanceof FSDirectory) {\n      return spins(((FSDirectory) dir).getDirectory());\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","sourceNew":"  /** If the dir is an {@link FSDirectory} or wraps one via possibly\n   *  nested {@link FilterDirectory} or {@link FileSwitchDirectory},\n   *  this returns {@link #spins(Path)} for the wrapped directory,\n   *  else, true.\n   *\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Directory dir) throws IOException {\n    dir = FilterDirectory.unwrap(dir);\n    if (dir instanceof FileSwitchDirectory) {\n      FileSwitchDirectory fsd = (FileSwitchDirectory) dir;\n      // Spinning is contagious:\n      return spins(fsd.getPrimaryDir()) || spins(fsd.getSecondaryDir());\n    } else if (dir instanceof RAMDirectory || dir instanceof ByteBuffersDirectory) {\n      return false;\n    } else if (dir instanceof FSDirectory) {\n      return spins(((FSDirectory) dir).getDirectory());\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":"  /** If the dir is an {@link FSDirectory} or wraps one via possibly\n   *  nested {@link FilterDirectory} or {@link FileSwitchDirectory},\n   *  this returns {@link #spins(Path)} for the wrapped directory,\n   *  else, true.\n   *\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Directory dir) throws IOException {\n    dir = FilterDirectory.unwrap(dir);\n    if (dir instanceof FileSwitchDirectory) {\n      FileSwitchDirectory fsd = (FileSwitchDirectory) dir;\n      // Spinning is contagious:\n      return spins(fsd.getPrimaryDir()) || spins(fsd.getSecondaryDir());\n    } else if (dir instanceof RAMDirectory) {\n      return false;\n    } else if (dir instanceof FSDirectory) {\n      return spins(((FSDirectory) dir).getDirectory());\n    } else {\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Directory).mjava","sourceNew":"  /** If the dir is an {@link FSDirectory} or wraps one via possibly\n   *  nested {@link FilterDirectory} or {@link FileSwitchDirectory},\n   *  this returns {@link #spins(Path)} for the wrapped directory,\n   *  else, true.\n   *\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Directory dir) throws IOException {\n    dir = FilterDirectory.unwrap(dir);\n    if (dir instanceof FileSwitchDirectory) {\n      FileSwitchDirectory fsd = (FileSwitchDirectory) dir;\n      // Spinning is contagious:\n      return spins(fsd.getPrimaryDir()) || spins(fsd.getSecondaryDir());\n    } else if (dir instanceof ByteBuffersDirectory) {\n      return false;\n    } else if (dir instanceof FSDirectory) {\n      return spins(((FSDirectory) dir).getDirectory());\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":"  /** If the dir is an {@link FSDirectory} or wraps one via possibly\n   *  nested {@link FilterDirectory} or {@link FileSwitchDirectory},\n   *  this returns {@link #spins(Path)} for the wrapped directory,\n   *  else, true.\n   *\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Directory dir) throws IOException {\n    dir = FilterDirectory.unwrap(dir);\n    if (dir instanceof FileSwitchDirectory) {\n      FileSwitchDirectory fsd = (FileSwitchDirectory) dir;\n      // Spinning is contagious:\n      return spins(fsd.getPrimaryDir()) || spins(fsd.getSecondaryDir());\n    } else if (dir instanceof RAMDirectory || dir instanceof ByteBuffersDirectory) {\n      return false;\n    } else if (dir instanceof FSDirectory) {\n      return spins(((FSDirectory) dir).getDirectory());\n    } else {\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}