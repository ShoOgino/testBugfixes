{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","commits":[{"id":"adde4ed7da03e734626803a3802e6cf88b77a2e7","date":1312961672,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"/dev/null","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", Field.Store.YES,\n             Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", Field.Store.YES,\n             Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.DelayedIndexAndCloseRunnable#run().mjava","sourceNew":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","sourceOld":"     @Override\n     public void run() {\n       try {\n         Document doc = new Document();\n         Field field = newField(\"field\", \"testData\", TextField.TYPE_STORED);\n         doc.add(field);\n         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n             TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n         iwConstructed.countDown();\n         startIndexing.await();\n         writer.addDocument(doc);\n         writer.close();\n       } catch (Throwable e) {\n         failed = true;\n         failure = e;\n         failure.printStackTrace(System.out);\n         return;\n       }\n     }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"adde4ed7da03e734626803a3802e6cf88b77a2e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["adde4ed7da03e734626803a3802e6cf88b77a2e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"adde4ed7da03e734626803a3802e6cf88b77a2e7":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["adde4ed7da03e734626803a3802e6cf88b77a2e7"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}