{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","commits":[{"id":"bd8bc29700397ec1886e73bae0a67ff536bad223","date":1362159450,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = \"http://127.0.0.1:\" + to.getLocalPort()\n        + \"/solr/replication?command=fetchindex&masterUrl=\";\n    masterUrl += \"http://127.0.0.1:\" + from.getLocalPort()\n        + \"/solr/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = \"http://127.0.0.1:\" + to.getLocalPort()\n        + \"/solr/replication?wait=true&command=fetchindex&masterUrl=\";\n    masterUrl += \"http://127.0.0.1:\" + from.getLocalPort()\n        + \"/solr/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = \"http://127.0.0.1:\" + to.getLocalPort()\n        + \"/solr/replication?command=fetchindex&masterUrl=\";\n    masterUrl += \"http://127.0.0.1:\" + from.getLocalPort()\n        + \"/solr/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ec897f0eb789ef9536a8130d1cdb9337ef108a","date":1392217884,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort()) + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = \"http://127.0.0.1:\" + to.getLocalPort()\n        + \"/solr/replication?wait=true&command=fetchindex&masterUrl=\";\n    masterUrl += \"http://127.0.0.1:\" + from.getLocalPort()\n        + \"/solr/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2d81cf6955f09cda03ed448bb9bb397d4b9742","date":1411570057,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort()) + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws MalformedURLException, IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort()) + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      // e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort()) + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71475d88ea48a7d9a847f209667255318b3ea4c7","date":1461758968,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME + ReplicationHandler.PATH;\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME\n        + \"/replication?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME + \"/replication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#pullFromTo(JettySolrRunner,JettySolrRunner).mjava","sourceNew":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String leaderUrl;\n    URL url;\n    InputStream stream;\n    leaderUrl = buildUrl(to.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wait=true&command=fetchindex&leaderUrl=\"\n        + buildUrl(from.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME + ReplicationHandler.PATH;\n    url = new URL(leaderUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","sourceOld":"  private void pullFromTo(JettySolrRunner from, JettySolrRunner to) throws IOException {\n    String masterUrl;\n    URL url;\n    InputStream stream;\n    masterUrl = buildUrl(to.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wait=true&command=fetchindex&masterUrl=\"\n        + buildUrl(from.getLocalPort())\n        + \"/\" + DEFAULT_TEST_CORENAME + ReplicationHandler.PATH;\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["71475d88ea48a7d9a847f209667255318b3ea4c7"],"5a2d81cf6955f09cda03ed448bb9bb397d4b9742":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["5a2d81cf6955f09cda03ed448bb9bb397d4b9742"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71475d88ea48a7d9a847f209667255318b3ea4c7":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a2d81cf6955f09cda03ed448bb9bb397d4b9742":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["5a2d81cf6955f09cda03ed448bb9bb397d4b9742"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["71475d88ea48a7d9a847f209667255318b3ea4c7"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"71475d88ea48a7d9a847f209667255318b3ea4c7":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}