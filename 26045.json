{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","commits":[{"id":"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39","date":1355888669,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(TEMP_DIR,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(TEMP_DIR,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = TestUtil.createTempDir(getClass().getSimpleName() + \"-jetty\" + cnt);\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(TEMP_DIR,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(dataDir,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(TEMP_DIR,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\");\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = TestUtil.createTempDir(getClass().getSimpleName() + \"-jetty\" + cnt);\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\");\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n      File jettyDir = new File(dataDir,\n          getClass().getName() + \"-jetty\" + cnt + \"-\" + System.currentTimeMillis());\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\").toFile();\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\");\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\").toFile();\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrClient client = createNewSolrClient(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrServer startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\").toFile();\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrServer client = createNewSolrServer(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\").toFile();\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrClient client = createNewSolrClient(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","sourceOld":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n      File jettyDir = createTempDir(\"jetty\").toFile();\n      jettyDir.mkdirs();\n      org.apache.commons.io.FileUtils.copyDirectory(new File(getSolrHome()), jettyDir);\n      JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n      jettys.add(j);\n      SolrClient client = createNewSolrClient(j.getLocalPort());\n      clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86f07b14846d608cf6ccc6c216b1ce7b656c3eac","date":1432848552,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#startCloudJetty(String,String).mjava","sourceNew":null,"sourceOld":"  protected SolrClient startCloudJetty(String collection, String shard) throws Exception {\n    // TODO: use the collection string!!!!\n    collection = DEFAULT_COLLECTION;\n\n    int totalReplicas = getTotalReplicas(collection);\n\n\n    int cnt = this.jettyIntCntr.incrementAndGet();\n\n    File jettyDir = createTempDir(\"jetty\").toFile();\n    jettyDir.mkdirs();\n    setupJettySolrHome(jettyDir);\n    JettySolrRunner j = createJetty(jettyDir, testDir + \"/jetty\" + cnt, shard, \"solrconfig.xml\", null);\n    jettys.add(j);\n    SolrClient client = createNewSolrClient(j.getLocalPort());\n    clients.add(client);\n\n    int retries = 60;\n    while (--retries >= 0) {\n      // total replicas changed.. assume it was us\n      if (getTotalReplicas(collection) != totalReplicas) {\n       break;\n      }\n      Thread.sleep(500);\n    }\n\n    if (retries <= 0) {\n      fail(\"Timeout waiting for \" + j + \" to appear in clusterstate\");\n      printLayout();\n    }\n\n    updateMappingsFromZk(this.jettys, this.clients);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"86f07b14846d608cf6ccc6c216b1ce7b656c3eac":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bafca15d8e408346a67f4282ad1143b88023893b","9bc766d645fa848f86c381c7f6acf2c881c99399"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["86f07b14846d608cf6ccc6c216b1ce7b656c3eac","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"bafca15d8e408346a67f4282ad1143b88023893b":["9bc766d645fa848f86c381c7f6acf2c881c99399","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"86f07b14846d608cf6ccc6c216b1ce7b656c3eac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}