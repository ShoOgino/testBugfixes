{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","commits":[{"id":"6ca81a50d0a6c6f97f1e2b15ef90c5bd81765d09","date":1492411712,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(scheduledThreadPoolExecutor);\n    ExecutorUtil.shutdownAndAwaitTermination(actionExecutor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"326b5c746af092eb827c5c1accdab1b47fe0cf3c","date":1492433195,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(scheduledThreadPoolExecutor);\n    ExecutorUtil.shutdownAndAwaitTermination(actionExecutor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(scheduledThreadPoolExecutor);\n    ExecutorUtil.shutdownAndAwaitTermination(actionExecutor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    ExecutorUtil.shutdownAndAwaitTermination(scheduledThreadPoolExecutor);\n    ExecutorUtil.shutdownAndAwaitTermination(actionExecutor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5fd294da67452cd8d116692194908de00eb5209","date":1499704155,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8af24f206736d88373229e8c83ddb84a433e57f3","date":1520362563,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {\n        IOUtils.closeQuietly(scheduledTrigger);\n      }\n      scheduledTriggers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebf2a4e9fec7a202108e0897879cc366c3da296","date":1522408355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    log.debug(\"Shutting down scheduled thread pool executor now\");\n    scheduledThreadPoolExecutor.shutdownNow();\n\n    log.debug(\"Shutting down action executor now\");\n    actionExecutor.shutdownNow();\n\n    listeners.close();\n\n    log.debug(\"Awaiting termination for action executor\");\n    awaitTermination(actionExecutor);\n\n    log.debug(\"Awaiting termination for scheduled thread pool executor\");\n    awaitTermination(scheduledThreadPoolExecutor);\n\n    log.debug(\"ScheduledTriggers closed completely\");\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca5eaeddb09b39cefceaf853898ae6188400ae37","date":1522413426,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    log.debug(\"Shutting down scheduled thread pool executor now\");\n    scheduledThreadPoolExecutor.shutdownNow();\n\n    log.debug(\"Shutting down action executor now\");\n    actionExecutor.shutdownNow();\n\n    listeners.close();\n\n    log.debug(\"Awaiting termination for action executor\");\n    awaitTermination(actionExecutor);\n\n    log.debug(\"Awaiting termination for scheduled thread pool executor\");\n    awaitTermination(scheduledThreadPoolExecutor);\n\n    log.debug(\"ScheduledTriggers closed completely\");\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    scheduledThreadPoolExecutor.shutdownNow();\n    actionExecutor.shutdownNow();\n    listeners.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n    synchronized (this) {\n      // mark that we are closed\n      isClosed = true;\n      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {\n        IOUtils.closeQuietly(triggerWrapper);\n      }\n      scheduledTriggerWrappers.clear();\n    }\n    // shutdown and interrupt all running tasks because there's no longer any\n    // guarantee about cluster state\n    log.debug(\"Shutting down scheduled thread pool executor now\");\n    scheduledThreadPoolExecutor.shutdownNow();\n\n    log.debug(\"Shutting down action executor now\");\n    actionExecutor.shutdownNow();\n\n    listeners.close();\n\n    log.debug(\"Awaiting termination for action executor\");\n    awaitTermination(actionExecutor);\n\n    log.debug(\"Awaiting termination for scheduled thread pool executor\");\n    awaitTermination(scheduledThreadPoolExecutor);\n\n    log.debug(\"ScheduledTriggers closed completely\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5fd294da67452cd8d116692194908de00eb5209"],"6ca81a50d0a6c6f97f1e2b15ef90c5bd81765d09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["ca5eaeddb09b39cefceaf853898ae6188400ae37"],"8af24f206736d88373229e8c83ddb84a433e57f3":["560c18d71dad43d675158783c3840f8c80d6d39c"],"326b5c746af092eb827c5c1accdab1b47fe0cf3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ca81a50d0a6c6f97f1e2b15ef90c5bd81765d09"],"ca5eaeddb09b39cefceaf853898ae6188400ae37":["8af24f206736d88373229e8c83ddb84a433e57f3","4ebf2a4e9fec7a202108e0897879cc366c3da296"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["326b5c746af092eb827c5c1accdab1b47fe0cf3c","464244264804e3f981bf1fb4b732516d8d62dbc2"],"c5fd294da67452cd8d116692194908de00eb5209":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"4ebf2a4e9fec7a202108e0897879cc366c3da296":["8af24f206736d88373229e8c83ddb84a433e57f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["326b5c746af092eb827c5c1accdab1b47fe0cf3c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"6ca81a50d0a6c6f97f1e2b15ef90c5bd81765d09":["326b5c746af092eb827c5c1accdab1b47fe0cf3c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8af24f206736d88373229e8c83ddb84a433e57f3":["ca5eaeddb09b39cefceaf853898ae6188400ae37","4ebf2a4e9fec7a202108e0897879cc366c3da296"],"326b5c746af092eb827c5c1accdab1b47fe0cf3c":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2"],"ca5eaeddb09b39cefceaf853898ae6188400ae37":["3f504512a03d978990cbff30db0522b354e846db"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["c5fd294da67452cd8d116692194908de00eb5209"],"c5fd294da67452cd8d116692194908de00eb5209":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"4ebf2a4e9fec7a202108e0897879cc366c3da296":["ca5eaeddb09b39cefceaf853898ae6188400ae37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","6ca81a50d0a6c6f97f1e2b15ef90c5bd81765d09","326b5c746af092eb827c5c1accdab1b47fe0cf3c","560c18d71dad43d675158783c3840f8c80d6d39c"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"560c18d71dad43d675158783c3840f8c80d6d39c":["8af24f206736d88373229e8c83ddb84a433e57f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}