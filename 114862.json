{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */    \n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96e0d4494fe54b31c7f0151f3a632124ab806351","date":1512410218,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":["d656bfb8102419b4568f368a9606efc4f059912e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getUpdateProcessingChain(String).mjava","sourceNew":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain(final String name) {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get(name);\n    if (chain == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \" + name);\n    }\n    return chain;\n  }\n\n","sourceOld":"  /**\n   * @return an update processor registered to the given name.  Throw an exception if this chain is undefined\n   */\n  public UpdateRequestProcessorChain getUpdateProcessingChain( final String name )\n  {\n    UpdateRequestProcessorChain chain = updateProcessorChains.get( name );\n    if( chain == null ) {\n      throw new SolrException( ErrorCode.BAD_REQUEST,\n          \"unknown UpdateRequestProcessorChain: \"+name );\n    }\n    return chain;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c26f00b574427b55127e869b935845554afde1fa","9aea0485ecacb6734c17da2d02569816c23a69c1"],"96e0d4494fe54b31c7f0151f3a632124ab806351":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["96e0d4494fe54b31c7f0151f3a632124ab806351"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"96e0d4494fe54b31c7f0151f3a632124ab806351":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","96e0d4494fe54b31c7f0151f3a632124ab806351"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}