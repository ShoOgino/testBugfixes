{"path":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Clause(String).mjava","commits":[{"id":"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c","date":1110211682,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Clause(String).mjava","pathOld":"/dev/null","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      fieldToken = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      field=discardEscapeChar(fieldToken.image);\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Clause(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      fieldToken = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      field=discardEscapeChar(fieldToken.image);\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException {\n  Query q;\n  Token fieldToken=null, boost=null;\n    if (jj_2_1(2)) {\n      fieldToken = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      field=discardEscapeChar(fieldToken.image);\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n      if (boost != null) {\n        float f = (float)1.0;\n  try {\n    f = Float.valueOf(boost.image).floatValue();\n          q.setBoost(f);\n  } catch (Exception ignored) { }\n      }\n      {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"]},"commit2Childs":{"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}