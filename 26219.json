{"path":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","commits":[{"id":"27343ef19aef2f3e8a951852c79c4110775e0d98","date":1416915647,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6075\n  public void testOverflowInt() throws Exception {\n    Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            new SimpleRateLimiter(1).pause((long) (1.5*Integer.MAX_VALUE*1024*1024/1000));\n            fail(\"should have been interrupted\");\n          } catch (ThreadInterruptedException tie) {\n            // expected\n          }\n        }\n      };\n    t.start();\n    Thread.sleep(10);\n    t.interrupt();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8a7e622c1138188be79e193b1dc52f3f0889a5","date":1564419078,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","sourceNew":"  // LUCENE-6075\n  public void testOverflowInt() throws Exception {\n    Thread t = new Thread() {\n        @Override\n        public void run() {\n          expectThrows(ThreadInterruptedException.class, () -> {\n            new SimpleRateLimiter(1).pause((long) (1.5*Integer.MAX_VALUE*1024*1024/1000));\n          });\n        }\n      };\n    t.start();\n    Thread.sleep(10);\n    t.interrupt();\n  }\n\n","sourceOld":"  // LUCENE-6075\n  public void testOverflowInt() throws Exception {\n    Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            new SimpleRateLimiter(1).pause((long) (1.5*Integer.MAX_VALUE*1024*1024/1000));\n            fail(\"should have been interrupted\");\n          } catch (ThreadInterruptedException tie) {\n            // expected\n          }\n        }\n      };\n    t.start();\n    Thread.sleep(10);\n    t.interrupt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRateLimiter#testOverflowInt().mjava","sourceNew":"  // LUCENE-6075\n  public void testOverflowInt() throws Exception {\n    Thread t = new Thread() {\n        @Override\n        public void run() {\n          expectThrows(ThreadInterruptedException.class, () -> {\n            new SimpleRateLimiter(1).pause((long) (1.5*Integer.MAX_VALUE*1024*1024/1000));\n          });\n        }\n      };\n    t.start();\n    Thread.sleep(10);\n    t.interrupt();\n  }\n\n","sourceOld":"  // LUCENE-6075\n  public void testOverflowInt() throws Exception {\n    Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            new SimpleRateLimiter(1).pause((long) (1.5*Integer.MAX_VALUE*1024*1024/1000));\n            fail(\"should have been interrupted\");\n          } catch (ThreadInterruptedException tie) {\n            // expected\n          }\n        }\n      };\n    t.start();\n    Thread.sleep(10);\n    t.interrupt();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["27343ef19aef2f3e8a951852c79c4110775e0d98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"27343ef19aef2f3e8a951852c79c4110775e0d98":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["27343ef19aef2f3e8a951852c79c4110775e0d98","cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cd8a7e622c1138188be79e193b1dc52f3f0889a5"]},"commit2Childs":{"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27343ef19aef2f3e8a951852c79c4110775e0d98"],"27343ef19aef2f3e8a951852c79c4110775e0d98":["cd8a7e622c1138188be79e193b1dc52f3f0889a5","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}