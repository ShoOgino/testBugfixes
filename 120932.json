{"path":"lucene/core/src/java/org/apache/lucene/search/RandomAccessWeight#scorer(LeafReaderContext,Bits).mjava","commits":[{"id":"a7f94ff172f40ff68a926d112e25b96bc38e5a27","date":1431002360,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RandomAccessWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Scorer scorer(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    final Bits matchingDocs = getMatchingDocs(context);\n    if (matchingDocs == null || matchingDocs instanceof MatchNoBits) {\n      return null;\n    }\n    final DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());\n    final TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {\n\n      @Override\n      public boolean matches() throws IOException {\n        final int doc = approximation.docID();\n\n        if (acceptDocs != null && acceptDocs.get(doc) == false) {\n          return false;\n        }\n\n        return matchingDocs.get(doc);\n      }\n    };\n\n    return new ConstantScoreScorer(this, score(), twoPhase);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/RandomAccessWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/RandomAccessWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public final Scorer scorer(LeafReaderContext context) throws IOException {\n    final Bits matchingDocs = getMatchingDocs(context);\n    if (matchingDocs == null || matchingDocs instanceof MatchNoBits) {\n      return null;\n    }\n    final DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());\n    final TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {\n\n      @Override\n      public boolean matches() throws IOException {\n        final int doc = approximation.docID();\n\n        return matchingDocs.get(doc);\n      }\n    };\n\n    return new ConstantScoreScorer(this, score(), twoPhase);\n  }\n\n","sourceOld":"  @Override\n  public final Scorer scorer(LeafReaderContext context, final Bits acceptDocs) throws IOException {\n    final Bits matchingDocs = getMatchingDocs(context);\n    if (matchingDocs == null || matchingDocs instanceof MatchNoBits) {\n      return null;\n    }\n    final DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());\n    final TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {\n\n      @Override\n      public boolean matches() throws IOException {\n        final int doc = approximation.docID();\n\n        if (acceptDocs != null && acceptDocs.get(doc) == false) {\n          return false;\n        }\n\n        return matchingDocs.get(doc);\n      }\n    };\n\n    return new ConstantScoreScorer(this, score(), twoPhase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a7f94ff172f40ff68a926d112e25b96bc38e5a27"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7f94ff172f40ff68a926d112e25b96bc38e5a27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}