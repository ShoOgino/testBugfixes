{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","commits":[{"id":"fee52c628145c8dc485fb7902217fd0b96d7a237","date":1237276690,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      return p.matcher(value).replaceAll(replaceWith);\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      return p.matcher(value).replaceAll(replaceWith);\n    } else {\n      return readfromRegExp(reStr, value, col);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50a4e892818744c78e8bcea7805a5fa5950ae185","date":1237706679,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      return p.matcher(value).replaceAll(replaceWith);\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":null,"bugIntro":["4e08ecdf9a28c81716b89f59f7db35cda7609a09","4e08ecdf9a28c81716b89f59f7db35cda7609a09"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"50a4e892818744c78e8bcea7805a5fa5950ae185":["fee52c628145c8dc485fb7902217fd0b96d7a237"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["50a4e892818744c78e8bcea7805a5fa5950ae185"],"fee52c628145c8dc485fb7902217fd0b96d7a237":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"50a4e892818744c78e8bcea7805a5fa5950ae185":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fee52c628145c8dc485fb7902217fd0b96d7a237"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fee52c628145c8dc485fb7902217fd0b96d7a237":["50a4e892818744c78e8bcea7805a5fa5950ae185"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}