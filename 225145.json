{"path":"lucene/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}