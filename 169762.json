{"path":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#collide(PhrasePositions).mjava","commits":[{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#collide(PhrasePositions).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#collide(PhrasePositions).mjava","sourceNew":"  /** index of a pp2 colliding with pp, or -1 if none */\n  private int collide(PhrasePositions pp) {\n    int tpPos = tpPos(pp);\n    PhrasePositions[] rg = rptGroups[pp.rptGroup];\n    for (int i=0; i<rg.length; i++) {\n      PhrasePositions pp2 = rg[i];\n      if (pp2 != pp && tpPos(pp2) == tpPos) {\n        return pp2.rptInd;\n      }\n    }\n    return -1;\n  }\n\n","sourceOld":"  /** index of a pp2 colliding with pp, or -1 if none */\n  private int collide(PhrasePositions pp) {\n    int tpPos = tpPos(pp);\n    PhrasePositions[] rg = rptGroups[pp.rptGroup];\n    for (int i=0; i<rg.length; i++) {\n      PhrasePositions pp2 = rg[i];\n      if (pp2 != pp && tpPos(pp2) == tpPos) {\n        return pp2.rptInd;\n      }\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b11b9d5eaf9707760ca5151530830a825197023":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b11b9d5eaf9707760ca5151530830a825197023"]},"commit2Childs":{"3b11b9d5eaf9707760ca5151530830a825197023":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b11b9d5eaf9707760ca5151530830a825197023"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}