{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnSearchStream().mjava","commits":[{"id":"a6fe6699bcc60bb2640032c2682f07a108b1f757","date":1516148439,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnSearchStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnSearchStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnSearchStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testKnnSearchStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a6fe6699bcc60bb2640032c2682f07a108b1f757"],"a6fe6699bcc60bb2640032c2682f07a108b1f757":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6fe6699bcc60bb2640032c2682f07a108b1f757":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","a6fe6699bcc60bb2640032c2682f07a108b1f757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}