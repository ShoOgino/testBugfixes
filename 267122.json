{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82c0f50a240cf02105b13b11e49095779864d37f","date":1311151772,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, propWriter, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":5,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestInfo).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, propWriter, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, propWriter, requestParams);\n      checkWritablePersistFile(writer);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"82c0f50a240cf02105b13b11e49095779864d37f":["c26f00b574427b55127e869b935845554afde1fa"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["82c0f50a240cf02105b13b11e49095779864d37f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0a2903ea38ae3e636b93a08c52a5e37ae939cf6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"]},"commit2Childs":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["c26f00b574427b55127e869b935845554afde1fa"],"82c0f50a240cf02105b13b11e49095779864d37f":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b"],"c26f00b574427b55127e869b935845554afde1fa":["82c0f50a240cf02105b13b11e49095779864d37f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}