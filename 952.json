{"path":"solr/core/src/test/org/apache/solr/core/TestSolrDynamicMBean#testCachedStatsOption().mjava","commits":[{"id":"3532ef9e3edcbdf674841a5f549101f5416c62a5","date":1416413081,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrDynamicMBean#testCachedStatsOption().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCachedStatsOption() throws Exception{\n    //  SOLR-6747 Add an optional caching option as a workaround for SOLR-6586.\n    \n    SolrInfoMBean solrmbeaninfo = new MockInfoMBean();\n    SolrDynamicMBean sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object1 = sdmbean.getAttribute(\"Object\");\n    Object object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object12 = sdmbean.getAttribute(\"Object\");\n    Object object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    \n    // test cached stats\n    \n    solrmbeaninfo = new MockInfoMBean();\n    sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo, true);\n    \n    sdmbean.getMBeanInfo();\n    \n    object1 = sdmbean.getAttribute(\"Object\");\n    object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertEquals(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    object12 = sdmbean.getAttribute(\"Object\");\n    object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    assertEquals(object12, object22);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrDynamicMBean#testCachedStatsOption().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCachedStatsOption() throws Exception{\n    //  SOLR-6747 Add an optional caching option as a workaround for SOLR-6586.\n    \n    SolrInfoMBean solrmbeaninfo = new MockInfoMBean();\n    SolrDynamicMBean sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object1 = sdmbean.getAttribute(\"Object\");\n    Object object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object12 = sdmbean.getAttribute(\"Object\");\n    Object object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    \n    // test cached stats\n    \n    solrmbeaninfo = new MockInfoMBean();\n    sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo, true);\n    \n    sdmbean.getMBeanInfo();\n    \n    object1 = sdmbean.getAttribute(\"Object\");\n    object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertEquals(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    object12 = sdmbean.getAttribute(\"Object\");\n    object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    assertEquals(object12, object22);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrDynamicMBean#testCachedStatsOption().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCachedStatsOption() throws Exception{\n    //  SOLR-6747 Add an optional caching option as a workaround for SOLR-6586.\n    \n    SolrInfoMBean solrmbeaninfo = new MockInfoMBean();\n    SolrDynamicMBean sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object1 = sdmbean.getAttribute(\"Object\");\n    Object object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    Object object12 = sdmbean.getAttribute(\"Object\");\n    Object object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    \n    // test cached stats\n    \n    solrmbeaninfo = new MockInfoMBean();\n    sdmbean = new SolrDynamicMBean(\"\", solrmbeaninfo, true);\n    \n    sdmbean.getMBeanInfo();\n    \n    object1 = sdmbean.getAttribute(\"Object\");\n    object2 = sdmbean.getAttribute(\"Object\");\n    \n    assertEquals(object1, object2);\n    \n    sdmbean.getMBeanInfo();\n    \n    object12 = sdmbean.getAttribute(\"Object\");\n    object22 = sdmbean.getAttribute(\"Object\");\n    \n    assertNotSame(object1, object12);\n    assertNotSame(object2, object22);\n    \n    assertEquals(object12, object22);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"3532ef9e3edcbdf674841a5f549101f5416c62a5":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3532ef9e3edcbdf674841a5f549101f5416c62a5"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}