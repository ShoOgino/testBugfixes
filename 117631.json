{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","commits":[{"id":"9cc8e977a08af3169747ab78c578cc3037d095d5","date":1462391783,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    for(Pair<String, String> metricPair : metricPairs) {\n      metrics.add(getMetric(metricPair));\n    }\n    return metrics;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4a466195c69a11a113b33adc90f9069031e54e","date":1477605536,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","sourceNew":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    metrics.addAll(metricPairs.stream().map(this::getMetric).collect(Collectors.toList()));\n    return metrics;\n  }\n\n","sourceOld":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    for(Pair<String, String> metricPair : metricPairs) {\n      metrics.add(getMetric(metricPair));\n    }\n    return metrics;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36b1ce25b5b465615c00f409ce694664abbe7bd2","date":1481836328,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","sourceNew":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    metrics.addAll(metricPairs.stream().map(this::getMetric).collect(Collectors.toList()));\n    if(metrics.size() == 0) {\n      metrics.add(new CountMetric());\n    }\n    return metrics;\n  }\n\n","sourceOld":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    metrics.addAll(metricPairs.stream().map(this::getMetric).collect(Collectors.toList()));\n    return metrics;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f20deebda1cf327549c84cb60464135abd31c71","date":1487004368,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#buildMetrics(List[Pair[String,String]]).mjava","sourceNew":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs, boolean ifEmptyCount) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    metrics.addAll(metricPairs.stream().map(this::getMetric).collect(Collectors.toList()));\n    if(metrics.size() == 0 && ifEmptyCount) {\n      metrics.add(new CountMetric());\n    }\n    return metrics;\n  }\n\n","sourceOld":"  private List<Metric> buildMetrics(List<Pair<String, String>> metricPairs) {\n    List<Metric> metrics = new ArrayList<>(metricPairs.size());\n    metrics.addAll(metricPairs.stream().map(this::getMetric).collect(Collectors.toList()));\n    if(metrics.size() == 0) {\n      metrics.add(new CountMetric());\n    }\n    return metrics;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa4a466195c69a11a113b33adc90f9069031e54e":["9cc8e977a08af3169747ab78c578cc3037d095d5"],"9cc8e977a08af3169747ab78c578cc3037d095d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["fa4a466195c69a11a113b33adc90f9069031e54e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f20deebda1cf327549c84cb60464135abd31c71":["36b1ce25b5b465615c00f409ce694664abbe7bd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fa4a466195c69a11a113b33adc90f9069031e54e":["36b1ce25b5b465615c00f409ce694664abbe7bd2"],"9cc8e977a08af3169747ab78c578cc3037d095d5":["fa4a466195c69a11a113b33adc90f9069031e54e"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["3f20deebda1cf327549c84cb60464135abd31c71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cc8e977a08af3169747ab78c578cc3037d095d5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f20deebda1cf327549c84cb60464135abd31c71":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3f20deebda1cf327549c84cb60464135abd31c71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}