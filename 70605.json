{"path":"src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(char[],int,int).mjava","commits":[{"id":"3c09067bd60a59f680992d62794689898c0148ac","date":1265200673,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#getHashCode(char[],int,int).mjava","sourceNew":"  private int getHashCode(char[] text, int offset, int len) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    final int stop = offset + len;\n    if (ignoreCase) {\n      for (int i=offset; i<stop;) {\n        final int codePointAt = charUtils.codePointAt(text, i, stop);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(char[] text, int offset, int len) {\n    int code = 0;\n    final int stop = offset + len;\n    if (ignoreCase) {\n      for (int i=offset; i<stop;) {\n        final int codePointAt = charUtils.codePointAt(text, i, stop);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(char[],int,int).mjava","sourceNew":"  private int getHashCode(char[] text, int offset, int len) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    final int stop = offset + len;\n    if (ignoreCase) {\n      for (int i=offset; i<stop;) {\n        final int codePointAt = charUtils.codePointAt(text, i, stop);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(char[] text, int offset, int len) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    final int stop = offset + len;\n    if (ignoreCase) {\n      for (int i=offset; i<stop;) {\n        final int codePointAt = charUtils.codePointAt(text, i, stop);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=offset; i<stop; i++) {\n        code = code*31 + text[i];\n      }\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c09067bd60a59f680992d62794689898c0148ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3c09067bd60a59f680992d62794689898c0148ac"]},"commit2Childs":{"3c09067bd60a59f680992d62794689898c0148ac":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c09067bd60a59f680992d62794689898c0148ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}