{"path":"lucene/src/test/org/apache/lucene/index/TestParallelCompositeReader#testIncompatibleIndexes().mjava","commits":[{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelCompositeReader#testIncompatibleIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#testIncompatibleIndexes().mjava","sourceNew":"  public void testIncompatibleIndexes() throws IOException {\n    // two documents:\n    Directory dir1 = getDir1(random);\n\n    // one document only:\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d3 = new Document();\n\n    d3.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.close();\n    \n    DirectoryReader ir1 = DirectoryReader.open(dir1),\n        ir2 = DirectoryReader.open(dir2);\n    ParallelCompositeReader.Builder builder = new ParallelCompositeReader.Builder(false).add(ir1);\n    \n    try {\n      builder.add(ir2);\n      fail(\"didn't get exptected exception: indexes don't have same number of documents\");\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    ParallelCompositeReader pr = builder.build();\n    // check RefCounts\n    assertEquals(2, ir1.getRefCount());\n    assertEquals(1, ir2.getRefCount());\n    pr.close();\n    assertEquals(1, ir1.getRefCount());\n    assertEquals(1, ir2.getRefCount());\n    ir1.close();\n    ir2.close();\n    assertEquals(0, ir1.getRefCount());\n    assertEquals(0, ir2.getRefCount());\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testIncompatibleIndexes() throws IOException {\n    // two documents:\n    Directory dir1 = getDir1(random);\n\n    // one document only:\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d3 = new Document();\n\n    d3.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.close();\n    \n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    DirectoryReader ir = DirectoryReader.open(dir2);\n    try {\n      pr.add(SlowCompositeReaderWrapper.wrap(ir));\n      fail(\"didn't get exptected exception: indexes don't have same number of documents\");\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    pr.close();\n    ir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReader#testIncompatibleIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelCompositeReader#testIncompatibleIndexes().mjava","sourceNew":"  public void testIncompatibleIndexes() throws IOException {\n    // two documents:\n    Directory dir1 = getDir1(random);\n\n    // one document only:\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d3 = new Document();\n\n    d3.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.close();\n    \n    ParallelReader pr = new ParallelReader();\n    pr.add(SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir1)));\n    DirectoryReader ir = DirectoryReader.open(dir2);\n    try {\n      pr.add(SlowCompositeReaderWrapper.wrap(ir));\n      fail(\"didn't get exptected exception: indexes don't have same number of documents\");\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    pr.close();\n    ir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testIncompatibleIndexes() throws IOException {\n    // two documents:\n    Directory dir1 = getDir1(random);\n\n    // one document only:\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document d3 = new Document();\n\n    d3.add(newField(\"f3\", \"v1\", TextField.TYPE_STORED));\n    w2.addDocument(d3);\n    w2.close();\n    \n    DirectoryReader ir1 = DirectoryReader.open(dir1),\n        ir2 = DirectoryReader.open(dir2);\n    ParallelCompositeReader.Builder builder = new ParallelCompositeReader.Builder(false).add(ir1);\n    \n    try {\n      builder.add(ir2);\n      fail(\"didn't get exptected exception: indexes don't have same number of documents\");\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    ParallelCompositeReader pr = builder.build();\n    // check RefCounts\n    assertEquals(2, ir1.getRefCount());\n    assertEquals(1, ir2.getRefCount());\n    pr.close();\n    assertEquals(1, ir1.getRefCount());\n    assertEquals(1, ir2.getRefCount());\n    ir1.close();\n    ir2.close();\n    assertEquals(0, ir1.getRefCount());\n    assertEquals(0, ir2.getRefCount());\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08b385e33541f6749e71618c9ab36fad908a7ed0"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}