{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","commits":[{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(directory,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = directory;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                           info.name,\n                                                                           IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","sourceNew":"  private FieldInfos getFieldInfos(SegmentInfoPerCommit info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(directory,\n                                           IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = directory;\n      }\n      return info.info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                                info.info.name,\n                                                                                IOContext.READONCE);\n    } finally {\n      if (info.info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":"  private FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(directory,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = directory;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                           info.name,\n                                                                           IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8","date":1337887183,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfoPerCommit).mjava","sourceNew":"  private FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                                info.name,\n                                                                                IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":"  private FieldInfos getFieldInfos(SegmentInfoPerCommit info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(directory,\n                                           IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = directory;\n      }\n      return info.info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                                info.info.name,\n                                                                                IOContext.READONCE);\n    } finally {\n      if (info.info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                                info.name,\n                                                                                IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldInfos(SegmentInfo).mjava","sourceNew":null,"sourceOld":"  private FieldInfos getFieldInfos(SegmentInfo info) throws IOException {\n    Directory cfsDir = null;\n    try {\n      if (info.getUseCompoundFile()) {\n        cfsDir = new CompoundFileDirectory(info.dir,\n                                           IndexFileNames.segmentFileName(info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n                                           IOContext.READONCE,\n                                           false);\n      } else {\n        cfsDir = info.dir;\n      }\n      return info.getCodec().fieldInfosFormat().getFieldInfosReader().read(cfsDir,\n                                                                                info.name,\n                                                                                IOContext.READONCE);\n    } finally {\n      if (info.getUseCompoundFile() && cfsDir != null) {\n        cfsDir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07087852d7b2a5c7e7d79b19c3e3ba775596b5d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"8435160e9702b19398118ddf76b61c846612b6a4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8435160e9702b19398118ddf76b61c846612b6a4"]},"commit2Childs":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["8435160e9702b19398118ddf76b61c846612b6a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["07087852d7b2a5c7e7d79b19c3e3ba775596b5d8"],"8435160e9702b19398118ddf76b61c846612b6a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}