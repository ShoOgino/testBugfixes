{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DeleteStream#uploadBatchToCollection(List[SolrInputDocument]).mjava","commits":[{"id":"140a95988ddfbe87c2376f5fed6acae475ea11fc","date":1580924964,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DeleteStream#uploadBatchToCollection(List[SolrInputDocument]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Overrides implementation to extract the <code>\"id\"</code> and <code>\"_version_\"</code> \n   * (if included) from each document and use that information to construct a \"Delete By Id\" request.  \n   * Any other fields (ie: Tuple values) are ignored.\n   */\n  @Override\n  protected void uploadBatchToCollection(List<SolrInputDocument> documentBatch) throws IOException {\n    if (documentBatch.size() == 0) {\n      return;\n    }\n\n    try {\n      // convert each doc into a deleteById request...\n      final UpdateRequest req = new UpdateRequest();\n      for (SolrInputDocument doc : documentBatch) {\n        final String id = doc.getFieldValue(ID_TUPLE_KEY).toString();\n        final Long version = getVersion(doc);\n        req.deleteById(id, version);\n      }\n      req.process(getCloudSolrClient(), getCollectionName());\n    } catch (SolrServerException | NumberFormatException| IOException e) {\n      log.warn(\"Unable to delete documents from collection due to unexpected error.\", e);\n      String className = e.getClass().getName();\n      String message = e.getMessage();\n      throw new IOException(String.format(Locale.ROOT,\"Unexpected error when deleting documents from collection %s- %s:%s\", getCollectionName(), className, message));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"140a95988ddfbe87c2376f5fed6acae475ea11fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140a95988ddfbe87c2376f5fed6acae475ea11fc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["140a95988ddfbe87c2376f5fed6acae475ea11fc"],"140a95988ddfbe87c2376f5fed6acae475ea11fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}