{"path":"backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","pathOld":"/dev/null","sourceNew":"  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(new SpanQuery[] {near1, near2});\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n       747, 833, 847, 933, 947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","sourceNew":"  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(new SpanQuery[] {near1, near2});\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n       747, 833, 847, 933, 947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","sourceOld":"  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(new SpanQuery[] {near1, near2});\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n       747, 833, 847, 933, 947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}