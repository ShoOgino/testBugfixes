{"path":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"89ae495191648c27a6ed94d2ace7e34b763a535c","date":1476855250,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, null, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bca807fcb2fa11c40a0c929d869a16376c24932b","date":1476974181,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, null, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, null, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, null, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed1b270b5ea6e1859f4b77233891fbb991898dba","date":1497429460,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }, BRACES_PLACEHOLDER_PATTERN));\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }, BRACES_PLACEHOLDER_PATTERN));\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#process(AddUpdateCommand,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }, BRACES_PLACEHOLDER_PATTERN));\n      }\n    }\n\n  }\n\n","sourceOld":"  @Override\n  protected void process(AddUpdateCommand cmd, SolrQueryRequest req, SolrQueryResponse rsp) {\n    String[] vals = getParams(\"field\");\n    SolrInputDocument doc = cmd.getSolrInputDocument();\n    if (vals != null && vals.length > 0) {\n      for (String val : vals) {\n        if (val == null || val.isEmpty()) continue;\n        int idx = val.indexOf(':');\n        if (idx == -1)\n          throw new RuntimeException(\"'field' must be of the format <field-name>:<the-template-string>\");\n\n        String fName = val.substring(0, idx);\n        String template = val.substring(idx + 1);\n        doc.addField(fName, replaceTokens(template, templateCache, s -> {\n          Object v = doc.getFieldValue(s);\n          return v == null ? \"\" : v;\n        }));\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed1b270b5ea6e1859f4b77233891fbb991898dba":["bca807fcb2fa11c40a0c929d869a16376c24932b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","bca807fcb2fa11c40a0c929d869a16376c24932b"],"bca807fcb2fa11c40a0c929d869a16376c24932b":["89ae495191648c27a6ed94d2ace7e34b763a535c"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["bca807fcb2fa11c40a0c929d869a16376c24932b","ed1b270b5ea6e1859f4b77233891fbb991898dba"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["bca807fcb2fa11c40a0c929d869a16376c24932b","ed1b270b5ea6e1859f4b77233891fbb991898dba"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89ae495191648c27a6ed94d2ace7e34b763a535c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"ed1b270b5ea6e1859f4b77233891fbb991898dba":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89ae495191648c27a6ed94d2ace7e34b763a535c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"bca807fcb2fa11c40a0c929d869a16376c24932b":["ed1b270b5ea6e1859f4b77233891fbb991898dba","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["bca807fcb2fa11c40a0c929d869a16376c24932b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}