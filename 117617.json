{"path":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","commits":[{"id":"a4df60738409662c962b4ed3201d830cd3c14530","date":1114991851,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/lucli/LuceneMethods#optimize().mjava","sourceNew":"  public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new StandardAnalyzer(), false);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"  public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new StandardAnalyzer(), false);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c64e0c064f4d1397144dc064e5eb82f2e074357b","date":1247479561,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"  public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new StandardAnalyzer(), false);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false, IndexWriter.MaxFieldLength.UNLIMITED);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new IndexWriterConfig(\n        Version.LUCENE_CURRENT).setAnalyzer(createAnalyzer()).setOpenMode(\n        OpenMode.APPEND));\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false, IndexWriter.MaxFieldLength.UNLIMITED);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false, IndexWriter.MaxFieldLength.UNLIMITED);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new IndexWriterConfig(\n        Version.LUCENE_CURRENT).setAnalyzer(createAnalyzer()).setOpenMode(\n        OpenMode.APPEND));\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, createAnalyzer()).setOpenMode(\n        OpenMode.APPEND));\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, createAnalyzer(), false, IndexWriter.MaxFieldLength.UNLIMITED);\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#optimize().mjava","sourceNew":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, createAnalyzer()).setOpenMode(\n        OpenMode.APPEND));\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","sourceOld":"    public void optimize() throws IOException {\n    //open the index writer. False: don't create a new one\n    IndexWriter indexWriter = new IndexWriter(indexName, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, createAnalyzer()).setOpenMode(\n        OpenMode.APPEND));\n    message(\"Starting to optimize index.\");\n    long start = System.currentTimeMillis();\n    indexWriter.optimize();\n    message(\"Done optimizing index. Took \" + (System.currentTimeMillis() - start) + \" msecs\");\n    indexWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"c64e0c064f4d1397144dc064e5eb82f2e074357b":["a4df60738409662c962b4ed3201d830cd3c14530"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"87c966e9308847938a7c905c2e46a56d8df788b8":["c64e0c064f4d1397144dc064e5eb82f2e074357b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a4df60738409662c962b4ed3201d830cd3c14530":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4df60738409662c962b4ed3201d830cd3c14530"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"c64e0c064f4d1397144dc064e5eb82f2e074357b":["87c966e9308847938a7c905c2e46a56d8df788b8"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"87c966e9308847938a7c905c2e46a56d8df788b8":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a4df60738409662c962b4ed3201d830cd3c14530":["c64e0c064f4d1397144dc064e5eb82f2e074357b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}