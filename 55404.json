{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","commits":[{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","pathOld":"/dev/null","sourceNew":"  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    if (random().nextBoolean()) {\n      return new LBHttpSolrClient(client, solrUrls);\n    }\n    \n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","pathOld":"/dev/null","sourceNew":"  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    if (random().nextBoolean()) {\n      return new LBHttpSolrClient(client, solrUrls);\n    }\n    \n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","sourceNew":"  /**\n   * This method <i>may</i> randomize unspecified aspects of the resulting SolrClient.\n   * Tests that do not wish to have any randomized behavior should use the \n   * {@link org.apache.solr.client.solrj.impl.LBHttpSolrClient.Builder} class directly\n   */ \n  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","sourceOld":"  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    if (random().nextBoolean()) {\n      return new LBHttpSolrClient(client, solrUrls);\n    }\n    \n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","sourceNew":"  /**\n   * This method <i>may</i> randomize unspecified aspects of the resulting SolrClient.\n   * Tests that do not wish to have any randomized behavior should use the \n   * {@link org.apache.solr.client.solrj.impl.LBHttpSolrClient.Builder} class directly\n   */ \n  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","sourceOld":"  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    if (random().nextBoolean()) {\n      return new LBHttpSolrClient(client, solrUrls);\n    }\n    \n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#getLBHttpSolrClient(HttpClient,String...).mjava","sourceNew":"  /**\n   * This method <i>may</i> randomize unspecified aspects of the resulting SolrClient.\n   * Tests that do not wish to have any randomized behavior should use the \n   * {@link org.apache.solr.client.solrj.impl.LBHttpSolrClient.Builder} class directly\n   */ \n  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","sourceOld":"  public static LBHttpSolrClient getLBHttpSolrClient(HttpClient client, String... solrUrls) {\n    if (random().nextBoolean()) {\n      return new LBHttpSolrClient(client, solrUrls);\n    }\n    \n    return new LBHttpSolrClient.Builder()\n        .withHttpClient(client)\n        .withBaseSolrUrls(solrUrls)\n        .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","63a1978c6710c767fa084741e3d6424840003a62"],"63a1978c6710c767fa084741e3d6424840003a62":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["e9017cf144952056066919f1ebc7897ff9bd71b1","63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}