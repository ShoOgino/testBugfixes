{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/ForDeltaUtil#encodeDeltas(long[],DataOutput).mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/ForDeltaUtil#encodeDeltas(long[],DataOutput).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Encode deltas of a strictly monotonically increasing sequence of integers.\n   * The provided {@code longs} are expected to be deltas between consecutive values.\n   */\n  void encodeDeltas(long[] longs, DataOutput out) throws IOException {\n    if (longs[0] == 1 && PForUtil.allEqual(longs)) { // happens with very dense postings\n      out.writeByte((byte) 0);\n    } else {\n      long or = 0;\n      for (long l : longs) {\n        or |= l;\n      }\n      assert or != 0;\n      final int bitsPerValue = PackedInts.bitsRequired(or);\n      out.writeByte((byte) bitsPerValue);\n      forUtil.encode(longs, bitsPerValue, out);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}