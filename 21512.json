{"path":"lucene/core/src/java/org/apache/lucene/index/Terms#iterator(TermsEnum).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Terms#iterator(TermsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Terms#iterator(TermsEnum).mjava","sourceNew":"  /** Returns an iterator that will step through all\n   *  terms. This method will not return null.  If you have\n   *  a previous TermsEnum, for example from a different\n   *  field, you can pass it for possible reuse if the\n   *  implementation can do so. */\n  public abstract TermsEnum iterator(TermsEnum reuse) throws IOException;\n\n","sourceOld":"  /** Returns an iterator that will step through all\n   *  terms. This method will not return null.  If you have\n   *  a previous TermsEnum, for example from a different\n   *  field, you can pass it for possible reuse if the\n   *  implementation can do so. */\n  public abstract TermsEnum iterator(TermsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Terms#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/Terms#iterator(TermsEnum).mjava","sourceNew":"  /** Returns an iterator that will step through all\n   *  terms. This method will not return null.  If you have\n   *  a previous TermsEnum, for example from a different\n   *  field, you can pass it for possible reuse if the\n   *  implementation can do so. */\n  public abstract TermsEnum iterator() throws IOException;\n\n","sourceOld":"  /** Returns an iterator that will step through all\n   *  terms. This method will not return null.  If you have\n   *  a previous TermsEnum, for example from a different\n   *  field, you can pass it for possible reuse if the\n   *  implementation can do so. */\n  public abstract TermsEnum iterator(TermsEnum reuse) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}