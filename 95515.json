{"path":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"/dev/null","sourceNew":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1b4f9f023bf5098df34505adf1ed91daa67c239","date":1157655314,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"468970e5c98bb1c832c6afa7a4587f03ecf16ba2","date":1172103730,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n\n  }\n\n","bugFix":null,"bugIntro":["27be4bdc55e85b001df476616dc1f6e68c3148e6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85a70962f5680a2c24a7abffb6d37d3ca2bfaaff","date":1172104671,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"269c8e9f1563aaf046389326e061a3a2c6a62a73","date":1173126130,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n    populate();\n\n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi qf\",\n            req(\"q\", \"cool\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"qf\", \"subject\"\n                ,\"qf\", \"features_t\"\n                )\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='42']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                ,\"bq\", \"subject:cool^4\"\n                ,\"debugQuery\", \"true\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='8675309']\"\n            ,\"//result/doc[3]/int[@name='id'][.='42']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n\n    assertU(adoc(\"id\", \"666\",\n                 \"features_t\", \"cool and scary stuff\",\n                 \"subject\", \"traveling in hell\",\n                 \"t_s\", \"movie\",\n                 \"title\", \"The Omen\",\n                 \"weight\", \"87.9\",\n                 \"iind\", \"666\"));\n    assertU(adoc(\"id\", \"42\",\n                 \"features_t\", \"cool stuff\",\n                 \"subject\", \"traveling the galaxy\",\n                 \"t_s\", \"movie\", \"t_s\", \"book\",\n                 \"title\", \"Hitch Hiker's Guide to the Galaxy\",\n                 \"weight\", \"99.45\",\n                 \"iind\", \"42\"));\n    assertU(adoc(\"id\", \"1\",\n                 \"features_t\", \"nothing\",\n                 \"subject\", \"garbage\",\n                 \"t_s\", \"book\",\n                 \"title\", \"Most Boring Guide Ever\",\n                 \"weight\", \"77\",\n                 \"iind\", \"4\"));\n    assertU(adoc(\"id\", \"8675309\",\n                 \"features_t\", \"Wikedly memorable chorus and stuff\",\n                 \"subject\", \"One Cool Hot Chick\",\n                 \"t_s\", \"song\",\n                 \"title\", \"Jenny\",\n                 \"weight\", \"97.3\",\n                 \"iind\", \"8675309\"));\n    assertU(commit());\n    \n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"27be4bdc55e85b001df476616dc1f6e68c3148e6","date":1249587040,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n    populate();\n\n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi qf\",\n            req(\"q\", \"cool\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"qf\", \"subject\"\n                ,\"qf\", \"features_t\"\n                )\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='42']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                ,\"bq\", \"subject:cool^4\"\n                ,\"debugQuery\", \"true\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='8675309']\"\n            ,\"//result/doc[3]/int[@name='id'][.='42']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:9999\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n    populate();\n\n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi qf\",\n            req(\"q\", \"cool\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"qf\", \"subject\"\n                ,\"qf\", \"features_t\"\n                )\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='42']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                ,\"bq\", \"subject:cool^4\"\n                ,\"debugQuery\", \"true\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='8675309']\"\n            ,\"//result/doc[3]/int[@name='id'][.='42']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:blahbalh\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","bugFix":["468970e5c98bb1c832c6afa7a4587f03ecf16ba2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6cc744e0727692162a19824a8dfdd8e9f1ae6e30","date":1266977575,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n    doTestSomeStuff(\"dismax\");\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n    populate();\n\n    assertQ(\"basic match\",\n            req(\"guide\")\n            ,\"//*[@numFound='2']\"\n            ,\"//lst[@name='facet_fields']/lst[@name='t_s']\"\n            ,\"*[count(//lst[@name='t_s']/int)=3]\"\n            ,\"//lst[@name='t_s']/int[@name='book'][.='2']\"\n            ,\"//lst[@name='t_s']/int[@name='movie'][.='1']\"\n            );\n    \n    assertQ(\"basic cross field matching, boost on same field matching\",\n            req(\"cool stuff\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='42']\"\n            ,\"//result/doc[2]/int[@name='id'][.='666']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi qf\",\n            req(\"q\", \"cool\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"qf\", \"subject\"\n                ,\"qf\", \"features_t\"\n                )\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='42']\"\n            ,\"//result/doc[3]/int[@name='id'][.='8675309']\"\n            );\n\n    assertQ(\"multi boost query\",\n            req(\"q\", \"cool stuff\"\n                ,\"qt\", \"dismax\"\n                ,\"version\", \"2.0\"\n                ,\"bq\", \"subject:hell^400\"\n                ,\"bq\", \"subject:cool^4\"\n                ,\"debugQuery\", \"true\"\n                )\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/int[@name='id'][.='666']\"\n            ,\"//result/doc[2]/int[@name='id'][.='8675309']\"\n            ,\"//result/doc[3]/int[@name='id'][.='42']\"\n            );\n    \n    assertQ(\"minimum mm is three\",\n            req(\"cool stuff traveling\")\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/int[@name='id'][. ='42']\"\n            ,\"//result/doc[2]/int[@name='id'][. ='666']\"\n            );\n    \n    assertQ(\"at 4 mm allows one missing \",\n            req(\"cool stuff traveling jenny\")\n            ,\"//*[@numFound='3']\"\n            );\n\n    assertQ(\"relying on ALTQ from config\",\n            req( \"qt\", \"dismax\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='1']\"\n            );\n    \n    assertQ(\"explicit ALTQ\",\n            req( \"qt\", \"dismax\",\n                 \"q.alt\", \"id:9999\",\n                 \"fq\", \"id:666\",\n                 \"facet\", \"false\" )\n            ,\"//*[@numFound='0']\"\n            );\n\n    assertQ(\"no query slop == no match\",\n            req( \"qt\", \"dismax\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='0']\"\n            );\n    assertQ(\"query slop == match\",\n            req( \"qt\", \"dismax\",\n                 \"qs\", \"2\",\n                 \"q\", \"\\\"cool chick\\\"\" )\n            ,\"//*[@numFound='1']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","pathOld":"src/test/org/apache/solr/DisMaxRequestHandlerTest#testSomeStuff().mjava","sourceNew":"  public void testSomeStuff() throws Exception {\n    doTestSomeStuff(\"dismax\");\n  }\n\n","sourceOld":"  public void testSomeStuff() throws Exception {\n    doTestSomeStuff(\"dismax\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6cc744e0727692162a19824a8dfdd8e9f1ae6e30":["27be4bdc55e85b001df476616dc1f6e68c3148e6"],"d1b4f9f023bf5098df34505adf1ed91daa67c239":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"269c8e9f1563aaf046389326e061a3a2c6a62a73":["85a70962f5680a2c24a7abffb6d37d3ca2bfaaff"],"468970e5c98bb1c832c6afa7a4587f03ecf16ba2":["d1b4f9f023bf5098df34505adf1ed91daa67c239"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"85a70962f5680a2c24a7abffb6d37d3ca2bfaaff":["468970e5c98bb1c832c6afa7a4587f03ecf16ba2"],"ad94625fb8d088209f46650c8097196fec67f00c":["6cc744e0727692162a19824a8dfdd8e9f1ae6e30"],"27be4bdc55e85b001df476616dc1f6e68c3148e6":["269c8e9f1563aaf046389326e061a3a2c6a62a73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6cc744e0727692162a19824a8dfdd8e9f1ae6e30":["ad94625fb8d088209f46650c8097196fec67f00c"],"d1b4f9f023bf5098df34505adf1ed91daa67c239":["468970e5c98bb1c832c6afa7a4587f03ecf16ba2"],"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["d1b4f9f023bf5098df34505adf1ed91daa67c239"],"269c8e9f1563aaf046389326e061a3a2c6a62a73":["27be4bdc55e85b001df476616dc1f6e68c3148e6"],"468970e5c98bb1c832c6afa7a4587f03ecf16ba2":["85a70962f5680a2c24a7abffb6d37d3ca2bfaaff"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a70962f5680a2c24a7abffb6d37d3ca2bfaaff":["269c8e9f1563aaf046389326e061a3a2c6a62a73"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"27be4bdc55e85b001df476616dc1f6e68c3148e6":["6cc744e0727692162a19824a8dfdd8e9f1ae6e30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}