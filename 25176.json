{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingDocsAndPositionsEnum#nextPosition().mjava","commits":[{"id":"cb767289784b682dea51f9e6d7222add811edb77","date":1362902138,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingDocsAndPositionsEnum#nextPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      pos = postingInput.readVInt();\n      if (storeOffsets) {\n        startOffset = postingInput.readVInt();\n        endOffset = postingInput.readVInt();\n      }\n      int length = postingInput.readVInt();\n      if (length > 0) {\n        if (length >= payload.bytes.length) {\n          payload.grow(length + 1);\n        }\n        postingInput.readBytes(payload.bytes, 0, length);\n      }\n      payload.length = length;\n      return pos;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13fe4d5d741307196ee33ffec4bc823f490d53bb","date":1363961694,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      final int token = postingInput.readVInt();\n      pos += token >>> 1;\n      if (storeOffsets) {\n        startOffset = endOffset + postingInput.readVInt();\n        endOffset = startOffset + postingInput.readVInt();\n      }\n      if ((token & 1) != 0) {\n        payload.offset = 0;\n        payload.length = postingInput.readVInt();\n        if (payload.length > payload.bytes.length) {\n          payload.bytes = new byte[ArrayUtil.oversize(payload.length, 1)];\n        }\n        postingInput.readBytes(payload.bytes, 0, payload.length);\n      } else {\n        payload.length = 0;\n      }\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      pos = postingInput.readVInt();\n      if (storeOffsets) {\n        startOffset = postingInput.readVInt();\n        endOffset = postingInput.readVInt();\n      }\n      int length = postingInput.readVInt();\n      if (length > 0) {\n        if (length >= payload.bytes.length) {\n          payload.grow(length + 1);\n        }\n        postingInput.readBytes(payload.bytes, 0, length);\n      }\n      payload.length = length;\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingLeafReader.SortingDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader.SortingDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      final int token = postingInput.readVInt();\n      pos += token >>> 1;\n      if (storeOffsets) {\n        startOffset = endOffset + postingInput.readVInt();\n        endOffset = startOffset + postingInput.readVInt();\n      }\n      if ((token & 1) != 0) {\n        payload.offset = 0;\n        payload.length = postingInput.readVInt();\n        if (payload.length > payload.bytes.length) {\n          payload.bytes = new byte[ArrayUtil.oversize(payload.length, 1)];\n        }\n        postingInput.readBytes(payload.bytes, 0, payload.length);\n      } else {\n        payload.length = 0;\n      }\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      final int token = postingInput.readVInt();\n      pos += token >>> 1;\n      if (storeOffsets) {\n        startOffset = endOffset + postingInput.readVInt();\n        endOffset = startOffset + postingInput.readVInt();\n      }\n      if ((token & 1) != 0) {\n        payload.offset = 0;\n        payload.length = postingInput.readVInt();\n        if (payload.length > payload.bytes.length) {\n          payload.bytes = new byte[ArrayUtil.oversize(payload.length, 1)];\n        }\n        postingInput.readBytes(payload.bytes, 0, payload.length);\n      } else {\n        payload.length = 0;\n      }\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb767289784b682dea51f9e6d7222add811edb77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"13fe4d5d741307196ee33ffec4bc823f490d53bb":["cb767289784b682dea51f9e6d7222add811edb77"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["13fe4d5d741307196ee33ffec4bc823f490d53bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb767289784b682dea51f9e6d7222add811edb77"],"cb767289784b682dea51f9e6d7222add811edb77":["13fe4d5d741307196ee33ffec4bc823f490d53bb"],"13fe4d5d741307196ee33ffec4bc823f490d53bb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}