{"path":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","commits":[{"id":"5275a994b4fc707fafce0408625bd3456edc28a4","date":1400004510,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = new BytesRef();\n    v.lookupOrd(0, value);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    v.lookupOrd(1, value);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = new BytesRef();\n    v.lookupOrd(0, value);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    v.lookupOrd(1, value);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = new BytesRef();\n    v.lookupOrd(0, value);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    v.lookupOrd(1, value);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = new BytesRef();\n    v.lookupOrd(0, value);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    v.lookupOrd(1, value);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0b3768e97375c7a745c68f0b54710e8bedccc11","date":1406635606,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertNoSilentInsanity(ar, \"foo\", DocValuesType.SORTED_SET);\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["5275a994b4fc707fafce0408625bd3456edc28a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.shutdown();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    AtomicReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new IntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), NumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), NumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestUninvertingReader#testSortedSetFloat().mjava","sourceNew":null,"sourceOld":"  public void testSortedSetFloat() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));\n    \n    Document doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(5f), Field.Store.NO));\n    doc.add(new LegacyIntField(\"foo\", Float.floatToRawIntBits(-3f), Field.Store.NO));\n    iw.addDocument(doc);\n    \n    iw.forceMerge(1);\n    iw.close();\n    \n    DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), \n                         Collections.singletonMap(\"foo\", Type.SORTED_SET_FLOAT));\n    LeafReader ar = ir.leaves().get(0).reader();\n    \n    SortedSetDocValues v = ar.getSortedSetDocValues(\"foo\");\n    assertEquals(2, v.getValueCount());\n    \n    v.setDocument(0);\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    v.setDocument(1);\n    assertEquals(0, v.nextOrd());\n    assertEquals(1, v.nextOrd());\n    assertEquals(SortedSetDocValues.NO_MORE_ORDS, v.nextOrd());\n    \n    BytesRef value = v.lookupOrd(0);\n    assertEquals(Float.floatToRawIntBits(-3f), LegacyNumericUtils.prefixCodedToInt(value));\n    \n    value = v.lookupOrd(1);\n    assertEquals(Float.floatToRawIntBits(5f), LegacyNumericUtils.prefixCodedToInt(value));\n    TestUtil.checkReader(ir);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["770342641f7b505eaa8dccdc666158bff2419109"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["770342641f7b505eaa8dccdc666158bff2419109","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"5275a994b4fc707fafce0408625bd3456edc28a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"83870855d82aba6819217abeff5a40779dbb28b4":["770342641f7b505eaa8dccdc666158bff2419109","0e121d43b5a10f2df530f406f935102656e9c4e8"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"770342641f7b505eaa8dccdc666158bff2419109":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["770342641f7b505eaa8dccdc666158bff2419109","0e121d43b5a10f2df530f406f935102656e9c4e8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5275a994b4fc707fafce0408625bd3456edc28a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b0b3768e97375c7a745c68f0b54710e8bedccc11":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5275a994b4fc707fafce0408625bd3456edc28a4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"770342641f7b505eaa8dccdc666158bff2419109":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["770342641f7b505eaa8dccdc666158bff2419109"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5275a994b4fc707fafce0408625bd3456edc28a4","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"b0b3768e97375c7a745c68f0b54710e8bedccc11":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}