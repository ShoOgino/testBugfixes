{"path":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","commits":[{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n    if (weightField == null) {\n      throw new IllegalArgumentException(WEIGHT_FIELD + \" is a mandatory parameter\");\n    }\n    \n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n    if (weightField == null) {\n      throw new IllegalArgumentException(WEIGHT_FIELD + \" is a mandatory parameter\");\n    }\n    \n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e32ceab986d95a74556d89e2209969f6b049883a","date":1425358421,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n\n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","sourceOld":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n    if (weightField == null) {\n      throw new IllegalArgumentException(WEIGHT_FIELD + \" is a mandatory parameter\");\n    }\n    \n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n\n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","sourceOld":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n    if (weightField == null) {\n      throw new IllegalArgumentException(WEIGHT_FIELD + \" is a mandatory parameter\");\n    }\n    \n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de1635ba58109b4c7c7da50f4dad433333258904","date":1444503719,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/DocumentDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    String contextField = (String) params.get(CONTEXT_FIELD);\n\n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n\n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField, contextField);\n  }\n\n","sourceOld":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String) params.get(FIELD);\n    String weightField = (String) params.get(WEIGHT_FIELD);\n    String payloadField = (String) params.get(PAYLOAD_FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(FIELD + \" is a mandatory parameter\");\n    }\n\n    return new DocumentDictionary(searcher.getIndexReader(), field, weightField, payloadField);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7f2e96099703c24c0c63d27806ba7020626b649b","e32ceab986d95a74556d89e2209969f6b049883a"],"e32ceab986d95a74556d89e2209969f6b049883a":["7f2e96099703c24c0c63d27806ba7020626b649b"],"de1635ba58109b4c7c7da50f4dad433333258904":["e32ceab986d95a74556d89e2209969f6b049883a"],"7f2e96099703c24c0c63d27806ba7020626b649b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f2e96099703c24c0c63d27806ba7020626b649b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de1635ba58109b4c7c7da50f4dad433333258904"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e32ceab986d95a74556d89e2209969f6b049883a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","de1635ba58109b4c7c7da50f4dad433333258904"],"de1635ba58109b4c7c7da50f4dad433333258904":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f2e96099703c24c0c63d27806ba7020626b649b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e32ceab986d95a74556d89e2209969f6b049883a","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f2e96099703c24c0c63d27806ba7020626b649b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}