{"path":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random, reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random, reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random, reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"978de4e2d23054c6624dd5928ddeb734dca68eec","date":1370592803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2165505a28a4f836f04ed5eb23bc64a6faae1b1e","date":1418824313,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"//  \n  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6105d385afcbf42689e171e9bcea48d0c9ff6c","date":1454692764,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestStressIndexing2#testRandomIWReader().mjava","sourceNew":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testRandomIWReader() throws Throwable {\n    Directory dir = newDirectory();\n    \n    // TODO: verify equals using IW.getReader\n    DocsAndWriter dw = indexRandomIWReader(5, 3, 100, dir);\n    DirectoryReader reader = dw.writer.getReader();\n    dw.writer.commit();\n    verifyEquals(random(), reader, dir, \"id\");\n    reader.close();\n    dw.writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e6105d385afcbf42689e171e9bcea48d0c9ff6c":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"978de4e2d23054c6624dd5928ddeb734dca68eec":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e","1e6105d385afcbf42689e171e9bcea48d0c9ff6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e","b470f36a9372c97283360b1304eacbde22df6c0d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["978de4e2d23054c6624dd5928ddeb734dca68eec"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"1e6105d385afcbf42689e171e9bcea48d0c9ff6c":["b470f36a9372c97283360b1304eacbde22df6c0d"],"978de4e2d23054c6624dd5928ddeb734dca68eec":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["978de4e2d23054c6624dd5928ddeb734dca68eec"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["1e6105d385afcbf42689e171e9bcea48d0c9ff6c","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}