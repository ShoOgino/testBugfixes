{"path":"lucene/core/src/java/org/apache/lucene/util/TimSorter#nextRun().mjava","commits":[{"id":"dcc555744b1a581a4beccd0b75f8d3fe49735a2f","date":1367588265,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/TimSorter#nextRun().mjava","pathOld":"/dev/null","sourceNew":"  /** Compute the length of the next run, make the run sorted and return its\n   *  length. */\n  int nextRun() {\n    final int runBase = runEnd(0);\n    assert runBase < to;\n    if (runBase == to - 1) {\n      return 1;\n    }\n    int o = runBase + 2;\n    if (compare(runBase, runBase+1) > 0) {\n      // run must be strictly descending\n      while (o < to && compare(o - 1, o) > 0) {\n        ++o;\n      }\n      reverse(runBase, o);\n    } else {\n      // run must be non-descending\n      while (o < to && compare(o - 1, o) <= 0) {\n        ++o;\n      }\n    }\n    final int runHi = Math.max(o, Math.min(to, runBase + minRun));\n    binarySort(runBase, runHi, o);\n    return runHi - runBase;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}