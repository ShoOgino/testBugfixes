{"path":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","commits":[{"id":"433777d1eaf9998136cd16515dc0e1eb26f5d535","date":1273839120,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(false, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(false, false, NUM_DOCS, true);\n\n    // addIndexesNoOptimize - single commit in each\n    doTest(true, false, NUM_DOCS, false);\n\n    // addIndexesNoOptimize - multiple commits in each\n    doTest(true, false, NUM_DOCS, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(false, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(false, false, NUM_DOCS, true);\n\n    // addIndexesNoOptimize - single commit in each\n    doTest(true, false, NUM_DOCS, false);\n\n    // addIndexesNoOptimize - multiple commits in each\n    doTest(true, false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    Random random = newRandom();\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    Random random = newRandom();\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04ecceea775208973388bb5bcc129d661ca1f9b6","date":1327925961,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Ignore(\"This test does not work, as PerDirPayloadProcessor is currently broken (see nocommit in SegmentMerger): \"+\n      \"SegmentReader/AtomicReader does not know its directory. This is broken, it should be a PayLoadProcessorProvider per AtomicReader!\")\n  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb4f1343ffbdd2b940c3cbcaa20c36c4c293e157","date":1327935362,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Ignore(\"This test does not work, as PerDirPayloadProcessor is currently broken (see nocommit in SegmentMerger): \"+\n      \"SegmentReader/AtomicReader does not know its directory. This is broken, it should be a PayLoadProcessorProvider per AtomicReader!\")\n  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider#testAddIndexesIntoExisting().mjava","sourceNew":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","sourceOld":"  @Test\n  public void testAddIndexesIntoExisting() throws Exception {\n    // addIndexes - single commit in each\n    doTest(random, false, NUM_DOCS, false);\n\n    // addIndexes - multiple commits in each\n    doTest(random, false, NUM_DOCS, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"433777d1eaf9998136cd16515dc0e1eb26f5d535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04ecceea775208973388bb5bcc129d661ca1f9b6":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"fb4f1343ffbdd2b940c3cbcaa20c36c4c293e157":["04ecceea775208973388bb5bcc129d661ca1f9b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["433777d1eaf9998136cd16515dc0e1eb26f5d535"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","04ecceea775208973388bb5bcc129d661ca1f9b6","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["433777d1eaf9998136cd16515dc0e1eb26f5d535"],"433777d1eaf9998136cd16515dc0e1eb26f5d535":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"04ecceea775208973388bb5bcc129d661ca1f9b6":["fb4f1343ffbdd2b940c3cbcaa20c36c4c293e157"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"fb4f1343ffbdd2b940c3cbcaa20c36c4c293e157":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fb4f1343ffbdd2b940c3cbcaa20c36c4c293e157","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}