{"path":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#setUp().mjava","commits":[{"id":"657704b225b01c6ff4bada5b6667f1f60aaaad0f","date":1523436207,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(FIELD_WITH_OFFSETS, docFields[i], OFFSETS));\n      doc.add(newField(FIELD_NO_OFFSETS, docFields[i], TextField.TYPE_STORED));\n      doc.add(newField(FIELD_DOCS_ONLY, docFields[i], DOCS));\n      doc.add(newField(FIELD_FREQS, docFields[i], DOCS_AND_FREQS));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      doc.add(newField(\"id\", Integer.toString(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(getOnlyLeafReader(reader));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(FIELD_WITH_OFFSETS, docFields[i], OFFSETS));\n      doc.add(newField(FIELD_NO_OFFSETS, docFields[i], TextField.TYPE_STORED));\n      doc.add(newField(FIELD_DOCS_ONLY, docFields[i], DOCS));\n      doc.add(newField(FIELD_FREQS, docFields[i], DOCS_AND_FREQS));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      doc.add(newField(\"id\", Integer.toString(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(getOnlyLeafReader(reader));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"663d52bb0579393854db3d03369d8c099b8fbccc","date":1554891602,"type":3,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMatchesIterator#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(FIELD_WITH_OFFSETS, docFields[i], OFFSETS));\n      doc.add(newField(FIELD_NO_OFFSETS, docFields[i], TextField.TYPE_STORED));\n      doc.add(newField(FIELD_DOCS_ONLY, docFields[i], DOCS));\n      doc.add(newField(FIELD_FREQS, docFields[i], DOCS_AND_FREQS));\n      doc.add(new IntPoint(FIELD_POINT, 10));\n      doc.add(new NumericDocValuesField(FIELD_POINT, 10));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      doc.add(newField(\"id\", Integer.toString(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(getOnlyLeafReader(reader));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(newField(FIELD_WITH_OFFSETS, docFields[i], OFFSETS));\n      doc.add(newField(FIELD_NO_OFFSETS, docFields[i], TextField.TYPE_STORED));\n      doc.add(newField(FIELD_DOCS_ONLY, docFields[i], DOCS));\n      doc.add(newField(FIELD_FREQS, docFields[i], DOCS_AND_FREQS));\n      doc.add(new NumericDocValuesField(\"id\", i));\n      doc.add(newField(\"id\", Integer.toString(i), TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    reader = writer.getReader();\n    writer.close();\n    searcher = newSearcher(getOnlyLeafReader(reader));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"663d52bb0579393854db3d03369d8c099b8fbccc":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","657704b225b01c6ff4bada5b6667f1f60aaaad0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["663d52bb0579393854db3d03369d8c099b8fbccc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["657704b225b01c6ff4bada5b6667f1f60aaaad0f","43345f1452f9510f8aaadae6156fe0c834e7d957"],"657704b225b01c6ff4bada5b6667f1f60aaaad0f":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"663d52bb0579393854db3d03369d8c099b8fbccc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["663d52bb0579393854db3d03369d8c099b8fbccc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}