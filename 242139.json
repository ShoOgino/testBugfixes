{"path":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","commits":[{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(this, metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    manager.registerGauge(this, registryName, metricsMap, tag, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(this, metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrFieldCacheBean#initializeMetrics(SolrMetricsContext,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap(map -> {\n      if (!disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.solrMetricsContext = parentContext;\n    MetricsMap metricsMap = new MetricsMap((detailed, map) -> {\n      if (detailed && !disableEntryList && !disableJmxEntryList) {\n        UninvertingReader.FieldCacheStats fieldCacheStats = UninvertingReader.getUninvertedStats();\n        String[] entries = fieldCacheStats.info;\n        map.put(\"entries_count\", entries.length);\n        map.put(\"total_size\", fieldCacheStats.totalSize);\n        for (int i = 0; i < entries.length; i++) {\n          final String entry = entries[i];\n          map.put(\"entry#\" + i, entry);\n        }\n      } else {\n        map.put(\"entries_count\", UninvertingReader.getUninvertedStatsSize());\n      }\n    });\n    solrMetricsContext.gauge(metricsMap, true, \"fieldCache\", Category.CACHE.toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"233211c3dbff6f367588be5bbb4ac77f72eae193":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["233211c3dbff6f367588be5bbb4ac77f72eae193"]},"commit2Childs":{"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}