{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return Explanation.match(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return new Explanation(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return Explanation.match(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return Explanation.match(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/serialized/SerializedDVStrategy.ShapeDocValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return Explanation.match(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final BinaryDocValues docValues = readerContext.reader().getBinaryDocValues(fieldName);\n\n      return new FunctionValues() {\n        int bytesRefDoc = -1;\n        BytesRefBuilder bytesRef = new BytesRefBuilder();\n\n        boolean fillBytes(int doc) {\n          if (bytesRefDoc != doc) {\n            bytesRef.copyBytes(docValues.get(doc));\n            bytesRefDoc = doc;\n          }\n          return bytesRef.length() != 0;\n        }\n\n        @Override\n        public boolean exists(int doc) {\n          return fillBytes(doc);\n        }\n\n        @Override\n        public boolean bytesVal(int doc, BytesRefBuilder target) {\n          target.clear();\n          if (fillBytes(doc)) {\n            target.copyBytes(bytesRef);\n            return true;\n          } else {\n            return false;\n          }\n        }\n\n        @Override\n        public Object objectVal(int docId) {\n          if (!fillBytes(docId))\n            return null;\n          DataInputStream dataInput = new DataInputStream(\n              new ByteArrayInputStream(bytesRef.bytes(), 0, bytesRef.length()));\n          try {\n            return binaryCodec.readShape(dataInput);\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        }\n\n        @Override\n        public Explanation explain(int doc) {\n          return Explanation.match(Float.NaN, toString(doc));\n        }\n\n        @Override\n        public String toString(int doc) {\n          return description() + \"=\" + objectVal(doc);//TODO truncate?\n        }\n\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}