{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","commits":[{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    try {\n      int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n      if (v != 0) return v;\n      if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n        v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n        if (v == 0) {\n          v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n          v = this.replica.op == LESS_THAN ? v : v * -1;\n        }\n        return v;\n      } else {\n        return 0;\n      }\n    } catch (NullPointerException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9837f40c922407d857991971de6def18eda0857b","date":1529994497,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Preference.compareWithTolerance((Double) this.replica.val, (Double) that.replica.val, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Preference.compareWithTolerance((Double) this.replica.val, (Double) that.replica.val, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Preference.compareWithTolerance((Double) this.replica.val, (Double) that.replica.val, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Long.compare((Long) this.replica.val, (Long) that.replica.val);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16a22f8085bb46850c91784e94f7714345011404","date":1533741843,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        Double thisVal = this.replica.val instanceof RangeVal ? ((RangeVal) this.replica.val).max.doubleValue() : (Double) this.replica.val;\n        Double thatVal = that.replica.val instanceof RangeVal ? ((RangeVal) that.replica.val).max.doubleValue() : (Double) that.replica.val;\n        v = Preference.compareWithTolerance(thisVal, thatVal, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        v = Preference.compareWithTolerance((Double) this.replica.val, (Double) that.replica.val, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#compareTo(Clause).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int compareTo(Clause that) {\n    int v = Integer.compare(this.tag.op.priority, that.tag.op.priority);\n    if (v != 0) return v;\n    if (this.isPerCollectiontag() && that.isPerCollectiontag()) {\n      v = Integer.compare(this.replica.op.priority, that.replica.op.priority);\n      if (v == 0) {// higher the number of replicas , harder to satisfy\n        Double thisVal = this.replica.val instanceof RangeVal ? ((RangeVal) this.replica.val).max.doubleValue() : (Double) this.replica.val;\n        Double thatVal = that.replica.val instanceof RangeVal ? ((RangeVal) that.replica.val).max.doubleValue() : (Double) that.replica.val;\n        v = Preference.compareWithTolerance(thisVal, thatVal, 1);\n        v = this.replica.op == LESS_THAN ? v : v * -1;\n      }\n      if (v == 0) v = compareTypes(this.type, that.type);\n      return v;\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["28288370235ed02234a64753cdbf0c6ec096304a","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["16a22f8085bb46850c91784e94f7714345011404"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["98f11c416d30e556e0004a9a84960702d12d35b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"16a22f8085bb46850c91784e94f7714345011404":["9837f40c922407d857991971de6def18eda0857b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["560c18d71dad43d675158783c3840f8c80d6d39c","9837f40c922407d857991971de6def18eda0857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9837f40c922407d857991971de6def18eda0857b":["560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["28288370235ed02234a64753cdbf0c6ec096304a","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["560c18d71dad43d675158783c3840f8c80d6d39c","9837f40c922407d857991971de6def18eda0857b"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"28288370235ed02234a64753cdbf0c6ec096304a":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c"],"16a22f8085bb46850c91784e94f7714345011404":["3f504512a03d978990cbff30db0522b354e846db"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"9837f40c922407d857991971de6def18eda0857b":["16a22f8085bb46850c91784e94f7714345011404","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"560c18d71dad43d675158783c3840f8c80d6d39c":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9837f40c922407d857991971de6def18eda0857b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"98f11c416d30e556e0004a9a84960702d12d35b1":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}