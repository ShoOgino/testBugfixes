{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter).mjava","commits":[{"id":"b2a6913ca906832d1ef58d72498167acb00a7e4f","date":1330499260,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(DataImporter dataImporter) {\n    String collection = dataImporter.getCore().getCoreDescriptor()\n        .getCloudDescriptor().getCollectionName();\n    String persistFilename;\n    if(dataImporter.getHandlerName() != null){\n      persistFilename = dataImporter.getHandlerName() + \".properties\";\n    } else {\n      persistFilename = SimplePropertiesWriter.IMPORTER_PROPERTIES;\n    }\n    path = \"/configs/\" + collection + \"/\" + persistFilename;\n    zkClient = dataImporter.getCore().getCoreDescriptor().getCoreContainer()\n        .getZkController().getZkClient();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(DataImporter dataImporter) {\n    String collection = dataImporter.getCore().getCoreDescriptor()\n        .getCloudDescriptor().getCollectionName();\n    String persistFilename;\n    if(dataImporter.getHandlerName() != null){\n      persistFilename = dataImporter.getHandlerName() + \".properties\";\n    } else {\n      persistFilename = SimplePropertiesWriter.IMPORTER_PROPERTIES;\n    }\n    path = \"/configs/\" + collection + \"/\" + persistFilename;\n    zkClient = dataImporter.getCore().getCoreDescriptor().getCoreContainer()\n        .getZkController().getZkClient();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":5,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter,Map[String,String]).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter).mjava","sourceNew":"  @Override\n  public void init(DataImporter dataImporter, Map<String, String> params) {\n    super.init(dataImporter, params);\n    String collection = dataImporter.getCore().getCoreDescriptor()\n        .getCloudDescriptor().getCollectionName();\n    path = \"/configs/\" + collection + \"/\" + filename;\n    zkClient = dataImporter.getCore().getCoreDescriptor().getCoreContainer()\n        .getZkController().getZkClient();\n  }\n\n","sourceOld":"  @Override\n  public void init(DataImporter dataImporter) {\n    String collection = dataImporter.getCore().getCoreDescriptor()\n        .getCloudDescriptor().getCollectionName();\n    String persistFilename;\n    if(dataImporter.getHandlerName() != null){\n      persistFilename = dataImporter.getHandlerName() + \".properties\";\n    } else {\n      persistFilename = SimplePropertiesWriter.IMPORTER_PROPERTIES;\n    }\n    path = \"/configs/\" + collection + \"/\" + persistFilename;\n    zkClient = dataImporter.getCore().getCoreDescriptor().getCoreContainer()\n        .getZkController().getZkClient();\n  }\n\n","bugFix":null,"bugIntro":["2a2d5d7d5a5bc6b66022afef3bcc646148c796b2","9fd2b0e0e1141e4851e1281c4955c7690b374c3b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ZKPropertiesWriter#init(DataImporter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(DataImporter dataImporter) {\n    String collection = dataImporter.getCore().getCoreDescriptor()\n        .getCloudDescriptor().getCollectionName();\n    String persistFilename;\n    if(dataImporter.getHandlerName() != null){\n      persistFilename = dataImporter.getHandlerName() + \".properties\";\n    } else {\n      persistFilename = SimplePropertiesWriter.IMPORTER_PROPERTIES;\n    }\n    path = \"/configs/\" + collection + \"/\" + persistFilename;\n    zkClient = dataImporter.getCore().getCoreDescriptor().getCoreContainer()\n        .getZkController().getZkClient();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["b2a6913ca906832d1ef58d72498167acb00a7e4f"],"b2a6913ca906832d1ef58d72498167acb00a7e4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b2a6913ca906832d1ef58d72498167acb00a7e4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b2a6913ca906832d1ef58d72498167acb00a7e4f","b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"]},"commit2Childs":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b2a6913ca906832d1ef58d72498167acb00a7e4f":["b4804614e0358954d5d9f51128fcf3cd79e6e25b","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","407687e67faf6e1f02a211ca078d8e3eed631027"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2a6913ca906832d1ef58d72498167acb00a7e4f","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}