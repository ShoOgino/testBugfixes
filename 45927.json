{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","sourceNew":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      return Explanation.match(sc, BoostedQuery.this.toString() + \", product of:\", subQueryExpl, vals.explain(doc));\n    }\n\n","sourceOld":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      Explanation res = new ComplexExplanation(\n        true, sc, BoostedQuery.this.toString() + \", product of:\");\n      res.addDetail(subQueryExpl);\n      res.addDetail(vals.explain(doc));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb","date":1512565563,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.CustomScorer#explain(int).mjava","sourceNew":null,"sourceOld":"    public Explanation explain(int doc) throws IOException {\n      Explanation subQueryExpl = weight.qWeight.explain(readerContext ,doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      float sc = subQueryExpl.getValue() * vals.floatVal(doc);\n      return Explanation.match(sc, BoostedQuery.this.toString() + \", product of:\", subQueryExpl, vals.explain(doc));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}