{"path":"src/java/org/apache/solr/analysis/PhoneticFilter#next().mjava","commits":[{"id":"ccea5bb6cc45a411fd349ce24ab5a37b343f1d7f","date":1178835005,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/PhoneticFilter#next().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Token next() throws IOException {\n    if( save != null ) {\n      Token temp = save;\n      save = null;\n      return temp;\n    }\n    \n    Token t = input.next();\n    if( t != null ) {\n      String value = t.termText();\n      try {\n        value = encoder.encode(t.termText()).toString();\n      } \n      catch (Exception ignored) {} // just use the direct text\n\n      Token m = new Token(value, t.startOffset(), t.endOffset(), name );\n      if( inject ) {\n        m.setPositionIncrement(0);\n        save = m;\n      }\n      else {\n        // replace the token rather then add it too the stream\n        return m;\n      }\n    }\n    return t;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe8ae1ed027200f075b0de9f264776fa32c4862f","date":1207066219,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/PhoneticFilter#next(Token).mjava","pathOld":"src/java/org/apache/solr/analysis/PhoneticFilter#next().mjava","sourceNew":"  @Override\n  public final Token next(Token in) throws IOException {\n    if( save != null ) {\n      Token temp = save;\n      save = null;\n      return temp;\n    }\n    \n    Token t = input.next(in);\n    if( t != null ) {\n      String value = new String(t.termBuffer(), 0, t.termLength());\n      try {\n        value = encoder.encode(value).toString();\n      } \n      catch (Exception ignored) {} // just use the direct text\n      //Token m = new Token(value, t.startOffset(), t.endOffset(), name );\n      if( inject ) {\n        save = (Token) t.clone();\n        save.setPositionIncrement(0);\n        save.setTermBuffer(value.toCharArray(), 0, value.length());\n      } else {\n        t.setTermBuffer(value.toCharArray(), 0, value.length());\n      }\n    }\n    return t;\n  }\n\n","sourceOld":"  @Override\n  public final Token next() throws IOException {\n    if( save != null ) {\n      Token temp = save;\n      save = null;\n      return temp;\n    }\n    \n    Token t = input.next();\n    if( t != null ) {\n      String value = t.termText();\n      try {\n        value = encoder.encode(t.termText()).toString();\n      } \n      catch (Exception ignored) {} // just use the direct text\n\n      Token m = new Token(value, t.startOffset(), t.endOffset(), name );\n      if( inject ) {\n        m.setPositionIncrement(0);\n        save = m;\n      }\n      else {\n        // replace the token rather then add it too the stream\n        return m;\n      }\n    }\n    return t;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["ccea5bb6cc45a411fd349ce24ab5a37b343f1d7f"],"ccea5bb6cc45a411fd349ce24ab5a37b343f1d7f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":[],"ccea5bb6cc45a411fd349ce24ab5a37b343f1d7f":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ccea5bb6cc45a411fd349ce24ab5a37b343f1d7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe8ae1ed027200f075b0de9f264776fa32c4862f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}