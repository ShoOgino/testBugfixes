{"path":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","commits":[{"id":"149f82651d1e396281d58808b8c03062649c54dd","date":1193047128,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"/dev/null","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      Weight w2 = (Weight) ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b97548d27406e9f33187836e1de98d473a63f5d","date":1196088721,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      Weight w2 = (Weight) ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    QueryWeight w = q.queryWeight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    QueryWeight w = q.queryWeight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ffe619bf5bbe00453bab7103c36fd38c8417f6c","date":1250619947,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip equals() test for now - most weights don't override equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip rquals() test for now - most weights don't overide equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","pathOld":"src/test/org/apache/lucene/search/QueryUtils#checkSerialization(Query,Searcher).mjava","sourceNew":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip equals() test for now - most weights don't override equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","sourceOld":"  /** check that the query weight is serializable. \n   * @throws IOException if serialization check fail. \n   */\n  private static void checkSerialization(Query q, Searcher s) throws IOException {\n    Weight w = q.weight(s);\n    try {\n      ByteArrayOutputStream bos = new ByteArrayOutputStream();\n      ObjectOutputStream oos = new ObjectOutputStream(bos);\n      oos.writeObject(w);\n      oos.close();\n      ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n      ois.readObject();\n      ois.close();\n      \n      //skip equals() test for now - most weights don't override equals() and we won't add this just for the tests.\n      //TestCase.assertEquals(\"writeObject(w) != w.  (\"+w+\")\",w2,w);   \n      \n    } catch (Exception e) {\n      IOException e2 = new IOException(\"Serialization failed for \"+w);\n      e2.initCause(e);\n      throw e2;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ffe619bf5bbe00453bab7103c36fd38c8417f6c":["fe941135bdfc28c81e20b4d21422f8726af34925"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"8b97548d27406e9f33187836e1de98d473a63f5d":["149f82651d1e396281d58808b8c03062649c54dd"],"052fac7830290bd38a04cddee1a121ee07656b56":["8b97548d27406e9f33187836e1de98d473a63f5d"],"149f82651d1e396281d58808b8c03062649c54dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1ffe619bf5bbe00453bab7103c36fd38c8417f6c"]},"commit2Childs":{"1ffe619bf5bbe00453bab7103c36fd38c8417f6c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["149f82651d1e396281d58808b8c03062649c54dd"],"fe941135bdfc28c81e20b4d21422f8726af34925":["1ffe619bf5bbe00453bab7103c36fd38c8417f6c"],"8b97548d27406e9f33187836e1de98d473a63f5d":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"149f82651d1e396281d58808b8c03062649c54dd":["8b97548d27406e9f33187836e1de98d473a63f5d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}