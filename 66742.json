{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    //nocommit should this context always be flush?\n    IndexOutput out = createOutput(dir, segmentFileName, context);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c162b4b9ef005383c38e0912c16267584dc40de5","date":1310021443,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    //nocommit should this context always be flush?\n    IndexOutput out = createOutput(dir, segmentFileName, context);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"7b91922b55d15444d554721b352861d028eb8278":["24230fe54121f9be9d85f2c2067536296785e421"],"c162b4b9ef005383c38e0912c16267584dc40de5":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c162b4b9ef005383c38e0912c16267584dc40de5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c162b4b9ef005383c38e0912c16267584dc40de5":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["c162b4b9ef005383c38e0912c16267584dc40de5"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}