{"path":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","commits":[{"id":"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","date":1342645458,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq, 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq, 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq, 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","sourceNew":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq.build(), 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","sourceOld":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq, 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestConjunctions#testTermConjunctionsWithOmitTF().mjava","sourceNew":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq.build(), 3);\n    assertEquals(1, td.totalHits.value);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","sourceOld":"  public void testTermConjunctionsWithOmitTF() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(F1, \"nutch\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(F2, \"is\")), BooleanClause.Occur.MUST);\n    TopDocs td = searcher.search(bq.build(), 3);\n    assertEquals(1, td.totalHits);\n    assertEquals(3F, td.scoreDocs[0].score, 0.001F); // f1:nutch + f2:is + f2:is\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","ea8268d5f00bb25a4ea1d0bac6e2ffe238712c45","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}