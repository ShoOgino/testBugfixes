{"path":"src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"3600cc523749f65697a76d2d0166cb0df07e458a","date":1229590227,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {  \n      try {\n        File protectedWordFiles = new File(wordFiles);\n        if (protectedWordFiles.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          //This cast is safe in Lucene\n          protectedWords = new CharArraySet(wlist, false);//No need to go through StopFilter as before, since it just uses a List internally\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            if (protectedWords == null)\n              protectedWords = new CharArraySet(wlist, false);\n            else\n              protectedWords.addAll(wlist);\n          }\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {  \n      try {\n        File protectedWordFiles = new File(wordFiles);\n        if (protectedWordFiles.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          //This cast is safe in Lucene\n          protectedWords = new CharArraySet(wlist, false);//No need to go through StopFilter as before, since it just uses a List internally\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            if (protectedWords == null)\n              protectedWords = new CharArraySet(wlist, false);\n            else\n              protectedWords.addAll(wlist);\n          }\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {  \n      try {\n        File protectedWordFiles = new File(wordFiles);\n        if (protectedWordFiles.exists()) {\n          List<String> wlist = loader.getLines(wordFiles);\n          //This cast is safe in Lucene\n          protectedWords = new CharArraySet(wlist, false);//No need to go through StopFilter as before, since it just uses a List internally\n        } else  {\n          List<String> files = StrUtils.splitFileNames(wordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            if (protectedWords == null)\n              protectedWords = new CharArraySet(wlist, false);\n            else\n              protectedWords.addAll(wlist);\n          }\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3600cc523749f65697a76d2d0166cb0df07e458a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3600cc523749f65697a76d2d0166cb0df07e458a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3600cc523749f65697a76d2d0166cb0df07e458a":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3600cc523749f65697a76d2d0166cb0df07e458a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}