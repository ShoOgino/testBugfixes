{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(PlanetModel,Polygon...).mjava","commits":[{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(PlanetModel,Polygon...).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#convertToDescription(Polygon...).mjava","sourceNew":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final PlanetModel planetModel, final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(planetModel, theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(planetModel, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","sourceOld":"  /**\n   * Convert a list of polygons to a list of polygon descriptions.\n   * @param polygons is the list of polygons to convert.\n   * @return the list of polygon descriptions.\n   */\n  private static List<GeoPolygonFactory.PolygonDescription> convertToDescription(final Polygon... polygons) {\n    final List<GeoPolygonFactory.PolygonDescription> descriptions = new ArrayList<>(polygons.length);\n    for (final Polygon polygon : polygons) {\n      final Polygon[] theHoles = polygon.getHoles();\n      final List<GeoPolygonFactory.PolygonDescription> holes = convertToDescription(theHoles);\n      \n      // Now do the polygon itself\n      final double[] polyLats = polygon.getPolyLats();\n      final double[] polyLons = polygon.getPolyLons();\n      \n      // I presume the arguments have already been checked\n      final List<GeoPoint> points = new ArrayList<>(polyLats.length-1);\n      // We skip the last point anyway because the API requires it to be repeated, and geo3d doesn't repeat it.\n      for (int i = 0; i < polyLats.length - 1; i++) {\n        final int index = polyLats.length - 2 - i;\n        points.add(new GeoPoint(PlanetModel.WGS84, fromDegrees(polyLats[index]), fromDegrees(polyLons[index])));\n      }\n      \n      descriptions.add(new GeoPolygonFactory.PolygonDescription(points, holes));\n    }\n    return descriptions;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}