{"path":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermBuffer#compareChars(char[],int,char[],int).mjava","sourceNew":"  private static final int compareChars(char[] chars1, int len1,\n                                        char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","sourceOld":"  private static final int compareChars(char[] chars1, int len1,\n                                        char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","sourceNew":"  private static int compareChars(char[] chars1, int len1,\n                                  char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","sourceOld":"  private static final int compareChars(char[] chars1, int len1,\n                                        char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","sourceNew":null,"sourceOld":"  private static int compareChars(char[] chars1, int len1,\n                                  char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","sourceNew":null,"sourceOld":"  private static int compareChars(char[] chars1, int len1,\n                                  char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#compareChars(char[],int,char[],int).mjava","sourceNew":null,"sourceOld":"  private static int compareChars(char[] chars1, int len1,\n                                  char[] chars2, int len2) {\n    final int end = len1 < len2 ? len1:len2;\n    for (int k = 0; k < end; k++) {\n      char c1 = chars1[k];\n      char c2 = chars2[k];\n      if (c1 != c2) {\n        return c1 - c2;\n      }\n    }\n    return len1 - len2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6267e1ce56c2eec111425690cd04e251b6f14952":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["6267e1ce56c2eec111425690cd04e251b6f14952","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["6267e1ce56c2eec111425690cd04e251b6f14952","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["6267e1ce56c2eec111425690cd04e251b6f14952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b103252dee6afa1b6d7a622c773d178788eb85a"]},"commit2Childs":{"6267e1ce56c2eec111425690cd04e251b6f14952":["3242a09f703274d3b9283f2064a1a33064b53a1b","4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"3242a09f703274d3b9283f2064a1a33064b53a1b":[],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3242a09f703274d3b9283f2064a1a33064b53a1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}