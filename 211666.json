{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","commits":[{"id":"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8","date":1324129595,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","pathOld":"/dev/null","sourceNew":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<FldType>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    Set<Comparable> previousIds = new HashSet<Comparable>();\n    List<Doc> docs = new ArrayList<Doc>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","sourceNew":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    Set<Comparable> previousIds = new HashSet<>();\n    List<Doc> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","sourceOld":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<FldType>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    Set<Comparable> previousIds = new HashSet<Comparable>();\n    List<Doc> docs = new ArrayList<Doc>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","sourceNew":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    @SuppressWarnings({\"rawtypes\"})\n    Set<Comparable> previousIds = new HashSet<>();\n    List<Doc> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","sourceOld":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    Set<Comparable> previousIds = new HashSet<>();\n    List<Doc> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#generateUniqueDocs(int).mjava","sourceNew":null,"sourceOld":"  private List<Doc> generateUniqueDocs(int numDocs) {\n    List<FldType> types = new ArrayList<>();\n    types.add(new FldType(ID, ONE_ONE, new SVal('A', 'Z', 4, 40)));\n    types.add(new FldType(\"description\", new IRange(1, 3), new SVal('a', 'c', 1, 1)));\n\n    @SuppressWarnings({\"rawtypes\"})\n    Set<Comparable> previousIds = new HashSet<>();\n    List<Doc> docs = new ArrayList<>(numDocs);\n    for (int i = 0; i < numDocs; i++) {\n      Doc doc = createDoc(types);\n      while (previousIds.contains(doc.id)) {\n        doc = createDoc(types);\n      }\n      previousIds.add(doc.id);\n      docs.add(doc);\n    }\n    return docs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["024e13388acbf5562fcbb77a129620982a5e2d79"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}