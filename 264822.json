{"path":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","commits":[{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"/dev/null","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"/dev/null","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","date":1466705968,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d6879a535f14bc53be7c86de58142558c4f9eee","date":1492512399,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, hiddenSysProps, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, hiddenSysProps, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa","date":1494330459,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, hiddenSysProps, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricReporterPlugins, hiddenSysProps, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76ee69c1ab922a45b03e3f1f9989847f66c269bc","date":1500448164,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f472c757c161e228505e389efda705e2cf3c09e","date":1501700089,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"defa11d88d50ec356d5e7428f1ebc89623e840ac","date":1527653148,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2be0a2886c76942ff986465eabde7b858895dc9","date":1555349228,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbaf96cfda5422c42955ce34344f0e01839894ea","date":1559675051,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      // if some things weren't set then set them now.  Simple primitives are set on the field declaration\n      if (loader == null) {\n        loader = new SolrResourceLoader(solrHome);\n      }\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath,\n                            solrHome, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8","date":1584125777,"type":3,"author":"Mike","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      // if some things weren't set then set them now.  Simple primitives are set on the field declaration\n      if (loader == null) {\n        loader = new SolrResourceLoader(solrHome);\n      }\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath,\n                            solrHome, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig, fromZookeeper);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      // if some things weren't set then set them now.  Simple primitives are set on the field declaration\n      if (loader == null) {\n        loader = new SolrResourceLoader(solrHome);\n      }\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath,\n                            solrHome, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373","date":1592489632,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NodeConfig.NodeConfigBuilder#build().mjava","sourceNew":"    public NodeConfig build() {\n      // if some things weren't set then set them now.  Simple primitives are set on the field declaration\n      if (loader == null) {\n        loader = new SolrResourceLoader(solrHome);\n      }\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath,\n                            solrHome, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig, fromZookeeper, allowPaths);\n    }\n\n","sourceOld":"    public NodeConfig build() {\n      // if some things weren't set then set them now.  Simple primitives are set on the field declaration\n      if (loader == null) {\n        loader = new SolrResourceLoader(solrHome);\n      }\n      return new NodeConfig(nodeName, coreRootDirectory, solrDataHome, booleanQueryMaxClauseCount,\n                            configSetBaseDirectory, sharedLibDirectory, shardHandlerFactoryConfig,\n                            updateShardHandlerConfig, coreAdminHandlerClass, collectionsAdminHandlerClass, healthCheckHandlerClass, infoHandlerClass, configSetsHandlerClass,\n                            logWatcherConfig, cloudConfig, coreLoadThreads, replayUpdatesThreads, transientCacheSize, useSchemaCache, managementPath,\n                            solrHome, loader, solrProperties,\n                            backupRepositoryPlugins, metricsConfig, transientCacheConfig, tracerConfig, fromZookeeper);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["8b6a4b585aed7660a589375f6a09b90efd29c961"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["e15199583d3635cb940942caed05132dd6c4c7c6"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["0265144286422ad99682a00904cc2536b79c8535"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76ee69c1ab922a45b03e3f1f9989847f66c269bc":["195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"9435d55e3ea95c5d94406d3affc36f9505b6a736":["0265144286422ad99682a00904cc2536b79c8535"],"defa11d88d50ec356d5e7428f1ebc89623e840ac":["2f472c757c161e228505e389efda705e2cf3c09e"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["e9017cf144952056066919f1ebc7897ff9bd71b1","76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"2f472c757c161e228505e389efda705e2cf3c09e":["76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2209af2c265d2258ec4b29c8cc78622d36994a15","a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["ff4ad7cb63f081454a1fa1e599d1cac95034f0b8"],"a2be0a2886c76942ff986465eabde7b858895dc9":["defa11d88d50ec356d5e7428f1ebc89623e840ac"],"0265144286422ad99682a00904cc2536b79c8535":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["936cdd5882761db3b844afd6f84ab81cbb011a75","2f472c757c161e228505e389efda705e2cf3c09e"],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["a2be0a2886c76942ff986465eabde7b858895dc9"],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["9435d55e3ea95c5d94406d3affc36f9505b6a736"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"e15199583d3635cb940942caed05132dd6c4c7c6":["2209af2c265d2258ec4b29c8cc78622d36994a15","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ff4ad7cb63f081454a1fa1e599d1cac95034f0b8"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"76ee69c1ab922a45b03e3f1f9989847f66c269bc":["936cdd5882761db3b844afd6f84ab81cbb011a75","2f472c757c161e228505e389efda705e2cf3c09e"],"ff4ad7cb63f081454a1fa1e599d1cac95034f0b8":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"9435d55e3ea95c5d94406d3affc36f9505b6a736":["0d6879a535f14bc53be7c86de58142558c4f9eee"],"defa11d88d50ec356d5e7428f1ebc89623e840ac":["a2be0a2886c76942ff986465eabde7b858895dc9"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"2f472c757c161e228505e389efda705e2cf3c09e":["defa11d88d50ec356d5e7428f1ebc89623e840ac","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac"],"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a2be0a2886c76942ff986465eabde7b858895dc9":["cbaf96cfda5422c42955ce34344f0e01839894ea"],"0265144286422ad99682a00904cc2536b79c8535":["8b6a4b585aed7660a589375f6a09b90efd29c961","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","9435d55e3ea95c5d94406d3affc36f9505b6a736"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0265144286422ad99682a00904cc2536b79c8535"],"cbaf96cfda5422c42955ce34344f0e01839894ea":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["e9017cf144952056066919f1ebc7897ff9bd71b1","76ee69c1ab922a45b03e3f1f9989847f66c269bc"],"0d6879a535f14bc53be7c86de58142558c4f9eee":["195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}