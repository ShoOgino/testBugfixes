{"path":"solr/core/src/test/org/apache/solr/update/MaxSizeAutoCommitTest#queryCore(SolrQueryRequest).mjava","commits":[{"id":"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd","date":1525384847,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MaxSizeAutoCommitTest#queryCore(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Executes the given query\n   * @param query the query to execute\n   * @return the number of documents found\n   */\n  public int queryCore(SolrQueryRequest query) throws Exception {\n    String responseStr = h.query(query);\n    try {\n      Map<String, Object> root = (Map<String, Object>) objectMapper.readValue(responseStr, Object.class);\n      Map<String, Object> rootResponse = (Map<String, Object>) root.get(\"response\");\n      return (int) rootResponse.get(\"numFound\");\n    } catch (Exception e) {\n      throw new RuntimeException(\"Unable to parse Solr query response\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27d6f83edecd216b844079cc682096091dfa9fbc","date":1534485921,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/MaxSizeAutoCommitTest#queryCore(SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  /**\n   * Executes the given query\n   * @param query the query to execute\n   * @return the number of documents found\n   */\n  public int queryCore(SolrQueryRequest query) throws Exception {\n    String responseStr = h.query(query);\n    try {\n      Map<String, Object> root = (Map<String, Object>) objectMapper.readValue(responseStr, Object.class);\n      Map<String, Object> rootResponse = (Map<String, Object>) root.get(\"response\");\n      return (int) rootResponse.get(\"numFound\");\n    } catch (Exception e) {\n      throw new RuntimeException(\"Unable to parse Solr query response\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"27d6f83edecd216b844079cc682096091dfa9fbc":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["27d6f83edecd216b844079cc682096091dfa9fbc"]},"commit2Childs":{"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["27d6f83edecd216b844079cc682096091dfa9fbc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"],"27d6f83edecd216b844079cc682096091dfa9fbc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}