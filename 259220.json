{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","sourceNew":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tfn) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(score(stats, tfn));\n    result.addDetail(new Explanation(tfn, \"tfn\"));\n    result.addDetail(\n        new Explanation(stats.getNumberOfDocuments(), \"numberOfDocuments\"));\n    result.addDetail(\n        new Explanation(stats.getTotalTermFreq(), \"totalTermFreq\"));\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tfn) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(score(stats, tfn));\n    result.addDetail(new Explanation(tfn, \"tfn\"));\n    result.addDetail(\n        new Explanation(stats.getNumberOfDocuments(), \"numberOfDocuments\"));\n    result.addDetail(\n        new Explanation(stats.getTotalTermFreq(), \"totalTermFreq\"));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","sourceNew":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tfn) {\n    return Explanation.match(\n        score(stats, tfn),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match(stats.getNumberOfDocuments(), \"numberOfDocuments\"),\n        Explanation.match(stats.getTotalTermFreq(), \"totalTermFreq\"));\n  }\n\n","sourceOld":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tfn) {\n    Explanation result = new Explanation();\n    result.setDescription(getClass().getSimpleName() + \", computed from: \");\n    result.setValue(score(stats, tfn));\n    result.addDetail(new Explanation(tfn, \"tfn\"));\n    result.addDetail(\n        new Explanation(stats.getNumberOfDocuments(), \"numberOfDocuments\"));\n    result.addDetail(\n        new Explanation(stats.getTotalTermFreq(), \"totalTermFreq\"));\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46","date":1508899684,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BasicModel#explain(BasicStats,float).mjava","sourceNew":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, double tfn) {\n    return Explanation.match(\n        (float) score(stats, tfn),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match(stats.getNumberOfDocuments(), \"numberOfDocuments\"),\n        Explanation.match(stats.getTotalTermFreq(), \"totalTermFreq\"));\n  }\n\n","sourceOld":"  /**\n   * Returns an explanation for the score.\n   * <p>Most basic models use the number of documents and the total term\n   * frequency to compute Inf<sub>1</sub>. This method provides a generic\n   * explanation for such models. Subclasses that use other statistics must\n   * override this method.</p>\n   */\n  public Explanation explain(BasicStats stats, float tfn) {\n    return Explanation.match(\n        score(stats, tfn),\n        getClass().getSimpleName() + \", computed from: \",\n        Explanation.match(stats.getNumberOfDocuments(), \"numberOfDocuments\"),\n        Explanation.match(stats.getTotalTermFreq(), \"totalTermFreq\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"]},"commit2Childs":{"ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["ad1dc49b5314cfdb82a7ea40d2f92f07fe8cee46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}