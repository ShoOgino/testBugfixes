{"path":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","commits":[{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter,FilterCachingPolicy).mjava","sourceNew":"  /** Wraps another query's result and caches it according to the provided policy.\n   * @param query Query to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperQuery(Query query, QueryCachingPolicy policy) {\n    this.query = query;\n    this.policy = policy;\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it according to the provided policy.\n   * @param filter Filter to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperFilter(Filter filter, FilterCachingPolicy policy) {\n    this.filter = filter;\n    this.policy = policy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","pathOld":"/dev/null","sourceNew":"  /** Wraps another query's result and caches it according to the provided policy.\n   * @param query Query to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperQuery(Query query, QueryCachingPolicy policy) {\n    this.query = query;\n    this.policy = policy;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685c242a4f1bc78f1fa61c131bd557355edad6c7","date":1429208182,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","sourceNew":"  /** Wraps another query's result and caches it according to the provided policy.\n   * @param query Query to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperQuery(Query query, QueryCachingPolicy policy) {\n    this.query = Objects.requireNonNull(query, \"Query must not be null\");\n    this.policy = Objects.requireNonNull(policy, \"QueryCachingPolicy must not be null\");\n  }\n\n","sourceOld":"  /** Wraps another query's result and caches it according to the provided policy.\n   * @param query Query to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperQuery(Query query, QueryCachingPolicy policy) {\n    this.query = query;\n    this.policy = policy;\n  }\n\n","bugFix":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cfc8e07724f6bd95be343b1c03ae917c9de69cc","date":1446026743,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#CachingWrapperQuery(Query,QueryCachingPolicy).mjava","sourceNew":null,"sourceOld":"  /** Wraps another query's result and caches it according to the provided policy.\n   * @param query Query to cache results of\n   * @param policy policy defining which filters should be cached on which segments\n   */\n  public CachingWrapperQuery(Query query, QueryCachingPolicy policy) {\n    this.query = Objects.requireNonNull(query, \"Query must not be null\");\n    this.policy = Objects.requireNonNull(policy, \"QueryCachingPolicy must not be null\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["685c242a4f1bc78f1fa61c131bd557355edad6c7"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cfc8e07724f6bd95be343b1c03ae917c9de69cc"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","685c242a4f1bc78f1fa61c131bd557355edad6c7"],"4cfc8e07724f6bd95be343b1c03ae917c9de69cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["4cfc8e07724f6bd95be343b1c03ae917c9de69cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}