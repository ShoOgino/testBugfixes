{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","commits":[{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"/dev/null","sourceNew":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<AtomicReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      DocsEnum docsEnum = null;\n      for(AtomicReaderContext leaf : leaves) {\n        AtomicReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            docsEnum = termsEnum.docs(liveDocs, docsEnum);\n            int doc = docsEnum.nextDoc();\n            if(doc != DocsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      DocsEnum docsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            docsEnum = termsEnum.docs(liveDocs, docsEnum);\n            int doc = docsEnum.nextDoc();\n            if(doc != DocsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<AtomicReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      DocsEnum docsEnum = null;\n      for(AtomicReaderContext leaf : leaves) {\n        AtomicReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            docsEnum = termsEnum.docs(liveDocs, docsEnum);\n            int doc = docsEnum.nextDoc();\n            if(doc != DocsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(liveDocs, postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      DocsEnum docsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            docsEnum = termsEnum.docs(liveDocs, docsEnum);\n            int doc = docsEnum.nextDoc();\n            if(doc != DocsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(liveDocs, postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      TermsEnum termsEnum = null;\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        termsEnum = terms.iterator(termsEnum);\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(liveDocs, postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(liveDocs, postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":"  public static IntIntHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntHashMap) context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet<>(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntHashMap(boosted.size());\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","sourceOld":"  public static IntIntOpenHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntOpenHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntOpenHashMap)context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntOpenHashMap(boosted.size()*2);\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":4,"author":"broustant","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":null,"sourceOld":"  public static IntIntHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntHashMap) context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet<>(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntHashMap(boosted.size());\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":null,"sourceOld":"  public static IntIntHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntHashMap) context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet<>(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntHashMap(boosted.size());\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getBoostDocs(SolrIndexSearcher,Map[BytesRef,Integer],Map).mjava","sourceNew":null,"sourceOld":"  public static IntIntHashMap getBoostDocs(SolrIndexSearcher indexSearcher, Map<BytesRef, Integer>boosted, Map context) throws IOException {\n\n    IntIntHashMap boostDocs = null;\n\n    if(boosted != null) {\n\n      //First see if it's already in the request context. Could have been put there\n      //by another caller.\n      if(context != null) {\n        boostDocs = (IntIntHashMap) context.get(BOOSTED_DOCIDS);\n      }\n\n      if(boostDocs != null) {\n        return boostDocs;\n      }\n      //Not in the context yet so load it.\n\n      SchemaField idField = indexSearcher.getSchema().getUniqueKeyField();\n      String fieldName = idField.getName();\n      HashSet<BytesRef> localBoosts = new HashSet<>(boosted.size()*2);\n      Iterator<BytesRef> boostedIt = boosted.keySet().iterator();\n      while(boostedIt.hasNext()) {\n        localBoosts.add(boostedIt.next());\n      }\n\n      boostDocs = new IntIntHashMap(boosted.size());\n\n      List<LeafReaderContext>leaves = indexSearcher.getTopReaderContext().leaves();\n      PostingsEnum postingsEnum = null;\n      for(LeafReaderContext leaf : leaves) {\n        LeafReader reader = leaf.reader();\n        int docBase = leaf.docBase;\n        Bits liveDocs = reader.getLiveDocs();\n        Terms terms = reader.terms(fieldName);\n        TermsEnum termsEnum = terms.iterator();\n        Iterator<BytesRef> it = localBoosts.iterator();\n        while(it.hasNext()) {\n          BytesRef ref = it.next();\n          if(termsEnum.seekExact(ref)) {\n            postingsEnum = termsEnum.postings(postingsEnum);\n            int doc = postingsEnum.nextDoc();\n            while (doc != PostingsEnum.NO_MORE_DOCS && liveDocs != null && liveDocs.get(doc) == false) {\n              doc = postingsEnum.nextDoc();\n            }\n            if(doc != PostingsEnum.NO_MORE_DOCS) {\n              //Found the document.\n              int p = boosted.get(ref);\n              boostDocs.put(doc+docBase, p);\n              it.remove();\n            }\n          }\n        }\n      }\n    }\n\n    if(context != null) {\n      context.put(BOOSTED_DOCIDS, boostDocs);\n    }\n\n    return boostDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["51f5280f31484820499077f41fcdfe92d527d9dc"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","2ad458affd82a1d762eb506003907d9363a333cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"51f5280f31484820499077f41fcdfe92d527d9dc":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["51f5280f31484820499077f41fcdfe92d527d9dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}