{"path":"solr/core/src/test/org/apache/solr/cloud/TestWaitForStateWithJettyShutdowns#testWaitForStateAfterShutDown().mjava","commits":[{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestWaitForStateWithJettyShutdowns#testWaitForStateAfterShutDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testWaitForStateAfterShutDown() throws Exception {\n    final String col_name = \"test_col\";\n    final MiniSolrCloudCluster cluster = new MiniSolrCloudCluster\n      (1, createTempDir(), JettyConfig.builder().build());\n    try {\n      log.info(\"Create our collection\");\n      CollectionAdminRequest.createCollection(col_name, \"_default\", 1, 1).process(cluster.getSolrClient());\n      \n      log.info(\"Sanity check that our collection has come online\");\n      cluster.getSolrClient().waitForState(col_name, 30, TimeUnit.SECONDS, clusterShape(1, 1));\n                                           \n      log.info(\"Shutdown 1 node\");\n      final JettySolrRunner nodeToStop = cluster.getJettySolrRunner(0);\n      nodeToStop.stop();\n      log.info(\"Wait to confirm our node is fully shutdown\");\n      cluster.waitForJettyToStop(nodeToStop);\n\n      // now that we're confident that node has stoped, check if a waitForState\n      // call will detect the missing replica -- shouldn't need long wait times (we know it's down)...\n      log.info(\"Now check if waitForState will recognize we already have the exepcted state\");\n      cluster.getSolrClient().waitForState(col_name, 500, TimeUnit.MILLISECONDS, clusterShape(1, 0));\n                                           \n      \n    } finally {\n      cluster.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cbf41d546781f95bb27d7f00a6c7c65570ee84ce"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbf41d546781f95bb27d7f00a6c7c65570ee84ce","date":1560810854,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestWaitForStateWithJettyShutdowns#testWaitForStateAfterShutDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestWaitForStateWithJettyShutdowns#testWaitForStateAfterShutDown().mjava","sourceNew":"  public void testWaitForStateAfterShutDown() throws Exception {\n    final String col_name = \"test_col\";\n    final MiniSolrCloudCluster cluster = new MiniSolrCloudCluster\n      (1, createTempDir(), buildJettyConfig(\"/solr\"));\n    try {\n      log.info(\"Create our collection\");\n      CollectionAdminRequest.createCollection(col_name, \"_default\", 1, 1).process(cluster.getSolrClient());\n      \n      log.info(\"Sanity check that our collection has come online\");\n      cluster.getSolrClient().waitForState(col_name, 30, TimeUnit.SECONDS, clusterShape(1, 1));\n                                           \n      log.info(\"Shutdown 1 node\");\n      final JettySolrRunner nodeToStop = cluster.getJettySolrRunner(0);\n      nodeToStop.stop();\n      log.info(\"Wait to confirm our node is fully shutdown\");\n      cluster.waitForJettyToStop(nodeToStop);\n\n      // now that we're confident that node has stoped, check if a waitForState\n      // call will detect the missing replica -- shouldn't need long wait times (we know it's down)...\n      log.info(\"Now check if waitForState will recognize we already have the exepcted state\");\n      cluster.getSolrClient().waitForState(col_name, 500, TimeUnit.MILLISECONDS, clusterShape(1, 0));\n                                           \n      \n    } finally {\n      cluster.shutdown();\n    }\n  }\n\n","sourceOld":"  public void testWaitForStateAfterShutDown() throws Exception {\n    final String col_name = \"test_col\";\n    final MiniSolrCloudCluster cluster = new MiniSolrCloudCluster\n      (1, createTempDir(), JettyConfig.builder().build());\n    try {\n      log.info(\"Create our collection\");\n      CollectionAdminRequest.createCollection(col_name, \"_default\", 1, 1).process(cluster.getSolrClient());\n      \n      log.info(\"Sanity check that our collection has come online\");\n      cluster.getSolrClient().waitForState(col_name, 30, TimeUnit.SECONDS, clusterShape(1, 1));\n                                           \n      log.info(\"Shutdown 1 node\");\n      final JettySolrRunner nodeToStop = cluster.getJettySolrRunner(0);\n      nodeToStop.stop();\n      log.info(\"Wait to confirm our node is fully shutdown\");\n      cluster.waitForJettyToStop(nodeToStop);\n\n      // now that we're confident that node has stoped, check if a waitForState\n      // call will detect the missing replica -- shouldn't need long wait times (we know it's down)...\n      log.info(\"Now check if waitForState will recognize we already have the exepcted state\");\n      cluster.getSolrClient().waitForState(col_name, 500, TimeUnit.MILLISECONDS, clusterShape(1, 0));\n                                           \n      \n    } finally {\n      cluster.shutdown();\n    }\n  }\n\n","bugFix":["7b366e7dd3172289251a86be96031af4002cd19c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbf41d546781f95bb27d7f00a6c7c65570ee84ce":["7b366e7dd3172289251a86be96031af4002cd19c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b366e7dd3172289251a86be96031af4002cd19c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cbf41d546781f95bb27d7f00a6c7c65570ee84ce"]},"commit2Childs":{"cbf41d546781f95bb27d7f00a6c7c65570ee84ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b366e7dd3172289251a86be96031af4002cd19c"],"7b366e7dd3172289251a86be96031af4002cd19c":["cbf41d546781f95bb27d7f00a6c7c65570ee84ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}