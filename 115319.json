{"path":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","commits":[{"id":"1816753738ff1f27f11b38030e83c0ded050b7a4","date":1380106089,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],int[],String).mjava","sourceNew":"  public static int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","sourceOld":"  private int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, int[] docCounts, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","sourceNew":"  public static int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","sourceOld":"  public static int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ShardSplitTest#getHashRangeIdx(DocRouter,List[DocRouter.Range],String).mjava","sourceNew":"  public static int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","sourceOld":"  public static int getHashRangeIdx(DocRouter router, List<DocRouter.Range> ranges, String id) {\n    int hash = 0;\n    if (router instanceof HashBasedRouter) {\n      HashBasedRouter hashBasedRouter = (HashBasedRouter) router;\n      hash = hashBasedRouter.sliceHash(id, null, null,null);\n    }\n    for (int i = 0; i < ranges.size(); i++) {\n      DocRouter.Range range = ranges.get(i);\n      if (range.includes(hash))\n        return i;\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1816753738ff1f27f11b38030e83c0ded050b7a4","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"1816753738ff1f27f11b38030e83c0ded050b7a4":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}