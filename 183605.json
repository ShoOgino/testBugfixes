{"path":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7211b1fba79597955a78855e9f646de9248ca57","date":1345763711,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"minMergeSize=\").append(minMergeSize).append(\", \");\n    sb.append(\"mergeFactor=\").append(mergeFactor).append(\", \");\n    sb.append(\"maxMergeSize=\").append(maxMergeSize).append(\", \");\n    sb.append(\"maxMergeSizeForForcedMerge=\").append(maxMergeSizeForForcedMerge).append(\", \");\n    sb.append(\"calibrateSizeByDeletes=\").append(calibrateSizeByDeletes).append(\", \");\n    sb.append(\"maxMergeDocs=\").append(maxMergeDocs).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    sb.append(\"]\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c7211b1fba79597955a78855e9f646de9248ca57"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["c7211b1fba79597955a78855e9f646de9248ca57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7211b1fba79597955a78855e9f646de9248ca57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","c7211b1fba79597955a78855e9f646de9248ca57"],"c7211b1fba79597955a78855e9f646de9248ca57":["001b25b42373b22a52f399dbf072f1224632e8e6","088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}