{"path":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.RangeEndpointCalculator#getGap(String).mjava","commits":[{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RangeFacetRequest.RangeEndpointCalculator#getGap(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets.RangeEndpointCalculator#getGap(String).mjava","sourceNew":"    /**\n     * Parses a String param into a value that represents the gap and\n     * can be included in the response, throwing\n     * a useful exception if not possible.\n     * <p>\n     * Note: uses Object as the return type instead of T for things like\n     * Date where gap is just a DateMathParser string\n     */\n    protected final Object getGap(final String gap) {\n      try {\n        return parseGap(gap);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Can't parse gap \" + gap + \" for field: \" +\n                field.getName(), e);\n      }\n    }\n\n","sourceOld":"    /** \n     * Parses a String param into a value that represents the gap and \n     * can be included in the response, throwing \n     * a useful exception if not possible.\n     *\n     * Note: uses Object as the return type instead of T for things like \n     * Date where gap is just a DateMathParser string \n     */\n    public final Object getGap(final String gap) {\n      try {\n        return parseGap(gap);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                                \"Can't parse gap \"+gap+\" for field: \" + \n                                field.getName(), e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d0a81a05eba47d5e18976f17d88306b218cc22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}