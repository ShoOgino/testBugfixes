{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","sourceNew":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","sourceOld":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","sourceNew":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","sourceOld":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","sourceNew":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","sourceOld":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE,\"shingle\",TypeAttributeImpl.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testReset().mjava","sourceNew":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","sourceOld":"  public void testReset() throws Exception {\n    Tokenizer wsTokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"please divide this sentence\"));\n    TokenStream filter = new ShingleFilter(wsTokenizer, 2);\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n    wsTokenizer.reset(new StringReader(\"please divide this sentence\"));\n    assertTokenStreamContents(filter,\n      new String[]{\"please\",\"please divide\",\"divide\",\"divide this\",\"this\",\"this sentence\",\"sentence\"},\n      new int[]{0,0,7,7,14,14,19}, new int[]{6,13,13,18,18,27,27},\n      new String[]{TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE,\"shingle\",TypeAttribute.DEFAULT_TYPE},\n      new int[]{1,0,1,0,1,0,1}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["0f080986da691a3bba7b757f43ab72cdc82b57ce","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}