{"path":"backwards/src/java/org/apache/lucene/index/FieldsWriter#writeField(FieldInfo,Fieldable).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/FieldsWriter#writeField(FieldInfo,Fieldable).mjava","pathOld":"/dev/null","sourceNew":"    final void writeField(FieldInfo fi, Fieldable field) throws IOException {\n      fieldsStream.writeVInt(fi.number);\n      byte bits = 0;\n      if (field.isTokenized())\n        bits |= FieldsWriter.FIELD_IS_TOKENIZED;\n      if (field.isBinary())\n        bits |= FieldsWriter.FIELD_IS_BINARY;\n                \n      fieldsStream.writeByte(bits);\n                \n      if (field.isBinary()) {\n        final byte[] data;\n        final int len;\n        final int offset;\n        data = field.getBinaryValue();\n        len = field.getBinaryLength();\n        offset =  field.getBinaryOffset();\n\n        fieldsStream.writeVInt(len);\n        fieldsStream.writeBytes(data, offset, len);\n      }\n      else {\n        fieldsStream.writeString(field.stringValue());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/FieldsWriter#writeField(FieldInfo,Fieldable).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/FieldsWriter#writeField(FieldInfo,Fieldable).mjava","sourceNew":"    final void writeField(FieldInfo fi, Fieldable field) throws IOException {\n      fieldsStream.writeVInt(fi.number);\n      byte bits = 0;\n      if (field.isTokenized())\n        bits |= FieldsWriter.FIELD_IS_TOKENIZED;\n      if (field.isBinary())\n        bits |= FieldsWriter.FIELD_IS_BINARY;\n                \n      fieldsStream.writeByte(bits);\n                \n      if (field.isBinary()) {\n        final byte[] data;\n        final int len;\n        final int offset;\n        data = field.getBinaryValue();\n        len = field.getBinaryLength();\n        offset =  field.getBinaryOffset();\n\n        fieldsStream.writeVInt(len);\n        fieldsStream.writeBytes(data, offset, len);\n      }\n      else {\n        fieldsStream.writeString(field.stringValue());\n      }\n    }\n\n","sourceOld":"    final void writeField(FieldInfo fi, Fieldable field) throws IOException {\n      fieldsStream.writeVInt(fi.number);\n      byte bits = 0;\n      if (field.isTokenized())\n        bits |= FieldsWriter.FIELD_IS_TOKENIZED;\n      if (field.isBinary())\n        bits |= FieldsWriter.FIELD_IS_BINARY;\n                \n      fieldsStream.writeByte(bits);\n                \n      if (field.isBinary()) {\n        final byte[] data;\n        final int len;\n        final int offset;\n        data = field.getBinaryValue();\n        len = field.getBinaryLength();\n        offset =  field.getBinaryOffset();\n\n        fieldsStream.writeVInt(len);\n        fieldsStream.writeBytes(data, offset, len);\n      }\n      else {\n        fieldsStream.writeString(field.stringValue());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}