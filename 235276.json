{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","sourceNew":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = c.runAutomaton.getInitialState();\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","sourceOld":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = c.runAutomaton.getInitialState();\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7543e96e2d4820e09334d36a699b998ed963f4f","date":1476121426,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","sourceNew":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = 0;\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","sourceOld":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = c.runAutomaton.getInitialState();\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTermsEnum#accepts(CompiledAutomaton,BytesRef).mjava","sourceNew":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = 0;\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","sourceOld":"  private boolean accepts(CompiledAutomaton c, BytesRef b) {\n    int state = c.runAutomaton.getInitialState();\n    for(int idx=0;idx<b.length;idx++) {\n      assertTrue(state != -1);\n      state = c.runAutomaton.step(state, b.bytes[b.offset+idx] & 0xff);\n    }\n    return c.runAutomaton.isAccept(state);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b7543e96e2d4820e09334d36a699b998ed963f4f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b7543e96e2d4820e09334d36a699b998ed963f4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7543e96e2d4820e09334d36a699b998ed963f4f"]},"commit2Childs":{"b7543e96e2d4820e09334d36a699b998ed963f4f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b7543e96e2d4820e09334d36a699b998ed963f4f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}