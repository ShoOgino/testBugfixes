{"path":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#setTimes(Path,long,long).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#setTimes(Path,long,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the {@link Path}'s last modified time and last access time to\n   * the given valid times.\n   *\n   * @param mtime the modification time to set (only if no less than zero).\n   * @param atime the access time to set (only if no less than zero).\n   * @throws IOException if setting the times fails.\n   */\n  @Override\n  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    try {\n      BasicFileAttributeView view = Files.getFileAttributeView(\n          pathToFile(p).toPath(), BasicFileAttributeView.class);\n      FileTime fmtime = (mtime >= 0) ? FileTime.fromMillis(mtime) : null;\n      FileTime fatime = (atime >= 0) ? FileTime.fromMillis(atime) : null;\n      view.setTimes(fmtime, fatime, null);\n    } catch (NoSuchFileException e) {\n      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/RawLocalFileSystem#setTimes(Path,long,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the {@link Path}'s last modified time and last access time to\n   * the given valid times.\n   *\n   * @param mtime the modification time to set (only if no less than zero).\n   * @param atime the access time to set (only if no less than zero).\n   * @throws IOException if setting the times fails.\n   */\n  @Override\n  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    try {\n      BasicFileAttributeView view = Files.getFileAttributeView(\n          pathToFile(p).toPath(), BasicFileAttributeView.class);\n      FileTime fmtime = (mtime >= 0) ? FileTime.fromMillis(mtime) : null;\n      FileTime fatime = (atime >= 0) ? FileTime.fromMillis(atime) : null;\n      view.setTimes(fmtime, fatime, null);\n    } catch (NoSuchFileException e) {\n      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}