{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","commits":[{"id":"226b3bf77af5749a90c81edd3d4168fd6e276a24","date":1490013063,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static Object makeDeepCopy(Object v, int maxDepth, boolean mutable) {\n    if (v instanceof MapWriter) v = ((MapWriter) v).toMap(new LinkedHashMap<>());\n    else if (v instanceof IteratorWriter) v = ((IteratorWriter) v).toList(new ArrayList<>());\n    else if (v instanceof Map) v = getDeepCopy((Map) v, maxDepth - 1, mutable);\n    else if (v instanceof Collection) v = getDeepCopy((Collection) v, maxDepth - 1, mutable);\n    return v;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","date":1491191579,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","sourceNew":"  private static Object makeDeepCopy(Object v, int maxDepth, boolean mutable) {\n    if (v instanceof MapWriter && maxDepth > 1) v = ((MapWriter) v).toMap(new LinkedHashMap<>());\n    else if (v instanceof IteratorWriter && maxDepth > 1) v = ((IteratorWriter) v).toList(new ArrayList<>());\n\n    if (v instanceof Map) v = getDeepCopy((Map) v, maxDepth - 1, mutable);\n    else if (v instanceof Collection) v = getDeepCopy((Collection) v, maxDepth - 1, mutable);\n    return v;\n  }\n\n","sourceOld":"  private static Object makeDeepCopy(Object v, int maxDepth, boolean mutable) {\n    if (v instanceof MapWriter) v = ((MapWriter) v).toMap(new LinkedHashMap<>());\n    else if (v instanceof IteratorWriter) v = ((IteratorWriter) v).toList(new ArrayList<>());\n    else if (v instanceof Map) v = getDeepCopy((Map) v, maxDepth - 1, mutable);\n    else if (v instanceof Collection) v = getDeepCopy((Collection) v, maxDepth - 1, mutable);\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","sourceNew":null,"sourceOld":"  private static Object makeDeepCopy(Object v, int maxDepth, boolean mutable) {\n    if (v instanceof MapWriter && maxDepth > 1) v = ((MapWriter) v).toMap(new LinkedHashMap<>());\n    else if (v instanceof IteratorWriter && maxDepth > 1) v = ((IteratorWriter) v).toList(new ArrayList<>());\n\n    if (v instanceof Map) v = getDeepCopy((Map) v, maxDepth - 1, mutable);\n    else if (v instanceof Collection) v = getDeepCopy((Collection) v, maxDepth - 1, mutable);\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils#makeDeepCopy(Object,int,boolean).mjava","sourceNew":null,"sourceOld":"  private static Object makeDeepCopy(Object v, int maxDepth, boolean mutable) {\n    if (v instanceof MapWriter && maxDepth > 1) v = ((MapWriter) v).toMap(new LinkedHashMap<>());\n    else if (v instanceof IteratorWriter && maxDepth > 1) v = ((IteratorWriter) v).toList(new ArrayList<>());\n\n    if (v instanceof Map) v = getDeepCopy((Map) v, maxDepth - 1, mutable);\n    else if (v instanceof Collection) v = getDeepCopy((Collection) v, maxDepth - 1, mutable);\n    return v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"226b3bf77af5749a90c81edd3d4168fd6e276a24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf","464244264804e3f981bf1fb4b732516d8d62dbc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["226b3bf77af5749a90c81edd3d4168fd6e276a24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"226b3bf77af5749a90c81edd3d4168fd6e276a24":["ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["226b3bf77af5749a90c81edd3d4168fd6e276a24","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"ea13f0ffd30b65fc1e59ce96948fc1db68ddd4cf":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}