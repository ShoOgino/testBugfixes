{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode || node instanceof FuzzyQueryNode\n        || node instanceof ParametricQueryNode || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      txtNode.setText(UnescapedCharSequence.toLowerCase(txtNode.getText()));\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode || node instanceof FuzzyQueryNode\n        || node instanceof ParametricQueryNode || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      txtNode.setText(UnescapedCharSequence.toLowerCase(txtNode.getText()));\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e91b7614171e0a6a82351457c2870d2a0124ba9a","date":1312225025,"type":3,"author":"Adriano Crestani Campos","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode || node instanceof FuzzyQueryNode\n        || node instanceof ParametricQueryNode || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      CharSequence text = txtNode.getText();\n      txtNode.setText(text != null ? UnescapedCharSequence.toLowerCase(text) : null);\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode || node instanceof FuzzyQueryNode\n        || node instanceof ParametricQueryNode || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      txtNode.setText(UnescapedCharSequence.toLowerCase(txtNode.getText()));\n    }\n\n    return node;\n\n  }\n\n","bugFix":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff8a13a1bad7d9e3a7180e3f64825fa93b1ed25","date":1315500470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode\n        || node instanceof FuzzyQueryNode\n        || (node instanceof FieldQueryNode && node.getParent() instanceof RangeQueryNode)\n        || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      CharSequence text = txtNode.getText();\n      txtNode.setText(text != null ? UnescapedCharSequence.toLowerCase(text) : null);\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode || node instanceof FuzzyQueryNode\n        || node instanceof ParametricQueryNode || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      CharSequence text = txtNode.getText();\n      txtNode.setText(text != null ? UnescapedCharSequence.toLowerCase(text) : null);\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#postProcessNode(QueryNode).mjava","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode\n        || node instanceof FuzzyQueryNode\n        || (node instanceof FieldQueryNode && node.getParent() instanceof RangeQueryNode)\n        || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      CharSequence text = txtNode.getText();\n      txtNode.setText(text != null ? UnescapedCharSequence.toLowerCase(text) : null);\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode\n        || node instanceof FuzzyQueryNode\n        || (node instanceof FieldQueryNode && node.getParent() instanceof RangeQueryNode)\n        || node instanceof RegexpQueryNode) {\n\n      TextableQueryNode txtNode = (TextableQueryNode) node;\n      CharSequence text = txtNode.getText();\n      txtNode.setText(text != null ? UnescapedCharSequence.toLowerCase(text) : null);\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aff8a13a1bad7d9e3a7180e3f64825fa93b1ed25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aff8a13a1bad7d9e3a7180e3f64825fa93b1ed25":["e91b7614171e0a6a82351457c2870d2a0124ba9a"],"e91b7614171e0a6a82351457c2870d2a0124ba9a":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["e91b7614171e0a6a82351457c2870d2a0124ba9a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"aff8a13a1bad7d9e3a7180e3f64825fa93b1ed25":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e91b7614171e0a6a82351457c2870d2a0124ba9a":["aff8a13a1bad7d9e3a7180e3f64825fa93b1ed25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}