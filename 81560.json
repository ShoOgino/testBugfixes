{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer#Lucene45DocValuesProducer(Lucene45DocValuesProducer).mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer#Lucene45DocValuesProducer(Lucene45DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // clone for merge: when merging we don't do any instances.put()s\n  Lucene45DocValuesProducer(Lucene45DocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics = original.numerics;\n    binaries = original.binaries;\n    sortedSets = original.sortedSets;\n    ords = original.ords;\n    ordIndexes = original.ordIndexes;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    data = original.data.clone();\n    maxDoc = original.maxDoc;\n    version = original.version;\n    numFields = original.numFields;\n    lenientFieldInfoCheck = original.lenientFieldInfoCheck;\n    addressInstances.putAll(original.addressInstances);\n    ordIndexInstances.putAll(original.ordIndexInstances);\n    merging = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer#Lucene45DocValuesProducer(Lucene45DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // clone for merge: when merging we don't do any instances.put()s\n  Lucene45DocValuesProducer(Lucene45DocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics = original.numerics;\n    binaries = original.binaries;\n    sortedSets = original.sortedSets;\n    ords = original.ords;\n    ordIndexes = original.ordIndexes;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    data = original.data.clone();\n    maxDoc = original.maxDoc;\n    version = original.version;\n    numFields = original.numFields;\n    lenientFieldInfoCheck = original.lenientFieldInfoCheck;\n    addressInstances.putAll(original.addressInstances);\n    ordIndexInstances.putAll(original.ordIndexInstances);\n    merging = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesProducer#Lucene45DocValuesProducer(Lucene45DocValuesProducer).mjava","sourceNew":null,"sourceOld":"  // clone for merge: when merging we don't do any instances.put()s\n  Lucene45DocValuesProducer(Lucene45DocValuesProducer original) throws IOException {\n    assert Thread.holdsLock(original);\n    numerics = original.numerics;\n    binaries = original.binaries;\n    sortedSets = original.sortedSets;\n    ords = original.ords;\n    ordIndexes = original.ordIndexes;\n    ramBytesUsed = new AtomicLong(original.ramBytesUsed.get());\n    data = original.data.clone();\n    maxDoc = original.maxDoc;\n    version = original.version;\n    numFields = original.numFields;\n    lenientFieldInfoCheck = original.lenientFieldInfoCheck;\n    addressInstances.putAll(original.addressInstances);\n    ordIndexInstances.putAll(original.ordIndexInstances);\n    merging = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}