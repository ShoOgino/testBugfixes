{"path":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testExpungeMaxSegSize().mjava","commits":[{"id":"7358158aa96de7ba4e78d7fbee9f9fa41320173d","date":1315918473,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testExpungeMaxSegSize().mjava","pathOld":"/dev/null","sourceNew":"  public void testExpungeMaxSegSize() throws Exception {\n    final Directory dir = newDirectory();\n    final IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    final TieredMergePolicy tmp = new TieredMergePolicy();\n    tmp.setMaxMergedSegmentMB(0.01);\n    tmp.setExpungeDeletesPctAllowed(0.0);\n    conf.setMergePolicy(tmp);\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir, conf);\n    w.setDoRandomOptimize(false);\n\n    final int numDocs = atLeast(200);\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + i, StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"aaa \" + i, TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    w.optimize();\n    IndexReader r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs, r.numDocs());\n    r.close();\n\n    w.deleteDocuments(new Term(\"id\", \"\"+(42+17)));\n\n    r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.expungeDeletes();\n\n    r = w.getReader();\n    assertEquals(numDocs-1, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testExpungeMaxSegSize().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testExpungeMaxSegSize().mjava","sourceNew":"  public void testExpungeMaxSegSize() throws Exception {\n    final Directory dir = newDirectory();\n    final IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    final TieredMergePolicy tmp = new TieredMergePolicy();\n    tmp.setMaxMergedSegmentMB(0.01);\n    tmp.setExpungeDeletesPctAllowed(0.0);\n    conf.setMergePolicy(tmp);\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir, conf);\n    w.setDoRandomForceMerge(false);\n\n    final int numDocs = atLeast(200);\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + i, StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"aaa \" + i, TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs, r.numDocs());\n    r.close();\n\n    w.deleteDocuments(new Term(\"id\", \"\"+(42+17)));\n\n    r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.expungeDeletes();\n\n    r = w.getReader();\n    assertEquals(numDocs-1, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeMaxSegSize() throws Exception {\n    final Directory dir = newDirectory();\n    final IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    final TieredMergePolicy tmp = new TieredMergePolicy();\n    tmp.setMaxMergedSegmentMB(0.01);\n    tmp.setExpungeDeletesPctAllowed(0.0);\n    conf.setMergePolicy(tmp);\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir, conf);\n    w.setDoRandomOptimize(false);\n\n    final int numDocs = atLeast(200);\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + i, StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"aaa \" + i, TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    w.optimize();\n    IndexReader r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs, r.numDocs());\n    r.close();\n\n    w.deleteDocuments(new Term(\"id\", \"\"+(42+17)));\n\n    r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.expungeDeletes();\n\n    r = w.getReader();\n    assertEquals(numDocs-1, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34ce7c842452c79b12c45a8feb64e4597c7110e8","date":1321637224,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testForceMergeDeletesMaxSegSize().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTieredMergePolicy#testExpungeMaxSegSize().mjava","sourceNew":"  public void testForceMergeDeletesMaxSegSize() throws Exception {\n    final Directory dir = newDirectory();\n    final IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    final TieredMergePolicy tmp = new TieredMergePolicy();\n    tmp.setMaxMergedSegmentMB(0.01);\n    tmp.setForceMergeDeletesPctAllowed(0.0);\n    conf.setMergePolicy(tmp);\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir, conf);\n    w.setDoRandomForceMerge(false);\n\n    final int numDocs = atLeast(200);\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + i, StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"aaa \" + i, TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs, r.numDocs());\n    r.close();\n\n    w.deleteDocuments(new Term(\"id\", \"\"+(42+17)));\n\n    r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.forceMergeDeletes();\n\n    r = w.getReader();\n    assertEquals(numDocs-1, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.close();\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeMaxSegSize() throws Exception {\n    final Directory dir = newDirectory();\n    final IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    final TieredMergePolicy tmp = new TieredMergePolicy();\n    tmp.setMaxMergedSegmentMB(0.01);\n    tmp.setExpungeDeletesPctAllowed(0.0);\n    conf.setMergePolicy(tmp);\n\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir, conf);\n    w.setDoRandomForceMerge(false);\n\n    final int numDocs = atLeast(200);\n    for(int i=0;i<numDocs;i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + i, StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"aaa \" + i, TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs, r.numDocs());\n    r.close();\n\n    w.deleteDocuments(new Term(\"id\", \"\"+(42+17)));\n\n    r = w.getReader();\n    assertEquals(numDocs, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.expungeDeletes();\n\n    r = w.getReader();\n    assertEquals(numDocs-1, r.maxDoc());\n    assertEquals(numDocs-1, r.numDocs());\n    r.close();\n\n    w.close();\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7358158aa96de7ba4e78d7fbee9f9fa41320173d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7358158aa96de7ba4e78d7fbee9f9fa41320173d"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["34ce7c842452c79b12c45a8feb64e4597c7110e8"]},"commit2Childs":{"7358158aa96de7ba4e78d7fbee9f9fa41320173d":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7358158aa96de7ba4e78d7fbee9f9fa41320173d"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}