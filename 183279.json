{"path":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","commits":[{"id":"b24d1e8d5bdb993e38677e49c2fb4f7008b24895","date":1567089468,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","pathOld":"/dev/null","sourceNew":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery, BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00a778ad8ad6c2c04607538d2f36fee001239eef","date":1576657013,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","sourceNew":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery,\n          BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","sourceOld":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery, BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","sourceNew":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery,\n          BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","sourceOld":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery, BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed7576365aa15478ffb164ad40e9e556e294885e","date":1590803084,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/another/BJQFilterAccessibleTest#testAbilityToCreateBJQfromAnotherPackage().mjava","sourceNew":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery,\n          BlockJoinParentQParser.getCachedBitSetProducer(req,parentQuery), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","sourceOld":"  public void testAbilityToCreateBJQfromAnotherPackage() throws IOException {\n    try (SolrQueryRequest req = lrf.makeRequest()) {\n      TermQuery childQuery = new TermQuery(new Term(\"child_s\", \"l\"));\n      Query parentQuery = new WildcardQuery(new Term(\"parent_s\", \"*\"));\n      ToParentBlockJoinQuery tpbjq = new ToParentBlockJoinQuery(childQuery,\n          BlockJoinParentQParser.getCachedFilter(req,parentQuery).getFilter(), ScoreMode.Max);\n      Assert.assertEquals(6, req.getSearcher().search(tpbjq,10).totalHits.value);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ed7576365aa15478ffb164ad40e9e556e294885e":["00a778ad8ad6c2c04607538d2f36fee001239eef"],"246314af59d76a47fccc31e9494eefee01ec9c00":["b24d1e8d5bdb993e38677e49c2fb4f7008b24895","00a778ad8ad6c2c04607538d2f36fee001239eef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b24d1e8d5bdb993e38677e49c2fb4f7008b24895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["b24d1e8d5bdb993e38677e49c2fb4f7008b24895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ed7576365aa15478ffb164ad40e9e556e294885e"]},"commit2Childs":{"ed7576365aa15478ffb164ad40e9e556e294885e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"246314af59d76a47fccc31e9494eefee01ec9c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b24d1e8d5bdb993e38677e49c2fb4f7008b24895"],"b24d1e8d5bdb993e38677e49c2fb4f7008b24895":["246314af59d76a47fccc31e9494eefee01ec9c00","00a778ad8ad6c2c04607538d2f36fee001239eef"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["ed7576365aa15478ffb164ad40e9e556e294885e","246314af59d76a47fccc31e9494eefee01ec9c00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}