{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[Scorer],int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[Scorer],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[Scorer],int).mjava","sourceNew":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[TopScorer],List[TopScorer],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[Scorer],int).mjava","sourceNew":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<TopScorer> optionalScorers, List<TopScorer> prohibitedScorers, int maxCoord) throws IOException {\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n\n    for (TopScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (TopScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[BulkScorer],List[BulkScorer],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[Scorer],int).mjava","sourceNew":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<BulkScorer> optionalScorers, List<BulkScorer> prohibitedScorers, int maxCoord) throws IOException {\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n\n    for (BulkScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (BulkScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acf00221f44c5f08ccea014f2492b53af15ecd66":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}