{"path":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","commits":[{"id":"0491dc45f6b12f57e9c33751e9317a01995556c6","date":1385418725,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        throw exception();\n      }\n      \n      return solrServer.request(request);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce545e833f5334e245fb71d83c3460ef83c2d5e","date":1385773467,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","sourceNew":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw exception();\n        } else {\n          throw new SolrServerException(exception());\n        }\n      }\n      \n      return solrServer.request(request);\n    }\n\n","sourceOld":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        throw exception();\n      }\n      \n      return solrServer.request(request);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw exception();\n        } else {\n          throw new SolrServerException(exception());\n        }\n      }\n      \n      return solrServer.request(request);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrClients.MockSolrClient#request(SolrRequest).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/MockStreamingSolrServers.MockSolrServer#request(SolrRequest).mjava","sourceNew":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw exception();\n        } else {\n          throw new SolrServerException(exception());\n        }\n      }\n      \n      return solrClient.request(request);\n    }\n\n","sourceOld":"    @Override\n    public NamedList<Object> request(SolrRequest request)\n        throws SolrServerException, IOException {\n      if (exp != null) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw exception();\n        } else {\n          throw new SolrServerException(exception());\n        }\n      }\n      \n      return solrServer.request(request);\n    }\n\n","bugFix":null,"bugIntro":["c0cf9c2ec975506bab465b6b2be92cb9bffc84d3"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9ce545e833f5334e245fb71d83c3460ef83c2d5e":["0491dc45f6b12f57e9c33751e9317a01995556c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ce545e833f5334e245fb71d83c3460ef83c2d5e"],"bafca15d8e408346a67f4282ad1143b88023893b":["9ce545e833f5334e245fb71d83c3460ef83c2d5e"],"0491dc45f6b12f57e9c33751e9317a01995556c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"9ce545e833f5334e245fb71d83c3460ef83c2d5e":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0491dc45f6b12f57e9c33751e9317a01995556c6"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0491dc45f6b12f57e9c33751e9317a01995556c6":["9ce545e833f5334e245fb71d83c3460ef83c2d5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}