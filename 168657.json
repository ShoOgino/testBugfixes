{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public FieldsEnum iterator() {\n        return new FieldsEnum() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              return null;\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public Terms terms() {\n            return MemoryFields.this.terms(sortedFields[upto].getKey());\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public FieldsEnum iterator() {\n        return new FieldsEnum() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              return null;\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public Terms terms() {\n            return MemoryFields.this.terms(sortedFields[upto].getKey());\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return new Iterator<String>() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              throw new NoSuchElementException();\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public boolean hasNext() {\n            return upto+1 < sortedFields.length;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public FieldsEnum iterator() {\n        return new FieldsEnum() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              return null;\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public Terms terms() {\n            return MemoryFields.this.terms(sortedFields[upto].getKey());\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return new Iterator<String>() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              throw new NoSuchElementException();\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public boolean hasNext() {\n            return upto+1 < sortedFields.length;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public FieldsEnum iterator() {\n        return new FieldsEnum() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              return null;\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public Terms terms() {\n            return MemoryFields.this.terms(sortedFields[upto].getKey());\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return new Iterator<String>() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              throw new NoSuchElementException();\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public boolean hasNext() {\n            return upto+1 < sortedFields.length;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n\n","sourceOld":"      @Override\n      public FieldsEnum iterator() {\n        return new FieldsEnum() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              return null;\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public Terms terms() {\n            return MemoryFields.this.terms(sortedFields[upto].getKey());\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f657d9837900f4519ca1cbd5e98d86d4bba4dab","date":1417790596,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return fields.keySet().iterator();\n      }\n\n","sourceOld":"      @Override\n      public Iterator<String> iterator() {\n        return new Iterator<String>() {\n          int upto = -1;\n\n          @Override\n          public String next() {\n            upto++;\n            if (upto >= sortedFields.length) {\n              throw new NoSuchElementException();\n            }\n            return sortedFields[upto].getKey();\n          }\n\n          @Override\n          public boolean hasNext() {\n            return upto+1 < sortedFields.length;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n\n","bugFix":null,"bugIntro":["f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115","date":1469455140,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return fields.entrySet().stream()\n            .filter(e -> e.getValue().numTokens > 0)\n            .map(Map.Entry::getKey)\n            .iterator();\n      }\n\n","sourceOld":"      @Override\n      public Iterator<String> iterator() {\n        return fields.keySet().iterator();\n      }\n\n","bugFix":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#iterator().mjava","sourceNew":"      @Override\n      public Iterator<String> iterator() {\n        return fields.entrySet().stream()\n            .filter(e -> e.getValue().numTokens > 0)\n            .map(Map.Entry::getKey)\n            .iterator();\n      }\n\n","sourceOld":"      @Override\n      public Iterator<String> iterator() {\n        return fields.keySet().iterator();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab","f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["b89678825b68eccaf09e6ab71675fc0b0af1e099","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7869f64c874ebf7f317d22c00baf2b6857797a6","fb07ab105350b80ed9d63ca64b117084ed7391bc","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","0f657d9837900f4519ca1cbd5e98d86d4bba4dab","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["f1d0f7d72954817ee45c2ea1e5ee8df4b8da1115","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}