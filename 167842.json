{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StringBufferReader#read(char[],int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StringBufferReader#read(char[],int,int).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StringBufferReader#read(char[],int,int).mjava","sourceNew":"  @Override\n  public int read(char cbuf[], int off, int len) throws IOException {\n    synchronized (lock) {\n      ensureOpen();\n\n      // Validate parameters\n      if (off < 0 || off > cbuf.length || len < 0 || off + len > cbuf.length) {\n        throw new IndexOutOfBoundsException(\"off=\" + off + \" len=\" + len + \" cbuf.length=\" + cbuf.length);\n      }\n\n      if (len == 0) {\n        return 0;\n      }\n\n      if (next >= length) {\n        return -1;\n      }\n\n      int n = Math.min(length - next, len);\n      sb.getChars(next, next + n, cbuf, off);\n      next += n;\n      return n;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int read(char cbuf[], int off, int len) throws IOException {\n    synchronized (lock) {\n      ensureOpen();\n\n      // Validate parameters\n      if (off < 0 || off > cbuf.length || len < 0 || off + len > cbuf.length) {\n        throw new IndexOutOfBoundsException(\"off=\" + off + \" len=\" + len + \" cbuf.length=\" + cbuf.length);\n      }\n\n      if (len == 0) {\n        return 0;\n      }\n\n      if (next >= length) {\n        return -1;\n      }\n\n      int n = Math.min(length - next, len);\n      sb.getChars(next, next + n, cbuf, off);\n      next += n;\n      return n;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9","date":1272391185,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StringBuilderReader#read(char[],int,int).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/StringBufferReader#read(char[],int,int).mjava","sourceNew":"  @Override\n  public int read(char cbuf[], int off, int len) throws IOException {\n    synchronized (lock) {\n      ensureOpen();\n\n      // Validate parameters\n      if (off < 0 || off > cbuf.length || len < 0 || off + len > cbuf.length) {\n        throw new IndexOutOfBoundsException(\"off=\" + off + \" len=\" + len + \" cbuf.length=\" + cbuf.length);\n      }\n\n      if (len == 0) {\n        return 0;\n      }\n\n      if (next >= length) {\n        return -1;\n      }\n\n      int n = Math.min(length - next, len);\n      sb.getChars(next, next + n, cbuf, off);\n      next += n;\n      return n;\n    }\n  }\n\n","sourceOld":"  @Override\n  public int read(char cbuf[], int off, int len) throws IOException {\n    synchronized (lock) {\n      ensureOpen();\n\n      // Validate parameters\n      if (off < 0 || off > cbuf.length || len < 0 || off + len > cbuf.length) {\n        throw new IndexOutOfBoundsException(\"off=\" + off + \" len=\" + len + \" cbuf.length=\" + cbuf.length);\n      }\n\n      if (len == 0) {\n        return 0;\n      }\n\n      if (next >= length) {\n        return -1;\n      }\n\n      int n = Math.min(length - next, len);\n      sb.getChars(next, next + n, cbuf, off);\n      next += n;\n      return n;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}