{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","commits":[{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState,Set[String]).mjava","sourceNew":"  private final void abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          subtractFlushedNumDocs(perThread.dwpt.getNumDocsInRAM());\n          perThread.dwpt.abort();\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      assert closed;\n    }\n  }\n\n","sourceOld":"  private final void abortThreadState(final ThreadState perThread, Set<String> newFiles) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          subtractFlushedNumDocs(perThread.dwpt.getNumDocsInRAM());\n          perThread.dwpt.abort(newFiles);\n        } finally {\n          perThread.dwpt.checkAndResetHasAborted();\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      assert closed;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf0fc8b8488d15344408e0ed0ab484f4a3e1bf2","date":1424979404,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private final int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","sourceOld":"  private final void abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          subtractFlushedNumDocs(perThread.dwpt.getNumDocsInRAM());\n          perThread.dwpt.abort();\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      assert closed;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private final int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","sourceOld":"  private final void abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          subtractFlushedNumDocs(perThread.dwpt.getNumDocsInRAM());\n          perThread.dwpt.abort();\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      assert closed;\n    }\n  }\n\n","bugFix":["9299079153fd7895bf3cf6835cf7019af2ba89b3","7af110b00ea8df9429309d83e38e0533d82e144f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private final int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","sourceOld":"  private final void abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          subtractFlushedNumDocs(perThread.dwpt.getNumDocsInRAM());\n          perThread.dwpt.abort();\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      assert closed;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c02b804ab16489b95429791a2d8fb0e0728354d4","date":1436551798,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns how many documents were aborted. */\n  private final int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5898ca35059bc3a89ba6a275ec92a5c32057aedc","date":1436893905,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isActive()) { // we might be closed\n      if (perThread.isInitialized()) { \n        try {\n          int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n          subtractFlushedNumDocs(abortedDocCount);\n          perThread.dwpt.abort();\n          return abortedDocCount;\n        } finally {\n          flushControl.doOnAbort(perThread);\n        }\n      } else {\n        flushControl.doOnAbort(perThread);\n        // This DWPT was never initialized so it has no indexed documents:\n        return 0;\n      }\n    } else {\n      assert closed;\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab08f09eb919a4eea12a75333606380199db57b1","date":1521493705,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) throws IOException {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) throws IOException {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","sourceOld":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#abortThreadState(ThreadState).mjava","sourceNew":null,"sourceOld":"  /** Returns how many documents were aborted. */\n  private int abortThreadState(final ThreadState perThread) throws IOException {\n    assert perThread.isHeldByCurrentThread();\n    if (perThread.isInitialized()) { \n      try {\n        int abortedDocCount = perThread.dwpt.getNumDocsInRAM();\n        subtractFlushedNumDocs(abortedDocCount);\n        perThread.dwpt.abort();\n        return abortedDocCount;\n      } finally {\n        flushControl.doOnAbort(perThread);\n      }\n    } else {\n      flushControl.doOnAbort(perThread);\n      // This DWPT was never initialized so it has no indexed documents:\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["5898ca35059bc3a89ba6a275ec92a5c32057aedc","ab08f09eb919a4eea12a75333606380199db57b1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["9299079153fd7895bf3cf6835cf7019af2ba89b3","98a04f56464afdffd4c430d6c47a0c868a38354e"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["9299079153fd7895bf3cf6835cf7019af2ba89b3","acf0fc8b8488d15344408e0ed0ab484f4a3e1bf2"],"ab08f09eb919a4eea12a75333606380199db57b1":["5898ca35059bc3a89ba6a275ec92a5c32057aedc"],"acf0fc8b8488d15344408e0ed0ab484f4a3e1bf2":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"5898ca35059bc3a89ba6a275ec92a5c32057aedc":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"c02b804ab16489b95429791a2d8fb0e0728354d4":["98a04f56464afdffd4c430d6c47a0c868a38354e"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["264935965977b4a9e2f3920420647072c9c49176"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"98a04f56464afdffd4c430d6c47a0c868a38354e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c02b804ab16489b95429791a2d8fb0e0728354d4"],"ab08f09eb919a4eea12a75333606380199db57b1":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"acf0fc8b8488d15344408e0ed0ab484f4a3e1bf2":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98a04f56464afdffd4c430d6c47a0c868a38354e","acf0fc8b8488d15344408e0ed0ab484f4a3e1bf2"],"5898ca35059bc3a89ba6a275ec92a5c32057aedc":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","ab08f09eb919a4eea12a75333606380199db57b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c02b804ab16489b95429791a2d8fb0e0728354d4":["5898ca35059bc3a89ba6a275ec92a5c32057aedc"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}