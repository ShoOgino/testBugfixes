{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method helps streaming the data for each row . The implementation\n   * would fetch as many rows as needed and gives one 'row' at a time. Only this\n   * method is used during a full import\n   *\n   * @return A 'row' . The 'key' for the map is the column name and the 'value'\n   *         is the value of that column. If there are no more rows to be\n   *         returned, return 'null'\n   */\n  public abstract Map<String, Object> nextRow();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16d6f9a58fc78df8fcb419f2c743c80167daec70","date":1255357914,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","sourceNew":"  /**\n   * This method helps streaming the data for each row . The implementation\n   * would fetch as many rows as needed and gives one 'row' at a time. Only this\n   * method is used during a full import\n   *\n   * @return A 'row'.  The 'key' for the map is the column name and the 'value'\n   *         is the value of that column. If there are no more rows to be\n   *         returned, return 'null'\n   */\n  public abstract Map<String, Object> nextRow();\n\n","sourceOld":"  /**\n   * This method helps streaming the data for each row . The implementation\n   * would fetch as many rows as needed and gives one 'row' at a time. Only this\n   * method is used during a full import\n   *\n   * @return A 'row' . The 'key' for the map is the column name and the 'value'\n   *         is the value of that column. If there are no more rows to be\n   *         returned, return 'null'\n   */\n  public abstract Map<String, Object> nextRow();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessor#nextRow().mjava","sourceNew":"  /**\n   * This method helps streaming the data for each row . The implementation\n   * would fetch as many rows as needed and gives one 'row' at a time. Only this\n   * method is used during a full import\n   *\n   * @return A 'row'.  The 'key' for the map is the column name and the 'value'\n   *         is the value of that column. If there are no more rows to be\n   *         returned, return 'null'\n   */\n  public abstract Map<String, Object> nextRow();\n\n","sourceOld":"  /**\n   * This method helps streaming the data for each row . The implementation\n   * would fetch as many rows as needed and gives one 'row' at a time. Only this\n   * method is used during a full import\n   *\n   * @return A 'row'.  The 'key' for the map is the column name and the 'value'\n   *         is the value of that column. If there are no more rows to be\n   *         returned, return 'null'\n   */\n  public abstract Map<String, Object> nextRow();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["16d6f9a58fc78df8fcb419f2c743c80167daec70"],"16d6f9a58fc78df8fcb419f2c743c80167daec70":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["16d6f9a58fc78df8fcb419f2c743c80167daec70"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"16d6f9a58fc78df8fcb419f2c743c80167daec70":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}