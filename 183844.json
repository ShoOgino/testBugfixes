{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","sourceNew":"        private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 198\n            // try, line 199\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 199\n                // [, line 199\n                ket = cursor;\n                // literal, line 199\n                if (!(eq_s_b(1, \"s\")))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 199\n                bra = cursor;\n                // test, line 199\n                v_2 = limit - cursor;\n                if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                cursor = limit - v_2;\n                // delete, line 199\n                slice_del();\n            } while (false);\n            // setlimit, line 200\n            v_3 = limit - cursor;\n            // tomark, line 200\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_4 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_3;\n            // (, line 200\n            // [, line 201\n            ket = cursor;\n            // substring, line 201\n            among_var = find_among_b(a_7, 7);\n            if (among_var == 0)\n            {\n                limit_backward = v_4;\n                return false;\n            }\n            // ], line 201\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_4;\n                    return false;\n                case 1:\n                    // (, line 202\n                    // call R2, line 202\n                    if (!r_R2())\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // or, line 202\n                    lab1: do {\n                        v_5 = limit - cursor;\n                        lab2: do {\n                            // literal, line 202\n                            if (!(eq_s_b(1, \"s\")))\n                            {\n                                break lab2;\n                            }\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // literal, line 202\n                        if (!(eq_s_b(1, \"t\")))\n                        {\n                            limit_backward = v_4;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 204\n                    // <-, line 204\n                    slice_from(\"i\");\n                    break;\n                case 3:\n                    // (, line 205\n                    // delete, line 205\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 206\n                    // literal, line 206\n                    if (!(eq_s_b(2, \"gu\")))\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // delete, line 206\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_4;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 198\n            // try, line 199\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 199\n                // [, line 199\n                ket = cursor;\n                // literal, line 199\n                if (!(eq_s_b(1, \"s\")))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 199\n                bra = cursor;\n                // test, line 199\n                v_2 = limit - cursor;\n                if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                cursor = limit - v_2;\n                // delete, line 199\n                slice_del();\n            } while (false);\n            // setlimit, line 200\n            v_3 = limit - cursor;\n            // tomark, line 200\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_4 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_3;\n            // (, line 200\n            // [, line 201\n            ket = cursor;\n            // substring, line 201\n            among_var = find_among_b(a_7, 7);\n            if (among_var == 0)\n            {\n                limit_backward = v_4;\n                return false;\n            }\n            // ], line 201\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_4;\n                    return false;\n                case 1:\n                    // (, line 202\n                    // call R2, line 202\n                    if (!r_R2())\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // or, line 202\n                    lab1: do {\n                        v_5 = limit - cursor;\n                        lab2: do {\n                            // literal, line 202\n                            if (!(eq_s_b(1, \"s\")))\n                            {\n                                break lab2;\n                            }\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // literal, line 202\n                        if (!(eq_s_b(1, \"t\")))\n                        {\n                            limit_backward = v_4;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 204\n                    // <-, line 204\n                    slice_from(\"i\");\n                    break;\n                case 3:\n                    // (, line 205\n                    // delete, line 205\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 206\n                    // literal, line 206\n                    if (!(eq_s_b(2, \"gu\")))\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // delete, line 206\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","sourceNew":"                private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 198\n                    // try, line 199\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 199\n                        // [, line 199\n                        ket = cursor;\n                        // literal, line 199\n                        if (!(eq_s_b(1, \"s\")))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 199\n                        bra = cursor;\n                        // test, line 199\n                        v_2 = limit - cursor;\n                        if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        cursor = limit - v_2;\n                        // delete, line 199\n                        slice_del();\n                    } while (false);\n                    // setlimit, line 200\n                    v_3 = limit - cursor;\n                    // tomark, line 200\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_4 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_3;\n                    // (, line 200\n                    // [, line 201\n                    ket = cursor;\n                    // substring, line 201\n                    among_var = find_among_b(a_7, 7);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // ], line 201\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            limit_backward = v_4;\n                            return false;\n                        case 1:\n                            // (, line 202\n                            // call R2, line 202\n                            if (!r_R2())\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // or, line 202\n                            lab1: do {\n                                v_5 = limit - cursor;\n                                lab2: do {\n                                    // literal, line 202\n                                    if (!(eq_s_b(1, \"s\")))\n                                    {\n                                        break lab2;\n                                    }\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_5;\n                                // literal, line 202\n                                if (!(eq_s_b(1, \"t\")))\n                                {\n                                    limit_backward = v_4;\n                                    return false;\n                                }\n                            } while (false);\n                            // delete, line 202\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 204\n                            // <-, line 204\n                            slice_from(\"i\");\n                            break;\n                        case 3:\n                            // (, line 205\n                            // delete, line 205\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 206\n                            // literal, line 206\n                            if (!(eq_s_b(2, \"gu\")))\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // delete, line 206\n                            slice_del();\n                            break;\n                    }\n                    limit_backward = v_4;\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 198\n            // try, line 199\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 199\n                // [, line 199\n                ket = cursor;\n                // literal, line 199\n                if (!(eq_s_b(1, \"s\")))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 199\n                bra = cursor;\n                // test, line 199\n                v_2 = limit - cursor;\n                if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                cursor = limit - v_2;\n                // delete, line 199\n                slice_del();\n            } while (false);\n            // setlimit, line 200\n            v_3 = limit - cursor;\n            // tomark, line 200\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_4 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_3;\n            // (, line 200\n            // [, line 201\n            ket = cursor;\n            // substring, line 201\n            among_var = find_among_b(a_7, 7);\n            if (among_var == 0)\n            {\n                limit_backward = v_4;\n                return false;\n            }\n            // ], line 201\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_4;\n                    return false;\n                case 1:\n                    // (, line 202\n                    // call R2, line 202\n                    if (!r_R2())\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // or, line 202\n                    lab1: do {\n                        v_5 = limit - cursor;\n                        lab2: do {\n                            // literal, line 202\n                            if (!(eq_s_b(1, \"s\")))\n                            {\n                                break lab2;\n                            }\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // literal, line 202\n                        if (!(eq_s_b(1, \"t\")))\n                        {\n                            limit_backward = v_4;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 204\n                    // <-, line 204\n                    slice_from(\"i\");\n                    break;\n                case 3:\n                    // (, line 205\n                    // delete, line 205\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 206\n                    // literal, line 206\n                    if (!(eq_s_b(2, \"gu\")))\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // delete, line 206\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","sourceNew":"                private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 198\n                    // try, line 199\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 199\n                        // [, line 199\n                        ket = cursor;\n                        // literal, line 199\n                        if (!(eq_s_b(1, \"s\")))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 199\n                        bra = cursor;\n                        // test, line 199\n                        v_2 = limit - cursor;\n                        if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        cursor = limit - v_2;\n                        // delete, line 199\n                        slice_del();\n                    } while (false);\n                    // setlimit, line 200\n                    v_3 = limit - cursor;\n                    // tomark, line 200\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_4 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_3;\n                    // (, line 200\n                    // [, line 201\n                    ket = cursor;\n                    // substring, line 201\n                    among_var = find_among_b(a_7, 7);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // ], line 201\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            limit_backward = v_4;\n                            return false;\n                        case 1:\n                            // (, line 202\n                            // call R2, line 202\n                            if (!r_R2())\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // or, line 202\n                            lab1: do {\n                                v_5 = limit - cursor;\n                                lab2: do {\n                                    // literal, line 202\n                                    if (!(eq_s_b(1, \"s\")))\n                                    {\n                                        break lab2;\n                                    }\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_5;\n                                // literal, line 202\n                                if (!(eq_s_b(1, \"t\")))\n                                {\n                                    limit_backward = v_4;\n                                    return false;\n                                }\n                            } while (false);\n                            // delete, line 202\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 204\n                            // <-, line 204\n                            slice_from(\"i\");\n                            break;\n                        case 3:\n                            // (, line 205\n                            // delete, line 205\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 206\n                            // literal, line 206\n                            if (!(eq_s_b(2, \"gu\")))\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // delete, line 206\n                            slice_del();\n                            break;\n                    }\n                    limit_backward = v_4;\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 198\n            // try, line 199\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 199\n                // [, line 199\n                ket = cursor;\n                // literal, line 199\n                if (!(eq_s_b(1, \"s\")))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 199\n                bra = cursor;\n                // test, line 199\n                v_2 = limit - cursor;\n                if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                cursor = limit - v_2;\n                // delete, line 199\n                slice_del();\n            } while (false);\n            // setlimit, line 200\n            v_3 = limit - cursor;\n            // tomark, line 200\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_4 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_3;\n            // (, line 200\n            // [, line 201\n            ket = cursor;\n            // substring, line 201\n            among_var = find_among_b(a_7, 7);\n            if (among_var == 0)\n            {\n                limit_backward = v_4;\n                return false;\n            }\n            // ], line 201\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_4;\n                    return false;\n                case 1:\n                    // (, line 202\n                    // call R2, line 202\n                    if (!r_R2())\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // or, line 202\n                    lab1: do {\n                        v_5 = limit - cursor;\n                        lab2: do {\n                            // literal, line 202\n                            if (!(eq_s_b(1, \"s\")))\n                            {\n                                break lab2;\n                            }\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // literal, line 202\n                        if (!(eq_s_b(1, \"t\")))\n                        {\n                            limit_backward = v_4;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 204\n                    // <-, line 204\n                    slice_from(\"i\");\n                    break;\n                case 3:\n                    // (, line 205\n                    // delete, line 205\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 206\n                    // literal, line 206\n                    if (!(eq_s_b(2, \"gu\")))\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // delete, line 206\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","sourceNew":"                private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 198\n                    // try, line 199\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 199\n                        // [, line 199\n                        ket = cursor;\n                        // literal, line 199\n                        if (!(eq_s_b(1, \"s\")))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 199\n                        bra = cursor;\n                        // test, line 199\n                        v_2 = limit - cursor;\n                        if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        cursor = limit - v_2;\n                        // delete, line 199\n                        slice_del();\n                    } while (false);\n                    // setlimit, line 200\n                    v_3 = limit - cursor;\n                    // tomark, line 200\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_4 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_3;\n                    // (, line 200\n                    // [, line 201\n                    ket = cursor;\n                    // substring, line 201\n                    among_var = find_among_b(a_7, 7);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // ], line 201\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            limit_backward = v_4;\n                            return false;\n                        case 1:\n                            // (, line 202\n                            // call R2, line 202\n                            if (!r_R2())\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // or, line 202\n                            lab1: do {\n                                v_5 = limit - cursor;\n                                lab2: do {\n                                    // literal, line 202\n                                    if (!(eq_s_b(1, \"s\")))\n                                    {\n                                        break lab2;\n                                    }\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_5;\n                                // literal, line 202\n                                if (!(eq_s_b(1, \"t\")))\n                                {\n                                    limit_backward = v_4;\n                                    return false;\n                                }\n                            } while (false);\n                            // delete, line 202\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 204\n                            // <-, line 204\n                            slice_from(\"i\");\n                            break;\n                        case 3:\n                            // (, line 205\n                            // delete, line 205\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 206\n                            // literal, line 206\n                            if (!(eq_s_b(2, \"gu\")))\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // delete, line 206\n                            slice_del();\n                            break;\n                    }\n                    limit_backward = v_4;\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 198\n            // try, line 199\n            v_1 = limit - cursor;\n            lab0: do {\n                // (, line 199\n                // [, line 199\n                ket = cursor;\n                // literal, line 199\n                if (!(eq_s_b(1, \"s\")))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                // ], line 199\n                bra = cursor;\n                // test, line 199\n                v_2 = limit - cursor;\n                if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                {\n                    cursor = limit - v_1;\n                    break lab0;\n                }\n                cursor = limit - v_2;\n                // delete, line 199\n                slice_del();\n            } while (false);\n            // setlimit, line 200\n            v_3 = limit - cursor;\n            // tomark, line 200\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_4 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_3;\n            // (, line 200\n            // [, line 201\n            ket = cursor;\n            // substring, line 201\n            among_var = find_among_b(a_7, 7);\n            if (among_var == 0)\n            {\n                limit_backward = v_4;\n                return false;\n            }\n            // ], line 201\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_4;\n                    return false;\n                case 1:\n                    // (, line 202\n                    // call R2, line 202\n                    if (!r_R2())\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // or, line 202\n                    lab1: do {\n                        v_5 = limit - cursor;\n                        lab2: do {\n                            // literal, line 202\n                            if (!(eq_s_b(1, \"s\")))\n                            {\n                                break lab2;\n                            }\n                            break lab1;\n                        } while (false);\n                        cursor = limit - v_5;\n                        // literal, line 202\n                        if (!(eq_s_b(1, \"t\")))\n                        {\n                            limit_backward = v_4;\n                            return false;\n                        }\n                    } while (false);\n                    // delete, line 202\n                    slice_del();\n                    break;\n                case 2:\n                    // (, line 204\n                    // <-, line 204\n                    slice_from(\"i\");\n                    break;\n                case 3:\n                    // (, line 205\n                    // delete, line 205\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 206\n                    // literal, line 206\n                    if (!(eq_s_b(2, \"gu\")))\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // delete, line 206\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_residual_suffix().mjava","sourceNew":"private boolean r_residual_suffix() {\n  int among_var;\n  int v_1 = limit - cursor;\n  lab0: {\n    ket = cursor;\n    if (!(eq_s_b(\"s\")))\n    {\n      cursor = limit - v_1;\n      break lab0;\n    }\n    bra = cursor;\n    int v_2 = limit - cursor;\n    lab1: {\n      int v_3 = limit - cursor;\n      lab2: {\n        if (!(eq_s_b(\"Hi\")))\n        {\n          break lab2;\n        }\n        break lab1;\n      }\n      cursor = limit - v_3;\n      if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n      {\n        cursor = limit - v_1;\n        break lab0;\n      }\n    }\n    cursor = limit - v_2;\n    slice_del();\n  }\n  if (cursor < I_pV)\n  {\n    return false;\n  }\n  int v_5 = limit_backward;\n  limit_backward = I_pV;\n  ket = cursor;\n  among_var = find_among_b(a_7);\n  if (among_var == 0)\n  {\n    limit_backward = v_5;\n    return false;\n  }\n  bra = cursor;\n  switch (among_var) {\n    case 1:\n      if (!r_R2())\n      {\n        limit_backward = v_5;\n        return false;\n      }\n      lab3: {\n        int v_6 = limit - cursor;\n        lab4: {\n          if (!(eq_s_b(\"s\")))\n          {\n            break lab4;\n          }\n          break lab3;\n        }\n        cursor = limit - v_6;\n        if (!(eq_s_b(\"t\")))\n        {\n          limit_backward = v_5;\n          return false;\n        }\n      }\n      slice_del();\n      break;\n    case 2:\n      slice_from(\"i\");\n      break;\n    case 3:\n      slice_del();\n      break;\n  }\n  limit_backward = v_5;\n  return true;\n}\n\n","sourceOld":"                private boolean r_residual_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n                    // (, line 198\n                    // try, line 199\n                    v_1 = limit - cursor;\n                    lab0: do {\n                        // (, line 199\n                        // [, line 199\n                        ket = cursor;\n                        // literal, line 199\n                        if (!(eq_s_b(1, \"s\")))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        // ], line 199\n                        bra = cursor;\n                        // test, line 199\n                        v_2 = limit - cursor;\n                        if (!(out_grouping_b(g_keep_with_s, 97, 232)))\n                        {\n                            cursor = limit - v_1;\n                            break lab0;\n                        }\n                        cursor = limit - v_2;\n                        // delete, line 199\n                        slice_del();\n                    } while (false);\n                    // setlimit, line 200\n                    v_3 = limit - cursor;\n                    // tomark, line 200\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_4 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_3;\n                    // (, line 200\n                    // [, line 201\n                    ket = cursor;\n                    // substring, line 201\n                    among_var = find_among_b(a_7, 7);\n                    if (among_var == 0)\n                    {\n                        limit_backward = v_4;\n                        return false;\n                    }\n                    // ], line 201\n                    bra = cursor;\n                    switch(among_var) {\n                        case 0:\n                            limit_backward = v_4;\n                            return false;\n                        case 1:\n                            // (, line 202\n                            // call R2, line 202\n                            if (!r_R2())\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // or, line 202\n                            lab1: do {\n                                v_5 = limit - cursor;\n                                lab2: do {\n                                    // literal, line 202\n                                    if (!(eq_s_b(1, \"s\")))\n                                    {\n                                        break lab2;\n                                    }\n                                    break lab1;\n                                } while (false);\n                                cursor = limit - v_5;\n                                // literal, line 202\n                                if (!(eq_s_b(1, \"t\")))\n                                {\n                                    limit_backward = v_4;\n                                    return false;\n                                }\n                            } while (false);\n                            // delete, line 202\n                            slice_del();\n                            break;\n                        case 2:\n                            // (, line 204\n                            // <-, line 204\n                            slice_from(\"i\");\n                            break;\n                        case 3:\n                            // (, line 205\n                            // delete, line 205\n                            slice_del();\n                            break;\n                        case 4:\n                            // (, line 206\n                            // literal, line 206\n                            if (!(eq_s_b(2, \"gu\")))\n                            {\n                                limit_backward = v_4;\n                                return false;\n                            }\n                            // delete, line 206\n                            slice_del();\n                            break;\n                    }\n                    limit_backward = v_4;\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}