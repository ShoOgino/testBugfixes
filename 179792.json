{"path":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will not have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will no have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d505b8f51b856e1b7e9dd377f5050c337b797a","date":1549455307,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will not have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if(!core.isSearchEnabled()){\n      throw new SolrException( SolrException.ErrorCode.FORBIDDEN,\"Search is temporarily disabled\");\n    }\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will not have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":null,"bugIntro":["3fc55735df93d56525bef197403d867c1fe93fe7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3fc55735df93d56525bef197403d867c1fe93fe7","date":1558373042,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrQueryRequestBase#getSearcher().mjava","sourceNew":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will not have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","sourceOld":"  @Override\n  public SolrIndexSearcher getSearcher() {\n    if(core == null) return null;//a request for a core admin will not have a core\n    // should this reach out and get a searcher from the core singleton, or\n    // should the core populate one in a factory method to create requests?\n    // or there could be a setSearcher() method that Solr calls\n\n    if(!core.isSearchEnabled()){\n      throw new SolrException( SolrException.ErrorCode.FORBIDDEN,\"Search is temporarily disabled\");\n    }\n\n    if (searcherHolder==null) {\n      searcherHolder = core.getSearcher();\n    }\n\n    return searcherHolder.get();\n  }\n\n","bugFix":["81d505b8f51b856e1b7e9dd377f5050c337b797a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3fc55735df93d56525bef197403d867c1fe93fe7":["81d505b8f51b856e1b7e9dd377f5050c337b797a"],"81d505b8f51b856e1b7e9dd377f5050c337b797a":["08970e5b8411182a29412c177eff67ec1110095b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3fc55735df93d56525bef197403d867c1fe93fe7"],"08970e5b8411182a29412c177eff67ec1110095b":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"3fc55735df93d56525bef197403d867c1fe93fe7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"81d505b8f51b856e1b7e9dd377f5050c337b797a":["3fc55735df93d56525bef197403d867c1fe93fe7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["81d505b8f51b856e1b7e9dd377f5050c337b797a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}