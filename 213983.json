{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","commits":[{"id":"d009c4b73c08d156582c5a8e34e7e3c3f7378e8d","date":1402425682,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","pathOld":"/dev/null","sourceNew":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      //now prefix it by an array of integers of the cell levels\n      StringBuilder buf = new StringBuilder(100);\n      buf.append('[');\n      for (int level = 1; level <= getLevel(); level++) {\n        if (level != 1)\n          buf.append(',');\n        buf.append(getLVAtLevel(level).cellNumber);\n      }\n      buf.append(\"] \").append(pretty);\n      return buf.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb53c8e9da2afe33252ee698dda412264252cfa7","date":1418531581,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","sourceNew":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      return toStringUnitRaw(this) + (isLeaf() ? \"•\" : \"\") + \" \" + pretty;\n    }\n\n","sourceOld":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      //now prefix it by an array of integers of the cell levels\n      StringBuilder buf = new StringBuilder(100);\n      buf.append('[');\n      for (int level = 1; level <= getLevel(); level++) {\n        if (level != 1)\n          buf.append(',');\n        buf.append(getLVAtLevel(level).cellNumber);\n      }\n      buf.append(\"] \").append(pretty);\n      return buf.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","sourceNew":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      return toStringUnitRaw(this) + (isLeaf() ? \"•\" : \"\") + \" \" + pretty;\n    }\n\n","sourceOld":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      return toStringUnitRaw(this) + (isLeaf() ? \"•\" : \"\") + \" \" + pretty;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#toStringDebug().mjava","sourceNew":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      return toStringUnitRaw(this) + (isLeaf() ? \"•\" : \"\") + \" \" + pretty;\n    }\n\n","sourceOld":"    /** Configure your IDE to use this. */\n    public String toStringDebug() {\n      String pretty = toString();\n      if (getLevel() == 0)\n        return pretty;\n      return toStringUnitRaw(this) + (isLeaf() ? \"•\" : \"\") + \" \" + pretty;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d009c4b73c08d156582c5a8e34e7e3c3f7378e8d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"af2638813028b254a88b418ebeafb541afb49653":["cb53c8e9da2afe33252ee698dda412264252cfa7","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["d009c4b73c08d156582c5a8e34e7e3c3f7378e8d"]},"commit2Childs":{"d009c4b73c08d156582c5a8e34e7e3c3f7378e8d":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d009c4b73c08d156582c5a8e34e7e3c3f7378e8d"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}