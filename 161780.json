{"path":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e37a877cbb3c0d736bdc1fcb3aea4c24015799f","date":1293976079,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm, float topLevelBoost) {\n      this.queryNorm = norm * topLevelBoost;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm, topLevelBoost);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm, float topLevelBoost) {\n      this.queryNorm = norm * topLevelBoost;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm, topLevelBoost);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#normalize(float).mjava","sourceNew":"    @Override\n    public void normalize(float norm, float topLevelBoost) {\n      this.queryNorm = norm * topLevelBoost;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm, topLevelBoost);\n    }\n\n","sourceOld":"    @Override\n    public void normalize(float norm) {\n      this.queryNorm = norm;\n      queryWeight *= this.queryNorm;\n      // we normalize the inner weight, but ignore it (just to initialize everything)\n      if (innerWeight != null) innerWeight.normalize(norm);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["3e37a877cbb3c0d736bdc1fcb3aea4c24015799f","0f3cee3d20b0c786e6fca20539454262e29edcab"],"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","3e37a877cbb3c0d736bdc1fcb3aea4c24015799f"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["3e37a877cbb3c0d736bdc1fcb3aea4c24015799f"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["9454a6510e2db155fb01faa5c049b06ece95fab9","3e37a877cbb3c0d736bdc1fcb3aea4c24015799f"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["3e37a877cbb3c0d736bdc1fcb3aea4c24015799f","0f3cee3d20b0c786e6fca20539454262e29edcab"],"3e37a877cbb3c0d736bdc1fcb3aea4c24015799f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3e37a877cbb3c0d736bdc1fcb3aea4c24015799f":["1291e4568eb7d9463d751627596ef14baf4c1603","70ad682703b8585f5d0a637efec044d57ec05efb","0f3cee3d20b0c786e6fca20539454262e29edcab","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","3e37a877cbb3c0d736bdc1fcb3aea4c24015799f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}