{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","commits":[{"id":"cf4e1373c1497f3587ee815b1bddda10850a0f37","date":1375195916,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    SolrCore core = cores.getCore(\"collection1\");\n    try {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    } finally {\n      core.close();\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    SolrCore core = cores.getCore(\"collection1\");\n    try {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    } finally {\n      core.close();\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    SolrCore core = cores.getCore(\"collection1\");\n    try {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    } finally {\n      core.close();\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(dataDir, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir();\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir();\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":["cf4e1373c1497f3587ee815b1bddda10850a0f37"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = new File(dataDir, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n\n    // cleanup\n    FileUtils.deleteDirectory(workDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory;\n      if (df instanceof MetricsDirectoryFactory) {\n        dirFactory = (FailingDirectoryFactory)((MetricsDirectoryFactory)df).getDelegate();\n      } else {\n        dirFactory = (FailingDirectoryFactory)df;\n      }\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory;\n      if (df instanceof MetricsDirectoryFactory) {\n        dirFactory = (FailingDirectoryFactory)((MetricsDirectoryFactory)df).getDelegate();\n      } else {\n        dirFactory = (FailingDirectoryFactory)df;\n      }\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory)core.getDirectoryFactory();\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e037d4cc589a2acd147ea27ffc29b19d595be53f","date":1488209547,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory;\n      if (df instanceof MetricsDirectoryFactory) {\n        dirFactory = (FailingDirectoryFactory)((MetricsDirectoryFactory)df).getDelegate();\n      } else {\n        dirFactory = (FailingDirectoryFactory)df;\n      }\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"63a1a94d02abb8cde5dd6ea0defbbc751ce71603","date":1521902895,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (SolrException e) {\n        // expected if error handling properly\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":["cf4e1373c1497f3587ee815b1bddda10850a0f37"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fa95fb629298e03fe5e3d71a0ce792f1256f711","date":1521903809,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (SolrException e) {\n        // expected if error handling properly\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (FailingDirectoryFactory.FailingDirectoryFactoryException e) {\n        // expected if error handling properly\n      } finally {\n        unIgnoreException(FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (SolrException e) {\n        // expected if error handling properly\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (SolrException e) {\n        // expected if error handling properly\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n\n        SolrQueryResponse resp = new SolrQueryResponse();\n        admin.handleRequestBody\n            (req(CoreAdminParams.ACTION,\n                CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                CoreAdminParams.CORE, \"collection1\",\n                CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                resp);\n        fail(\"exception expected\");\n      } catch (SolrException e) {\n        // expected if error handling properly\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cores);\n         SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n\n    try (SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6b17e67903ace8abb1d4d602bfc40d1994692ff","date":1593429504,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreMergeIndexesAdminHandlerTest#testMergeIndexesCoreAdminHandler().mjava","sourceNew":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n    cores.getAllowPaths().add(workDir.toPath());\n\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cores);\n         SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMergeIndexesCoreAdminHandler() throws Exception {\n    final File workDir = createTempDir().toFile();\n\n    final CoreContainer cores = h.getCoreContainer();\n\n    try (final CoreAdminHandler admin = new CoreAdminHandler(cores);\n         SolrCore core = cores.getCore(\"collection1\")) {\n      DirectoryFactory df = core.getDirectoryFactory();\n      FailingDirectoryFactory dirFactory = (FailingDirectoryFactory) df;\n\n      try {\n        dirFactory.fail = true;\n        ignoreException(WRAPPED_FAILING_MSG);\n        SolrException e = expectThrows(SolrException.class, () -> {\n          admin.handleRequestBody\n              (req(CoreAdminParams.ACTION,\n                  CoreAdminParams.CoreAdminAction.MERGEINDEXES.toString(),\n                  CoreAdminParams.CORE, \"collection1\",\n                  CoreAdminParams.INDEX_DIR, workDir.getAbsolutePath()),\n                  new SolrQueryResponse());\n        });\n        assertEquals(FailingDirectoryFactory.FailingDirectoryFactoryException.class, e.getCause().getClass());\n      } finally {\n        unIgnoreException(WRAPPED_FAILING_MSG);\n      }\n      dirFactory.fail = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf4e1373c1497f3587ee815b1bddda10850a0f37"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["f4abec28b874149a7223e32cc7a01704c27790de","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"a6b17e67903ace8abb1d4d602bfc40d1994692ff":["ba055e19afc289adcb5bedaf68513793a7254012"],"ba055e19afc289adcb5bedaf68513793a7254012":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["e037d4cc589a2acd147ea27ffc29b19d595be53f","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"cf4e1373c1497f3587ee815b1bddda10850a0f37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["cf4e1373c1497f3587ee815b1bddda10850a0f37"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["f4abec28b874149a7223e32cc7a01704c27790de"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6b17e67903ace8abb1d4d602bfc40d1994692ff"],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["e037d4cc589a2acd147ea27ffc29b19d595be53f"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["f03e4bed5023ec3ef93a771b8888cae991cf448d","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"a6b17e67903ace8abb1d4d602bfc40d1994692ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["f8061ddd97f3352007d927dae445884a6f3d857b","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693"],"ba055e19afc289adcb5bedaf68513793a7254012":["a6b17e67903ace8abb1d4d602bfc40d1994692ff"],"cf4e1373c1497f3587ee815b1bddda10850a0f37":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","e332392bbbdd01cb69ad6a89051f483cda38e15e"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cf4e1373c1497f3587ee815b1bddda10850a0f37"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["f8061ddd97f3352007d927dae445884a6f3d857b","ba055e19afc289adcb5bedaf68513793a7254012","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["e037d4cc589a2acd147ea27ffc29b19d595be53f","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","f8061ddd97f3352007d927dae445884a6f3d857b","f03e4bed5023ec3ef93a771b8888cae991cf448d","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}