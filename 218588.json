{"path":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(newRandom(), false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(false);\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":null,"sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":null,"sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletes().mjava","sourceNew":null,"sourceOld":"  public void testCrashReaderDeletes() throws IOException {\n    \n    IndexWriter writer = initIndex(random, false);\n    MockDirectoryWrapper dir = (MockDirectoryWrapper) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(157, reader.numDocs());\n    reader.close();\n    dir.clearCrash();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["efb7a19703a037c29e30440260d393500febc1f4"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["efb7a19703a037c29e30440260d393500febc1f4","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"efb7a19703a037c29e30440260d393500febc1f4":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","1f653cfcf159baeaafe5d01682a911e95bba4012"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1f653cfcf159baeaafe5d01682a911e95bba4012","efb7a19703a037c29e30440260d393500febc1f4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["efb7a19703a037c29e30440260d393500febc1f4","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["1f653cfcf159baeaafe5d01682a911e95bba4012","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"efb7a19703a037c29e30440260d393500febc1f4":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3615ce4a1f785ae1b779244de52c6a7d99227e60","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["efb7a19703a037c29e30440260d393500febc1f4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}