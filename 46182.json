{"path":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","commits":[{"id":"a22ad352a73aa6ab982b6377e1714950edaf62f0","date":1366051636,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    MoreLikeThisQuery other = (MoreLikeThisQuery) obj;\n    if (analyzer == null) {\n      if (other.analyzer != null) return false;\n    } else if (!analyzer.equals(other.analyzer)) return false;\n    if (fieldName == null) {\n      if (other.fieldName != null) return false;\n    } else if (!fieldName.equals(other.fieldName)) return false;\n    if (likeText == null) {\n      if (other.likeText != null) return false;\n    } else if (!likeText.equals(other.likeText)) return false;\n    if (maxQueryTerms != other.maxQueryTerms) return false;\n    if (minDocFreq != other.minDocFreq) return false;\n    if (minTermFrequency != other.minTermFrequency) return false;\n    if (!Arrays.equals(moreLikeFields, other.moreLikeFields)) return false;\n    if (Float.floatToIntBits(percentTermsToMatch) != Float\n        .floatToIntBits(other.percentTermsToMatch)) return false;\n    if (stopWords == null) {\n      if (other.stopWords != null) return false;\n    } else if (!stopWords.equals(other.stopWords)) return false;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    MoreLikeThisQuery other = (MoreLikeThisQuery) obj;\n    if (analyzer == null) {\n      if (other.analyzer != null) return false;\n    } else if (!analyzer.equals(other.analyzer)) return false;\n    if (fieldName == null) {\n      if (other.fieldName != null) return false;\n    } else if (!fieldName.equals(other.fieldName)) return false;\n    if (likeText == null) {\n      if (other.likeText != null) return false;\n    } else if (!likeText.equals(other.likeText)) return false;\n    if (maxQueryTerms != other.maxQueryTerms) return false;\n    if (minDocFreq != other.minDocFreq) return false;\n    if (minTermFrequency != other.minTermFrequency) return false;\n    if (!Arrays.equals(moreLikeFields, other.moreLikeFields)) return false;\n    if (Float.floatToIntBits(percentTermsToMatch) != Float\n        .floatToIntBits(other.percentTermsToMatch)) return false;\n    if (stopWords == null) {\n      if (other.stopWords != null) return false;\n    } else if (!stopWords.equals(other.stopWords)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThisQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    MoreLikeThisQuery other = (MoreLikeThisQuery) obj;\n    if (analyzer == null) {\n      if (other.analyzer != null) return false;\n    } else if (!analyzer.equals(other.analyzer)) return false;\n    if (fieldName == null) {\n      if (other.fieldName != null) return false;\n    } else if (!fieldName.equals(other.fieldName)) return false;\n    if (likeText == null) {\n      if (other.likeText != null) return false;\n    } else if (!likeText.equals(other.likeText)) return false;\n    if (maxQueryTerms != other.maxQueryTerms) return false;\n    if (minDocFreq != other.minDocFreq) return false;\n    if (minTermFrequency != other.minTermFrequency) return false;\n    if (!Arrays.equals(moreLikeFields, other.moreLikeFields)) return false;\n    if (Float.floatToIntBits(percentTermsToMatch) != Float\n        .floatToIntBits(other.percentTermsToMatch)) return false;\n    if (stopWords == null) {\n      if (other.stopWords != null) return false;\n    } else if (!stopWords.equals(other.stopWords)) return false;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a22ad352a73aa6ab982b6377e1714950edaf62f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a22ad352a73aa6ab982b6377e1714950edaf62f0","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"a22ad352a73aa6ab982b6377e1714950edaf62f0":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a22ad352a73aa6ab982b6377e1714950edaf62f0"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}