{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#getFeed(String,int,int).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#getFeed(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * @see org.apache.lucene.gdata.storage.Storage#getFeed(java.lang.String, \n     *      int, int) \n     */ \n    @SuppressWarnings(\"unchecked\") \n    public BaseFeed getFeed(String feedId, int startIndex, int resultCount) \n            throws StorageException { \n        if (this.profile == null) \n            throw new StorageException( \n                    \"Can process ExtensionProfile not set -- is null\"); \n        if (feedId == null) \n            throw new StorageException(\"No feed ID specified -- is null\"); \n        if (LOG.isInfoEnabled()) \n            LOG.info(\"get feed: \" + feedId + \" startindex: \" + startIndex \n                    + \" resultCount: \" + resultCount); \n        ReferenceCounter<StorageQuery> query = null; \n        try { \n            query = this.controller.getStorageQuery(); \n            List<BaseEntry> resultList = query.get().getLatestFeedQuery(feedId, \n                    resultCount, startIndex, this.profile); \n            BaseFeed feed = new Feed(); \n            feed.getEntries().addAll(resultList); \n            return feed; \n        } catch (Exception e) { \n            LOG.error(\"Can't get latest feed for feedID: \" + feedId + \" -- \" \n                    + e.getMessage(), e); \n            StorageException ex = new StorageException(\"Can't create Entry -- \" \n                    + e.getMessage(), e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n \n        } finally { \n            if (query != null) \n                query.decrementRef(); \n        } \n \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageImplementation#getFeed(String,int,int).mjava","sourceNew":null,"sourceOld":"    /** \n     * @see org.apache.lucene.gdata.storage.Storage#getFeed(java.lang.String, \n     *      int, int) \n     */ \n    @SuppressWarnings(\"unchecked\") \n    public BaseFeed getFeed(String feedId, int startIndex, int resultCount) \n            throws StorageException { \n        if (this.profile == null) \n            throw new StorageException( \n                    \"Can process ExtensionProfile not set -- is null\"); \n        if (feedId == null) \n            throw new StorageException(\"No feed ID specified -- is null\"); \n        if (LOG.isInfoEnabled()) \n            LOG.info(\"get feed: \" + feedId + \" startindex: \" + startIndex \n                    + \" resultCount: \" + resultCount); \n        ReferenceCounter<StorageQuery> query = null; \n        try { \n            query = this.controller.getStorageQuery(); \n            List<BaseEntry> resultList = query.get().getLatestFeedQuery(feedId, \n                    resultCount, startIndex, this.profile); \n            BaseFeed feed = new Feed(); \n            feed.getEntries().addAll(resultList); \n            return feed; \n        } catch (Exception e) { \n            LOG.error(\"Can't get latest feed for feedID: \" + feedId + \" -- \" \n                    + e.getMessage(), e); \n            StorageException ex = new StorageException(\"Can't create Entry -- \" \n                    + e.getMessage(), e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n \n        } finally { \n            if (query != null) \n                query.decrementRef(); \n        } \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"52754a40a1550056d5637c8992b4076b5ed77328":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}