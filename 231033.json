{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","commits":[{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","pathOld":"/dev/null","sourceNew":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");\n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d22d0f5940f155267b250876fa797ff69e8e6e7","date":1400540695,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","sourceNew":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    Integer rf = null;\n    Integer minRf = null;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");      \n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n      Object rfObj = header.get(UpdateRequest.REPFACT);\n      if (rfObj != null && rfObj instanceof Integer) {\n        Integer routeRf = (Integer)rfObj;\n        if (rf == null || routeRf < rf)\n          rf = routeRf;\n      }\n      minRf = (Integer)header.get(UpdateRequest.MIN_REPFACT);\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    if (rf != null)\n      cheader.add(UpdateRequest.REPFACT, rf);\n    if (minRf != null)\n      cheader.add(UpdateRequest.MIN_REPFACT, minRf);\n    \n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","sourceOld":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");\n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","sourceNew":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    Integer rf = null;\n    Integer minRf = null;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");      \n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n      Object rfObj = header.get(UpdateRequest.REPFACT);\n      if (rfObj != null && rfObj instanceof Integer) {\n        Integer routeRf = (Integer)rfObj;\n        if (rf == null || routeRf < rf)\n          rf = routeRf;\n      }\n      minRf = (Integer)header.get(UpdateRequest.MIN_REPFACT);\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    if (rf != null)\n      cheader.add(UpdateRequest.REPFACT, rf);\n    if (minRf != null)\n      cheader.add(UpdateRequest.MIN_REPFACT, minRf);\n    \n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","sourceOld":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");\n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#condenseResponse(NamedList,long).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer#condenseResponse(NamedList,long).mjava","sourceNew":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    Integer rf = null;\n    Integer minRf = null;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");      \n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n      Object rfObj = header.get(UpdateRequest.REPFACT);\n      if (rfObj != null && rfObj instanceof Integer) {\n        Integer routeRf = (Integer)rfObj;\n        if (rf == null || routeRf < rf)\n          rf = routeRf;\n      }\n      minRf = (Integer)header.get(UpdateRequest.MIN_REPFACT);\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    if (rf != null)\n      cheader.add(UpdateRequest.REPFACT, rf);\n    if (minRf != null)\n      cheader.add(UpdateRequest.MIN_REPFACT, minRf);\n    \n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","sourceOld":"  public RouteResponse condenseResponse(NamedList response, long timeMillis) {\n    RouteResponse condensed = new RouteResponse();\n    int status = 0;\n    Integer rf = null;\n    Integer minRf = null;\n    for(int i=0; i<response.size(); i++) {\n      NamedList shardResponse = (NamedList)response.getVal(i);\n      NamedList header = (NamedList)shardResponse.get(\"responseHeader\");      \n      Integer shardStatus = (Integer)header.get(\"status\");\n      int s = shardStatus.intValue();\n      if(s > 0) {\n          status = s;\n      }\n      Object rfObj = header.get(UpdateRequest.REPFACT);\n      if (rfObj != null && rfObj instanceof Integer) {\n        Integer routeRf = (Integer)rfObj;\n        if (rf == null || routeRf < rf)\n          rf = routeRf;\n      }\n      minRf = (Integer)header.get(UpdateRequest.MIN_REPFACT);\n    }\n\n    NamedList cheader = new NamedList();\n    cheader.add(\"status\", status);\n    cheader.add(\"QTime\", timeMillis);\n    if (rf != null)\n      cheader.add(UpdateRequest.REPFACT, rf);\n    if (minRf != null)\n      cheader.add(UpdateRequest.MIN_REPFACT, minRf);\n    \n    condensed.add(\"responseHeader\", cheader);\n    return condensed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d22d0f5940f155267b250876fa797ff69e8e6e7":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["9d22d0f5940f155267b250876fa797ff69e8e6e7"],"b7605579001505896d48b07160075a5c8b8e128e":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","9d22d0f5940f155267b250876fa797ff69e8e6e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"9d22d0f5940f155267b250876fa797ff69e8e6e7":["bafca15d8e408346a67f4282ad1143b88023893b","b7605579001505896d48b07160075a5c8b8e128e"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["9d22d0f5940f155267b250876fa797ff69e8e6e7","b7605579001505896d48b07160075a5c8b8e128e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}