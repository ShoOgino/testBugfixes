{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#doTest().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 2)\n  public void test() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n    doTestTopStatsWithRefinement();\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n    doTestTopStatsWithRefinement();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 2)\n  public void test() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n\n    doTestTopStatsWithRefinement(true);\n    doTestTopStatsWithRefinement(false);\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 2)\n  public void test() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n    doTestTopStatsWithRefinement();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#test().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 2)\n  public void test() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n\n    doTestTopStatsWithRefinement(true);\n    doTestTopStatsWithRefinement(false);\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 2)\n  public void test() throws Exception {\n\n    del(\"*:*\");\n    final SolrClient shard0 = clients.get(0);\n    final SolrClient shard1 = clients.get(1);\n\n    // NOTE: we use the literal (4 character) string \"null\" as a company name\n    // to help ensure there isn't any bugs where the literal string is treated as if it \n    // were a true NULL value.\n\n    // shard0\n    shard0.add(sdoc(id, 19, \"place_t\", \"cardiff dublin\", \n                    \"company_t\", \"microsoft polecat\", \n                    \"price_ti\", \"15\", \"foo_s\", \"aaa\", \"foo_i\", 10));\n    shard0.add(sdoc(id, 20, \"place_t\", \"dublin\", \n                    \"company_t\", \"polecat microsoft null\", \n                    \"price_ti\", \"19\", \"foo_s\", \"bbb\", \"foo_i\", 4));\n    shard0.add(sdoc(id, 21, \"place_t\", \"london la dublin\", \n                    \"company_t\", \"microsoft fujitsu null polecat\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 3));\n    shard0.add(sdoc(id, 22, \"place_t\", \"krakow london cardiff\", \n                    \"company_t\", \"polecat null bbc\", \n                    \"price_ti\", \"39\", \"foo_s\", \"bbb\", \"foo_i\", 6));\n    shard0.add(sdoc(id, 23, \"place_t\", \"london\", \n                    \"company_t\", \"\", \n                    \"price_ti\", \"29\", \"foo_s\", \"bbb\", \"foo_i\", 9));\n    // shard1\n    shard1.add(sdoc(id, 24, \"place_t\", \"la\", \n                    \"company_t\", \"\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 21));\n    shard1.add(sdoc(id, 25, \n                    \"company_t\", \"microsoft polecat null fujitsu null bbc\", \n                    \"price_ti\", \"59\", \"foo_s\", \"aaa\", \"foo_i\", 5));\n    shard1.add(sdoc(id, 26, \"place_t\", \"krakow\", \n                    \"company_t\", \"null\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 23));\n    shard1.add(sdoc(id, 27, \"place_t\", \"krakow cardiff dublin london la\", \n                    \"company_t\", \"null microsoft polecat bbc fujitsu\", \n                    \"foo_s\", \"aaa\", \"foo_i\", 91));\n    shard1.add(sdoc(id, 28, \"place_t\", \"cork\", \n                    \"company_t\", \"fujitsu rte\", \"foo_s\", \"aaa\", \"foo_i\", 76));\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n    doTestDeepPivotStatsOnString();\n    doTestTopStatsWithRefinement();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["abb23fcc2461782ab204e61213240feb77d355aa","d12bbc45d641864ffe03291bc30f178eb34e434c"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d12bbc45d641864ffe03291bc30f178eb34e434c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"abb23fcc2461782ab204e61213240feb77d355aa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}