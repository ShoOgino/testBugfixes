{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    if (reuse == null) {\n      return (new SepDocsAndPositionsEnum()).init(fieldInfo, termState, skipDocs);\n    } else {\n      return ((SepDocsAndPositionsEnum) reuse).init(fieldInfo, termState, skipDocs);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7aa50cc652a13e0f9cdda415676e853612824501"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7aa50cc652a13e0f9cdda415676e853612824501","date":1280227914,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    if (reuse == null) {\n      return (new SepDocsAndPositionsEnum()).init(fieldInfo, termState, skipDocs);\n    } else {\n      return ((SepDocsAndPositionsEnum) reuse).init(fieldInfo, termState, skipDocs);\n    }\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    if (reuse == null) {\n      return (new SepDocsAndPositionsEnum()).init(fieldInfo, termState, skipDocs);\n    } else {\n      return ((SepDocsAndPositionsEnum) reuse).init(fieldInfo, termState, skipDocs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa1a999d6674423e5c4ac858b410283f6fe03f20","date":1294868331,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,PrefixCodedTermState,Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, PrefixCodedTermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docsAndPositions(FieldInfo,TermState,Bits,DocsAndPositionsEnum).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, TermState _termState, Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {\n    assert !fieldInfo.omitTermFreqAndPositions;\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsAndPositionsEnum postingsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsAndPositionsEnum)) {\n      postingsEnum = new SepDocsAndPositionsEnum();\n    } else {\n      postingsEnum = (SepDocsAndPositionsEnum) reuse;\n      if (postingsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        postingsEnum = new SepDocsAndPositionsEnum();        \n      }\n    }\n\n    return postingsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7aa50cc652a13e0f9cdda415676e853612824501":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","7aa50cc652a13e0f9cdda415676e853612824501"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["7aa50cc652a13e0f9cdda415676e853612824501","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["7aa50cc652a13e0f9cdda415676e853612824501"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["3242a09f703274d3b9283f2064a1a33064b53a1b","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa1a999d6674423e5c4ac858b410283f6fe03f20"]},"commit2Childs":{"7aa50cc652a13e0f9cdda415676e853612824501":["3242a09f703274d3b9283f2064a1a33064b53a1b","29ef99d61cda9641b6250bf9567329a6e65f901d","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7aa50cc652a13e0f9cdda415676e853612824501","3242a09f703274d3b9283f2064a1a33064b53a1b"],"fa1a999d6674423e5c4ac858b410283f6fe03f20":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}