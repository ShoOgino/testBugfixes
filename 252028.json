{"path":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","commits":[{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n    });\n    assertTrue(\"Should warn no offsets\", e.getMessage().contains(\"indexed without offsets\"));\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n    });\n    assertTrue(\"Should warn no offsets\", e.getMessage().contains(\"indexed without offsets\"));\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/HighlighterTest#testMethodPostings().mjava","sourceNew":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n    });\n    assertTrue(\"Should warn no offsets\", e.getMessage().contains(\"indexed without offsets\"));\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","sourceOld":"  @Test\n  public void testMethodPostings() {\n    String field = \"t_text\";\n    assertU(adoc(field, LONG_TEXT,\n        \"id\", \"1\"));\n    assertU(commit());\n\n    try {\n      assertQ(\"Tried PostingsSolrHighlighter but failed due to offsets not in postings\",\n          req(\"q\", \"long\", \"hl.method\", \"postings\", \"df\", field, \"hl\", \"true\"));\n      fail(\"Did not encounter exception for no offsets\");\n    } catch (Exception e) {\n      assertTrue(\"Cause should be illegal argument\", e.getCause() instanceof IllegalArgumentException);\n      assertTrue(\"Should warn no offsets\", e.getCause().getMessage().contains(\"indexed without offsets\"));\n    }\n    // note: the default schema.xml has no offsets in postings to test the PostingsHighlighter. Leave that for another\n    //  test class.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75babd1dfc2521603bfeb0968042e921d8c6c652"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["75babd1dfc2521603bfeb0968042e921d8c6c652","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["75babd1dfc2521603bfeb0968042e921d8c6c652","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["727bb765ff2542275f6d31f67be18d7104bae148","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}