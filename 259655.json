{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber)\n    throws IOException {\n    if ((normGen == null && preLockless) || (normGen != null && normGen[fieldNumber] == CHECK_DIR)) {\n      // Must fallback to directory file exists check:\n      String fileName = name + \".s\" + fieldNumber;\n      return dir.fileExists(fileName);\n    } else if (normGen == null || normGen[fieldNumber] == NO) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber)\n    throws IOException {\n    if ((normGen == null && preLockless) || (normGen != null && normGen[fieldNumber] == CHECK_DIR)) {\n      // Must fallback to directory file exists check:\n      String fileName = name + \".s\" + fieldNumber;\n      return dir.fileExists(fileName);\n    } else if (normGen == null || normGen[fieldNumber] == NO) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber)\n    throws IOException {\n    if ((normGen == null && preLockless) || (normGen != null && normGen[fieldNumber] == CHECK_DIR)) {\n      // Must fallback to directory file exists check:\n      String fileName = name + \".s\" + fieldNumber;\n      return dir.fileExists(fileName);\n    } else if (normGen == null || normGen[fieldNumber] == NO) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n  }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n  }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n  }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    return normGen != null && normGen[fieldNumber] != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n  }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbfc5f8ff83fd99d2de4dcb307c1edd9e51bc6ff","date":1323040486,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":"  /**\n   * @deprecated separate norms are not supported in >= 4.0\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10acb7e55ffd7d041a1028653d0defa4a50bfec3","date":1323041492,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated separate norms are not supported in >= 4.0\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#hasSeparateNorms(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns true if this field for this segment has saved a separate norms file (_<segment>_N.sX).\n   *\n   * @param fieldNumber the field index to check\n   */\n  public boolean hasSeparateNorms(int fieldNumber) {\n    if (normGen == null) {\n      return false;\n    }\n\n    Long gen = normGen.get(fieldNumber);\n    return gen != null && gen.longValue() != NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["1224a4027481acce15495b03bce9b48b93b42722","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cbfc5f8ff83fd99d2de4dcb307c1edd9e51bc6ff":["1224a4027481acce15495b03bce9b48b93b42722"],"10acb7e55ffd7d041a1028653d0defa4a50bfec3":["cbfc5f8ff83fd99d2de4dcb307c1edd9e51bc6ff"],"6267e1ce56c2eec111425690cd04e251b6f14952":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["6267e1ce56c2eec111425690cd04e251b6f14952","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["6267e1ce56c2eec111425690cd04e251b6f14952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["1224a4027481acce15495b03bce9b48b93b42722","10acb7e55ffd7d041a1028653d0defa4a50bfec3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["6267e1ce56c2eec111425690cd04e251b6f14952","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"cbfc5f8ff83fd99d2de4dcb307c1edd9e51bc6ff":["10acb7e55ffd7d041a1028653d0defa4a50bfec3"],"10acb7e55ffd7d041a1028653d0defa4a50bfec3":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"6267e1ce56c2eec111425690cd04e251b6f14952":["d619839baa8ce5503e496b94a9e42ad6f079293f","b0c7a8f7304b75b1528814c5820fa23a96816c27","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cbfc5f8ff83fd99d2de4dcb307c1edd9e51bc6ff","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}