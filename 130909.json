{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","commits":[{"id":"6d01ed6d1df51191983f4dd157aedf5f4650e2b3","date":1376572546,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","sourceNew":"    @Override\n    public void finishTerm(BytesRef text, TermStats stats) throws IOException {\n\n      assert stats.docFreq > 0;\n      //if (DEBUG) System.out.println(\"BTTW.finishTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment + \" df=\" + stats.docFreq);\n\n      blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n      long[] longs = new long[longsSize];\n      postingsWriter.finishTerm(longs, metaWriter, stats);\n      byte[] bytes = new byte[(int)metaWriter.getFilePointer()];\n      metaWriter.writeTo(bytes, 0);\n      metaWriter.reset();\n\n      PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), stats, longs, bytes);\n      pending.add(term);\n      numTerms++;\n    }\n\n","sourceOld":"    @Override\n    public void finishTerm(BytesRef text, TermStats stats) throws IOException {\n\n      assert stats.docFreq > 0;\n      //if (DEBUG) System.out.println(\"BTTW.finishTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment + \" df=\" + stats.docFreq);\n\n      blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n      long[] longs = new long[longsSize];\n      postingsWriter.finishTerm(longs, metaWriter, stats);\n      byte[] bytes = new byte[(int)metaWriter.getFilePointer()];\n      metaWriter.writeTo(bytes, 0);\n      metaWriter.reset();\n\n      PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), stats, longs, bytes);\n      pending.add(term);\n      numTerms++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abfc4a4873131874a50c6f6e3deb59a743ee1f44","date":1376737165,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","sourceNew":"    @Override\n    public void finishTerm(BytesRef text, TermStats stats) throws IOException {\n\n      assert stats.docFreq > 0;\n      //if (DEBUG) System.out.println(\"BTTW.finishTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment + \" df=\" + stats.docFreq);\n\n      blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n      BlockTermState state = postingsWriter.newTermState();\n      state.docFreq = stats.docFreq;\n      state.totalTermFreq = stats.totalTermFreq;\n      postingsWriter.finishTerm(state);\n\n      PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n      pending.add(term);\n      numTerms++;\n    }\n\n","sourceOld":"    @Override\n    public void finishTerm(BytesRef text, TermStats stats) throws IOException {\n\n      assert stats.docFreq > 0;\n      //if (DEBUG) System.out.println(\"BTTW.finishTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment + \" df=\" + stats.docFreq);\n\n      blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n\n      long[] longs = new long[longsSize];\n      postingsWriter.finishTerm(longs, metaWriter, stats);\n      byte[] bytes = new byte[(int)metaWriter.getFilePointer()];\n      metaWriter.writeTo(bytes, 0);\n      metaWriter.reset();\n\n      PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), stats, longs, bytes);\n      pending.add(term);\n      numTerms++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.TermsWriter#finishTerm(BytesRef,TermStats).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void finishTerm(BytesRef text, TermStats stats) throws IOException {\n\n      assert stats.docFreq > 0;\n      //if (DEBUG) System.out.println(\"BTTW.finishTerm term=\" + fieldInfo.name + \":\" + toString(text) + \" seg=\" + segment + \" df=\" + stats.docFreq);\n\n      blockBuilder.add(Util.toIntsRef(text, scratchIntsRef), noOutputs.getNoOutput());\n      BlockTermState state = postingsWriter.newTermState();\n      state.docFreq = stats.docFreq;\n      state.totalTermFreq = stats.totalTermFreq;\n      postingsWriter.finishTerm(state);\n\n      PendingTerm term = new PendingTerm(BytesRef.deepCopyOf(text), state);\n      pending.add(term);\n      numTerms++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abfc4a4873131874a50c6f6e3deb59a743ee1f44":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["abfc4a4873131874a50c6f6e3deb59a743ee1f44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}