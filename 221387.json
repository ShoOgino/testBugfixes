{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode12(IntBuffer,int[]).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode12(IntBuffer,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode12(IntBuffer,int[]).mjava","sourceNew":"  public static void decode12(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 12;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 12) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 24) | (intValue1 << 8)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 4) & mask;\n      output[4 + outputOffset] = (intValue1 >>> 16) & mask;\n      output[5 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[6 + outputOffset] = (intValue2 >>> 8) & mask;\n      output[7 + outputOffset] = intValue2 >>> 20;\n      output[8 + outputOffset] = intValue3 & mask;\n      output[9 + outputOffset] = (intValue3 >>> 12) & mask;\n      output[10 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[11 + outputOffset] = (intValue4 >>> 4) & mask;\n      output[12 + outputOffset] = (intValue4 >>> 16) & mask;\n      output[13 + outputOffset] = ((intValue4 >>> 28) | (intValue5 << 4)) & mask;\n      output[14 + outputOffset] = (intValue5 >>> 8) & mask;\n      output[15 + outputOffset] = intValue5 >>> 20;\n      output[16 + outputOffset] = intValue6 & mask;\n      output[17 + outputOffset] = (intValue6 >>> 12) & mask;\n      output[18 + outputOffset] = ((intValue6 >>> 24) | (intValue7 << 8)) & mask;\n      output[19 + outputOffset] = (intValue7 >>> 4) & mask;\n      output[20 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[21 + outputOffset] = ((intValue7 >>> 28) | (intValue8 << 4)) & mask;\n      output[22 + outputOffset] = (intValue8 >>> 8) & mask;\n      output[23 + outputOffset] = intValue8 >>> 20;\n      output[24 + outputOffset] = intValue9 & mask;\n      output[25 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[26 + outputOffset] = ((intValue9 >>> 24) | (intValue10 << 8)) & mask;\n      output[27 + outputOffset] = (intValue10 >>> 4) & mask;\n      output[28 + outputOffset] = (intValue10 >>> 16) & mask;\n      output[29 + outputOffset] = ((intValue10 >>> 28) | (intValue11 << 4)) & mask;\n      output[30 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[31 + outputOffset] = intValue11 >>> 20;\n      outputOffset += 32;\n    }\n  }\n\n","sourceOld":"  public static void decode12(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 12;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 12) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 24) | (intValue1 << 8)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 4) & mask;\n      output[4 + outputOffset] = (intValue1 >>> 16) & mask;\n      output[5 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[6 + outputOffset] = (intValue2 >>> 8) & mask;\n      output[7 + outputOffset] = intValue2 >>> 20;\n      output[8 + outputOffset] = intValue3 & mask;\n      output[9 + outputOffset] = (intValue3 >>> 12) & mask;\n      output[10 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[11 + outputOffset] = (intValue4 >>> 4) & mask;\n      output[12 + outputOffset] = (intValue4 >>> 16) & mask;\n      output[13 + outputOffset] = ((intValue4 >>> 28) | (intValue5 << 4)) & mask;\n      output[14 + outputOffset] = (intValue5 >>> 8) & mask;\n      output[15 + outputOffset] = intValue5 >>> 20;\n      output[16 + outputOffset] = intValue6 & mask;\n      output[17 + outputOffset] = (intValue6 >>> 12) & mask;\n      output[18 + outputOffset] = ((intValue6 >>> 24) | (intValue7 << 8)) & mask;\n      output[19 + outputOffset] = (intValue7 >>> 4) & mask;\n      output[20 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[21 + outputOffset] = ((intValue7 >>> 28) | (intValue8 << 4)) & mask;\n      output[22 + outputOffset] = (intValue8 >>> 8) & mask;\n      output[23 + outputOffset] = intValue8 >>> 20;\n      output[24 + outputOffset] = intValue9 & mask;\n      output[25 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[26 + outputOffset] = ((intValue9 >>> 24) | (intValue10 << 8)) & mask;\n      output[27 + outputOffset] = (intValue10 >>> 4) & mask;\n      output[28 + outputOffset] = (intValue10 >>> 16) & mask;\n      output[29 + outputOffset] = ((intValue10 >>> 28) | (intValue11 << 4)) & mask;\n      output[30 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[31 + outputOffset] = intValue11 >>> 20;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode12(IntBuffer,int[]).mjava","sourceNew":null,"sourceOld":"  public static void decode12(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 12;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = (intValue0 >>> 12) & mask;\n      output[2 + outputOffset] = ((intValue0 >>> 24) | (intValue1 << 8)) & mask;\n      output[3 + outputOffset] = (intValue1 >>> 4) & mask;\n      output[4 + outputOffset] = (intValue1 >>> 16) & mask;\n      output[5 + outputOffset] = ((intValue1 >>> 28) | (intValue2 << 4)) & mask;\n      output[6 + outputOffset] = (intValue2 >>> 8) & mask;\n      output[7 + outputOffset] = intValue2 >>> 20;\n      output[8 + outputOffset] = intValue3 & mask;\n      output[9 + outputOffset] = (intValue3 >>> 12) & mask;\n      output[10 + outputOffset] = ((intValue3 >>> 24) | (intValue4 << 8)) & mask;\n      output[11 + outputOffset] = (intValue4 >>> 4) & mask;\n      output[12 + outputOffset] = (intValue4 >>> 16) & mask;\n      output[13 + outputOffset] = ((intValue4 >>> 28) | (intValue5 << 4)) & mask;\n      output[14 + outputOffset] = (intValue5 >>> 8) & mask;\n      output[15 + outputOffset] = intValue5 >>> 20;\n      output[16 + outputOffset] = intValue6 & mask;\n      output[17 + outputOffset] = (intValue6 >>> 12) & mask;\n      output[18 + outputOffset] = ((intValue6 >>> 24) | (intValue7 << 8)) & mask;\n      output[19 + outputOffset] = (intValue7 >>> 4) & mask;\n      output[20 + outputOffset] = (intValue7 >>> 16) & mask;\n      output[21 + outputOffset] = ((intValue7 >>> 28) | (intValue8 << 4)) & mask;\n      output[22 + outputOffset] = (intValue8 >>> 8) & mask;\n      output[23 + outputOffset] = intValue8 >>> 20;\n      output[24 + outputOffset] = intValue9 & mask;\n      output[25 + outputOffset] = (intValue9 >>> 12) & mask;\n      output[26 + outputOffset] = ((intValue9 >>> 24) | (intValue10 << 8)) & mask;\n      output[27 + outputOffset] = (intValue10 >>> 4) & mask;\n      output[28 + outputOffset] = (intValue10 >>> 16) & mask;\n      output[29 + outputOffset] = ((intValue10 >>> 28) | (intValue11 << 4)) & mask;\n      output[30 + outputOffset] = (intValue11 >>> 8) & mask;\n      output[31 + outputOffset] = intValue11 >>> 20;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}