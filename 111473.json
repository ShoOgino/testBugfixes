{"path":"lucene/misc/src/java/org/apache/lucene/index/PKIndexSplitter#createIndex(IndexWriterConfig,Directory,DirectoryReader,Filter,boolean).mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/PKIndexSplitter#createIndex(IndexWriterConfig,Directory,DirectoryReader,Filter,boolean).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/PKIndexSplitter#createIndex(IndexWriterConfig,Directory,IndexReader,Filter,boolean).mjava","sourceNew":"  private void createIndex(IndexWriterConfig config, Directory target, DirectoryReader reader, Filter preserveFilter, boolean negateFilter) throws IOException {\n    boolean success = false;\n    final IndexWriter w = new IndexWriter(target, config);\n    try {\n      final List<LeafReaderContext> leaves = reader.leaves();\n      final CodecReader[] subReaders = new CodecReader[leaves.size()];\n      int i = 0;\n      for (final LeafReaderContext ctx : leaves) {\n        subReaders[i++] = new DocumentFilteredLeafIndexReader(ctx, preserveFilter, negateFilter);\n      }\n      w.addIndexes(subReaders);\n      success = true;\n    } finally {\n      if (success) {\n        w.close();\n      } else {\n        IOUtils.closeWhileHandlingException(w);\n      }\n    }\n  }\n\n","sourceOld":"  private void createIndex(IndexWriterConfig config, Directory target, IndexReader reader, Filter preserveFilter, boolean negateFilter) throws IOException {\n    boolean success = false;\n    final IndexWriter w = new IndexWriter(target, config);\n    try {\n      final List<LeafReaderContext> leaves = reader.leaves();\n      final LeafReader[] subReaders = new LeafReader[leaves.size()];\n      int i = 0;\n      for (final LeafReaderContext ctx : leaves) {\n        subReaders[i++] = new DocumentFilteredLeafIndexReader(ctx, preserveFilter, negateFilter);\n      }\n      w.addIndexes(subReaders);\n      success = true;\n    } finally {\n      if (success) {\n        w.close();\n      } else {\n        IOUtils.closeWhileHandlingException(w);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eb27e66c7f4fe0888faf8a05111a36969584bf4","date":1435647050,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/PKIndexSplitter#createIndex(IndexWriterConfig,Directory,DirectoryReader,Query,boolean).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/PKIndexSplitter#createIndex(IndexWriterConfig,Directory,DirectoryReader,Filter,boolean).mjava","sourceNew":"  private void createIndex(IndexWriterConfig config, Directory target, DirectoryReader reader, Query preserveFilter, boolean negateFilter) throws IOException {\n    boolean success = false;\n    final IndexWriter w = new IndexWriter(target, config);\n    try {\n      final IndexSearcher searcher = new IndexSearcher(reader);\n      searcher.setQueryCache(null);\n      final boolean needsScores = false; // scores are not needed, only matching docs\n      final Weight preserveWeight = searcher.createNormalizedWeight(preserveFilter, needsScores);\n      final List<LeafReaderContext> leaves = reader.leaves();\n      final CodecReader[] subReaders = new CodecReader[leaves.size()];\n      int i = 0;\n      for (final LeafReaderContext ctx : leaves) {\n        subReaders[i++] = new DocumentFilteredLeafIndexReader(ctx, preserveWeight, negateFilter);\n      }\n      w.addIndexes(subReaders);\n      success = true;\n    } finally {\n      if (success) {\n        w.close();\n      } else {\n        IOUtils.closeWhileHandlingException(w);\n      }\n    }\n  }\n\n","sourceOld":"  private void createIndex(IndexWriterConfig config, Directory target, DirectoryReader reader, Filter preserveFilter, boolean negateFilter) throws IOException {\n    boolean success = false;\n    final IndexWriter w = new IndexWriter(target, config);\n    try {\n      final List<LeafReaderContext> leaves = reader.leaves();\n      final CodecReader[] subReaders = new CodecReader[leaves.size()];\n      int i = 0;\n      for (final LeafReaderContext ctx : leaves) {\n        subReaders[i++] = new DocumentFilteredLeafIndexReader(ctx, preserveFilter, negateFilter);\n      }\n      w.addIndexes(subReaders);\n      success = true;\n    } finally {\n      if (success) {\n        w.close();\n      } else {\n        IOUtils.closeWhileHandlingException(w);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7eb27e66c7f4fe0888faf8a05111a36969584bf4":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7eb27e66c7f4fe0888faf8a05111a36969584bf4"]},"commit2Childs":{"7eb27e66c7f4fe0888faf8a05111a36969584bf4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["7eb27e66c7f4fe0888faf8a05111a36969584bf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}