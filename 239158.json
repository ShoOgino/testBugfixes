{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","commits":[{"id":"73b923fc833f1cce9fb09dfe2ced037c9d55fd43","date":1357684159,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SimpleDocValuesFormat getDocValuesFormatForField(String name) {\n    SimpleDocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextSimpleDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","sourceNew":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","sourceOld":"  @Override\n  public SimpleDocValuesFormat getDocValuesFormatForField(String name) {\n    SimpleDocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextSimpleDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","sourceNew":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","sourceOld":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomCodec#getDocValuesFormatForField(String).mjava","sourceNew":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","sourceOld":"  @Override\n  public DocValuesFormat getDocValuesFormatForField(String name) {\n    DocValuesFormat codec = previousDVMappings.get(name);\n    if (codec == null) {\n      codec = dvFormats.get(Math.abs(perFieldSeed ^ name.hashCode()) % dvFormats.size());\n      if (codec instanceof SimpleTextDocValuesFormat && perFieldSeed % 5 != 0) {\n        // make simpletext rarer, choose again\n        codec = dvFormats.get(Math.abs(perFieldSeed ^ name.toUpperCase(Locale.ROOT).hashCode()) % dvFormats.size());\n      }\n      previousDVMappings.put(name, codec);\n      // Safety:\n      assert previousDVMappings.size() < 10000: \"test went insane\";\n    }\n    return codec;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["73b923fc833f1cce9fb09dfe2ced037c9d55fd43"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71488d7f5786ae87541276121ecb69705a11a295":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"73b923fc833f1cce9fb09dfe2ced037c9d55fd43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d4d69c535930b5cce125cff868d40f6373dc27d4","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71488d7f5786ae87541276121ecb69705a11a295"]},"commit2Childs":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","73b923fc833f1cce9fb09dfe2ced037c9d55fd43"],"71488d7f5786ae87541276121ecb69705a11a295":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73b923fc833f1cce9fb09dfe2ced037c9d55fd43":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}