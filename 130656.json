{"path":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","commits":[{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: Low-level search implementation.\n   * Identical to {@link #search(Query, Filter, HitCollector)}, but takes\n   * a Weight instead of a query.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceaa9738cad9616d1831286111af106e13e0e4b","date":1114543820,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, a bitset used to eliminate some documents\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":"  /** Expert: Low-level search implementation.\n   * Identical to {@link #search(Query, Filter, HitCollector)}, but takes\n   * a Weight instead of a query.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, a bitset used to eliminate some documents\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(Weight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(QueryWeight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(Weight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(Weight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(QueryWeight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61cbcf396559d597a914594d7e2830c142ecfd91","date":1255444081,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Searchable#search(Weight,Filter,HitCollector).mjava","sourceNew":null,"sourceOld":"  /** Lower-level search API.\n   *\n   * <p>{@link HitCollector#collect(int,float)} is called for every non-zero\n   * scoring document.\n   * <br>HitCollector-based access to remote indexes is discouraged.\n   *\n   * <p>Applications should only use this if they need <i>all</i> of the\n   * matching documents.  The high-level search API ({@link\n   * Searcher#search(Query)}) is usually more efficient, as it skips\n   * non-high-scoring hits.\n   *\n   * @param weight to match documents\n   * @param filter if non-null, used to permit documents to be collected.\n   * @param results to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   * @deprecated use {@link #search(Weight, Filter, Collector)} instead.\n   */\n  void search(Weight weight, Filter filter, HitCollector results)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ceaa9738cad9616d1831286111af106e13e0e4b":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61cbcf396559d597a914594d7e2830c142ecfd91":["fe941135bdfc28c81e20b4d21422f8726af34925"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["4ceaa9738cad9616d1831286111af106e13e0e4b"],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61cbcf396559d597a914594d7e2830c142ecfd91"]},"commit2Childs":{"4ceaa9738cad9616d1831286111af106e13e0e4b":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["052fac7830290bd38a04cddee1a121ee07656b56"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["4ceaa9738cad9616d1831286111af106e13e0e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"61cbcf396559d597a914594d7e2830c142ecfd91":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"fe941135bdfc28c81e20b4d21422f8726af34925":["61cbcf396559d597a914594d7e2830c142ecfd91"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}