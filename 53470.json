{"path":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","commits":[{"id":"92e771b0c74da7aad7dea56ed75654c0e6d44688","date":1337514831,"type":0,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) throws IOException {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) throws IOException {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","sourceNew":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) throws IOException {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","bugFix":["92e771b0c74da7aad7dea56ed75654c0e6d44688"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/DuplicatingTokenizerFactory#getTokenizer(LanguageCode).mjava","sourceNew":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ITokenizer getTokenizer(LanguageCode language) {\n    return new ITokenizer() {\n      private final ExtendedWhitespaceTokenizer delegate = new ExtendedWhitespaceTokenizer();\n      \n      @Override\n      public void setTermBuffer(MutableCharArray buffer) {\n        delegate.setTermBuffer(buffer);\n        buffer.reset(buffer.toString() + buffer.toString());\n      }\n      \n      @Override\n      public void reset(Reader input) throws IOException {\n        delegate.reset(input);\n      }\n      \n      @Override\n      public short nextToken() throws IOException {\n        return delegate.nextToken();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":["92e771b0c74da7aad7dea56ed75654c0e6d44688","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["92e771b0c74da7aad7dea56ed75654c0e6d44688"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","92e771b0c74da7aad7dea56ed75654c0e6d44688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"92e771b0c74da7aad7dea56ed75654c0e6d44688":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef0d8a69209261514c5739c770bba706c2308450","92e771b0c74da7aad7dea56ed75654c0e6d44688"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"92e771b0c74da7aad7dea56ed75654c0e6d44688":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe","ef0d8a69209261514c5739c770bba706c2308450"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}