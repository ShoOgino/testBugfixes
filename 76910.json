{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4901f8624f774c2b648e66567b63c59e901ac7c8","date":1329431044,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      coreToOrigName.remove(core);\n      return core;\n    }\n\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n    synchronized(cores) {\n      return cores.remove( name );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e71cbdfcf34d779dd7e7ba148dfff6022f2005a","date":1351228731,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      if (core != null) {\n        coreToOrigName.remove(core);\n      }\n      return core;\n    }\n\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      coreToOrigName.remove(core);\n      return core;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      if (core != null) {\n        coreToOrigName.remove(core);\n      }\n      return core;\n    }\n\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      coreToOrigName.remove(core);\n      return core;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    return coreMaps.remove(name, true);\n\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    synchronized(cores) {\n      SolrCore core = cores.remove( name );\n      if (core != null) {\n        coreToOrigName.remove(core);\n      }\n      return core;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    return solrCores.remove(name, true);\n\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    return coreMaps.remove(name, true);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);\n    CoreDescriptor cd = solrCores.getCoreDescriptor(name);\n    SolrCore removed = solrCores.remove(name, true);\n    coresLocator.delete(this, cd);\n    return removed;\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    return solrCores.remove(name, true);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);\n    CoreDescriptor cd = solrCores.getCoreDescriptor(name);\n    SolrCore removed = solrCores.remove(name, true);\n    coresLocator.delete(this, cd);\n    return removed;\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);    \n\n    return solrCores.remove(name, true);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d419cdab641a032f3e0d0fa8167a5252be0ae3","date":1404159924,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);\n    CoreDescriptor cd = solrCores.getCoreDescriptor(name);\n    SolrCore removed = solrCores.remove(name);\n    coresLocator.delete(this, cd);\n    return removed;\n  }\n\n","sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);\n    CoreDescriptor cd = solrCores.getCoreDescriptor(name);\n    SolrCore removed = solrCores.remove(name, true);\n    coresLocator.delete(this, cd);\n    return removed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d629ca62e3b8ab6e29a127aebe213163d490413","date":1405524223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#remove(String).mjava","sourceNew":null,"sourceOld":"  /** Removes and returns registered core w/o decrementing it's reference count */\n  public SolrCore remove( String name ) {\n    name = checkDefault(name);\n    CoreDescriptor cd = solrCores.getCoreDescriptor(name);\n    SolrCore removed = solrCores.remove(name);\n    coresLocator.delete(this, cd);\n    return removed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["9409650933cc688e77e565092a25e58adfc2e18d","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"5e71cbdfcf34d779dd7e7ba148dfff6022f2005a":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9409650933cc688e77e565092a25e58adfc2e18d":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d629ca62e3b8ab6e29a127aebe213163d490413":["a4d419cdab641a032f3e0d0fa8167a5252be0ae3"],"a4d419cdab641a032f3e0d0fa8167a5252be0ae3":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["9409650933cc688e77e565092a25e58adfc2e18d"],"f2126b84bd093fa3d921582a109a0ee578c28126":["4901f8624f774c2b648e66567b63c59e901ac7c8","5e71cbdfcf34d779dd7e7ba148dfff6022f2005a"],"a837c064b67fa63a9394136e31218b908cdcf783":["5e71cbdfcf34d779dd7e7ba148dfff6022f2005a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d629ca62e3b8ab6e29a127aebe213163d490413"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"5e71cbdfcf34d779dd7e7ba148dfff6022f2005a":["f2126b84bd093fa3d921582a109a0ee578c28126","a837c064b67fa63a9394136e31218b908cdcf783"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["5e71cbdfcf34d779dd7e7ba148dfff6022f2005a","f2126b84bd093fa3d921582a109a0ee578c28126"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"9409650933cc688e77e565092a25e58adfc2e18d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2d629ca62e3b8ab6e29a127aebe213163d490413":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4d419cdab641a032f3e0d0fa8167a5252be0ae3":["2d629ca62e3b8ab6e29a127aebe213163d490413"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a4d419cdab641a032f3e0d0fa8167a5252be0ae3"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"a837c064b67fa63a9394136e31218b908cdcf783":["9409650933cc688e77e565092a25e58adfc2e18d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}