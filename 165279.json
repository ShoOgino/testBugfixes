{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d7ec8367e3d451bb6e9ff83e43419ea2452dea5","date":1512445603,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","sourceNew":"  @Test(expected = IOException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":"  @Test\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"deb4d0cfb021fa1b0c1e44571968b254f379ac6f","date":1564497726,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","sourceNew":"  @Test(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":"  @Test(expected = IOException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35cc45f54fe95a5534e02f9b8ca2a54af211ded5","date":1564774706,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","sourceNew":"  @Test//(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":"  @Test(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","sourceNew":"  @Test//(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":"  @Test(expected = IOException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest#multTwoFieldsWithMissingField().mjava","sourceNew":"  @Test//(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","sourceOld":"  @Test(expected = NumberFormatException.class)\n  public void multTwoFieldsWithMissingField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"b\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);    \n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertNull(result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d7ec8367e3d451bb6e9ff83e43419ea2452dea5":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["deb4d0cfb021fa1b0c1e44571968b254f379ac6f","35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"35cc45f54fe95a5534e02f9b8ca2a54af211ded5":["deb4d0cfb021fa1b0c1e44571968b254f379ac6f"],"deb4d0cfb021fa1b0c1e44571968b254f379ac6f":["7d7ec8367e3d451bb6e9ff83e43419ea2452dea5"],"f8061ddd97f3352007d927dae445884a6f3d857b":["7d7ec8367e3d451bb6e9ff83e43419ea2452dea5","35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35cc45f54fe95a5534e02f9b8ca2a54af211ded5"]},"commit2Childs":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["7d7ec8367e3d451bb6e9ff83e43419ea2452dea5"],"7d7ec8367e3d451bb6e9ff83e43419ea2452dea5":["deb4d0cfb021fa1b0c1e44571968b254f379ac6f","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"deb4d0cfb021fa1b0c1e44571968b254f379ac6f":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","35cc45f54fe95a5534e02f9b8ca2a54af211ded5"],"35cc45f54fe95a5534e02f9b8ca2a54af211ded5":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}