{"path":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","pathOld":"/dev/null","sourceNew":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","sourceNew":null,"sourceOld":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","sourceNew":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","sourceOld":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","pathOld":"/dev/null","sourceNew":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df18b2465217a237531d0d944c22ea4a4316411e","date":1278157467,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","sourceNew":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (fieldOptions.termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);\n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (fieldOptions.docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (fieldOptions.tfIdf == true) {\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n    }\n\n","sourceOld":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","bugFix":["3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c","a2686717a32b40222a4361bd16ae295511cb8ce7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(BytesRef,int,TermVectorOffsetInfo[],int[]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","sourceNew":"    public void map(BytesRef term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      NamedList termInfo = new NamedList();\n        fieldNL.add(term.utf8ToString(), termInfo);\n        if (fieldOptions.termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);\n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (fieldOptions.docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (fieldOptions.tfIdf == true) {\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n    }\n\n","sourceOld":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (fieldOptions.termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);\n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (fieldOptions.docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (fieldOptions.tfIdf == true) {\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#map(String,int,TermVectorOffsetInfo[],int[]).mjava","sourceNew":null,"sourceOld":"    public void map(String term, int frequency, TermVectorOffsetInfo[] offsets, int[] positions) {\n      if (map == true && fieldNL != null) {\n        NamedList termInfo = new NamedList();\n        fieldNL.add(term, termInfo);\n        if (termFreq == true) {\n          termInfo.add(\"tf\", frequency);\n        }\n        if (useOffsets == true) {\n          NamedList theOffsets = new NamedList();\n          termInfo.add(\"offsets\", theOffsets);\n          for (int i = 0; i < offsets.length; i++) {\n            TermVectorOffsetInfo offset = offsets[i];\n            theOffsets.add(\"start\", offset.getStartOffset());\n            theOffsets.add(\"end\", offset.getEndOffset());\n          }\n        }\n        if (usePositions == true) {\n          NamedList positionsNL = new NamedList();\n          for (int i = 0; i < positions.length; i++) {\n            positionsNL.add(\"position\", positions[i]);            \n          }\n          termInfo.add(\"positions\", positionsNL);\n        }\n        if (docFreq == true) {\n          termInfo.add(\"df\", getDocFreq(term));\n        }\n        if (tfIdf == true){\n          double tfIdfVal = ((double) frequency) / getDocFreq(term);\n          termInfo.add(\"tf-idf\", tfIdfVal);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["df18b2465217a237531d0d944c22ea4a4316411e"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"df18b2465217a237531d0d944c22ea4a4316411e":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","df18b2465217a237531d0d944c22ea4a4316411e"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"df18b2465217a237531d0d944c22ea4a4316411e":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}