{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointReader#markOrds(long,LongBitSet).mjava","commits":[{"id":"3eb86b08ad0b927f25ab9f04d077bc51fc6df039","date":1458906280,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointReader#markOrds(long,LongBitSet).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void markOrds(long count, LongBitSet ordBitSet) throws IOException {\n    if (countLeft < count) {\n      throw new IllegalStateException(\"only \" + countLeft + \" points remain, but \" + count + \" were requested\");\n    }\n    long fp = in.getFilePointer() + packedValue.length;\n    if (singleValuePerDoc == false) {\n      fp += Integer.BYTES;\n    }\n    for(long i=0;i<count;i++) {\n      in.seek(fp);\n      long ord;\n      if (longOrds) {\n        ord = in.readLong();\n      } else {\n        ord = in.readInt();\n      }\n      assert ordBitSet.get(ord) == false: \"ord=\" + ord + \" i=\" + i + \" was seen twice from \" + this;\n      ordBitSet.set(ord);\n      fp += bytesPerDoc;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":4,"author":"iverase","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/OfflinePointReader#markOrds(long,LongBitSet).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void markOrds(long count, LongBitSet ordBitSet) throws IOException {\n    if (countLeft < count) {\n      throw new IllegalStateException(\"only \" + countLeft + \" points remain, but \" + count + \" were requested\");\n    }\n    long fp = in.getFilePointer() + packedValue.length;\n    if (singleValuePerDoc == false) {\n      fp += Integer.BYTES;\n    }\n    for(long i=0;i<count;i++) {\n      in.seek(fp);\n      long ord;\n      if (longOrds) {\n        ord = in.readLong();\n      } else {\n        ord = in.readInt();\n      }\n      assert ordBitSet.get(ord) == false: \"ord=\" + ord + \" i=\" + i + \" was seen twice from \" + this;\n      ordBitSet.set(ord);\n      fp += bytesPerDoc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3eb86b08ad0b927f25ab9f04d077bc51fc6df039":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["3eb86b08ad0b927f25ab9f04d077bc51fc6df039"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"]},"commit2Childs":{"3eb86b08ad0b927f25ab9f04d077bc51fc6df039":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3eb86b08ad0b927f25ab9f04d077bc51fc6df039"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}