{"path":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testDupeDetection().mjava","commits":[{"id":"80c633e661becbcb6deb6ea2ef4588d230102f50","date":1234308117,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testDupeDetection().mjava","pathOld":"/dev/null","sourceNew":"  public void testDupeDetection() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    assertNotNull(chained);\n\n    addDoc(adoc(\"id\", \"1a\", \"v_t\", \"Hello Dude man!\", \"name\", \"ali babi'\"));\n    addDoc(adoc(\"id\", \"2a\", \"name\", \"ali babi\", \"v_t\", \"Hello Dude man . -\"));\n\n    addDoc(commit());\n\n    addDoc(adoc(\"name\", \"ali babi'\", \"id\", \"3a\", \"v_t\", \"Hello Dude man!\"));\n\n    addDoc(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"3b\", \"v_t\", \"Hello Dude man!\", \"t_field\",\n        \"fake value galore\"));\n\n    addDoc(commit());\n\n    assertEquals(2l, core.getSearcher().get().getReader().numDocs());\n\n    assertU(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(delI(\"5a\"));\n\n    addDoc(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(commit());\n\n    assertEquals(3l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"same\", \"name\", \"baryy white\", \"v_t\", \"random1\"));\n    addDoc(adoc(\"id\", \"same\", \"name\", \"bishop black\", \"v_t\", \"random2\"));\n\n    addDoc(commit());\n\n    assertEquals(4l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testDupeDetection().mjava","pathOld":"src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testDupeDetection().mjava","sourceNew":"  public void testDupeDetection() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    assertNotNull(chained);\n\n    addDoc(adoc(\"id\", \"1a\", \"v_t\", \"Hello Dude man!\", \"name\", \"ali babi'\"));\n    addDoc(adoc(\"id\", \"2a\", \"name\", \"ali babi\", \"v_t\", \"Hello Dude man . -\"));\n\n    addDoc(commit());\n\n    addDoc(adoc(\"name\", \"ali babi'\", \"id\", \"3a\", \"v_t\", \"Hello Dude man!\"));\n\n    addDoc(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"3b\", \"v_t\", \"Hello Dude man!\", \"t_field\",\n        \"fake value galore\"));\n\n    addDoc(commit());\n\n    assertEquals(2l, core.getSearcher().get().getReader().numDocs());\n\n    assertU(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(delI(\"5a\"));\n\n    addDoc(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(commit());\n\n    assertEquals(3l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"same\", \"name\", \"baryy white\", \"v_t\", \"random1\"));\n    addDoc(adoc(\"id\", \"same\", \"name\", \"bishop black\", \"v_t\", \"random2\"));\n\n    addDoc(commit());\n\n    assertEquals(4l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  public void testDupeDetection() throws Exception {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain chained = core.getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    assertNotNull(chained);\n\n    addDoc(adoc(\"id\", \"1a\", \"v_t\", \"Hello Dude man!\", \"name\", \"ali babi'\"));\n    addDoc(adoc(\"id\", \"2a\", \"name\", \"ali babi\", \"v_t\", \"Hello Dude man . -\"));\n\n    addDoc(commit());\n\n    addDoc(adoc(\"name\", \"ali babi'\", \"id\", \"3a\", \"v_t\", \"Hello Dude man!\"));\n\n    addDoc(commit());\n\n    assertEquals(1l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"3b\", \"v_t\", \"Hello Dude man!\", \"t_field\",\n        \"fake value galore\"));\n\n    addDoc(commit());\n\n    assertEquals(2l, core.getSearcher().get().getReader().numDocs());\n\n    assertU(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(delI(\"5a\"));\n\n    addDoc(adoc(\"id\", \"5a\", \"name\", \"ali babi\", \"v_t\", \"MMMMM\"));\n\n    addDoc(commit());\n\n    assertEquals(3l, core.getSearcher().get().getReader().numDocs());\n\n    addDoc(adoc(\"id\", \"same\", \"name\", \"baryy white\", \"v_t\", \"random1\"));\n    addDoc(adoc(\"id\", \"same\", \"name\", \"bishop black\", \"v_t\", \"random2\"));\n\n    addDoc(commit());\n\n    assertEquals(4l, core.getSearcher().get().getReader().numDocs());\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"80c633e661becbcb6deb6ea2ef4588d230102f50":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["80c633e661becbcb6deb6ea2ef4588d230102f50"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"80c633e661becbcb6deb6ea2ef4588d230102f50":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}