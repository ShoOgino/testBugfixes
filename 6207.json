{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}