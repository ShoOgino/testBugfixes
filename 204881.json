{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd9ddb59e9d33950773d186a8b726b5610ae3aad","date":1341258232,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.shutdown();\n\n    reader = DirectoryReader.open(directory);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = DirectoryReader.open(directory);\n    searcher = newSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"please divide this sentence into shingles\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"just another test sentence\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"content\", \"a sentence which contains no test\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    writer.shutdown();\n\n    reader = DirectoryReader.open(directory);\n    searcher = newSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd9ddb59e9d33950773d186a8b726b5610ae3aad":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","bd9ddb59e9d33950773d186a8b726b5610ae3aad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["bd9ddb59e9d33950773d186a8b726b5610ae3aad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["bd9ddb59e9d33950773d186a8b726b5610ae3aad","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"bd9ddb59e9d33950773d186a8b726b5610ae3aad":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}