{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","commits":[{"id":"86fcb04ff2d63aad8754270211d5fc084d3526b9","date":1459278881,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  // http://www.webglearth.org has API details:\n  public static void toWebGLEarth(double rectMinLatitude, double rectMaxLatitude,\n                                   double rectMinLongitude, double rectMaxLongitude,\n                                   double centerLatitude, double centerLongitude,\n                                   double radiusMeters) {\n    GeoRect box = GeoUtils.circleToBBox(centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(\"<!DOCTYPE HTML>\");\n    System.out.println(\"<html>\");\n    System.out.println(\"  <head>\");\n    System.out.println(\"    <script src=\\\"http://www.webglearth.com/v2/api.js\\\"></script>\");\n    System.out.println(\"    <script>\");\n    System.out.println(\"      function initialize() {\");\n    System.out.println(\"        var earth = new WE.map('earth_div', {center: [\" + centerLatitude + \", \" + centerLongitude + \"]});\");\n    System.out.println(\"        var marker = WE.marker([\" + centerLatitude + \", \" + centerLongitude + \"]).addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"cell\", \"#ff0000\", rectMinLatitude, rectMaxLatitude, rectMinLongitude, rectMaxLongitude);\n    System.out.println(\"        var polygonB = WE.polygon([\");\n    StringBuilder b = new StringBuilder();\n    inverseHaversin(b, centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(b);\n    System.out.println(\"        ], {color: '#00ff00'});\");    \n    System.out.println(\"        polygonB.addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"bbox\", \"#00ff00\", box.minLat, box.maxLat, box.minLon, box.maxLon);\n    System.out.println(\"        WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\");\n    System.out.println(\"          attribution: '© OpenStreetMap contributors'\");\n    System.out.println(\"        }).addTo(earth);\");\n    plotLatApproximatelyOnEarthSurface(\"lat0\", \"#ffffff\", 4.68, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"lat1\", \"#ffffff\", 180-93.09, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"axisLat\", \"#00ff00\", GeoUtils.axisLat(centerLatitude, radiusMeters), box.minLon, box.maxLon);\n    plotLonApproximatelyOnEarthSurface(\"axisLon\", \"#00ff00\", centerLongitude, box.minLat, box.maxLat);\n    System.out.println(\"      }\");\n    System.out.println(\"    </script>\");\n    System.out.println(\"    <style>\");\n    System.out.println(\"      html, body{padding: 0; margin: 0;}\");\n    System.out.println(\"      #earth_div{top: 0; right: 0; bottom: 0; left: 0; position: absolute !important;}\");\n    System.out.println(\"    </style>\");\n    System.out.println(\"    <title>WebGL Earth API: Hello World</title>\");\n    System.out.println(\"  </head>\");\n    System.out.println(\"  <body onload=\\\"initialize()\\\">\");\n    System.out.println(\"    <div id=\\\"earth_div\\\"></div>\");\n    System.out.println(\"  </body>\");\n    System.out.println(\"</html>\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43ddc1b7a872fafd838d3f3129984ca661e29b36","date":1459526591,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","sourceNew":"  // http://www.webglearth.org has API details:\n  public static void toWebGLEarth(double rectMinLatitude, double rectMaxLatitude,\n                                   double rectMinLongitude, double rectMaxLongitude,\n                                   double centerLatitude, double centerLongitude,\n                                   double radiusMeters) {\n    GeoRect box = GeoRect.fromPointDistance(centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(\"<!DOCTYPE HTML>\");\n    System.out.println(\"<html>\");\n    System.out.println(\"  <head>\");\n    System.out.println(\"    <script src=\\\"http://www.webglearth.com/v2/api.js\\\"></script>\");\n    System.out.println(\"    <script>\");\n    System.out.println(\"      function initialize() {\");\n    System.out.println(\"        var earth = new WE.map('earth_div', {center: [\" + centerLatitude + \", \" + centerLongitude + \"]});\");\n    System.out.println(\"        var marker = WE.marker([\" + centerLatitude + \", \" + centerLongitude + \"]).addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"cell\", \"#ff0000\", rectMinLatitude, rectMaxLatitude, rectMinLongitude, rectMaxLongitude);\n    System.out.println(\"        var polygonB = WE.polygon([\");\n    StringBuilder b = new StringBuilder();\n    inverseHaversin(b, centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(b);\n    System.out.println(\"        ], {color: '#00ff00'});\");    \n    System.out.println(\"        polygonB.addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"bbox\", \"#00ff00\", box.minLat, box.maxLat, box.minLon, box.maxLon);\n    System.out.println(\"        WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\");\n    System.out.println(\"          attribution: '© OpenStreetMap contributors'\");\n    System.out.println(\"        }).addTo(earth);\");\n    plotLatApproximatelyOnEarthSurface(\"lat0\", \"#ffffff\", 4.68, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"lat1\", \"#ffffff\", 180-93.09, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"axisLat\", \"#00ff00\", GeoRect.axisLat(centerLatitude, radiusMeters), box.minLon, box.maxLon);\n    plotLonApproximatelyOnEarthSurface(\"axisLon\", \"#00ff00\", centerLongitude, box.minLat, box.maxLat);\n    System.out.println(\"      }\");\n    System.out.println(\"    </script>\");\n    System.out.println(\"    <style>\");\n    System.out.println(\"      html, body{padding: 0; margin: 0;}\");\n    System.out.println(\"      #earth_div{top: 0; right: 0; bottom: 0; left: 0; position: absolute !important;}\");\n    System.out.println(\"    </style>\");\n    System.out.println(\"    <title>WebGL Earth API: Hello World</title>\");\n    System.out.println(\"  </head>\");\n    System.out.println(\"  <body onload=\\\"initialize()\\\">\");\n    System.out.println(\"    <div id=\\\"earth_div\\\"></div>\");\n    System.out.println(\"  </body>\");\n    System.out.println(\"</html>\");\n  }\n\n","sourceOld":"  // http://www.webglearth.org has API details:\n  public static void toWebGLEarth(double rectMinLatitude, double rectMaxLatitude,\n                                   double rectMinLongitude, double rectMaxLongitude,\n                                   double centerLatitude, double centerLongitude,\n                                   double radiusMeters) {\n    GeoRect box = GeoUtils.circleToBBox(centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(\"<!DOCTYPE HTML>\");\n    System.out.println(\"<html>\");\n    System.out.println(\"  <head>\");\n    System.out.println(\"    <script src=\\\"http://www.webglearth.com/v2/api.js\\\"></script>\");\n    System.out.println(\"    <script>\");\n    System.out.println(\"      function initialize() {\");\n    System.out.println(\"        var earth = new WE.map('earth_div', {center: [\" + centerLatitude + \", \" + centerLongitude + \"]});\");\n    System.out.println(\"        var marker = WE.marker([\" + centerLatitude + \", \" + centerLongitude + \"]).addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"cell\", \"#ff0000\", rectMinLatitude, rectMaxLatitude, rectMinLongitude, rectMaxLongitude);\n    System.out.println(\"        var polygonB = WE.polygon([\");\n    StringBuilder b = new StringBuilder();\n    inverseHaversin(b, centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(b);\n    System.out.println(\"        ], {color: '#00ff00'});\");    \n    System.out.println(\"        polygonB.addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"bbox\", \"#00ff00\", box.minLat, box.maxLat, box.minLon, box.maxLon);\n    System.out.println(\"        WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\");\n    System.out.println(\"          attribution: '© OpenStreetMap contributors'\");\n    System.out.println(\"        }).addTo(earth);\");\n    plotLatApproximatelyOnEarthSurface(\"lat0\", \"#ffffff\", 4.68, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"lat1\", \"#ffffff\", 180-93.09, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"axisLat\", \"#00ff00\", GeoUtils.axisLat(centerLatitude, radiusMeters), box.minLon, box.maxLon);\n    plotLonApproximatelyOnEarthSurface(\"axisLon\", \"#00ff00\", centerLongitude, box.minLat, box.maxLat);\n    System.out.println(\"      }\");\n    System.out.println(\"    </script>\");\n    System.out.println(\"    <style>\");\n    System.out.println(\"      html, body{padding: 0; margin: 0;}\");\n    System.out.println(\"      #earth_div{top: 0; right: 0; bottom: 0; left: 0; position: absolute !important;}\");\n    System.out.println(\"    </style>\");\n    System.out.println(\"    <title>WebGL Earth API: Hello World</title>\");\n    System.out.println(\"  </head>\");\n    System.out.println(\"  <body onload=\\\"initialize()\\\">\");\n    System.out.println(\"    <div id=\\\"earth_div\\\"></div>\");\n    System.out.println(\"  </body>\");\n    System.out.println(\"</html>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#toWebGLEarth(double,double,double,double,double,double,double).mjava","sourceNew":"  // http://www.webglearth.org has API details:\n  public static void toWebGLEarth(double rectMinLatitude, double rectMaxLatitude,\n                                   double rectMinLongitude, double rectMaxLongitude,\n                                   double centerLatitude, double centerLongitude,\n                                   double radiusMeters) {\n    Rectangle box = Rectangle.fromPointDistance(centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(\"<!DOCTYPE HTML>\");\n    System.out.println(\"<html>\");\n    System.out.println(\"  <head>\");\n    System.out.println(\"    <script src=\\\"http://www.webglearth.com/v2/api.js\\\"></script>\");\n    System.out.println(\"    <script>\");\n    System.out.println(\"      function initialize() {\");\n    System.out.println(\"        var earth = new WE.map('earth_div', {center: [\" + centerLatitude + \", \" + centerLongitude + \"]});\");\n    System.out.println(\"        var marker = WE.marker([\" + centerLatitude + \", \" + centerLongitude + \"]).addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"cell\", \"#ff0000\", rectMinLatitude, rectMaxLatitude, rectMinLongitude, rectMaxLongitude);\n    System.out.println(\"        var polygonB = WE.polygon([\");\n    StringBuilder b = new StringBuilder();\n    inverseHaversin(b, centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(b);\n    System.out.println(\"        ], {color: '#00ff00'});\");\n    System.out.println(\"        polygonB.addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"bbox\", \"#00ff00\", box.minLat, box.maxLat, box.minLon, box.maxLon);\n    System.out.println(\"        WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\");\n    System.out.println(\"          attribution: '© OpenStreetMap contributors'\");\n    System.out.println(\"        }).addTo(earth);\");\n    plotLatApproximatelyOnEarthSurface(\"lat0\", \"#ffffff\", 4.68, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"lat1\", \"#ffffff\", 180-93.09, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"axisLat\", \"#00ff00\", Rectangle.axisLat(centerLatitude, radiusMeters), box.minLon, box.maxLon);\n    plotLonApproximatelyOnEarthSurface(\"axisLon\", \"#00ff00\", centerLongitude, box.minLat, box.maxLat);\n    System.out.println(\"      }\");\n    System.out.println(\"    </script>\");\n    System.out.println(\"    <style>\");\n    System.out.println(\"      html, body{padding: 0; margin: 0;}\");\n    System.out.println(\"      #earth_div{top: 0; right: 0; bottom: 0; left: 0; position: absolute !important;}\");\n    System.out.println(\"    </style>\");\n    System.out.println(\"    <title>WebGL Earth API: Hello World</title>\");\n    System.out.println(\"  </head>\");\n    System.out.println(\"  <body onload=\\\"initialize()\\\">\");\n    System.out.println(\"    <div id=\\\"earth_div\\\"></div>\");\n    System.out.println(\"  </body>\");\n    System.out.println(\"</html>\");\n  }\n\n","sourceOld":"  // http://www.webglearth.org has API details:\n  public static void toWebGLEarth(double rectMinLatitude, double rectMaxLatitude,\n                                   double rectMinLongitude, double rectMaxLongitude,\n                                   double centerLatitude, double centerLongitude,\n                                   double radiusMeters) {\n    GeoRect box = GeoRect.fromPointDistance(centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(\"<!DOCTYPE HTML>\");\n    System.out.println(\"<html>\");\n    System.out.println(\"  <head>\");\n    System.out.println(\"    <script src=\\\"http://www.webglearth.com/v2/api.js\\\"></script>\");\n    System.out.println(\"    <script>\");\n    System.out.println(\"      function initialize() {\");\n    System.out.println(\"        var earth = new WE.map('earth_div', {center: [\" + centerLatitude + \", \" + centerLongitude + \"]});\");\n    System.out.println(\"        var marker = WE.marker([\" + centerLatitude + \", \" + centerLongitude + \"]).addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"cell\", \"#ff0000\", rectMinLatitude, rectMaxLatitude, rectMinLongitude, rectMaxLongitude);\n    System.out.println(\"        var polygonB = WE.polygon([\");\n    StringBuilder b = new StringBuilder();\n    inverseHaversin(b, centerLatitude, centerLongitude, radiusMeters);\n    System.out.println(b);\n    System.out.println(\"        ], {color: '#00ff00'});\");    \n    System.out.println(\"        polygonB.addTo(earth);\");\n    drawRectApproximatelyOnEarthSurface(\"bbox\", \"#00ff00\", box.minLat, box.maxLat, box.minLon, box.maxLon);\n    System.out.println(\"        WE.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\");\n    System.out.println(\"          attribution: '© OpenStreetMap contributors'\");\n    System.out.println(\"        }).addTo(earth);\");\n    plotLatApproximatelyOnEarthSurface(\"lat0\", \"#ffffff\", 4.68, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"lat1\", \"#ffffff\", 180-93.09, 0.0, 360.0);\n    plotLatApproximatelyOnEarthSurface(\"axisLat\", \"#00ff00\", GeoRect.axisLat(centerLatitude, radiusMeters), box.minLon, box.maxLon);\n    plotLonApproximatelyOnEarthSurface(\"axisLon\", \"#00ff00\", centerLongitude, box.minLat, box.maxLat);\n    System.out.println(\"      }\");\n    System.out.println(\"    </script>\");\n    System.out.println(\"    <style>\");\n    System.out.println(\"      html, body{padding: 0; margin: 0;}\");\n    System.out.println(\"      #earth_div{top: 0; right: 0; bottom: 0; left: 0; position: absolute !important;}\");\n    System.out.println(\"    </style>\");\n    System.out.println(\"    <title>WebGL Earth API: Hello World</title>\");\n    System.out.println(\"  </head>\");\n    System.out.println(\"  <body onload=\\\"initialize()\\\">\");\n    System.out.println(\"    <div id=\\\"earth_div\\\"></div>\");\n    System.out.println(\"  </body>\");\n    System.out.println(\"</html>\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}