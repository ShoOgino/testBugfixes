{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/AnyQueryNodeBuilder#build(QueryNode).mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/AnyQueryNodeBuilder#build(QueryNode).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/AnyQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    AnyQueryNode andNode = (AnyQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = andNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, BooleanClause.Occur.SHOULD);\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n            /*\n             * IQQQ.Q0028E_TOO_MANY_BOOLEAN_CLAUSES,\n             * BooleanQuery.getMaxClauseCount()\n             */QueryParserMessages.EMPTY_MESSAGE), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    AnyQueryNode andNode = (AnyQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = andNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, BooleanClause.Occur.SHOULD);\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n            /*\n             * IQQQ.Q0028E_TOO_MANY_BOOLEAN_CLAUSES,\n             * BooleanQuery.getMaxClauseCount()\n             */QueryParserMessages.EMPTY_MESSAGE), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/AnyQueryNodeBuilder#build(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/builders/AnyQueryNodeBuilder#build(QueryNode).mjava","sourceNew":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    AnyQueryNode andNode = (AnyQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = andNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, BooleanClause.Occur.SHOULD);\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n            /*\n             * IQQQ.Q0028E_TOO_MANY_BOOLEAN_CLAUSES,\n             * BooleanQuery.getMaxClauseCount()\n             */QueryParserMessages.EMPTY_MESSAGE), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());\n\n    return bQuery;\n\n  }\n\n","sourceOld":"  public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {\n    AnyQueryNode andNode = (AnyQueryNode) queryNode;\n\n    BooleanQuery bQuery = new BooleanQuery();\n    List<QueryNode> children = andNode.getChildren();\n\n    if (children != null) {\n\n      for (QueryNode child : children) {\n        Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);\n\n        if (obj != null) {\n          Query query = (Query) obj;\n\n          try {\n            bQuery.add(query, BooleanClause.Occur.SHOULD);\n          } catch (TooManyClauses ex) {\n\n            throw new QueryNodeException(new MessageImpl(\n            /*\n             * IQQQ.Q0028E_TOO_MANY_BOOLEAN_CLAUSES,\n             * BooleanQuery.getMaxClauseCount()\n             */QueryParserMessages.EMPTY_MESSAGE), ex);\n\n          }\n\n        }\n\n      }\n\n    }\n\n    bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());\n\n    return bQuery;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}