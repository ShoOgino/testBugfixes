{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/AbstractRangeQueryNode#getField().mjava","sourceNew":"  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","sourceOld":"  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51a50b13564b2903e038280a5d48c2c34cc21032","date":1311597941,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","sourceNew":"  /**\n   * Returns the field associated with this node.\n   * \n   * @return the field associated with this node\n   * \n   * @see FieldableNode\n   */\n  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","sourceOld":"  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode#getField().mjava","sourceNew":"  /**\n   * Returns the field associated with this node.\n   * \n   * @return the field associated with this node\n   * \n   * @see FieldableNode\n   */\n  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","sourceOld":"  /**\n   * Returns the field associated with this node.\n   * \n   * @return the field associated with this node\n   * \n   * @see FieldableNode\n   */\n  public CharSequence getField() {\n    CharSequence field = null;\n    T lower = getLowerBound();\n    T upper = getUpperBound();\n    \n    if (lower != null) {\n      field = lower.getField();\n      \n    } else if (upper != null) {\n      field = upper.getField();\n    }\n    \n    return field;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["51a50b13564b2903e038280a5d48c2c34cc21032"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51a50b13564b2903e038280a5d48c2c34cc21032":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["51a50b13564b2903e038280a5d48c2c34cc21032"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"51a50b13564b2903e038280a5d48c2c34cc21032":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}