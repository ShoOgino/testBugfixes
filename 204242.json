{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","pathOld":"/dev/null","sourceNew":"  // we don't actually write a .tvx-like index, instead we read the \n  // vectors file in entirety up-front and save the offsets \n  // so we can seek to the data later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (scratch.startsWith(DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15","date":1322511317,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","sourceNew":"  // we don't actually write a .tvx-like index, instead we read the \n  // vectors file in entirety up-front and save the offsets \n  // so we can seek to the data later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  // we don't actually write a .tvx-like index, instead we read the \n  // vectors file in entirety up-front and save the offsets \n  // so we can seek to the data later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (scratch.startsWith(DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsReader#readIndex().mjava","sourceNew":"  // we don't actually write a .tvx-like index, instead we read the \n  // vectors file in entirety up-front and save the offsets \n  // so we can seek to the data later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  // we don't actually write a .tvx-like index, instead we read the \n  // vectors file in entirety up-front and save the offsets \n  // so we can seek to the data later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["61f30939a6ca0891c7b0c0f34aa43800bd4c9a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["61f30939a6ca0891c7b0c0f34aa43800bd4c9a15"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}