{"path":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","commits":[{"id":"ddc1ae5ff40afa2c5136ee382632ebe602e050e6","date":1474097671,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    try {\n      if (cname == null) {\n        for (String name : it.handler.coreContainer.getAllCoreNames()) {\n          status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n        }\n        it.rsp.add(\"initFailures\", failures);\n      } else {\n        failures = failures.containsKey(cname)\n            ? Collections.singletonMap(cname, failures.get(cname))\n            : Collections.<String, Exception>emptyMap();\n        it.rsp.add(\"initFailures\", failures);\n        status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"status\", status);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error handling 'status' action \", ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    try {\n      if (cname == null) {\n        for (String name : it.handler.coreContainer.getAllCoreNames()) {\n          status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n        }\n        it.rsp.add(\"initFailures\", failures);\n      } else {\n        failures = failures.containsKey(cname)\n            ? Collections.singletonMap(cname, failures.get(cname))\n            : Collections.<String, Exception>emptyMap();\n        it.rsp.add(\"initFailures\", failures);\n        status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"status\", status);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error handling 'status' action \", ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    try {\n      if (cname == null) {\n        for (String name : it.handler.coreContainer.getAllCoreNames()) {\n          status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n        }\n        it.rsp.add(\"initFailures\", failures);\n      } else {\n        failures = failures.containsKey(cname)\n            ? Collections.singletonMap(cname, failures.get(cname))\n            : Collections.<String, Exception>emptyMap();\n        it.rsp.add(\"initFailures\", failures);\n        status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"status\", status);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error handling 'status' action \", ex);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1a94d02abb8cde5dd6ea0defbbc751ce71603","date":1521902895,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","sourceNew":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    if (cname == null) {\n      for (String name : it.handler.coreContainer.getAllCoreNames()) {\n        status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"initFailures\", failures);\n    } else {\n      failures = failures.containsKey(cname)\n          ? Collections.singletonMap(cname, failures.get(cname))\n              : Collections.<String, Exception>emptyMap();\n          it.rsp.add(\"initFailures\", failures);\n          status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n    }\n    it.rsp.add(\"status\", status);\n  }\n\n","sourceOld":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    try {\n      if (cname == null) {\n        for (String name : it.handler.coreContainer.getAllCoreNames()) {\n          status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n        }\n        it.rsp.add(\"initFailures\", failures);\n      } else {\n        failures = failures.containsKey(cname)\n            ? Collections.singletonMap(cname, failures.get(cname))\n            : Collections.<String, Exception>emptyMap();\n        it.rsp.add(\"initFailures\", failures);\n        status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"status\", status);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error handling 'status' action \", ex);\n    }\n  }\n\n","bugFix":["ddc1ae5ff40afa2c5136ee382632ebe602e050e6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fa95fb629298e03fe5e3d71a0ce792f1256f711","date":1521903809,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/StatusOp#execute(CoreAdminHandler.CallInfo).mjava","sourceNew":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    if (cname == null) {\n      for (String name : it.handler.coreContainer.getAllCoreNames()) {\n        status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"initFailures\", failures);\n    } else {\n      failures = failures.containsKey(cname)\n          ? Collections.singletonMap(cname, failures.get(cname))\n              : Collections.<String, Exception>emptyMap();\n          it.rsp.add(\"initFailures\", failures);\n          status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n    }\n    it.rsp.add(\"status\", status);\n  }\n\n","sourceOld":"  @Override\n  public void execute(CoreAdminHandler.CallInfo it) throws Exception {\n    SolrParams params = it.req.getParams();\n\n    String cname = params.get(CoreAdminParams.CORE);\n    String indexInfo = params.get(CoreAdminParams.INDEX_INFO);\n    boolean isIndexInfoNeeded = Boolean.parseBoolean(null == indexInfo ? \"true\" : indexInfo);\n    NamedList<Object> status = new SimpleOrderedMap<>();\n    Map<String, Exception> failures = new HashMap<>();\n    for (Map.Entry<String, CoreContainer.CoreLoadFailure> failure : it.handler.coreContainer.getCoreInitFailures().entrySet()) {\n      failures.put(failure.getKey(), failure.getValue().exception);\n    }\n    try {\n      if (cname == null) {\n        for (String name : it.handler.coreContainer.getAllCoreNames()) {\n          status.add(name, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, name, isIndexInfoNeeded));\n        }\n        it.rsp.add(\"initFailures\", failures);\n      } else {\n        failures = failures.containsKey(cname)\n            ? Collections.singletonMap(cname, failures.get(cname))\n            : Collections.<String, Exception>emptyMap();\n        it.rsp.add(\"initFailures\", failures);\n        status.add(cname, CoreAdminOperation.getCoreStatus(it.handler.coreContainer, cname, isIndexInfoNeeded));\n      }\n      it.rsp.add(\"status\", status);\n    } catch (Exception ex) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Error handling 'status' action \", ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ddc1ae5ff40afa2c5136ee382632ebe602e050e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc1ae5ff40afa2c5136ee382632ebe602e050e6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"ddc1ae5ff40afa2c5136ee382632ebe602e050e6":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3fa95fb629298e03fe5e3d71a0ce792f1256f711":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddc1ae5ff40afa2c5136ee382632ebe602e050e6","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["3fa95fb629298e03fe5e3d71a0ce792f1256f711","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","63a1a94d02abb8cde5dd6ea0defbbc751ce71603"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"63a1a94d02abb8cde5dd6ea0defbbc751ce71603":["3fa95fb629298e03fe5e3d71a0ce792f1256f711"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}