{"path":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","commits":[{"id":"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0","date":1412077943,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 14;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 14;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"454d01166c4a4a773556dd5684e23b19a7e8d38e","date":1413878884,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 10;\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 14;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 10;\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 14;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /** Create a new empty instance. */\n  public DocIdSetBuilder(int maxDoc) {\n    this(maxDoc, false);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    threshold = maxDoc >>> 10;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":null,"sourceOld":"  /** Create a new empty instance. */\n  public DocIdSetBuilder(int maxDoc) {\n    this(maxDoc, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e91a2d9ed80172872da0f517870da6756289554","date":1436431140,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    // For ridiculously small sets, we'll just use a sorted int[]\n    // maxDoc >>> 7 is a good value if you want to save memory, lower values\n    // such as maxDoc >>> 11 should provide faster building but at the expense\n    // of using a full bitset even for quite sparse data\n    this.threshold = maxDoc >>> 7;\n\n    this.buffer = new int[0];\n    this.bufferSize = 0;\n    this.bitSet = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9ee4c03e3ee986704eeeb45c571d001905a6430","date":1462194267,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this(maxDoc, -1, -1);\n  }\n\n","sourceOld":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    // For ridiculously small sets, we'll just use a sorted int[]\n    // maxDoc >>> 7 is a good value if you want to save memory, lower values\n    // such as maxDoc >>> 11 should provide faster building but at the expense\n    // of using a full bitset even for quite sparse data\n    this.threshold = maxDoc >>> 7;\n\n    this.buffer = new int[0];\n    this.bufferSize = 0;\n    this.bitSet = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30540ec27130887a9372c159e8fe971200f37727","date":1462223109,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this(maxDoc, -1, -1);\n  }\n\n","sourceOld":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    // For ridiculously small sets, we'll just use a sorted int[]\n    // maxDoc >>> 7 is a good value if you want to save memory, lower values\n    // such as maxDoc >>> 11 should provide faster building but at the expense\n    // of using a full bitset even for quite sparse data\n    this.threshold = maxDoc >>> 7;\n\n    this.buffer = new int[0];\n    this.bufferSize = 0;\n    this.bitSet = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int).mjava","sourceNew":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this(maxDoc, -1, -1);\n  }\n\n","sourceOld":"  /**\n   * Create a builder that can contain doc IDs between {@code 0} and {@code maxDoc}.\n   */\n  public DocIdSetBuilder(int maxDoc) {\n    this.maxDoc = maxDoc;\n    // For ridiculously small sets, we'll just use a sorted int[]\n    // maxDoc >>> 7 is a good value if you want to save memory, lower values\n    // such as maxDoc >>> 11 should provide faster building but at the expense\n    // of using a full bitset even for quite sparse data\n    this.threshold = maxDoc >>> 7;\n\n    this.buffer = new int[0];\n    this.bufferSize = 0;\n    this.bitSet = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b012914a8110b2ff1d075ed1ef72aa57084d4897":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"c9ee4c03e3ee986704eeeb45c571d001905a6430":["0e91a2d9ed80172872da0f517870da6756289554"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["d9a47902d6207303f5ed3e7aaca62ca33433af66","454d01166c4a4a773556dd5684e23b19a7e8d38e"],"0e91a2d9ed80172872da0f517870da6756289554":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"454d01166c4a4a773556dd5684e23b19a7e8d38e":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"30540ec27130887a9372c159e8fe971200f37727":["0e91a2d9ed80172872da0f517870da6756289554","c9ee4c03e3ee986704eeeb45c571d001905a6430"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["454d01166c4a4a773556dd5684e23b19a7e8d38e"],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30540ec27130887a9372c159e8fe971200f37727"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["0e91a2d9ed80172872da0f517870da6756289554","30540ec27130887a9372c159e8fe971200f37727"]},"commit2Childs":{"b012914a8110b2ff1d075ed1ef72aa57084d4897":["0e91a2d9ed80172872da0f517870da6756289554"],"c9ee4c03e3ee986704eeeb45c571d001905a6430":["30540ec27130887a9372c159e8fe971200f37727"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"0e91a2d9ed80172872da0f517870da6756289554":["c9ee4c03e3ee986704eeeb45c571d001905a6430","30540ec27130887a9372c159e8fe971200f37727","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"454d01166c4a4a773556dd5684e23b19a7e8d38e":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"30540ec27130887a9372c159e8fe971200f37727":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["454d01166c4a4a773556dd5684e23b19a7e8d38e","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}