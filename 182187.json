{"path":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","commits":[{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"586cf43028f4cae848088bc127a6e4d6773ce9aa","date":1323793944,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","sourceNew":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","sourceNew":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","sourceNew":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new TermQuery(new Term(\"field\", \"one\")), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":["6620df8541b174097b1133a4fc370adb2e570524","586cf43028f4cae848088bc127a6e4d6773ce9aa"],"586cf43028f4cae848088bc127a6e4d6773ce9aa":["6620df8541b174097b1133a4fc370adb2e570524"],"6620df8541b174097b1133a4fc370adb2e570524":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["586cf43028f4cae848088bc127a6e4d6773ce9aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"6620df8541b174097b1133a4fc370adb2e570524":["4ceb6a6c707ada1df8bde804e25c98668e699a18","586cf43028f4cae848088bc127a6e4d6773ce9aa"],"586cf43028f4cae848088bc127a6e4d6773ce9aa":["4ceb6a6c707ada1df8bde804e25c98668e699a18","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6620df8541b174097b1133a4fc370adb2e570524"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}