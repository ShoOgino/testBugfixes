{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum.Frame#loadNextFloorBlock().mjava","commits":[{"id":"7266c313bb3b4fbcde3dcc82556182e1fae90080","date":1400183760,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum.Frame#loadNextFloorBlock().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectEnum.Frame#loadNextFloorBlock().mjava","sourceNew":"    void loadNextFloorBlock() throws IOException {\n      assert numFollowFloorBlocks > 0;\n      //if (DEBUG) System.out.println(\"    loadNextFoorBlock trans=\" + transitions[transitionIndex]);\n\n      do {\n        fp = fpOrig + (floorDataReader.readVLong() >>> 1);\n        numFollowFloorBlocks--;\n        // if (DEBUG) System.out.println(\"    skip floor block2!  nextFloorLabel=\" + (char) nextFloorLabel + \" vs target=\" + (char) transitions[transitionIndex].getMin() + \" newFP=\" + fp + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n        if (numFollowFloorBlocks != 0) {\n          nextFloorLabel = floorDataReader.readByte() & 0xff;\n        } else {\n          nextFloorLabel = 256;\n        }\n        // if (DEBUG) System.out.println(\"    nextFloorLabel=\" + (char) nextFloorLabel);\n      } while (numFollowFloorBlocks != 0 && nextFloorLabel <= transitions[transitionIndex].getMin());\n\n      load(null);\n    }\n\n","sourceOld":"    void loadNextFloorBlock() throws IOException {\n      assert numFollowFloorBlocks > 0;\n      //if (DEBUG) System.out.println(\"    loadNextFoorBlock trans=\" + transitions[transitionIndex]);\n\n      do {\n        fp = fpOrig + (floorDataReader.readVLong() >>> 1);\n        numFollowFloorBlocks--;\n        // if (DEBUG) System.out.println(\"    skip floor block2!  nextFloorLabel=\" + (char) nextFloorLabel + \" vs target=\" + (char) transitions[transitionIndex].getMin() + \" newFP=\" + fp + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n        if (numFollowFloorBlocks != 0) {\n          nextFloorLabel = floorDataReader.readByte() & 0xff;\n        } else {\n          nextFloorLabel = 256;\n        }\n        // if (DEBUG) System.out.println(\"    nextFloorLabel=\" + (char) nextFloorLabel);\n      } while (numFollowFloorBlocks != 0 && nextFloorLabel <= transitions[transitionIndex].getMin());\n\n      load(null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5c96ee46366b5feece8b0b328368c6237fc087a","date":1400184255,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum.Frame#loadNextFloorBlock().mjava","sourceNew":null,"sourceOld":"    void loadNextFloorBlock() throws IOException {\n      assert numFollowFloorBlocks > 0;\n      //if (DEBUG) System.out.println(\"    loadNextFoorBlock trans=\" + transitions[transitionIndex]);\n\n      do {\n        fp = fpOrig + (floorDataReader.readVLong() >>> 1);\n        numFollowFloorBlocks--;\n        // if (DEBUG) System.out.println(\"    skip floor block2!  nextFloorLabel=\" + (char) nextFloorLabel + \" vs target=\" + (char) transitions[transitionIndex].getMin() + \" newFP=\" + fp + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n        if (numFollowFloorBlocks != 0) {\n          nextFloorLabel = floorDataReader.readByte() & 0xff;\n        } else {\n          nextFloorLabel = 256;\n        }\n        // if (DEBUG) System.out.println(\"    nextFloorLabel=\" + (char) nextFloorLabel);\n      } while (numFollowFloorBlocks != 0 && nextFloorLabel <= transitions[transitionIndex].getMin());\n\n      load(null);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7266c313bb3b4fbcde3dcc82556182e1fae90080":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f5c96ee46366b5feece8b0b328368c6237fc087a":["7266c313bb3b4fbcde3dcc82556182e1fae90080"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7266c313bb3b4fbcde3dcc82556182e1fae90080":["f5c96ee46366b5feece8b0b328368c6237fc087a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7266c313bb3b4fbcde3dcc82556182e1fae90080","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f5c96ee46366b5feece8b0b328368c6237fc087a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f5c96ee46366b5feece8b0b328368c6237fc087a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}