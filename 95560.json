{"path":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#NativeUnixDirectory(Path,int,long,Directory).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#NativeUnixDirectory(Path,int,long,Directory).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#NativeUnixDirectory(File,int,long,Directory).mjava","sourceNew":"  /** Create a new NIOFSDirectory for the named location.\n   * \n   * @param path the path of the directory\n   * @param mergeBufferSize Size of buffer to use for\n   *    merging.  See {@link #DEFAULT_MERGE_BUFFER_SIZE}.\n   * @param minBytesDirect Merges, or files to be opened for\n   *   reading, smaller than this will\n   *   not use direct IO.  See {@link\n   *   #DEFAULT_MIN_BYTES_DIRECT}\n   * @param delegate fallback Directory for non-merges\n   * @throws IOException If there is a low-level I/O error\n   */\n  public NativeUnixDirectory(Path path, int mergeBufferSize, long minBytesDirect, Directory delegate) throws IOException {\n    super(path, delegate.getLockFactory());\n    if ((mergeBufferSize & ALIGN) != 0) {\n      throw new IllegalArgumentException(\"mergeBufferSize must be 0 mod \" + ALIGN + \" (got: \" + mergeBufferSize + \")\");\n    }\n    this.mergeBufferSize = mergeBufferSize;\n    this.minBytesDirect = minBytesDirect;\n    this.delegate = delegate;\n  }\n\n","sourceOld":"  /** Create a new NIOFSDirectory for the named location.\n   * \n   * @param path the path of the directory\n   * @param mergeBufferSize Size of buffer to use for\n   *    merging.  See {@link #DEFAULT_MERGE_BUFFER_SIZE}.\n   * @param minBytesDirect Merges, or files to be opened for\n   *   reading, smaller than this will\n   *   not use direct IO.  See {@link\n   *   #DEFAULT_MIN_BYTES_DIRECT}\n   * @param delegate fallback Directory for non-merges\n   * @throws IOException If there is a low-level I/O error\n   */\n  public NativeUnixDirectory(File path, int mergeBufferSize, long minBytesDirect, Directory delegate) throws IOException {\n    super(path, delegate.getLockFactory());\n    if ((mergeBufferSize & ALIGN) != 0) {\n      throw new IllegalArgumentException(\"mergeBufferSize must be 0 mod \" + ALIGN + \" (got: \" + mergeBufferSize + \")\");\n    }\n    this.mergeBufferSize = mergeBufferSize;\n    this.minBytesDirect = minBytesDirect;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#NativeUnixDirectory(Path,int,long,LockFactory,Directory).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory#NativeUnixDirectory(Path,int,long,Directory).mjava","sourceNew":"  /** Create a new NIOFSDirectory for the named location.\n   * \n   * @param path the path of the directory\n   * @param lockFactory to use\n   * @param mergeBufferSize Size of buffer to use for\n   *    merging.  See {@link #DEFAULT_MERGE_BUFFER_SIZE}.\n   * @param minBytesDirect Merges, or files to be opened for\n   *   reading, smaller than this will\n   *   not use direct IO.  See {@link\n   *   #DEFAULT_MIN_BYTES_DIRECT}\n   * @param delegate fallback Directory for non-merges\n   * @throws IOException If there is a low-level I/O error\n   */\n  public NativeUnixDirectory(Path path, int mergeBufferSize, long minBytesDirect, LockFactory lockFactory, Directory delegate) throws IOException {\n    super(path, lockFactory);\n    if ((mergeBufferSize & ALIGN) != 0) {\n      throw new IllegalArgumentException(\"mergeBufferSize must be 0 mod \" + ALIGN + \" (got: \" + mergeBufferSize + \")\");\n    }\n    this.mergeBufferSize = mergeBufferSize;\n    this.minBytesDirect = minBytesDirect;\n    this.delegate = delegate;\n  }\n\n","sourceOld":"  /** Create a new NIOFSDirectory for the named location.\n   * \n   * @param path the path of the directory\n   * @param mergeBufferSize Size of buffer to use for\n   *    merging.  See {@link #DEFAULT_MERGE_BUFFER_SIZE}.\n   * @param minBytesDirect Merges, or files to be opened for\n   *   reading, smaller than this will\n   *   not use direct IO.  See {@link\n   *   #DEFAULT_MIN_BYTES_DIRECT}\n   * @param delegate fallback Directory for non-merges\n   * @throws IOException If there is a low-level I/O error\n   */\n  public NativeUnixDirectory(Path path, int mergeBufferSize, long minBytesDirect, Directory delegate) throws IOException {\n    super(path, delegate.getLockFactory());\n    if ((mergeBufferSize & ALIGN) != 0) {\n      throw new IllegalArgumentException(\"mergeBufferSize must be 0 mod \" + ALIGN + \" (got: \" + mergeBufferSize + \")\");\n    }\n    this.mergeBufferSize = mergeBufferSize;\n    this.minBytesDirect = minBytesDirect;\n    this.delegate = delegate;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285cdc737de75b7cc7c284a156b20214deb67bca":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285cdc737de75b7cc7c284a156b20214deb67bca"]},"commit2Childs":{"285cdc737de75b7cc7c284a156b20214deb67bca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["285cdc737de75b7cc7c284a156b20214deb67bca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}