{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#waitForNewOverseer(int,Predicate[String],boolean).mjava","commits":[{"id":"631022b03d06792c2b320d2264e643c3e9496289","date":1556909947,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#waitForNewOverseer(int,Predicate[String],boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#waitForNewOverseer(int,Predicate[String]).mjava","sourceNew":"  private void waitForNewOverseer(int seconds, Predicate<String> state, boolean failOnIntermediateTransition) throws Exception {\n    TimeOut timeout = new TimeOut(seconds, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    String current = null;\n    while (timeout.hasTimedOut() == false) {\n      String prev = current;\n      current = OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient());\n      if (state.test(current))\n        return;\n      else if (failOnIntermediateTransition) {\n        if (prev != null && !current.equals(prev)) {\n          fail (\"There was an intermediate transition, previous: \"+prev+\", intermediate transition: \"+current);\n        }\n      }\n      Thread.sleep(100);\n    }\n    fail(\"Timed out waiting for overseer state change. The current overseer is: \"+current);\n  }\n\n","sourceOld":"  private void waitForNewOverseer(int seconds, Predicate<String> state) throws Exception {\n    TimeOut timeout = new TimeOut(seconds, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    String current = null;\n    while (timeout.hasTimedOut() == false) {\n      current = OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient());\n      if (state.test(current))\n        return;\n      Thread.sleep(100);\n    }\n    fail(\"Timed out waiting for overseer state change\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f6f264dabc60105e80dcbd51c335ad7eca16085","date":1556982140,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#waitForNewOverseer(int,Predicate[String],boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerRolesTest#waitForNewOverseer(int,Predicate[String],boolean).mjava","sourceNew":"  private void waitForNewOverseer(int seconds, Predicate<String> state, boolean failOnIntermediateTransition) throws Exception {\n    TimeOut timeout = new TimeOut(seconds, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    String current = null;\n    while (timeout.hasTimedOut() == false) {\n      String prev = current;\n      current = OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient());\n      if (state.test(current))\n        return;\n      else if (failOnIntermediateTransition) {\n        if (prev != null && current != null && !current.equals(prev)) {\n          fail (\"There was an intermediate transition, previous: \"+prev+\", intermediate transition: \"+current);\n        }\n      }\n      Thread.sleep(100);\n    }\n    fail(\"Timed out waiting for overseer state change. The current overseer is: \"+current);\n  }\n\n","sourceOld":"  private void waitForNewOverseer(int seconds, Predicate<String> state, boolean failOnIntermediateTransition) throws Exception {\n    TimeOut timeout = new TimeOut(seconds, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    String current = null;\n    while (timeout.hasTimedOut() == false) {\n      String prev = current;\n      current = OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient());\n      if (state.test(current))\n        return;\n      else if (failOnIntermediateTransition) {\n        if (prev != null && !current.equals(prev)) {\n          fail (\"There was an intermediate transition, previous: \"+prev+\", intermediate transition: \"+current);\n        }\n      }\n      Thread.sleep(100);\n    }\n    fail(\"Timed out waiting for overseer state change. The current overseer is: \"+current);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"631022b03d06792c2b320d2264e643c3e9496289":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f6f264dabc60105e80dcbd51c335ad7eca16085":["631022b03d06792c2b320d2264e643c3e9496289"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9f6f264dabc60105e80dcbd51c335ad7eca16085"]},"commit2Childs":{"631022b03d06792c2b320d2264e643c3e9496289":["9f6f264dabc60105e80dcbd51c335ad7eca16085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["631022b03d06792c2b320d2264e643c3e9496289"],"9f6f264dabc60105e80dcbd51c335ad7eca16085":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}