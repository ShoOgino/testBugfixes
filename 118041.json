{"path":"modules/analysis/stempel/src/java/org/egothor/stemmer/Diff#apply(StringBuilder,CharSequence).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/java/org/egothor/stemmer/Diff#apply(StringBuilder,CharSequence).mjava","pathOld":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Diff#apply(StringBuilder,CharSequence).mjava","sourceNew":"  /**\n   * Apply the given patch string <tt>diff</tt> to the given string <tt>\n   * dest</tt>.\n   * \n   * @param dest Destination string\n   * @param diff Patch string\n   */\n  public static void apply(StringBuilder dest, CharSequence diff) {\n    try {\n      \n      if (diff == null) {\n        return;\n      }\n\n      int pos = dest.length() - 1;\n      if (pos < 0) {\n        return;\n      }\n      // orig == \"\"\n      for (int i = 0; i < diff.length() / 2; i++) {\n        char cmd = diff.charAt(2 * i);\n        char param = diff.charAt(2 * i + 1);\n        int par_num = (param - 'a' + 1);\n        switch (cmd) {\n          case '-':\n            pos = pos - par_num + 1;\n            break;\n          case 'R':\n            dest.setCharAt(pos, param);\n            break;\n          case 'D':\n            int o = pos;\n            pos -= par_num - 1;\n            /*\n             * delete par_num chars from index pos\n             */\n            // String s = orig.toString();\n            // s = s.substring( 0, pos ) + s.substring( o + 1 );\n            // orig = new StringBuffer( s );\n            dest.delete(pos, o + 1);        \n            break;\n          case 'I':\n            dest.insert(pos += 1, param);\n            break;\n        }\n        pos--;\n      }\n    } catch (StringIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    } catch (ArrayIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * Apply the given patch string <tt>diff</tt> to the given string <tt>\n   * dest</tt>.\n   * \n   * @param dest Destination string\n   * @param diff Patch string\n   */\n  public static void apply(StringBuilder dest, CharSequence diff) {\n    try {\n      \n      if (diff == null) {\n        return;\n      }\n\n      int pos = dest.length() - 1;\n      if (pos < 0) {\n        return;\n      }\n      // orig == \"\"\n      for (int i = 0; i < diff.length() / 2; i++) {\n        char cmd = diff.charAt(2 * i);\n        char param = diff.charAt(2 * i + 1);\n        int par_num = (param - 'a' + 1);\n        switch (cmd) {\n          case '-':\n            pos = pos - par_num + 1;\n            break;\n          case 'R':\n            dest.setCharAt(pos, param);\n            break;\n          case 'D':\n            int o = pos;\n            pos -= par_num - 1;\n            /*\n             * delete par_num chars from index pos\n             */\n            // String s = orig.toString();\n            // s = s.substring( 0, pos ) + s.substring( o + 1 );\n            // orig = new StringBuffer( s );\n            dest.delete(pos, o + 1);        \n            break;\n          case 'I':\n            dest.insert(pos += 1, param);\n            break;\n        }\n        pos--;\n      }\n    } catch (StringIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    } catch (ArrayIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Diff#apply(StringBuilder,CharSequence).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/Diff#apply(StringBuilder,CharSequence).mjava","sourceNew":"  /**\n   * Apply the given patch string <tt>diff</tt> to the given string <tt>\n   * dest</tt>.\n   * \n   * @param dest Destination string\n   * @param diff Patch string\n   */\n  public static void apply(StringBuilder dest, CharSequence diff) {\n    try {\n      \n      if (diff == null) {\n        return;\n      }\n\n      int pos = dest.length() - 1;\n      if (pos < 0) {\n        return;\n      }\n      // orig == \"\"\n      for (int i = 0; i < diff.length() / 2; i++) {\n        char cmd = diff.charAt(2 * i);\n        char param = diff.charAt(2 * i + 1);\n        int par_num = (param - 'a' + 1);\n        switch (cmd) {\n          case '-':\n            pos = pos - par_num + 1;\n            break;\n          case 'R':\n            dest.setCharAt(pos, param);\n            break;\n          case 'D':\n            int o = pos;\n            pos -= par_num - 1;\n            /*\n             * delete par_num chars from index pos\n             */\n            // String s = orig.toString();\n            // s = s.substring( 0, pos ) + s.substring( o + 1 );\n            // orig = new StringBuffer( s );\n            dest.delete(pos, o + 1);        \n            break;\n          case 'I':\n            dest.insert(pos += 1, param);\n            break;\n        }\n        pos--;\n      }\n    } catch (StringIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    } catch (ArrayIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /**\n   * Apply the given patch string <tt>diff</tt> to the given string <tt>\n   * dest</tt>.\n   * \n   * @param dest Destination string\n   * @param diff Patch string\n   */\n  public static void apply(StringBuilder dest, CharSequence diff) {\n    try {\n      \n      if (diff == null) {\n        return;\n      }\n\n      int pos = dest.length() - 1;\n      if (pos < 0) {\n        return;\n      }\n      // orig == \"\"\n      for (int i = 0; i < diff.length() / 2; i++) {\n        char cmd = diff.charAt(2 * i);\n        char param = diff.charAt(2 * i + 1);\n        int par_num = (param - 'a' + 1);\n        switch (cmd) {\n          case '-':\n            pos = pos - par_num + 1;\n            break;\n          case 'R':\n            dest.setCharAt(pos, param);\n            break;\n          case 'D':\n            int o = pos;\n            pos -= par_num - 1;\n            /*\n             * delete par_num chars from index pos\n             */\n            // String s = orig.toString();\n            // s = s.substring( 0, pos ) + s.substring( o + 1 );\n            // orig = new StringBuffer( s );\n            dest.delete(pos, o + 1);        \n            break;\n          case 'I':\n            dest.insert(pos += 1, param);\n            break;\n        }\n        pos--;\n      }\n    } catch (StringIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    } catch (ArrayIndexOutOfBoundsException x) {\n      // x.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}