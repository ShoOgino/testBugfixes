{"path":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Random random = newRandom();\n    Directory directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Random random = newRandom();\n    Directory directory = newDirectory(random);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","date":1286712181,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(1000);\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb378f8bdee16a26810e086303a4a86b4930ea12","date":1296410797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000))\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    searcher.close();\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarityProvider(new DefaultSimilarityProvider())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarityProvider(new DefaultSimilarityProvider());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestElevationComparator#testSorting().mjava","sourceNew":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","sourceOld":"  //@Test\n  public void testSorting() throws Throwable {\n    Directory directory = newDirectory();\n    IndexWriter writer = new IndexWriter(\n        directory,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(1000)).\n            setSimilarity(new DefaultSimilarity())\n    );\n    writer.addDocument(adoc(new String[] {\"id\", \"a\", \"title\", \"ipod\", \"str_s\", \"a\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"b\", \"title\", \"ipod ipod\", \"str_s\", \"b\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"c\", \"title\", \"ipod ipod ipod\", \"str_s\",\"c\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"x\", \"title\", \"boosted\", \"str_s\", \"x\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"y\", \"title\", \"boosted boosted\", \"str_s\",\"y\"}));\n    writer.addDocument(adoc(new String[] {\"id\", \"z\", \"title\", \"boosted boosted boosted\",\"str_s\", \"z\"}));\n\n    IndexReader r = IndexReader.open(writer, true);\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(r);\n    searcher.setSimilarity(new DefaultSimilarity());\n\n    runTest(searcher, true);\n    runTest(searcher, false);\n\n    r.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["eb378f8bdee16a26810e086303a4a86b4930ea12"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","60e3b31201fd9bb5d73884faa5a38c63ea9239f2","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}