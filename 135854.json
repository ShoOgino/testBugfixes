{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","commits":[{"id":"67c729f991d88ae8c376f4bdd702fb836be218d1","date":1461593711,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, outsideEnvelope(basePlane.D, above));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89","date":1461609218,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_RESOLUTION):Math.nextDown(basePlane.D - MINIMUM_RESOLUTION));\n  }\n\n","sourceOld":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, outsideEnvelope(basePlane.D, above));\n  }\n\n","bugFix":null,"bugIntro":["6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","date":1461888019,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_RESOLUTION):Math.nextDown(basePlane.D - MINIMUM_RESOLUTION));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_RESOLUTION):Math.nextDown(basePlane.D - MINIMUM_RESOLUTION));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e","date":1522413407,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_PLANE_OFFSET):Math.nextDown(basePlane.D - MINIMUM_PLANE_OFFSET));\n  }\n\n","sourceOld":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_RESOLUTION):Math.nextDown(basePlane.D - MINIMUM_RESOLUTION));\n  }\n\n","bugFix":["116824c1b3f14f43f9a77914fbf6f0d70a5b7c89"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d564e0296db7f80d73dd62b17710f61c85f38c50","date":1523483630,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#Plane(Plane,boolean).mjava","sourceNew":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_RESOLUTION):Math.nextDown(basePlane.D - MINIMUM_RESOLUTION));\n  }\n\n","sourceOld":"  /** Construct a plane that is parallel to the one provided, but which is just barely numerically\n   * distinguishable from it, in the direction desired.\n   * @param basePlane is the starting plane.\n   * @param above is set to true if the desired plane is in the positive direction from the base plane,\n   *   or false in the negative direction.\n   */\n  public Plane(final Plane basePlane, final boolean above) {\n    this(basePlane.x, basePlane.y, basePlane.z, above?Math.nextUp(basePlane.D + MINIMUM_PLANE_OFFSET):Math.nextDown(basePlane.D - MINIMUM_PLANE_OFFSET));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"d564e0296db7f80d73dd62b17710f61c85f38c50":["6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67c729f991d88ae8c376f4bdd702fb836be218d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","116824c1b3f14f43f9a77914fbf6f0d70a5b7c89"],"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89":["67c729f991d88ae8c376f4bdd702fb836be218d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d564e0296db7f80d73dd62b17710f61c85f38c50"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"]},"commit2Childs":{"6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e":["d564e0296db7f80d73dd62b17710f61c85f38c50"],"d564e0296db7f80d73dd62b17710f61c85f38c50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["67c729f991d88ae8c376f4bdd702fb836be218d1","c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","55b50463286869f584cf849d1587a0fcd54d1dfa"],"67c729f991d88ae8c376f4bdd702fb836be218d1":["116824c1b3f14f43f9a77914fbf6f0d70a5b7c89"],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["6531d2d5e270ac1ccb114e6a380ab253e6ed1a7e","55b50463286869f584cf849d1587a0fcd54d1dfa"],"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}