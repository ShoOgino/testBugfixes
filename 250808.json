{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9bd53e149abb5149d4c8dff32eb79392f3ef713","date":1483980896,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  /**\n   * Does a low level delete of all docs in the index. \n   *\n   * The behavior of this method is slightly different then doing a normal <code>*:*</code> DBQ because it\n   * takes advantage of internal methods to ensure all index data is wiped, regardless of optimistic \n   * concurrency version constraints -- making it suitable for tests that create synthetic versions, \n   * and/or require a completely pristine index w/o any field metdata.\n   *\n   * @see #deleteByQueryAndGetVersion\n   */\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE),\n                                               DISTRIB_UPDATE_PARAM,DistribPhase.FROMLEADER.toString()));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  /**\n   * Does a low level delete of all docs in the index. \n   *\n   * The behavior of this method is slightly different then doing a normal <code>*:*</code> DBQ because it\n   * takes advantage of internal methods to ensure all index data is wiped, regardless of optimistic \n   * concurrency version constraints -- making it suitable for tests that create synthetic versions, \n   * and/or require a completely pristine index w/o any field metdata.\n   *\n   * @see #deleteByQueryAndGetVersion\n   */\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE),\n                                               DISTRIB_UPDATE_PARAM,DistribPhase.FROMLEADER.toString()));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public void clearIndex() {\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1edfe287b5d8d16a9effaad9cf334bedae0c8857","date":1561656486,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#clearIndex().mjava","sourceNew":"  /**\n   * Does a low level delete of all docs in the index. \n   *\n   * The behavior of this method is slightly different then doing a normal <code>*:*</code> DBQ because it\n   * takes advantage of internal methods to ensure all index data is wiped, regardless of optimistic \n   * concurrency version constraints -- making it suitable for tests that create synthetic versions, \n   * and/or require a completely pristine index w/o any field metdata.\n   *\n   * @see #deleteByQueryAndGetVersion\n   */\n  public void clearIndex() {\n    if (null == h) {\n      // harness not initialized, treat as No-Op so safe to call in cleanup methods\n      // even if no tests run\n      return;\n    }\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE),\n                                               DISTRIB_UPDATE_PARAM,DistribPhase.FROMLEADER.toString()));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Does a low level delete of all docs in the index. \n   *\n   * The behavior of this method is slightly different then doing a normal <code>*:*</code> DBQ because it\n   * takes advantage of internal methods to ensure all index data is wiped, regardless of optimistic \n   * concurrency version constraints -- making it suitable for tests that create synthetic versions, \n   * and/or require a completely pristine index w/o any field metdata.\n   *\n   * @see #deleteByQueryAndGetVersion\n   */\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE),\n                                               DISTRIB_UPDATE_PARAM,DistribPhase.FROMLEADER.toString()));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["d9bd53e149abb5149d4c8dff32eb79392f3ef713"],"d9bd53e149abb5149d4c8dff32eb79392f3ef713":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["19275ba31e621f6da1b83bf13af75233876fd3d4","d9bd53e149abb5149d4c8dff32eb79392f3ef713"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1edfe287b5d8d16a9effaad9cf334bedae0c8857"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d9bd53e149abb5149d4c8dff32eb79392f3ef713","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"1edfe287b5d8d16a9effaad9cf334bedae0c8857":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9bd53e149abb5149d4c8dff32eb79392f3ef713":["1edfe287b5d8d16a9effaad9cf334bedae0c8857","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}