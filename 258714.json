{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      input = in;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5742a13bc31248b37eec58aaf19da9d165a48d82","date":1026669113,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"\t/**\n\t * Filter which discards the token 'stop' and which expands the\n\t * token 'phrase' into 'phrase1 phrase2'\n\t */\n\tpublic QPTestFilter(TokenStream in) {\n\t    input = in;\n\t}\n\n","sourceOld":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      input = in;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0498299bf8a98518151ca8e5e727f34dbfde0030","date":1039460541,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"\t/**\n\t * Filter which discards the token 'stop' and which expands the\n\t * token 'phrase' into 'phrase1 phrase2'\n\t */\n\tpublic QPTestFilter(TokenStream in) {\n            super(in);\n\t}\n\n","sourceOld":"\t/**\n\t * Filter which discards the token 'stop' and which expands the\n\t * token 'phrase' into 'phrase1 phrase2'\n\t */\n\tpublic QPTestFilter(TokenStream in) {\n\t    input = in;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"105b8c63d8ae43de76f14005b62a5657a4b8d9ce","date":1064896862,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n    }\n\n","sourceOld":"\t/**\n\t * Filter which discards the token 'stop' and which expands the\n\t * token 'phrase' into 'phrase1 phrase2'\n\t */\n\tpublic QPTestFilter(TokenStream in) {\n            super(in);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n      termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n      offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    }\n\n","sourceOld":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n      termAtt = addAttribute(TermAttribute.class);\n      offsetAtt = addAttribute(OffsetAttribute.class);\n    }\n\n","sourceOld":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n      termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n      offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser.QPTestFilter#QPTestFilter(TokenStream).mjava","sourceNew":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n      termAtt = addAttribute(TermAttribute.class);\n      offsetAtt = addAttribute(OffsetAttribute.class);\n    }\n\n","sourceOld":"    /**\n     * Filter which discards the token 'stop' and which expands the\n     * token 'phrase' into 'phrase1 phrase2'\n     */\n    public QPTestFilter(TokenStream in) {\n      super(in);\n      termAtt = addAttribute(TermAttribute.class);\n      offsetAtt = addAttribute(OffsetAttribute.class);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["5742a13bc31248b37eec58aaf19da9d165a48d82"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["105b8c63d8ae43de76f14005b62a5657a4b8d9ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"105b8c63d8ae43de76f14005b62a5657a4b8d9ce":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"5742a13bc31248b37eec58aaf19da9d165a48d82":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["5742a13bc31248b37eec58aaf19da9d165a48d82"],"0498299bf8a98518151ca8e5e727f34dbfde0030":["105b8c63d8ae43de76f14005b62a5657a4b8d9ce"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"105b8c63d8ae43de76f14005b62a5657a4b8d9ce":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5742a13bc31248b37eec58aaf19da9d165a48d82":["0498299bf8a98518151ca8e5e727f34dbfde0030"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}