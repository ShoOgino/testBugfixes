{"path":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","commits":[{"id":"bbadd4a153af2e36785fa5c682db5321cec90789","date":1432157571,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c","date":1584625917,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(UNIQUE)).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(VALS);\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(\"unique\")).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(\"vals\");\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/UniqueAgg.Merger#merge(Object,Context).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(UNIQUE)).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(VALS);\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      SimpleOrderedMap map = (SimpleOrderedMap)facetResult;\n      long unique = ((Number)map.get(UNIQUE)).longValue();\n      sumUnique += unique;\n\n      int valsListed = 0;\n      List vals = (List) map.get(VALS);\n      if (vals != null) {\n        if (values == null) {\n          values = new HashSet<>(vals.size()*4);\n        }\n        values.addAll(vals);\n        valsListed = vals.size();\n        sumAdded += valsListed;\n      }\n\n      shardsMissingSum += unique - valsListed;\n      shardsMissingMax = Math.max(shardsMissingMax, unique - valsListed);\n      // TODO: somehow get & use the count in the bucket?\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbadd4a153af2e36785fa5c682db5321cec90789":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"],"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["bbadd4a153af2e36785fa5c682db5321cec90789"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"bbadd4a153af2e36785fa5c682db5321cec90789":["8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8593fa01b5c0220a9685cabbcb5a8dd4a659ae8c":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bbadd4a153af2e36785fa5c682db5321cec90789"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}