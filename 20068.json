{"path":"lucene/backwards/src/test/org/apache/lucene/util/English#intToEnglish(int,StringBuilder).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/util/English#intToEnglish(int,StringBuilder).mjava","pathOld":"backwards/src/test/org/apache/lucene/util/English#intToEnglish(int,StringBuilder).mjava","sourceNew":"  public static void intToEnglish(int i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000) {\t\t\t  // billions\n      intToEnglish(i/1000000000, result);\n      result.append(\"billion, \");\n      i = i%1000000000;\n    }\n    if (i >= 1000000) {\t\t\t\t  // millions\n      intToEnglish(i/1000000, result);\n      result.append(\"million, \");\n      i = i%1000000;\n    }\n    if (i >= 1000) {\t\t\t\t  // thousands\n      intToEnglish(i/1000, result);\n      result.append(\"thousand, \");\n      i = i%1000;\n    }\n    if (i >= 100) {\t\t\t\t  // hundreds\n      intToEnglish(i/100, result);\n      result.append(\"hundred \");\n      i = i%100;\n    }\n    if (i >= 20) {\n      switch (i/10) {\n      case 9 : result.append(\"ninety\"); break;\n      case 8 : result.append(\"eighty\"); break;\n      case 7 : result.append(\"seventy\"); break;\n      case 6 : result.append(\"sixty\"); break;\n      case 5 : result.append(\"fifty\"); break;\n      case 4 : result.append(\"forty\"); break;\n      case 3 : result.append(\"thirty\"); break;\n      case 2 : result.append(\"twenty\"); break;\n      }\n      i = i%10;\n      if (i == 0)\n        result.append(\" \");\n      else \n        result.append(\"-\");\n    }\n    switch (i) {\n    case 19 : result.append(\"nineteen \"); break;\n    case 18 : result.append(\"eighteen \"); break;\n    case 17 : result.append(\"seventeen \"); break;\n    case 16 : result.append(\"sixteen \"); break;\n    case 15 : result.append(\"fifteen \"); break;\n    case 14 : result.append(\"fourteen \"); break;\n    case 13 : result.append(\"thirteen \"); break;\n    case 12 : result.append(\"twelve \"); break;\n    case 11 : result.append(\"eleven \"); break;\n    case 10 : result.append(\"ten \"); break;\n    case 9 : result.append(\"nine \"); break;\n    case 8 : result.append(\"eight \"); break;\n    case 7 : result.append(\"seven \"); break;\n    case 6 : result.append(\"six \"); break;\n    case 5 : result.append(\"five \"); break;\n    case 4 : result.append(\"four \"); break;\n    case 3 : result.append(\"three \"); break;\n    case 2 : result.append(\"two \"); break;\n    case 1 : result.append(\"one \"); break;\n    case 0 : result.append(\"\"); break;\n    }\n  }\n\n","sourceOld":"  public static void intToEnglish(int i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000) {\t\t\t  // billions\n      intToEnglish(i/1000000000, result);\n      result.append(\"billion, \");\n      i = i%1000000000;\n    }\n    if (i >= 1000000) {\t\t\t\t  // millions\n      intToEnglish(i/1000000, result);\n      result.append(\"million, \");\n      i = i%1000000;\n    }\n    if (i >= 1000) {\t\t\t\t  // thousands\n      intToEnglish(i/1000, result);\n      result.append(\"thousand, \");\n      i = i%1000;\n    }\n    if (i >= 100) {\t\t\t\t  // hundreds\n      intToEnglish(i/100, result);\n      result.append(\"hundred \");\n      i = i%100;\n    }\n    if (i >= 20) {\n      switch (i/10) {\n      case 9 : result.append(\"ninety\"); break;\n      case 8 : result.append(\"eighty\"); break;\n      case 7 : result.append(\"seventy\"); break;\n      case 6 : result.append(\"sixty\"); break;\n      case 5 : result.append(\"fifty\"); break;\n      case 4 : result.append(\"forty\"); break;\n      case 3 : result.append(\"thirty\"); break;\n      case 2 : result.append(\"twenty\"); break;\n      }\n      i = i%10;\n      if (i == 0)\n        result.append(\" \");\n      else \n        result.append(\"-\");\n    }\n    switch (i) {\n    case 19 : result.append(\"nineteen \"); break;\n    case 18 : result.append(\"eighteen \"); break;\n    case 17 : result.append(\"seventeen \"); break;\n    case 16 : result.append(\"sixteen \"); break;\n    case 15 : result.append(\"fifteen \"); break;\n    case 14 : result.append(\"fourteen \"); break;\n    case 13 : result.append(\"thirteen \"); break;\n    case 12 : result.append(\"twelve \"); break;\n    case 11 : result.append(\"eleven \"); break;\n    case 10 : result.append(\"ten \"); break;\n    case 9 : result.append(\"nine \"); break;\n    case 8 : result.append(\"eight \"); break;\n    case 7 : result.append(\"seven \"); break;\n    case 6 : result.append(\"six \"); break;\n    case 5 : result.append(\"five \"); break;\n    case 4 : result.append(\"four \"); break;\n    case 3 : result.append(\"three \"); break;\n    case 2 : result.append(\"two \"); break;\n    case 1 : result.append(\"one \"); break;\n    case 0 : result.append(\"\"); break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/util/English#intToEnglish(int,StringBuilder).mjava","sourceNew":null,"sourceOld":"  public static void intToEnglish(int i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000) {\t\t\t  // billions\n      intToEnglish(i/1000000000, result);\n      result.append(\"billion, \");\n      i = i%1000000000;\n    }\n    if (i >= 1000000) {\t\t\t\t  // millions\n      intToEnglish(i/1000000, result);\n      result.append(\"million, \");\n      i = i%1000000;\n    }\n    if (i >= 1000) {\t\t\t\t  // thousands\n      intToEnglish(i/1000, result);\n      result.append(\"thousand, \");\n      i = i%1000;\n    }\n    if (i >= 100) {\t\t\t\t  // hundreds\n      intToEnglish(i/100, result);\n      result.append(\"hundred \");\n      i = i%100;\n    }\n    if (i >= 20) {\n      switch (i/10) {\n      case 9 : result.append(\"ninety\"); break;\n      case 8 : result.append(\"eighty\"); break;\n      case 7 : result.append(\"seventy\"); break;\n      case 6 : result.append(\"sixty\"); break;\n      case 5 : result.append(\"fifty\"); break;\n      case 4 : result.append(\"forty\"); break;\n      case 3 : result.append(\"thirty\"); break;\n      case 2 : result.append(\"twenty\"); break;\n      }\n      i = i%10;\n      if (i == 0)\n        result.append(\" \");\n      else \n        result.append(\"-\");\n    }\n    switch (i) {\n    case 19 : result.append(\"nineteen \"); break;\n    case 18 : result.append(\"eighteen \"); break;\n    case 17 : result.append(\"seventeen \"); break;\n    case 16 : result.append(\"sixteen \"); break;\n    case 15 : result.append(\"fifteen \"); break;\n    case 14 : result.append(\"fourteen \"); break;\n    case 13 : result.append(\"thirteen \"); break;\n    case 12 : result.append(\"twelve \"); break;\n    case 11 : result.append(\"eleven \"); break;\n    case 10 : result.append(\"ten \"); break;\n    case 9 : result.append(\"nine \"); break;\n    case 8 : result.append(\"eight \"); break;\n    case 7 : result.append(\"seven \"); break;\n    case 6 : result.append(\"six \"); break;\n    case 5 : result.append(\"five \"); break;\n    case 4 : result.append(\"four \"); break;\n    case 3 : result.append(\"three \"); break;\n    case 2 : result.append(\"two \"); break;\n    case 1 : result.append(\"one \"); break;\n    case 0 : result.append(\"\"); break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}