{"path":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(IndexInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(IndexInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexInput.Index#read(DataInput,boolean).mjava","sourceNew":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void read(DataInput indexIn, boolean absolute)\n      throws IOException {\n      if (absolute) {\n        fp = indexIn.readVLong();\n      } else {\n        fp += indexIn.readVLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}