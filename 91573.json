{"path":"src/java/org/apache/lucene/search/BooleanScorer.BolleanScorerCollector#collect(int).mjava","commits":[{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.BolleanScorerCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer.Collector#collect(int,float).mjava","sourceNew":"    public final void collect(final int doc) throws IOException {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = scorer.score();            // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += scorer.score();           // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","sourceOld":"    public final void collect(final int doc, final float score) {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = score;                     // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += score;                    // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a550fdaf2d9e5e9d2dbaac2ffa9491454c745b80","date":1241192083,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer.BooleanScorerCollector#collect(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer.BolleanScorerCollector#collect(int).mjava","sourceNew":"    public final void collect(final int doc) throws IOException {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = scorer.score();            // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += scorer.score();           // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","sourceOld":"    public final void collect(final int doc) throws IOException {\n      final BucketTable table = bucketTable;\n      final int i = doc & BucketTable.MASK;\n      Bucket bucket = table.buckets[i];\n      if (bucket == null)\n        table.buckets[i] = bucket = new Bucket();\n      \n      if (bucket.doc != doc) {                    // invalid bucket\n        bucket.doc = doc;                         // set doc\n        bucket.score = scorer.score();            // initialize score\n        bucket.bits = mask;                       // initialize mask\n        bucket.coord = 1;                         // initialize coord\n\n        bucket.next = table.first;                // push onto valid list\n        table.first = bucket;\n      } else {                                    // valid bucket\n        bucket.score += scorer.score();           // increment score\n        bucket.bits |= mask;                      // add bits in mask\n        bucket.coord++;                           // increment coord\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a550fdaf2d9e5e9d2dbaac2ffa9491454c745b80":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a550fdaf2d9e5e9d2dbaac2ffa9491454c745b80"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["a550fdaf2d9e5e9d2dbaac2ffa9491454c745b80"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"a550fdaf2d9e5e9d2dbaac2ffa9491454c745b80":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}