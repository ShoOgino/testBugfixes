{"path":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","commits":[{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#persist().mjava","sourceNew":"  /** Persists the multicore config file. */\n  public void persist() {\n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", configFile.getParentFile());\n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      synchronized(cores) {\n        Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n        persist(writer);\n        writer.flush();\n        writer.close();\n        out.close();\n        // rename over origin or copy it it this fails\n        if (tmpFile.renameTo(configFile))\n          tmpFile = null;\n        else\n          fileCopy(tmpFile, configFile);\n      }\n    } \n    catch(java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } \n    catch(java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } \n    finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete())\n          tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","sourceOld":"  /** Persists the multicore config file. */\n  public void persist() {\n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", configFile.getParentFile());\n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      synchronized(cores) {\n        Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n        persist(writer);\n        writer.flush();\n        writer.close();\n        out.close();\n        // rename over origin or copy it it this fails\n        if (tmpFile.renameTo(configFile))\n          tmpFile = null;\n        else\n          fileCopy(tmpFile, configFile);\n      }\n    } \n    catch(java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } \n    catch(java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } \n    finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete())\n          tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","sourceNew":"/** Persists the multicore config file in multicore.xml. */\n  public void persist() {\n    persistFile(null);\n  }\n\n","sourceOld":"  /** Persists the multicore config file. */\n  public void persist() {\n    File tmpFile = null;\n    try {\n      // write in temp first\n      tmpFile = File.createTempFile(\"solr\", \".xml\", configFile.getParentFile());\n      java.io.FileOutputStream out = new java.io.FileOutputStream(tmpFile);\n      synchronized(cores) {\n        Writer writer = new BufferedWriter(new OutputStreamWriter(out, \"UTF-8\"));\n        persist(writer);\n        writer.flush();\n        writer.close();\n        out.close();\n        // rename over origin or copy it it this fails\n        if (tmpFile.renameTo(configFile))\n          tmpFile = null;\n        else\n          fileCopy(tmpFile, configFile);\n      }\n    } \n    catch(java.io.FileNotFoundException xnf) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xnf);\n    } \n    catch(java.io.IOException xio) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, xio);\n    } \n    finally {\n      if (tmpFile != null) {\n        if (!tmpFile.delete())\n          tmpFile.deleteOnExit();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2284f4281eb212e60f8318c30e1d67c7d25422a7","date":1218739496,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","sourceNew":"/** Persists the cores config file in cores.xml. */\n  public void persist() {\n    persistFile(null);\n  }\n\n","sourceOld":"/** Persists the multicore config file in multicore.xml. */\n  public void persist() {\n    persistFile(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer#persist().mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer#persist().mjava","sourceNew":"/** Persists the cores config file in cores.xml. */\n  public void persist() {\n    persistFile(null);\n  }\n\n","sourceOld":"/** Persists the cores config file in cores.xml. */\n  public void persist() {\n    persistFile(null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2284f4281eb212e60f8318c30e1d67c7d25422a7":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2284f4281eb212e60f8318c30e1d67c7d25422a7":["ad94625fb8d088209f46650c8097196fec67f00c"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}