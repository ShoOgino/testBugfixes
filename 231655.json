{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","commits":[{"id":"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","date":1343692569,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public GlobFileFilter(String pattern, boolean isRegex)\n    {\n      _pattern = pattern;\n      if(!isRegex) {\n        _pattern = _pattern\n            .replace(\"^\", \"\\\\^\")\n            .replace(\"$\", \"\\\\$\")\n            .replace(\".\", \"\\\\.\")\n            .replace(\"(\", \"\\\\(\")\n            .replace(\")\", \"\\\\)\")\n            .replace(\"+\", \"\\\\+\")\n            .replace(\"*\", \".*\")\n            .replace(\"?\", \".\");\n        _pattern = \"^\" + _pattern + \"$\";\n      }\n      \n      try {\n        p = Pattern.compile(_pattern,Pattern.CASE_INSENSITIVE);\n      } catch(PatternSyntaxException e) {\n        fatal(\"Invalid type list \"+pattern+\". \"+e.getDescription());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public GlobFileFilter(String pattern, boolean isRegex)\n    {\n      _pattern = pattern;\n      if(!isRegex) {\n        _pattern = _pattern\n            .replace(\"^\", \"\\\\^\")\n            .replace(\"$\", \"\\\\$\")\n            .replace(\".\", \"\\\\.\")\n            .replace(\"(\", \"\\\\(\")\n            .replace(\")\", \"\\\\)\")\n            .replace(\"+\", \"\\\\+\")\n            .replace(\"*\", \".*\")\n            .replace(\"?\", \".\");\n        _pattern = \"^\" + _pattern + \"$\";\n      }\n      \n      try {\n        p = Pattern.compile(_pattern,Pattern.CASE_INSENSITIVE);\n      } catch(PatternSyntaxException e) {\n        fatal(\"Invalid type list \"+pattern+\". \"+e.getDescription());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public GlobFileFilter(String pattern, boolean isRegex)\n    {\n      _pattern = pattern;\n      if(!isRegex) {\n        _pattern = _pattern\n            .replace(\"^\", \"\\\\^\")\n            .replace(\"$\", \"\\\\$\")\n            .replace(\".\", \"\\\\.\")\n            .replace(\"(\", \"\\\\(\")\n            .replace(\")\", \"\\\\)\")\n            .replace(\"+\", \"\\\\+\")\n            .replace(\"*\", \".*\")\n            .replace(\"?\", \".\");\n        _pattern = \"^\" + _pattern + \"$\";\n      }\n      \n      try {\n        p = Pattern.compile(_pattern,Pattern.CASE_INSENSITIVE);\n      } catch(PatternSyntaxException e) {\n        fatal(\"Invalid type list \"+pattern+\". \"+e.getDescription());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool.GlobFileFilter#GlobFileFilter(String,boolean).mjava","sourceNew":"    public GlobFileFilter(String pattern, boolean isRegex)\n    {\n      _pattern = pattern;\n      if(!isRegex) {\n        _pattern = _pattern\n            .replace(\"^\", \"\\\\^\")\n            .replace(\"$\", \"\\\\$\")\n            .replace(\".\", \"\\\\.\")\n            .replace(\"(\", \"\\\\(\")\n            .replace(\")\", \"\\\\)\")\n            .replace(\"+\", \"\\\\+\")\n            .replace(\"*\", \".*\")\n            .replace(\"?\", \".\");\n        _pattern = \"^\" + _pattern + \"$\";\n      }\n\n      try {\n        p = Pattern.compile(_pattern,Pattern.CASE_INSENSITIVE);\n      } catch(PatternSyntaxException e) {\n        fatal(\"Invalid type list \"+pattern+\". \"+e.getDescription());\n      }\n    }\n\n","sourceOld":"    public GlobFileFilter(String pattern, boolean isRegex)\n    {\n      _pattern = pattern;\n      if(!isRegex) {\n        _pattern = _pattern\n            .replace(\"^\", \"\\\\^\")\n            .replace(\"$\", \"\\\\$\")\n            .replace(\".\", \"\\\\.\")\n            .replace(\"(\", \"\\\\(\")\n            .replace(\")\", \"\\\\)\")\n            .replace(\"+\", \"\\\\+\")\n            .replace(\"*\", \".*\")\n            .replace(\"?\", \".\");\n        _pattern = \"^\" + _pattern + \"$\";\n      }\n      \n      try {\n        p = Pattern.compile(_pattern,Pattern.CASE_INSENSITIVE);\n      } catch(PatternSyntaxException e) {\n        fatal(\"Invalid type list \"+pattern+\". \"+e.getDescription());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}