{"path":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2","date":1391685460,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.shutdown();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8b2bc4b8b503cc0b5743b19445798c62069e4d","date":1477390943,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60b61628d1912768f51eccaa8ead5a5a32ab34c6","date":1477427681,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa436288346a9508333fc980195ec9f0e80386a","date":1493166840,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    Collection<Accountable> resources = state.getChildResources();\n    assertTrue(state.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    if (searcher.getIndexReader().leaves().size() > 1) {\n      assertTrue(state.ramBytesUsed() > 0);\n      assertFalse(resources.isEmpty());\n      assertTrue(resources.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    } else {\n      assertEquals(0, state.ramBytesUsed());\n      assertTrue(resources.isEmpty());\n    }\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cfd1df435f04d4287925cca73cf22120f723892","date":1493925365,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    ExecutorService exec = randomExecutorServiceOrNull();\n    Facets facets = getAllFacets(searcher, state, exec);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    Collection<Accountable> resources = state.getChildResources();\n    assertTrue(state.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    if (searcher.getIndexReader().leaves().size() > 1) {\n      assertTrue(state.ramBytesUsed() > 0);\n      assertFalse(resources.isEmpty());\n      assertTrue(resources.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    } else {\n      assertEquals(0, state.ramBytesUsed());\n      assertTrue(resources.isEmpty());\n    }\n\n    if (exec != null) {\n      exec.shutdownNow();\n    }\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    Collection<Accountable> resources = state.getChildResources();\n    assertTrue(state.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    if (searcher.getIndexReader().leaves().size() > 1) {\n      assertTrue(state.ramBytesUsed() > 0);\n      assertFalse(resources.isEmpty());\n      assertTrue(resources.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    } else {\n      assertEquals(0, state.ramBytesUsed());\n      assertTrue(resources.isEmpty());\n    }\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    ExecutorService exec = randomExecutorServiceOrNull();\n    Facets facets = getAllFacets(searcher, state, exec);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    Collection<Accountable> resources = state.getChildResources();\n    assertTrue(state.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    if (searcher.getIndexReader().leaves().size() > 1) {\n      assertTrue(state.ramBytesUsed() > 0);\n      assertFalse(resources.isEmpty());\n      assertTrue(resources.toString().contains(FacetsConfig.DEFAULT_INDEX_FIELD_NAME));\n    } else {\n      assertEquals(0, state.ramBytesUsed());\n      assertTrue(resources.isEmpty());\n    }\n\n    if (exec != null) {\n      exec.shutdownNow();\n    }\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo3\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"bar2\"));\n    doc.add(new SortedSetDocValuesFacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());\n\n    SortedSetDocValuesFacetCounts facets = getAllFacets(searcher, state);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"dim=a path=[] value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"dim=b path=[] value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"dim=c path=[] value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8cfd1df435f04d4287925cca73cf22120f723892":["9fa436288346a9508333fc980195ec9f0e80386a"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","ad2a673349939e48652bf304cccf673c3412198f"],"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["60b61628d1912768f51eccaa8ead5a5a32ab34c6","8cfd1df435f04d4287925cca73cf22120f723892"],"9fa436288346a9508333fc980195ec9f0e80386a":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"ad2a673349939e48652bf304cccf673c3412198f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cfd1df435f04d4287925cca73cf22120f723892"]},"commit2Childs":{"8cfd1df435f04d4287925cca73cf22120f723892":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["60b61628d1912768f51eccaa8ead5a5a32ab34c6","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["e9017cf144952056066919f1ebc7897ff9bd71b1","9fa436288346a9508333fc980195ec9f0e80386a","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9fa436288346a9508333fc980195ec9f0e80386a":["8cfd1df435f04d4287925cca73cf22120f723892"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","ad2a673349939e48652bf304cccf673c3412198f"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}