{"path":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#open(Directory,Map[String,String]).mjava","commits":[{"id":"763da4a9605e47013078edc323b9d4b608f0f9e0","date":1555353576,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#open(Directory,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a IndexReader reading the index in the given\n   *  Directory\n   * @param directory the index directory\n   * @param readerAttributes the reader attributes passed to the {@link org.apache.lucene.codecs.Codec} layer of the\n   *                         directory reader. This attribute map is forwarded to all leaf readers as well as to the readers\n   *                         that are opened subsequently via the different flavors of {@link DirectoryReader#openIfChanged(DirectoryReader)}\n   * @throws IOException if there is a low-level IO error\n   */\n  public static DirectoryReader open(final Directory directory, final Map<String, String> readerAttributes) throws IOException {\n    return StandardDirectoryReader.open(directory, null, readerAttributes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e83191a3e02851a0b67e5335e6922f3e9ea86d","date":1583489709,"type":4,"author":"Bruno Roustant","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#open(Directory,Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /** Returns a IndexReader reading the index in the given\n   *  Directory\n   * @param directory the index directory\n   * @param readerAttributes the reader attributes passed to the {@link org.apache.lucene.codecs.Codec} layer of the\n   *                         directory reader. This attribute map is forwarded to all leaf readers as well as to the readers\n   *                         that are opened subsequently via the different flavors of {@link DirectoryReader#openIfChanged(DirectoryReader)}\n   * @throws IOException if there is a low-level IO error\n   */\n  public static DirectoryReader open(final Directory directory, final Map<String, String> readerAttributes) throws IOException {\n    return StandardDirectoryReader.open(directory, null, readerAttributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["763da4a9605e47013078edc323b9d4b608f0f9e0"]},"commit2Childs":{"763da4a9605e47013078edc323b9d4b608f0f9e0":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}