{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 201\n            v_1 = cursor;\n            lab0: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // setlimit, line 202\n            v_2 = limit - cursor;\n            // tomark, line 202\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_3 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_2;\n            // (, line 202\n            // do, line 203\n            v_4 = limit - cursor;\n            lab1: do {\n                // (, line 203\n                // or, line 204\n                lab2: do {\n                    v_5 = limit - cursor;\n                    lab3: do {\n                        // call perfective_gerund, line 204\n                        if (!r_perfective_gerund())\n                        {\n                            break lab3;\n                        }\n                        break lab2;\n                    } while (false);\n                    cursor = limit - v_5;\n                    // (, line 205\n                    // try, line 205\n                    v_6 = limit - cursor;\n                    lab4: do {\n                        // call reflexive, line 205\n                        if (!r_reflexive())\n                        {\n                            cursor = limit - v_6;\n                            break lab4;\n                        }\n                    } while (false);\n                    // or, line 206\n                    lab5: do {\n                        v_7 = limit - cursor;\n                        lab6: do {\n                            // call adjectival, line 206\n                            if (!r_adjectival())\n                            {\n                                break lab6;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        lab7: do {\n                            // call verb, line 206\n                            if (!r_verb())\n                            {\n                                break lab7;\n                            }\n                            break lab5;\n                        } while (false);\n                        cursor = limit - v_7;\n                        // call noun, line 206\n                        if (!r_noun())\n                        {\n                            break lab1;\n                        }\n                    } while (false);\n                } while (false);\n            } while (false);\n            cursor = limit - v_4;\n            // try, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // (, line 209\n                // [, line 209\n                ket = cursor;\n                // literal, line 209\n                if (!(eq_s_b(1, \"\\u0438\")))\n                {\n                    cursor = limit - v_8;\n                    break lab8;\n                }\n                // ], line 209\n                bra = cursor;\n                // delete, line 209\n                slice_del();\n            } while (false);\n            // do, line 212\n            v_9 = limit - cursor;\n            lab9: do {\n                // call derivational, line 212\n                if (!r_derivational())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            // do, line 213\n            v_10 = limit - cursor;\n            lab10: do {\n                // call tidy_up, line 213\n                if (!r_tidy_up())\n                {\n                    break lab10;\n                }\n            } while (false);\n            cursor = limit - v_10;\n            limit_backward = v_3;\n            cursor = limit_backward;            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","sourceOld":"                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/RussianStemmer#stem().mjava","sourceNew":"public boolean stem() {\n  int v_1 = cursor;\n  lab0: {\n    while(true)\n    {\n      int v_2 = cursor;\n      lab1: {\n        golab2: while(true)\n        {\n          int v_3 = cursor;\n          lab3: {\n            bra = cursor;\n            if (!(eq_s(\"\\u0451\")))\n            {\n              break lab3;\n            }\n            ket = cursor;\n            cursor = v_3;\n            break golab2;\n          }\n          cursor = v_3;\n          if (cursor >= limit)\n          {\n            break lab1;\n          }\n          cursor++;\n        }\n        slice_from(\"\\u0435\");\n        continue;\n      }\n      cursor = v_2;\n      break;\n    }\n  }\n  cursor = v_1;\n  r_mark_regions();\n  limit_backward = cursor;\n  cursor = limit;\n  if (cursor < I_pV)\n  {\n    return false;\n  }\n  int v_6 = limit_backward;\n  limit_backward = I_pV;\n  int v_7 = limit - cursor;\n  lab4: {\n    lab5: {\n      int v_8 = limit - cursor;\n      lab6: {\n        if (!r_perfective_gerund())\n        {\n          break lab6;\n        }\n        break lab5;\n      }\n      cursor = limit - v_8;\n      int v_9 = limit - cursor;\n      lab7: {\n        if (!r_reflexive())\n        {\n          cursor = limit - v_9;\n          break lab7;\n        }\n      }\n      lab8: {\n        int v_10 = limit - cursor;\n        lab9: {\n          if (!r_adjectival())\n          {\n            break lab9;\n          }\n          break lab8;\n        }\n        cursor = limit - v_10;\n        lab10: {\n          if (!r_verb())\n          {\n            break lab10;\n          }\n          break lab8;\n        }\n        cursor = limit - v_10;\n        if (!r_noun())\n        {\n          break lab4;\n        }\n      }\n    }\n  }\n  cursor = limit - v_7;\n  int v_11 = limit - cursor;\n  lab11: {\n    ket = cursor;\n    if (!(eq_s_b(\"\\u0438\")))\n    {\n      cursor = limit - v_11;\n      break lab11;\n    }\n    bra = cursor;\n    slice_del();\n  }\n  int v_12 = limit - cursor;\n  r_derivational();\n  cursor = limit - v_12;\n  int v_13 = limit - cursor;\n  r_tidy_up();\n  cursor = limit - v_13;\n  limit_backward = v_6;\n  cursor = limit_backward;\n  return true;\n}\n\n","sourceOld":"                @Override\n                public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n                    // (, line 199\n                    // do, line 201\n                    v_1 = cursor;\n                    lab0: do {\n                        // call mark_regions, line 201\n                        if (!r_mark_regions())\n                        {\n                            break lab0;\n                        }\n                    } while (false);\n                    cursor = v_1;\n                    // backwards, line 202\n                    limit_backward = cursor; cursor = limit;\n                    // setlimit, line 202\n                    v_2 = limit - cursor;\n                    // tomark, line 202\n                    if (cursor < I_pV)\n                    {\n                        return false;\n                    }\n                    cursor = I_pV;\n                    v_3 = limit_backward;\n                    limit_backward = cursor;\n                    cursor = limit - v_2;\n                    // (, line 202\n                    // do, line 203\n                    v_4 = limit - cursor;\n                    lab1: do {\n                        // (, line 203\n                        // or, line 204\n                        lab2: do {\n                            v_5 = limit - cursor;\n                            lab3: do {\n                                // call perfective_gerund, line 204\n                                if (!r_perfective_gerund())\n                                {\n                                    break lab3;\n                                }\n                                break lab2;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // (, line 205\n                            // try, line 205\n                            v_6 = limit - cursor;\n                            lab4: do {\n                                // call reflexive, line 205\n                                if (!r_reflexive())\n                                {\n                                    cursor = limit - v_6;\n                                    break lab4;\n                                }\n                            } while (false);\n                            // or, line 206\n                            lab5: do {\n                                v_7 = limit - cursor;\n                                lab6: do {\n                                    // call adjectival, line 206\n                                    if (!r_adjectival())\n                                    {\n                                        break lab6;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                lab7: do {\n                                    // call verb, line 206\n                                    if (!r_verb())\n                                    {\n                                        break lab7;\n                                    }\n                                    break lab5;\n                                } while (false);\n                                cursor = limit - v_7;\n                                // call noun, line 206\n                                if (!r_noun())\n                                {\n                                    break lab1;\n                                }\n                            } while (false);\n                        } while (false);\n                    } while (false);\n                    cursor = limit - v_4;\n                    // try, line 209\n                    v_8 = limit - cursor;\n                    lab8: do {\n                        // (, line 209\n                        // [, line 209\n                        ket = cursor;\n                        // literal, line 209\n                        if (!(eq_s_b(1, \"\\u0438\")))\n                        {\n                            cursor = limit - v_8;\n                            break lab8;\n                        }\n                        // ], line 209\n                        bra = cursor;\n                        // delete, line 209\n                        slice_del();\n                    } while (false);\n                    // do, line 212\n                    v_9 = limit - cursor;\n                    lab9: do {\n                        // call derivational, line 212\n                        if (!r_derivational())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 213\n                    v_10 = limit - cursor;\n                    lab10: do {\n                        // call tidy_up, line 213\n                        if (!r_tidy_up())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    limit_backward = v_3;\n                    cursor = limit_backward;                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","7530de27b87b961b51f01bd1299b7004d46e8823"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}