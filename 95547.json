{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#findStartAndEndOrds().mjava","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":"  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#findStartAndEndOrds().mjava","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":"  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#findStartAndEndOrds().mjava","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":"  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      // multi-valued view\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      // multi-valued view\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);  // multi-valued view\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#findStartAndEndOrds().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void findStartAndEndOrds() throws IOException {\n    if (multiValuedField) {\n      si = FieldUtil.getSortedSetDocValues(fcontext.qcontext, sf, null);\n      if (si instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues)si).mapping;\n      }\n    } else {\n      // multi-valued view\n      SortedDocValues single = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n      si = DocValues.singleton(single);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues)single).mapping;\n      }\n    }\n\n    if (si.getValueCount() >= Integer.MAX_VALUE) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Field has too many unique values. field=\" + sf + \" nterms= \" + si.getValueCount());\n    }\n\n    if (prefixRef != null) {\n      startTermIndex = (int)si.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = (int)si.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = (int)si.getValueCount();\n    }\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["403d05f7f8d69b65659157eff1bc1d2717f04c66","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}