{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    int sz = clauses.size();\n    SpanQuery[] newClauses = new SpanQuery[sz];\n\n    for (int i = 0; i < sz; i++) {\n      newClauses[i] = (SpanQuery) clauses.get(i).clone();\n    }\n    PayloadNearQuery boostingNearQuery = new PayloadNearQuery(newClauses, slop,\n        inOrder, function);\n    boostingNearQuery.setBoost(getBoost());\n    return boostingNearQuery;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    int sz = clauses.size();\n    SpanQuery[] newClauses = new SpanQuery[sz];\n\n    for (int i = 0; i < sz; i++) {\n      newClauses[i] = (SpanQuery) clauses.get(i).clone();\n    }\n    PayloadNearQuery boostingNearQuery = new PayloadNearQuery(newClauses, slop,\n        inOrder, function);\n    boostingNearQuery.setBoost(getBoost());\n    return boostingNearQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5bf508bfc98425280b4bb708ab724f718705c9d","date":1332973345,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","sourceNew":"  @Override\n  public PayloadNearQuery clone() {\n    int sz = clauses.size();\n    SpanQuery[] newClauses = new SpanQuery[sz];\n\n    for (int i = 0; i < sz; i++) {\n      newClauses[i] = (SpanQuery) clauses.get(i).clone();\n    }\n    PayloadNearQuery boostingNearQuery = new PayloadNearQuery(newClauses, slop,\n        inOrder, function);\n    boostingNearQuery.setBoost(getBoost());\n    return boostingNearQuery;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    int sz = clauses.size();\n    SpanQuery[] newClauses = new SpanQuery[sz];\n\n    for (int i = 0; i < sz; i++) {\n      newClauses[i] = (SpanQuery) clauses.get(i).clone();\n    }\n    PayloadNearQuery boostingNearQuery = new PayloadNearQuery(newClauses, slop,\n        inOrder, function);\n    boostingNearQuery.setBoost(getBoost());\n    return boostingNearQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73561ba4c64c1aea2ba4b3873f80b9b2a2946816","date":1438618499,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#clone().mjava","sourceNew":null,"sourceOld":"  @Override\n  public PayloadNearQuery clone() {\n    int sz = clauses.size();\n    SpanQuery[] newClauses = new SpanQuery[sz];\n\n    for (int i = 0; i < sz; i++) {\n      newClauses[i] = (SpanQuery) clauses.get(i).clone();\n    }\n    PayloadNearQuery boostingNearQuery = new PayloadNearQuery(newClauses, slop,\n        inOrder, function);\n    boostingNearQuery.setBoost(getBoost());\n    return boostingNearQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f5bf508bfc98425280b4bb708ab724f718705c9d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"]},"commit2Childs":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f5bf508bfc98425280b4bb708ab724f718705c9d":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}