{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","commits":[{"id":"e0d52d245d8b98e69545a7712a607adee18d6ff2","date":1494471557,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b31ebc7a867ddea79d438a8fca876a94e644d11a","date":1494496172,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360b3962efc30aa8b2c39c3087aa36069674bbe7","date":1494557674,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","pathOld":"/dev/null","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12cb83a3f761dc612e1ece020f46e1886fc2550e","date":1495722768,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ReverseEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ReverseEvaluator#evaluate(Tuple).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ReverseEvaluator#evaluate(Tuple).mjava","sourceNew":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","sourceOld":"  public List<Number> evaluate(Tuple tuple) throws IOException {\n    StreamEvaluator colEval1 = subEvaluators.get(0);\n\n    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);\n    List<Number> rev = new ArrayList();\n    for(int i=numbers1.size()-1; i>=0; i--) {\n      rev.add(numbers1.get(i));\n    }\n\n    return rev;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b31ebc7a867ddea79d438a8fca876a94e644d11a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0d52d245d8b98e69545a7712a607adee18d6ff2"],"12cb83a3f761dc612e1ece020f46e1886fc2550e":["360b3962efc30aa8b2c39c3087aa36069674bbe7"],"360b3962efc30aa8b2c39c3087aa36069674bbe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b31ebc7a867ddea79d438a8fca876a94e644d11a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["360b3962efc30aa8b2c39c3087aa36069674bbe7","12cb83a3f761dc612e1ece020f46e1886fc2550e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e0d52d245d8b98e69545a7712a607adee18d6ff2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b31ebc7a867ddea79d438a8fca876a94e644d11a":["360b3962efc30aa8b2c39c3087aa36069674bbe7"],"12cb83a3f761dc612e1ece020f46e1886fc2550e":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"360b3962efc30aa8b2c39c3087aa36069674bbe7":["12cb83a3f761dc612e1ece020f46e1886fc2550e","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b31ebc7a867ddea79d438a8fca876a94e644d11a","360b3962efc30aa8b2c39c3087aa36069674bbe7","e0d52d245d8b98e69545a7712a607adee18d6ff2"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e0d52d245d8b98e69545a7712a607adee18d6ff2":["b31ebc7a867ddea79d438a8fca876a94e644d11a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}