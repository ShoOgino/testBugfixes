{"path":"sandbox/projects/appex/src/java/search/DocumentHandler#process(Map).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/java/search/DocumentHandler#process(Map).mjava","pathOld":"/dev/null","sourceNew":"    public void process(Map metadata) throws IOException\n    {\n        File contentFile = new File((String) metadata.get(\"filePath\"));\n\n        // add the standard fields\n        doc.add(Field.Keyword(\"filePath\", contentFile.toString()));\n        doc.add(Field.Text(\"fileName\", contentFile.getName()));\n        doc.add(Field.Keyword(\"fileLastModifiedDate\", DateField.timeToString(contentFile.lastModified())));\n        doc.add(Field.Keyword(\"fileSize\", String.valueOf(contentFile.length())));\n        doc.add(Field.Text(\"fileFormat\", IOUtils.getFileExtension(contentFile)));\n\n        // check if this is a document from datasource where\n        // custom fields need to be added\n        if (parentDoc == null)\n        {\n            // add the custom fields\n            for (Iterator it = customFields.keySet().iterator(); it.hasNext();)\n            {\n                String field = (String) it.next();\n                String value = (String) metadata.get(field);\n                String type = (String) customFields.get(field);\n                addFieldToDoc(type, field, value);\n            }\n            // Add OBJECT_CLASS_FIELD and OBJECT_IDENTIFIER\n            // to populate the result templates with the proper\n            // objects\n            doc.add(Field.UnIndexed(DataSource.OBJECT_CLASS,\n                                    (String) metadata.get(DataSource.OBJECT_CLASS)));\n            doc.add(Field.Text(DataSource.OBJECT_IDENTIFIER,\n                               (String) metadata.get(DataSource.OBJECT_IDENTIFIER)));\n        }\n        else\n        {\n            for (Iterator it = customFields.keySet().iterator(); it.hasNext();)\n            {\n                String field = (String) it.next();\n                String value = parentDoc.get(field);\n                String type = (String) customFields.get(field);\n                addFieldToDoc(type, field, value);\n            }\n            // Add OBJECT_CLASS_FIELD and OBJECT_IDENTIFIER\n            // to populate the result templates with the proper\n            // objects\n            doc.add(Field.UnIndexed(DataSource.OBJECT_CLASS,\n                                    parentDoc.get(DataSource.OBJECT_CLASS)));\n            doc.add(Field.Text(DataSource.OBJECT_IDENTIFIER,\n                               parentDoc.get(DataSource.OBJECT_IDENTIFIER)));\n        }\n        if (!metadata.containsKey(\"fileContents\"))\n        {\n            String extension = IOUtils.getFileExtension(contentFile);\n            FileContentHandler cHandler = ContentHandlerFactory.getContentHandler(extension);\n            if (cHandler != null)\n            {\n                cHandler.parse(doc, contentFile);\n                if (cHandler.isNested())\n                {\n                    List nestedData = cHandler.getNestedData();\n                    cat.debug(\"Nested data list size:\" + nestedData.size());\n                    for (int i = 0; i < nestedData.size(); i++)\n                    {\n                        Map dataMap = (Map) nestedData.get(i);\n                        DocumentHandler handler = new DocumentHandler(writer, doc);\n                        handler.process(dataMap);\n                    }\n                }\n            }\n            else\n            {\n                cat.warn(\"FileContentHandler not found for \" + contentFile.getName());\n            }\n        }\n        else\n            doc.add(Field.Text(\"fileContents\", (String) metadata.get(\"fileContents\")));\n        addToWriter();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066e7c650bc6be15a2046e12740179ac678d667f","date":1020873157,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/java/search/DocumentHandler#process(Map).mjava","sourceNew":null,"sourceOld":"    public void process(Map metadata) throws IOException\n    {\n        File contentFile = new File((String) metadata.get(\"filePath\"));\n\n        // add the standard fields\n        doc.add(Field.Keyword(\"filePath\", contentFile.toString()));\n        doc.add(Field.Text(\"fileName\", contentFile.getName()));\n        doc.add(Field.Keyword(\"fileLastModifiedDate\", DateField.timeToString(contentFile.lastModified())));\n        doc.add(Field.Keyword(\"fileSize\", String.valueOf(contentFile.length())));\n        doc.add(Field.Text(\"fileFormat\", IOUtils.getFileExtension(contentFile)));\n\n        // check if this is a document from datasource where\n        // custom fields need to be added\n        if (parentDoc == null)\n        {\n            // add the custom fields\n            for (Iterator it = customFields.keySet().iterator(); it.hasNext();)\n            {\n                String field = (String) it.next();\n                String value = (String) metadata.get(field);\n                String type = (String) customFields.get(field);\n                addFieldToDoc(type, field, value);\n            }\n            // Add OBJECT_CLASS_FIELD and OBJECT_IDENTIFIER\n            // to populate the result templates with the proper\n            // objects\n            doc.add(Field.UnIndexed(DataSource.OBJECT_CLASS,\n                                    (String) metadata.get(DataSource.OBJECT_CLASS)));\n            doc.add(Field.Text(DataSource.OBJECT_IDENTIFIER,\n                               (String) metadata.get(DataSource.OBJECT_IDENTIFIER)));\n        }\n        else\n        {\n            for (Iterator it = customFields.keySet().iterator(); it.hasNext();)\n            {\n                String field = (String) it.next();\n                String value = parentDoc.get(field);\n                String type = (String) customFields.get(field);\n                addFieldToDoc(type, field, value);\n            }\n            // Add OBJECT_CLASS_FIELD and OBJECT_IDENTIFIER\n            // to populate the result templates with the proper\n            // objects\n            doc.add(Field.UnIndexed(DataSource.OBJECT_CLASS,\n                                    parentDoc.get(DataSource.OBJECT_CLASS)));\n            doc.add(Field.Text(DataSource.OBJECT_IDENTIFIER,\n                               parentDoc.get(DataSource.OBJECT_IDENTIFIER)));\n        }\n        if (!metadata.containsKey(\"fileContents\"))\n        {\n            String extension = IOUtils.getFileExtension(contentFile);\n            FileContentHandler cHandler = ContentHandlerFactory.getContentHandler(extension);\n            if (cHandler != null)\n            {\n                cHandler.parse(doc, contentFile);\n                if (cHandler.isNested())\n                {\n                    List nestedData = cHandler.getNestedData();\n                    cat.debug(\"Nested data list size:\" + nestedData.size());\n                    for (int i = 0; i < nestedData.size(); i++)\n                    {\n                        Map dataMap = (Map) nestedData.get(i);\n                        DocumentHandler handler = new DocumentHandler(writer, doc);\n                        handler.process(dataMap);\n                    }\n                }\n            }\n            else\n            {\n                cat.warn(\"FileContentHandler not found for \" + contentFile.getName());\n            }\n        }\n        else\n            doc.add(Field.Text(\"fileContents\", (String) metadata.get(\"fileContents\")));\n        addToWriter();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["066e7c650bc6be15a2046e12740179ac678d667f"],"066e7c650bc6be15a2046e12740179ac678d667f":["e3074d05d861bc1436ee03619fdee547f9c51d22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["066e7c650bc6be15a2046e12740179ac678d667f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"066e7c650bc6be15a2046e12740179ac678d667f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}