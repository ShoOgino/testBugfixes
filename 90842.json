{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      lineFileOut.write(title, 0, title.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(date, 0, date.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(body, 0, body.length());\n      lineFileOut.newLine();\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      lineFileOut.write(title, 0, title.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(date, 0, date.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(body, 0, body.length());\n      lineFileOut.newLine();\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9","date":1272391185,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      lineFileOut.write(title, 0, title.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(date, 0, date.length());\n      lineFileOut.write(SEP);\n      lineFileOut.write(body, 0, body.length());\n      lineFileOut.newLine();\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c91ba0c8e209a5598871dd57180532897d9f1a0","date":1272401882,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? NORMALIZER.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WriteLineDocTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    Document doc = docSize > 0 ? docMaker.makeDocument(docSize) : docMaker.makeDocument();\n\n    Matcher matcher = threadNormalizer.get();\n    if (matcher == null) {\n      matcher = Pattern.compile(\"[\\t\\r\\n]+\").matcher(\"\");\n      threadNormalizer.set(matcher);\n    }\n    \n    Field f = doc.getField(DocMaker.BODY_FIELD);\n    String body = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    f = doc.getField(DocMaker.TITLE_FIELD);\n    String title = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n    \n    if (body.length() > 0 || title.length() > 0) {\n      \n      f = doc.getField(DocMaker.DATE_FIELD);\n      String date = f != null ? matcher.reset(f.stringValue()).replaceAll(\" \") : \"\";\n      \n      StringBuilder sb = threadBuffer.get();\n      if (sb == null) {\n        sb = new StringBuilder();\n        threadBuffer.set(sb);\n      }\n      sb.setLength(0);\n      sb.append(title).append(SEP).append(date).append(SEP).append(body);\n      // lineFileOut is a PrintWriter, which synchronizes internally in println.\n      lineFileOut.println(sb.toString());\n    }\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["3c91ba0c8e209a5598871dd57180532897d9f1a0","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["3c91ba0c8e209a5598871dd57180532897d9f1a0"],"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["3c91ba0c8e209a5598871dd57180532897d9f1a0","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"3c91ba0c8e209a5598871dd57180532897d9f1a0":["1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9":["3c91ba0c8e209a5598871dd57180532897d9f1a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3c91ba0c8e209a5598871dd57180532897d9f1a0":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1b0dae17ca94b6f60e3ba756a14fe94b3d9a20f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}