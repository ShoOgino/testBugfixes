{"path":"solr/core/src/test/org/apache/solr/update/MaxSizeAutoCommitTest.MockEventListener#doStuffAndExpectAtLeastOneCommit(CommitTracker,DirectUpdateHandler2,Runnable).mjava","commits":[{"id":"75faf4b1a2755d47e6544206f470bf42a11849dd","date":1543945445,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MaxSizeAutoCommitTest.MockEventListener#doStuffAndExpectAtLeastOneCommit(CommitTracker,DirectUpdateHandler2,Runnable).mjava","pathOld":"/dev/null","sourceNew":"    public void doStuffAndExpectAtLeastOneCommit(final CommitTracker commitTracker,\n                                                 final DirectUpdateHandler2 updateHandler,\n                                                 final Runnable stuff) throws InterruptedException {\n      assertSaneOffers();\n      \n      final int POLL_TIME = 5;\n      final TimeUnit POLL_UNIT = TimeUnit.SECONDS;\n      \n      final int preAutoCommitCount = commitTracker.getCommitCount();\n      log.info(\"Auto-Commit count prior to doing work: {}\", preAutoCommitCount);\n      stuff.run();\n      log.info(\"Work Completed\");\n      \n      int numIters = 0;\n      Long lastPostCommitTimeStampSeen = null;\n      final long startTimeNanos = System.nanoTime();\n      final long cutOffTime = startTimeNanos + TimeUnit.SECONDS.toNanos(300);\n      while (System.nanoTime() < cutOffTime) {\n        numIters++;\n        log.info(\"Polling at most {} {} for expected (post-)commit#{}\", POLL_TIME, POLL_UNIT, numIters);\n        lastPostCommitTimeStampSeen = hard.poll(POLL_TIME, POLL_UNIT);\n        assertNotNull(\"(post-)commit#\" + numIters + \" didn't occur in allowed time frame\",\n                      lastPostCommitTimeStampSeen);\n\n        synchronized (commitTracker) {\n          final int currentAutoCommitCount = commitTracker.getCommitCount() - preAutoCommitCount;\n          final long currentFileSize = updateHandler.getUpdateLog().getCurrentLogSizeFromStream();\n          if ((currentFileSize < MAX_FILE_SIZE) &&\n              (currentAutoCommitCount == numIters) &&\n              ( ! commitTracker.hasPending() )) {\n            // if all of these condiions are met, then we should be completely done\n            assertSaneOffers(); // last minute sanity check\n            return;\n          }\n          // else: log & loop...\n          log.info(\"(Auto-)commits triggered: {}; (post-)commits seen: {}; current tlog file size: {}\",\n                   currentAutoCommitCount, numIters, currentFileSize);\n        }\n      }\n      \n      // if we didn't return already, then we ran out of time\n      fail(\"Exhausted cut off time polling for post-commit events (got \" + numIters + \")\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75faf4b1a2755d47e6544206f470bf42a11849dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75faf4b1a2755d47e6544206f470bf42a11849dd"]},"commit2Childs":{"75faf4b1a2755d47e6544206f470bf42a11849dd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["75faf4b1a2755d47e6544206f470bf42a11849dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}