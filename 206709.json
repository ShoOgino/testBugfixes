{"path":"lucene/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","pathOld":"contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","sourceNew":"  /** Exports a searcher for the index in args[0] named\n   * \"//localhost/Searchable\". */\n  public static void main(String args[]) throws Exception {\n    String indexName = null;\n    \n    if (args != null && args.length == 1)\n      indexName = args[0];\n    \n    if (indexName == null) {\n      System.out.println(\"Usage: org.apache.lucene.search.RemoteSearchable <index>\");\n      return;\n    }\n    \n    // create and install a security manager\n    if (System.getSecurityManager() == null) {\n      System.setSecurityManager(new RMISecurityManager());\n    }\n    \n    Searchable local = new IndexSearcher(FSDirectory.open(new File(indexName)), true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n      \n    // bind the implementation to \"Searchable\"\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  /** Exports a searcher for the index in args[0] named\n   * \"//localhost/Searchable\". */\n  public static void main(String args[]) throws Exception {\n    String indexName = null;\n    \n    if (args != null && args.length == 1)\n      indexName = args[0];\n    \n    if (indexName == null) {\n      System.out.println(\"Usage: org.apache.lucene.search.RemoteSearchable <index>\");\n      return;\n    }\n    \n    // create and install a security manager\n    if (System.getSecurityManager() == null) {\n      System.setSecurityManager(new RMISecurityManager());\n    }\n    \n    Searchable local = new IndexSearcher(FSDirectory.open(new File(indexName)), true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n      \n    // bind the implementation to \"Searchable\"\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Exports a searcher for the index in args[0] named\n   * \"//localhost/Searchable\". */\n  public static void main(String args[]) throws Exception {\n    String indexName = null;\n    \n    if (args != null && args.length == 1)\n      indexName = args[0];\n    \n    if (indexName == null) {\n      System.out.println(\"Usage: org.apache.lucene.search.RemoteSearchable <index>\");\n      return;\n    }\n    \n    // create and install a security manager\n    if (System.getSecurityManager() == null) {\n      System.setSecurityManager(new RMISecurityManager());\n    }\n    \n    Searchable local = new IndexSearcher(FSDirectory.open(new File(indexName)), true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n      \n    // bind the implementation to \"Searchable\"\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Exports a searcher for the index in args[0] named\n   * \"//localhost/Searchable\". */\n  public static void main(String args[]) throws Exception {\n    String indexName = null;\n    \n    if (args != null && args.length == 1)\n      indexName = args[0];\n    \n    if (indexName == null) {\n      System.out.println(\"Usage: org.apache.lucene.search.RemoteSearchable <index>\");\n      return;\n    }\n    \n    // create and install a security manager\n    if (System.getSecurityManager() == null) {\n      System.setSecurityManager(new RMISecurityManager());\n    }\n    \n    Searchable local = new IndexSearcher(FSDirectory.open(new File(indexName)), true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n      \n    // bind the implementation to \"Searchable\"\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/remote/src/java/org/apache/lucene/search/RemoteSearchable#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Exports a searcher for the index in args[0] named\n   * \"//localhost/Searchable\". */\n  public static void main(String args[]) throws Exception {\n    String indexName = null;\n    \n    if (args != null && args.length == 1)\n      indexName = args[0];\n    \n    if (indexName == null) {\n      System.out.println(\"Usage: org.apache.lucene.search.RemoteSearchable <index>\");\n      return;\n    }\n    \n    // create and install a security manager\n    if (System.getSecurityManager() == null) {\n      System.setSecurityManager(new RMISecurityManager());\n    }\n    \n    Searchable local = new IndexSearcher(FSDirectory.open(new File(indexName)), true);\n    RemoteSearchable impl = new RemoteSearchable(local);\n      \n    // bind the implementation to \"Searchable\"\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}