{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testUppercase().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testUppercase().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testUppercase().mjava","sourceNew":"  /** Test a configuration where word starts with one uppercase */\n  public void testUppercase() throws Exception {\n    CharacterRunAutomaton single =\n        new CharacterRunAutomaton(new RegExp(\"[A-Z][a-z]*\").toAutomaton());\n    Analyzer a = new MockAnalyzer(random(), single, false);\n    assertAnalyzesTo(a, \"FooBarBAZ\",\n        new String[] { \"Foo\", \"Bar\", \"B\", \"A\", \"Z\"},\n        new int[] { 0, 3, 6, 7, 8 },\n        new int[] { 3, 6, 7, 8, 9 }\n    );\n    assertAnalyzesTo(a, \"aFooBar\",\n        new String[] { \"Foo\", \"Bar\" },\n        new int[] { 1, 4 },\n        new int[] { 4, 7 }\n    );\n    checkRandomData(random(), a, 100);\n  }\n\n","sourceOld":"  /** Test a configuration where word starts with one uppercase */\n  public void testUppercase() throws Exception {\n    CharacterRunAutomaton single =\n        new CharacterRunAutomaton(new RegExp(\"[A-Z][a-z]*\").toAutomaton());\n    Analyzer a = new MockAnalyzer(random(), single, false);\n    assertAnalyzesTo(a, \"FooBarBAZ\",\n        new String[] { \"Foo\", \"Bar\", \"B\", \"A\", \"Z\"},\n        new int[] { 0, 3, 6, 7, 8 },\n        new int[] { 3, 6, 7, 8, 9 }\n    );\n    assertAnalyzesTo(a, \"aFooBar\",\n        new String[] { \"Foo\", \"Bar\" },\n        new int[] { 1, 4 },\n        new int[] { 4, 7 }\n    );\n    checkRandomData(random(), a, 100);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}