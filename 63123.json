{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","commits":[{"id":"4208defca73410a56697558ea7cad44305fb98d8","date":1346369340,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","pathOld":"/dev/null","sourceNew":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\", \n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\", \n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","pathOld":"/dev/null","sourceNew":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\", \n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\", \n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0","date":1576656084,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","sourceNew":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\",\n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\",\n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","sourceOld":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\", \n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\", \n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testFuncMod().mjava","sourceNew":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\",\n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\",\n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","sourceOld":"  public void testFuncMod() throws Exception {\n    assertFuncEquals(\"mod(5,4)\", \"mod(5, 4)\");\n    assertFuncEquals(\"mod(foo_i,4)\", \"mod(foo_i, 4)\", \n                     \"mod(field('foo_i'), 4)\");\n    assertFuncEquals(\"mod(foo_i,sub(4,field('bar_i')))\", \n                     \"mod(field(foo_i), sub(4,bar_i))\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["4208defca73410a56697558ea7cad44305fb98d8","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4208defca73410a56697558ea7cad44305fb98d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4208defca73410a56697558ea7cad44305fb98d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["4208defca73410a56697558ea7cad44305fb98d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0d1f90e969803cc84174589b5e4a39b7935fecd","4208defca73410a56697558ea7cad44305fb98d8"],"4208defca73410a56697558ea7cad44305fb98d8":["246314af59d76a47fccc31e9494eefee01ec9c00","d0d1f90e969803cc84174589b5e4a39b7935fecd","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}