{"path":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","commits":[{"id":"15fd01fb9d2dfbf352be17f9c0972778ce638bfd","date":1498952169,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    if (IS_WINDOWS) {\n      dataHome = dataHome.replaceFirst(\"^C:\", \"\").replaceAll(\"\\\\\\\\\",\"/\");\n    }\n    assertEquals(expected, dataHome);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"146f23c299dab38fbc3d8d3f24c0e3bb0fd14dc4","date":1498988650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    if (Constants.WINDOWS) {\n      // TODO: find a less-hacky way to assert this!\n      dataHome = dataHome.replaceFirst(\"^[A-Z]:\", \"\").replace(\"\\\\\", \"/\");\n    }\n    assertEquals(expected, dataHome);\n  }\n\n","sourceOld":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    if (IS_WINDOWS) {\n      dataHome = dataHome.replaceFirst(\"^C:\", \"\").replaceAll(\"\\\\\\\\\",\"/\");\n    }\n    assertEquals(expected, dataHome);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3faacf4d66892ad18833d92d382792a5681d94fb","date":1499062554,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","sourceOld":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    if (Constants.WINDOWS) {\n      // TODO: find a less-hacky way to assert this!\n      dataHome = dataHome.replaceFirst(\"^[A-Z]:\", \"\").replace(\"\\\\\", \"/\");\n    }\n    assertEquals(expected, dataHome);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35","date":1499066739,"type":0,"author":"Adrien Grand","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6603c6e525c9b2e1c32eb74e553f9b1c7102bed","date":1500471853,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,CoreContainer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, CoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","sourceOld":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":5,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,CoreContainer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#assertDataHome(String,String,RAMDirectoryFactory,MockCoreContainer,String...).mjava","sourceNew":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, CoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","sourceOld":"  private void assertDataHome(String expected, String instanceDir, RAMDirectoryFactory rdf, MockCoreContainer cc, String... properties) throws IOException {\n    String dataHome = rdf.getDataHome(new CoreDescriptor(\"core_name\", Paths.get(instanceDir), cc.containerProperties, cc.isZooKeeperAware(), properties));\n    assertEquals(Paths.get(expected).toAbsolutePath(), Paths.get(dataHome).toAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3faacf4d66892ad18833d92d382792a5681d94fb":["146f23c299dab38fbc3d8d3f24c0e3bb0fd14dc4"],"15fd01fb9d2dfbf352be17f9c0972778ce638bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6603c6e525c9b2e1c32eb74e553f9b1c7102bed":["3faacf4d66892ad18833d92d382792a5681d94fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["30c8e5574b55d57947e989443dfde611646530ee","d6603c6e525c9b2e1c32eb74e553f9b1c7102bed"],"146f23c299dab38fbc3d8d3f24c0e3bb0fd14dc4":["15fd01fb9d2dfbf352be17f9c0972778ce638bfd"],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3faacf4d66892ad18833d92d382792a5681d94fb"],"6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3faacf4d66892ad18833d92d382792a5681d94fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6603c6e525c9b2e1c32eb74e553f9b1c7102bed"]},"commit2Childs":{"3faacf4d66892ad18833d92d382792a5681d94fb":["d6603c6e525c9b2e1c32eb74e553f9b1c7102bed","30c8e5574b55d57947e989443dfde611646530ee","6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35"],"15fd01fb9d2dfbf352be17f9c0972778ce638bfd":["146f23c299dab38fbc3d8d3f24c0e3bb0fd14dc4"],"d6603c6e525c9b2e1c32eb74e553f9b1c7102bed":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15fd01fb9d2dfbf352be17f9c0972778ce638bfd","30c8e5574b55d57947e989443dfde611646530ee","6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"146f23c299dab38fbc3d8d3f24c0e3bb0fd14dc4":["3faacf4d66892ad18833d92d382792a5681d94fb"],"30c8e5574b55d57947e989443dfde611646530ee":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","6324f236dd5a5430f2ff91ebd6cb3f0ae8d34a35","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}