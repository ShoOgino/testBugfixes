{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void testCirclePointWithin() {\n        GeoCircle c;\n        GeoPoint gp;\n        c = new GeoCircle(0.0,-0.5,0.1);\n        gp = new GeoPoint(0.0,0.0);\n        assertFalse(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.5);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.55);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.45);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(Math.PI * 0.5,0.0);\n        assertFalse(c.isWithin(gp));\n        gp = new GeoPoint(0.0,Math.PI);\n        assertFalse(c.isWithin(gp));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(0.0, -0.5, 0.1);\n    gp = new GeoPoint(0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":"    @Test\n    public void testCirclePointWithin() {\n        GeoCircle c;\n        GeoPoint gp;\n        c = new GeoCircle(0.0,-0.5,0.1);\n        gp = new GeoPoint(0.0,0.0);\n        assertFalse(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.5);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.55);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(0.0,-0.45);\n        assertTrue(c.isWithin(gp));\n        gp = new GeoPoint(Math.PI * 0.5,0.0);\n        assertFalse(c.isWithin(gp));\n        gp = new GeoPoint(0.0,Math.PI);\n        assertFalse(c.isWithin(gp));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(0.0, -0.5, 0.1);\n    gp = new GeoPoint(0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(0.0, -0.5, 0.1);\n    gp = new GeoPoint(0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","bugFix":null,"bugIntro":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":3,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(0.0, -0.5, 0.1);\n    gp = new GeoPoint(0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9908748d960ccb7706a20e81289a656237780b6c","date":1435716223,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.ARC,gp),1e-12);\n    assertEquals(0.12,c.computeOutsideDistance(DistanceStyle.NORMAL,gp),0.01);\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.LINEAR,gp),0.01);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoCircleTest#testCirclePointWithin().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircleTest#testCirclePointWithin().mjava","sourceNew":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.ARC,gp),1e-12);\n    assertEquals(0.12,c.computeOutsideDistance(DistanceStyle.NORMAL,gp),0.01);\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.LINEAR,gp),0.01);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","sourceOld":"  @Test\n  public void testCirclePointWithin() {\n    GeoCircle c;\n    GeoPoint gp;\n    c = new GeoCircle(PlanetModel.SPHERE, 0.0, -0.5, 0.1);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, 0.0);\n    assertFalse(c.isWithin(gp));\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.ARC,gp),1e-12);\n    assertEquals(0.12,c.computeOutsideDistance(DistanceStyle.NORMAL,gp),0.01);\n    assertEquals(0.4,c.computeOutsideDistance(DistanceStyle.LINEAR,gp),0.01);\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.5);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.55);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, -0.45);\n    assertTrue(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, Math.PI * 0.5, 0.0);\n    assertFalse(c.isWithin(gp));\n    gp = new GeoPoint(PlanetModel.SPHERE, 0.0, Math.PI);\n    assertFalse(c.isWithin(gp));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["9908748d960ccb7706a20e81289a656237780b6c"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["851e4197476b684154a7b65f996f535522e67400"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"9908748d960ccb7706a20e81289a656237780b6c":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"fec06d6753751ae302c7d35866763e6cb414112d":["9908748d960ccb7706a20e81289a656237780b6c"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"851e4197476b684154a7b65f996f535522e67400":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"9908748d960ccb7706a20e81289a656237780b6c":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}