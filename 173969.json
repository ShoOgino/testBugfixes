{"path":"solr/core/src/test/org/apache/solr/core/QueryResultKeyTest#testQueryResultKeySortedFilters().mjava","commits":[{"id":"fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c","date":1377117099,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/QueryResultKeyTest#testQueryResultKeySortedFilters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testQueryResultKeySortedFilters() {\n    Query fq1 = new TermQuery(new Term(\"test1\", \"field1\"));\n    Query fq2 = new TermQuery(new Term(\"test2\", \"field2\"));\n\n    Query query = new TermQuery(new Term(\"test3\", \"field3\"));\n    List<Query> filters = new ArrayList<Query>();\n    filters.add(fq1);\n    filters.add(fq2);\n\n    QueryResultKey key = new QueryResultKey(query, filters, null, 0);\n\n    List<Query> newFilters = new ArrayList<Query>();\n    newFilters.add(fq2);\n    newFilters.add(fq1);\n    QueryResultKey newKey = new QueryResultKey(query, newFilters, null, 0);\n\n    assertEquals(key, newKey);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/QueryResultKeyTest#testQueryResultKeySortedFilters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testQueryResultKeySortedFilters() {\n    Query fq1 = new TermQuery(new Term(\"test1\", \"field1\"));\n    Query fq2 = new TermQuery(new Term(\"test2\", \"field2\"));\n\n    Query query = new TermQuery(new Term(\"test3\", \"field3\"));\n    List<Query> filters = new ArrayList<Query>();\n    filters.add(fq1);\n    filters.add(fq2);\n\n    QueryResultKey key = new QueryResultKey(query, filters, null, 0);\n\n    List<Query> newFilters = new ArrayList<Query>();\n    newFilters.add(fq2);\n    newFilters.add(fq1);\n    QueryResultKey newKey = new QueryResultKey(query, newFilters, null, 0);\n\n    assertEquals(key, newKey);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a8ec7bd407ce5ad65fe8d53fd69d9cd597f58f","date":1389311746,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/QueryResultKeyTest#testFiltersOutOfOrder2().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/QueryResultKeyTest#testQueryResultKeySortedFilters().mjava","sourceNew":"  @Test\n  public void testFiltersOutOfOrder2() {\n    Query fq1 = new TermQuery(new Term(\"test1\", \"field1\"));\n    Query fq2 = new TermQuery(new Term(\"test2\", \"field2\"));\n\n    Query query = new TermQuery(new Term(\"test3\", \"field3\"));\n    List<Query> filters = Arrays.asList(fq1, fq2);\n\n    QueryResultKey key = new QueryResultKey(query, filters, null, 0);\n\n    List<Query> newFilters = Arrays.asList(fq2, fq1);\n    QueryResultKey newKey = new QueryResultKey(query, newFilters, null, 0);\n\n    assertKeyEquals(key, newKey);\n  }\n\n","sourceOld":"  @Test\n  public void testQueryResultKeySortedFilters() {\n    Query fq1 = new TermQuery(new Term(\"test1\", \"field1\"));\n    Query fq2 = new TermQuery(new Term(\"test2\", \"field2\"));\n\n    Query query = new TermQuery(new Term(\"test3\", \"field3\"));\n    List<Query> filters = new ArrayList<Query>();\n    filters.add(fq1);\n    filters.add(fq2);\n\n    QueryResultKey key = new QueryResultKey(query, filters, null, 0);\n\n    List<Query> newFilters = new ArrayList<Query>();\n    newFilters.add(fq2);\n    newFilters.add(fq1);\n    QueryResultKey newKey = new QueryResultKey(query, newFilters, null, 0);\n\n    assertEquals(key, newKey);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8a8ec7bd407ce5ad65fe8d53fd69d9cd597f58f":["fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a8ec7bd407ce5ad65fe8d53fd69d9cd597f58f"]},"commit2Childs":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c"],"fb6e31e51d7f836e7a16fbf4d0cf3bbc3a4f6a1c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e8a8ec7bd407ce5ad65fe8d53fd69d9cd597f58f"],"e8a8ec7bd407ce5ad65fe8d53fd69d9cd597f58f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}