{"path":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new PayloadAnalyzer()).setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.optimize();\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bbd254c1506df5299c4df8c148262c7bd6301e","date":1279913113,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(newRandom(), directory, \n        new IndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new MockRAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new MockRAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    Random random = newRandom();\n    directory = newDirectory(random);\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    Random random = newRandom();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(random, TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(new Field(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = new IndexSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"160d004a0e8f5361a446f9d01456aee1c1af20dc","date":1301061642,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15bbd254c1506df5299c4df8c148262c7bd6301e":["c084e47df29de3330311d69dabf515ceaa989512"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["43b04c27924fe393e38e9f0986e32c634f261859"],"c084e47df29de3330311d69dabf515ceaa989512":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["43b04c27924fe393e38e9f0986e32c634f261859","790e1fde4caa765b3faaad3fbcd25c6973450336"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cca56866c19997e28ef073622656669c15210540":["160d004a0e8f5361a446f9d01456aee1c1af20dc"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","790e1fde4caa765b3faaad3fbcd25c6973450336"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["160d004a0e8f5361a446f9d01456aee1c1af20dc","cca56866c19997e28ef073622656669c15210540"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["c084e47df29de3330311d69dabf515ceaa989512","15bbd254c1506df5299c4df8c148262c7bd6301e"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","c084e47df29de3330311d69dabf515ceaa989512"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["d619839baa8ce5503e496b94a9e42ad6f079293f","cca56866c19997e28ef073622656669c15210540"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cca56866c19997e28ef073622656669c15210540"]},"commit2Childs":{"15bbd254c1506df5299c4df8c148262c7bd6301e":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab","29ef99d61cda9641b6250bf9567329a6e65f901d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c084e47df29de3330311d69dabf515ceaa989512":["15bbd254c1506df5299c4df8c148262c7bd6301e","4b103252dee6afa1b6d7a622c773d178788eb85a","5f4e87790277826a2aea119328600dfb07761f32"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","790e1fde4caa765b3faaad3fbcd25c6973450336"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c084e47df29de3330311d69dabf515ceaa989512","5f4e87790277826a2aea119328600dfb07761f32"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","3242a09f703274d3b9283f2064a1a33064b53a1b"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","cca56866c19997e28ef073622656669c15210540","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d619839baa8ce5503e496b94a9e42ad6f079293f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}