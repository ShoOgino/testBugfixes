{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, LowerCaseFilter, and StopFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, LowerCaseFilter, and StopFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream built from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, LowerCaseFilter, and StopFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream build from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, LowerCaseFilter, and StopFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a TokenStream which tokenizes all the text in the provided Reader.\n\t *\n\t * @return  A TokenStream built from a StandardTokenizer filtered with\n\t * \t\t\tStandardFilter, LowerCaseFilter, and StopFilter\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter(false, result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n\t\tTokenStream result = new StandardTokenizer( reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter(false, result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\t@Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\t@Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\t@Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5","date":1259495978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link CzechStemFilter} (only if version is\n   *         >= LUCENE_31)\n   */\n  @Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\tif (matchVersion.onOrAfter(Version.LUCENE_31))\n\t\t  result = new CzechStemFilter(result);\n\t\treturn result;\n\t}\n\n","sourceOld":"\t/**\n\t * Creates a {@link TokenStream} which tokenizes all the text in the provided {@link Reader}.\n\t *\n\t * @return  A {@link TokenStream} built from a {@link StandardTokenizer} filtered with\n\t * \t\t\t{@link StandardFilter}, {@link LowerCaseFilter}, and {@link StopFilter}\n\t */\n\t@Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link CzechStemFilter} (only if version is\n   *         >= LUCENE_31)\n   */\n  @Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( matchVersion, result, stoptable );\n\t\tif (matchVersion.onOrAfter(Version.LUCENE_31))\n\t\t  result = new CzechStemFilter(result);\n\t\treturn result;\n\t}\n\n","sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link CzechStemFilter} (only if version is\n   *         >= LUCENE_31)\n   */\n  @Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                                         result, stoptable );\n\t\tif (matchVersion.onOrAfter(Version.LUCENE_31))\n\t\t  result = new CzechStemFilter(result);\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#tokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a {@link TokenStream} which tokenizes all the text in the provided\n   * {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from a {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link CzechStemFilter} (only if version is\n   *         >= LUCENE_31)\n   */\n  @Override\n\tpublic final TokenStream tokenStream( String fieldName, Reader reader ) {\n                TokenStream result = new StandardTokenizer( matchVersion, reader );\n\t\tresult = new StandardFilter( result );\n\t\tresult = new LowerCaseFilter( matchVersion, result );\n\t\tresult = new StopFilter( matchVersion, result, stoptable );\n\t\tif (matchVersion.onOrAfter(Version.LUCENE_31))\n\t\t  result = new CzechStemFilter(result);\n\t\treturn result;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"ddc5fbfd4c64963aba52713a4496522540294d69":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["ddc5fbfd4c64963aba52713a4496522540294d69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}