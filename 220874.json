{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","commits":[{"id":"c0716ddfa41d3662d014c42086a700ad78fc5dcb","date":1275676935,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }        \n\n","sourceOld":null,"bugFix":null,"bugIntro":["8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":null,"sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5","date":1290247889,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }        \n\n","bugFix":["c0716ddfa41d3662d014c42086a700ad78fc5dcb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }        \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3161e3ffcf20c09a22504a589d4d9bd273e11e33","date":1295142360,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","pathOld":"/dev/null","sourceNew":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment();\n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) &&\n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3","date":1297940445,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":null,"sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":null,"sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment(); \n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) && \n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge).mjava","sourceNew":null,"sourceOld":"  private synchronized void setMergeDocStoreIsCompoundFile(MergePolicy.OneMerge merge) {\n    final String mergeDocStoreSegment = merge.info.getDocStoreSegment();\n    if (mergeDocStoreSegment != null && !merge.info.getDocStoreIsCompoundFile()) {\n      final int size = segmentInfos.size();\n      for(int i=0;i<size;i++) {\n        final SegmentInfo info = segmentInfos.info(i);\n        final String docStoreSegment = info.getDocStoreSegment();\n        if (docStoreSegment != null &&\n            docStoreSegment.equals(mergeDocStoreSegment) &&\n            info.getDocStoreIsCompoundFile()) {\n          merge.info.setDocStoreIsCompoundFile(true);\n          break;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3":["8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"c0716ddfa41d3662d014c42086a700ad78fc5dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["3bb13258feba31ab676502787ab2e1779f129b7a","e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3"],"3161e3ffcf20c09a22504a589d4d9bd273e11e33":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5":["c0716ddfa41d3662d014c42086a700ad78fc5dcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["3161e3ffcf20c09a22504a589d4d9bd273e11e33","e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3"],"3bb13258feba31ab676502787ab2e1779f129b7a":["c0716ddfa41d3662d014c42086a700ad78fc5dcb","8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["c0716ddfa41d3662d014c42086a700ad78fc5dcb"]},"commit2Childs":{"e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0716ddfa41d3662d014c42086a700ad78fc5dcb":["8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5","3bb13258feba31ab676502787ab2e1779f129b7a","833a7987bc1c94455fde83e3311f72bddedcfb93"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"3161e3ffcf20c09a22504a589d4d9bd273e11e33":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"8cac9bbcf5acbef2d0d83f6e9e32a22d71301db5":["e69553ac9cbe3b2693b93c2fb0c211529b8ee4c3","3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0716ddfa41d3662d014c42086a700ad78fc5dcb"],"3bb13258feba31ab676502787ab2e1779f129b7a":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"833a7987bc1c94455fde83e3311f72bddedcfb93":["3161e3ffcf20c09a22504a589d4d9bd273e11e33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}