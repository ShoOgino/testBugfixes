{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","commits":[{"id":"739747d2d107745148aac3687c9c797f1b97c50b","date":1521639903,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","pathOld":"/dev/null","sourceNew":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      }\n      else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","pathOld":"/dev/null","sourceNew":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      }\n      else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89b8d38d08ee2b91459a65e16393722e4548f37c","date":1521980569,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","sourceNew":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      } else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","sourceOld":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      }\n      else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91286985ff2a4aea4ce949a9bd6dc750db6c207a","date":1521994854,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","sourceNew":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      } else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","sourceOld":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      }\n      else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7836a9b132efc1162fb9d817b3e766f0a82212be","date":1543916862,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/GraphTokenFilter#nextTokenInStream(Token).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/FixedShingleFilter#nextTokenInStream(Token).mjava","sourceNew":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (this.trailingPositions != -1) {\n      // already hit the end\n      return null;\n    }\n    if (input.incrementToken() == false) {\n      input.end();\n      trailingPositions = posIncAtt.getPositionIncrement();\n      finalOffsets = offsetAtt.endOffset();\n      return null;\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","sourceOld":"  private Token nextTokenInStream(Token token) throws IOException {\n    if (token != null && token.nextToken != null) {\n      return token.nextToken;\n    }\n    if (input.incrementToken() == false) {\n      finishInnerStream();\n      if (token == null) {\n        return endToken;\n      } else {\n        token.nextToken = endToken;\n        return endToken;\n      }\n    }\n    if (token == null) {\n      return newToken();\n    }\n    token.nextToken = newToken();\n    return token.nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","739747d2d107745148aac3687c9c797f1b97c50b"],"91286985ff2a4aea4ce949a9bd6dc750db6c207a":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","89b8d38d08ee2b91459a65e16393722e4548f37c"],"739747d2d107745148aac3687c9c797f1b97c50b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7836a9b132efc1162fb9d817b3e766f0a82212be":["91286985ff2a4aea4ce949a9bd6dc750db6c207a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89b8d38d08ee2b91459a65e16393722e4548f37c":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7836a9b132efc1162fb9d817b3e766f0a82212be"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["91286985ff2a4aea4ce949a9bd6dc750db6c207a","89b8d38d08ee2b91459a65e16393722e4548f37c"],"91286985ff2a4aea4ce949a9bd6dc750db6c207a":["7836a9b132efc1162fb9d817b3e766f0a82212be"],"739747d2d107745148aac3687c9c797f1b97c50b":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","739747d2d107745148aac3687c9c797f1b97c50b"],"7836a9b132efc1162fb9d817b3e766f0a82212be":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"89b8d38d08ee2b91459a65e16393722e4548f37c":["91286985ff2a4aea4ce949a9bd6dc750db6c207a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}