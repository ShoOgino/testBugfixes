{"path":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","commits":[{"id":"06805da26538ed636bd89b10c2699cc3834032ae","date":1395132972,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    final FixedBitSet docsWithField = this.docsWithField;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n        \n        boolean tmpBool = docsWithField.get(j);\n        if (docsWithField.get(i)) {\n          docsWithField.set(j);\n        } else {\n          docsWithField.clear(j);\n        }\n        if (tmpBool) {\n          docsWithField.set(i);\n        } else {\n          docsWithField.clear(i);\n        }\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docsWithField, docs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","date":1401116050,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docs);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    final FixedBitSet docsWithField = this.docsWithField;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n        \n        boolean tmpBool = docsWithField.get(j);\n        if (docsWithField.get(i)) {\n          docsWithField.set(j);\n        } else {\n          docsWithField.clear(j);\n        }\n        if (tmpBool) {\n          docsWithField.set(i);\n        } else {\n          docsWithField.clear(i);\n        }\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docsWithField, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  public Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  public Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  public Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    final PagedMutable docs = this.docs;\n    final PagedGrowableWriter values = this.values;\n    new InPlaceMergeSorter() {\n      @Override\n      protected void swap(int i, int j) {\n        long tmpDoc = docs.get(j);\n        docs.set(j, docs.get(i));\n        docs.set(i, tmpDoc);\n        \n        long tmpVal = values.get(j);\n        values.set(j, values.get(i));\n        values.set(i, tmpVal);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        int x = (int) docs.get(i);\n        int y = (int) docs.get(j);\n        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n      }\n    }.sort(0, size);\n    \n    return new Iterator(size, values, docs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e129bd6cb34a236558a49edf108a49d5c15e0e1","date":1525081316,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f42883db49d143abc1a0f176ba47e3388dafb608","date":1525083166,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  public Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62389a101dca1b996a7d6ca10d23bfb747924e06","date":1525274565,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  Iterator iterator() {\n    ensureFinished();\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  Iterator iterator() {\n    if (finished == false) {\n      throw new IllegalStateException(\"call finish first\");\n    }\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbaff854eb04c7da5e30a9ade1644b7fbf7c3b9","date":1544461568,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates#iterator().mjava","sourceNew":"  @Override\n  Iterator iterator() {\n    ensureFinished();\n    return new Iterator(size, minValue, values, docs, delGen);\n  }\n\n","sourceOld":"  @Override\n  Iterator iterator() {\n    ensureFinished();\n    return new Iterator(size, values, docs, delGen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6dbaff854eb04c7da5e30a9ade1644b7fbf7c3b9":["62389a101dca1b996a7d6ca10d23bfb747924e06"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62389a101dca1b996a7d6ca10d23bfb747924e06":["f42883db49d143abc1a0f176ba47e3388dafb608"],"06805da26538ed636bd89b10c2699cc3834032ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f42883db49d143abc1a0f176ba47e3388dafb608":["28288370235ed02234a64753cdbf0c6ec096304a","7e129bd6cb34a236558a49edf108a49d5c15e0e1"],"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7":["06805da26538ed636bd89b10c2699cc3834032ae"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dbaff854eb04c7da5e30a9ade1644b7fbf7c3b9"]},"commit2Childs":{"6dbaff854eb04c7da5e30a9ade1644b7fbf7c3b9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"7e129bd6cb34a236558a49edf108a49d5c15e0e1":["f42883db49d143abc1a0f176ba47e3388dafb608"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06805da26538ed636bd89b10c2699cc3834032ae"],"62389a101dca1b996a7d6ca10d23bfb747924e06":["6dbaff854eb04c7da5e30a9ade1644b7fbf7c3b9"],"f42883db49d143abc1a0f176ba47e3388dafb608":["62389a101dca1b996a7d6ca10d23bfb747924e06"],"06805da26538ed636bd89b10c2699cc3834032ae":["30d3ec601cbd11cf056b7336f0e03f688ebcd9f7"],"30d3ec601cbd11cf056b7336f0e03f688ebcd9f7":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["7e129bd6cb34a236558a49edf108a49d5c15e0e1","f42883db49d143abc1a0f176ba47e3388dafb608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}