{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","commits":[{"id":"df05c92db04724e97f8298302f2aaf06f927589f","date":1483040356,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n\n    if(eof != null) {\n      return eof;\n    }\n\n    while(true) {\n      Tuple tuple  = stream.read();\n      if(tuple.EOF) {\n        eof = tuple;\n        long end = new Date().getTime();\n        Tuple t = new Tuple(new HashMap());\n        t.put(\"nullCount\", count);\n        t.put(\"timer\", end-start);\n        return t;\n      } else {\n        ++count;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n\n    if(eof != null) {\n      return eof;\n    }\n\n    while(true) {\n      Tuple tuple  = stream.read();\n      if(tuple.EOF) {\n        eof = tuple;\n        long end = new Date().getTime();\n        Tuple t = new Tuple(new HashMap());\n        t.put(\"nullCount\", count);\n        t.put(\"timer\", end-start);\n        return t;\n      } else {\n        ++count;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n\n    if(eof != null) {\n      return eof;\n    }\n\n    while(true) {\n      Tuple tuple  = stream.read();\n      if(tuple.EOF) {\n        eof = tuple;\n        long end = new Date().getTime();\n        Tuple t = new Tuple(new HashMap());\n        t.put(\"nullCount\", count);\n        t.put(\"timer\", end-start);\n        return t;\n      } else {\n        ++count;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/NullStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n\n    if(eof != null) {\n      return eof;\n    }\n\n    while(true) {\n      Tuple tuple  = stream.read();\n      if(tuple.EOF) {\n        eof = tuple;\n        long end = new Date().getTime();\n        Tuple t = new Tuple();\n        t.put(\"nullCount\", count);\n        t.put(\"timer\", end-start);\n        return t;\n      } else {\n        ++count;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n\n    if(eof != null) {\n      return eof;\n    }\n\n    while(true) {\n      Tuple tuple  = stream.read();\n      if(tuple.EOF) {\n        eof = tuple;\n        long end = new Date().getTime();\n        Tuple t = new Tuple(new HashMap());\n        t.put(\"nullCount\", count);\n        t.put(\"timer\", end-start);\n        return t;\n      } else {\n        ++count;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","df05c92db04724e97f8298302f2aaf06f927589f"],"df05c92db04724e97f8298302f2aaf06f927589f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"804a8d5358fe7b7563b85ee7838714d720b89272":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["804a8d5358fe7b7563b85ee7838714d720b89272","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"df05c92db04724e97f8298302f2aaf06f927589f":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de0b5d8cac74be1676bcc2f805bc0d0630176659","df05c92db04724e97f8298302f2aaf06f927589f","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}