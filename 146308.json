{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteAll().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteAll().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteAll().mjava","sourceNew":"  // test deleteAll()\n  public void testDeleteAll() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir,\n                                           new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    modifier.setMaxBufferedDocs(2);\n    modifier.setMaxBufferedDeleteTerms(2);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 7; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.commit();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add 1 doc (so we will have something buffered)\n    addDoc(modifier, 99, value);\n\n    // Delete all\n    modifier.deleteAll();\n\n    // Delete all shouldn't be on disk yet\n    reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add a doc and update a doc (after the deleteAll, before the commit)\n    addDoc(modifier, 101, value);\n    updateDoc(modifier, 102, value);\n\n    // commit the delete all\n    modifier.commit();\n\n    // Validate there are no docs left\n    reader = IndexReader.open(dir, true);\n    assertEquals(2, reader.numDocs());\n    reader.close();\n\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  // test deleteAll()\n  public void testDeleteAll() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir,\n                                           new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    modifier.setMaxBufferedDocs(2);\n    modifier.setMaxBufferedDeleteTerms(2);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 7; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.commit();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add 1 doc (so we will have something buffered)\n    addDoc(modifier, 99, value);\n\n    // Delete all\n    modifier.deleteAll();\n\n    // Delete all shouldn't be on disk yet\n    reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add a doc and update a doc (after the deleteAll, before the commit)\n    addDoc(modifier, 101, value);\n    updateDoc(modifier, 102, value);\n\n    // commit the delete all\n    modifier.commit();\n\n    // Validate there are no docs left\n    reader = IndexReader.open(dir, true);\n    assertEquals(2, reader.numDocs());\n    reader.close();\n\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteAll().mjava","sourceNew":null,"sourceOld":"  // test deleteAll()\n  public void testDeleteAll() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir,\n                                           new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    modifier.setMaxBufferedDocs(2);\n    modifier.setMaxBufferedDeleteTerms(2);\n\n    int id = 0;\n    int value = 100;\n\n    for (int i = 0; i < 7; i++) {\n      addDoc(modifier, ++id, value);\n    }\n    modifier.commit();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add 1 doc (so we will have something buffered)\n    addDoc(modifier, 99, value);\n\n    // Delete all\n    modifier.deleteAll();\n\n    // Delete all shouldn't be on disk yet\n    reader = IndexReader.open(dir, true);\n    assertEquals(7, reader.numDocs());\n    reader.close();\n\n    // Add a doc and update a doc (after the deleteAll, before the commit)\n    addDoc(modifier, 101, value);\n    updateDoc(modifier, 102, value);\n\n    // commit the delete all\n    modifier.commit();\n\n    // Validate there are no docs left\n    reader = IndexReader.open(dir, true);\n    assertEquals(2, reader.numDocs());\n    reader.close();\n\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}