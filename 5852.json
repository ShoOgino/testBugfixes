{"path":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","commits":[{"id":"4cb48b0969187aad3e0c6befa65e4421e1e1f667","date":1399982311,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldSelectors#testMiddleMinMissingLast().mjava","sourceNew":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSortField.Selector.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldSelectors#testMiddleMinMissingLast().mjava","sourceNew":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSortField.Selector.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortFieldSelectors#testMiddleMinMissingLast().mjava","sourceNew":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSortField.Selector.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    assertNoFieldCaches();\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","sourceNew":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSortedSetSelector#testMiddleMinMissingLast().mjava","sourceNew":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits.value);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMiddleMinMissingLast() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"a\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"b\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"c\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"d\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    // slow wrapper does not support random access ordinals (there is no need for that!)\n    IndexSearcher searcher = newSearcher(ir, false);\n    SortField sortField = new SortedSetSortField(\"value\", false, SortedSetSelector.Type.MIDDLE_MIN);\n    sortField.setMissingValue(SortField.STRING_LAST);\n    Sort sort = new Sort(sortField);\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    // 'b' comes before 'c'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    // null comes last\n    assertEquals(\"3\", searcher.doc(td.scoreDocs[2].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cb48b0969187aad3e0c6befa65e4421e1e1f667"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cb48b0969187aad3e0c6befa65e4421e1e1f667":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["d0ef034a4f10871667ae75181537775ddcf8ade4","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93dd449115a9247533e44bab47e8429e5dccbc6d","4cb48b0969187aad3e0c6befa65e4421e1e1f667","56572ec06f1407c066d6b7399413178b33176cd8"],"4cb48b0969187aad3e0c6befa65e4421e1e1f667":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}