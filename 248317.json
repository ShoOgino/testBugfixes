{"path":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(new Field(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    input = input.reopen(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"f\", i + \" \" + i, Field.Store.YES, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n    IndexReader inputOld = input;\n    input = input.reopen(true);\n    inputOld.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.close();\n    input = IndexReader.open(dir, false);\n    // delete the last doc\n    input.deleteDocument(input.maxDoc() - 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a118fcb91dbf1aea61227687b4241d7b136558d","date":1323554852,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestMultiPassIndexSplitter#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    Document doc;\n    for (int i = 0; i < NUM_DOCS; i++) {\n      doc = new Document();\n      doc.add(newField(\"id\", i + \"\", StringField.TYPE_STORED));\n      doc.add(newField(\"f\", i + \" \" + i, TextField.TYPE_STORED));\n      w.addDocument(doc);\n      if (i%3==0) w.commit();\n    }\n    w.commit();\n    w.deleteDocuments(new Term(\"id\", \"\" + (NUM_DOCS-1)));\n    w.close();\n    input = IndexReader.open(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["8a8259c922a83abc544609227a60d48e5ee93e7e","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7a118fcb91dbf1aea61227687b4241d7b136558d"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","43b04c27924fe393e38e9f0986e32c634f261859"],"c19f985e36a65cc969e8e564fe337a0d41512075":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["c19f985e36a65cc969e8e564fe337a0d41512075"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["43b04c27924fe393e38e9f0986e32c634f261859","c19f985e36a65cc969e8e564fe337a0d41512075"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"7a118fcb91dbf1aea61227687b4241d7b136558d":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["45669a651c970812a680841b97a77cce06af559f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["8a8259c922a83abc544609227a60d48e5ee93e7e","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["7a118fcb91dbf1aea61227687b4241d7b136558d"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"43b04c27924fe393e38e9f0986e32c634f261859":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d"],"c19f985e36a65cc969e8e564fe337a0d41512075":["01e5948db9a07144112d2f08f28ca2e3cd880348","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["f2c5f0cb44df114db4228c8f77861714b5cabaea","45669a651c970812a680841b97a77cce06af559f"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1509f151d7692d84fae414b2b799ac06ba60fcb4","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7a118fcb91dbf1aea61227687b4241d7b136558d":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"962d04139994fce5193143ef35615499a9a96d78":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7a118fcb91dbf1aea61227687b4241d7b136558d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"45669a651c970812a680841b97a77cce06af559f":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}