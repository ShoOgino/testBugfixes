{"path":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","commits":[{"id":"c5f8e44d5e9627993851287f67e8360a36cb302a","date":1132032532,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","pathOld":"/dev/null","sourceNew":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small,\n                                             new WhitespaceAnalyzer(),\n                                             true);\n        \n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small,\n                                             new WhitespaceAnalyzer(),\n                                             true);\n        \n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.TOKENIZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small,\n                                             new WhitespaceAnalyzer(),\n                                             true);\n        \n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small, new WhitespaceAnalyzer(), true, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n\n      for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.TOKENIZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small,\n                                             new WhitespaceAnalyzer(),\n                                             true);\n        \n        for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.TOKENIZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","sourceNew":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small, new WhitespaceAnalyzer(), true, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n\n      for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","sourceOld":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small, new WhitespaceAnalyzer(), true, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n\n      for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.UN_TOKENIZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.TOKENIZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/TestConstantScoreRangeQuery#setUp().mjava","sourceNew":null,"sourceOld":"    public void setUp() throws Exception {\n        super.setUp();\n        \n        String[] data = new String [] {\n            \"A 1 2 3 4 5 6\",\n            \"Z       4 5 6\",\n            null,\n            \"B   2   4 5 6\",\n            \"Y     3   5 6\",\n            null,\n            \"C     3     6\",\n            \"X       4 5 6\"\n        };\n        \n        small = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(small, new WhitespaceAnalyzer(), true, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n\n      for (int i = 0; i < data.length; i++) {\n            Document doc = new Document();\n            doc.add(new Field(\"id\", String.valueOf(i), Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"id\",String.valueOf(i)));\n            doc.add(new Field(\"all\", \"all\", Field.Store.YES, Field.Index.NOT_ANALYZED));//Field.Keyword(\"all\",\"all\"));\n            if (null != data[i]) {\n                doc.add(new Field(\"data\", data[i], Field.Store.YES, Field.Index.ANALYZED));//Field.Text(\"data\",data[i]));\n            }\n            writer.addDocument(doc);\n        }\n        \n        writer.optimize();\n        writer.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c5f8e44d5e9627993851287f67e8360a36cb302a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["c5f8e44d5e9627993851287f67e8360a36cb302a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"]},"commit2Childs":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"c5f8e44d5e9627993851287f67e8360a36cb302a":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5f8e44d5e9627993851287f67e8360a36cb302a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}