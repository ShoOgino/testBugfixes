{"path":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","commits":[{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/SimpleStandardTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fill(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fill(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"224555f245128127dc8d161673eb9e867d67857c","date":1290782170,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fill(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fill(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","pathOld":"/dev/null","sourceNew":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":null,"sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":null,"sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/FixedGapTermsIndexReader.FieldIndexReader.CoreFieldIndex#fillResult(int,TermsIndexResult).mjava","sourceNew":null,"sourceOld":"      private void fillResult(int idx, TermsIndexResult result) {\n        final long offset = termOffsets.get(idx);\n        final int length = (int) (termOffsets.get(1+idx) - offset);\n        termBytesReader.fillSlice(result.term, termBytesStart + offset, length);\n        result.position = idx * totalIndexInterval;\n        result.offset = termsStart + termsDictOffsets.get(idx);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["3bb13258feba31ab676502787ab2e1779f129b7a","56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["224555f245128127dc8d161673eb9e867d67857c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","224555f245128127dc8d161673eb9e867d67857c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["99cf56f3a650b908f7017a72f9d23940418f8a52","224555f245128127dc8d161673eb9e867d67857c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56da903869515527852ee21ea7ef7bfe414cd40d"],"224555f245128127dc8d161673eb9e867d67857c":["99cf56f3a650b908f7017a72f9d23940418f8a52"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["70ad682703b8585f5d0a637efec044d57ec05efb"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["3bb13258feba31ab676502787ab2e1779f129b7a","224555f245128127dc8d161673eb9e867d67857c"],"224555f245128127dc8d161673eb9e867d67857c":["56da903869515527852ee21ea7ef7bfe414cd40d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}