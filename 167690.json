{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e08ecdf9a28c81716b89f59f7db35cda7609a09","date":1408297873,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find() ? m.replaceAll(replaceWith) : value;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find()? m.replaceAll(replaceWith): null;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":["50a4e892818744c78e8bcea7805a5fa5950ae185"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/RegexTransformer#process(String,String,String,String,String,String).mjava","sourceNew":null,"sourceOld":"  private Object process(String col, String reStr, String splitBy,\n                         String replaceWith, String value, String groupNames) {\n    if (splitBy != null) {\n      return readBySplit(splitBy, value);\n    } else if (replaceWith != null) {\n      Pattern p = getPattern(reStr);\n      Matcher m = p.matcher(value);\n      return m.find() ? m.replaceAll(replaceWith) : value;\n    } else {\n      return readfromRegExp(reStr, value, col, groupNames);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["4e08ecdf9a28c81716b89f59f7db35cda7609a09"],"4e08ecdf9a28c81716b89f59f7db35cda7609a09":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e08ecdf9a28c81716b89f59f7db35cda7609a09":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4e08ecdf9a28c81716b89f59f7db35cda7609a09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}