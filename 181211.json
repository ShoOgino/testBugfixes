{"path":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","sourceNew":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","sourceNew":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e9ad156d6e96d7d7b6d8015f686c50b1142760a","date":1378497777,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","sourceNew":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    if (maxClusters > 0) {\n      documents = documents.subList(0, maxClusters);\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","date":1478271720,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","sourceNew":"  @Override\n  public void process() throws ProcessingException {\n    clusters = new ArrayList<>();\n    if (documents == null) {\n      return;\n    }\n\n    if (maxClusters > 0) {\n      documents = documents.subList(0, maxClusters);\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    if (maxClusters > 0) {\n      documents = documents.subList(0, maxClusters);\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/MockClusteringAlgorithm#process().mjava","sourceNew":"  @Override\n  public void process() throws ProcessingException {\n    clusters = new ArrayList<>();\n    if (documents == null) {\n      return;\n    }\n\n    if (maxClusters > 0) {\n      documents = documents.subList(0, maxClusters);\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process() throws ProcessingException {\n    clusters = Lists.newArrayList();\n    if (documents == null) {\n      return;\n    }\n\n    if (maxClusters > 0) {\n      documents = documents.subList(0, maxClusters);\n    }\n\n    int documentIndex = 1;\n    for (Document document : documents) {\n      StringBuilder label = new StringBuilder(\"Cluster \" + documentIndex);\n      Cluster cluster = createCluster(label.toString(), documentIndex, document);\n      clusters.add(cluster);\n      for (int i = 1; i <= depth; i++) {\n        label.append(\".\");\n        label.append(i);\n        Cluster newCluster = createCluster(label.toString(), documentIndex, document);\n        cluster.addSubclusters(createCluster(label.toString(), documentIndex, document), newCluster);\n        cluster = newCluster;\n      }\n      documentIndex++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e9ad156d6e96d7d7b6d8015f686c50b1142760a":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["7e9ad156d6e96d7d7b6d8015f686c50b1142760a"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["7e9ad156d6e96d7d7b6d8015f686c50b1142760a","7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"]},"commit2Childs":{"7e9ad156d6e96d7d7b6d8015f686c50b1142760a":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7e9ad156d6e96d7d7b6d8015f686c50b1142760a"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}