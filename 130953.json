{"path":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,byte[],int,int).mjava","commits":[{"id":"4c94837f36779069fd9b6b70e462b57515473d88","date":1249677298,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Overriding implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   * <p>\n   * The default implementation returns 1.\n   *\n   * @param docId The docId currently being scored.  If this value is {@link #NO_DOC_ID_PROVIDED}, then it should be assumed that the PayloadQuery implementation does not provide document information\n   * @param fieldName The fieldName of the term this payload belongs to\n   * @param payload The payload byte array to be scored\n   * @param offset The offset into the payload array\n   * @param length The length in the array\n   * @return An implementation dependent float to be used as a scoring factor\n   *\n   */\n  public float scorePayload(int docId, String fieldName, byte [] payload, int offset, int length)\n  {\n    //Do nothing\n    return 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dedee37c4ed56f890e58e4b060bcca549990cc21","date":1249689445,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,byte[],int,int).mjava","sourceNew":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Overriding implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   * <p>\n   * The default implementation returns 1.\n   *\n   * @param docId The docId currently being scored.  If this value is {@link #NO_DOC_ID_PROVIDED}, then it should be assumed that the PayloadQuery implementation does not provide document information\n   * @param fieldName The fieldName of the term this payload belongs to\n   * @param payload The payload byte array to be scored\n   * @param offset The offset into the payload array\n   * @param length The length in the array\n   * @return An implementation dependent float to be used as a scoring factor\n   *\n   */\n  public float scorePayload(int docId, String fieldName, byte [] payload, int offset, int length)\n  {\n    //TODO: When removing the deprecated scorePayload above, set this to return 1\n    return scorePayload(fieldName, payload, offset, length);\n  }\n\n","sourceOld":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Overriding implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   * <p>\n   * The default implementation returns 1.\n   *\n   * @param docId The docId currently being scored.  If this value is {@link #NO_DOC_ID_PROVIDED}, then it should be assumed that the PayloadQuery implementation does not provide document information\n   * @param fieldName The fieldName of the term this payload belongs to\n   * @param payload The payload byte array to be scored\n   * @param offset The offset into the payload array\n   * @param length The length in the array\n   * @return An implementation dependent float to be used as a scoring factor\n   *\n   */\n  public float scorePayload(int docId, String fieldName, byte [] payload, int offset, int length)\n  {\n    //Do nothing\n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25dd1cb2e42d3840232ff4a1c39639386facc7ef","date":1250252059,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,int,int,byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#scorePayload(int,String,byte[],int,int).mjava","sourceNew":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Overriding implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   * <p>\n   * The default implementation returns 1.\n   *\n   * @param docId The docId currently being scored.  If this value is {@link #NO_DOC_ID_PROVIDED}, then it should be assumed that the PayloadQuery implementation does not provide document information\n   * @param fieldName The fieldName of the term this payload belongs to\n   * @param start The start position of the payload\n   * @param end The end position of the payload\n   * @param payload The payload byte array to be scored\n   * @param offset The offset into the payload array\n   * @param length The length in the array\n   * @return An implementation dependent float to be used as a scoring factor\n   *\n   */\n  public float scorePayload(int docId, String fieldName, int start, int end, byte [] payload, int offset, int length)\n  {\n    //TODO: When removing the deprecated scorePayload above, set this to return 1\n    return scorePayload(fieldName, payload, offset, length);\n  }\n\n","sourceOld":"  /**\n   * Calculate a scoring factor based on the data in the payload.  Overriding implementations\n   * are responsible for interpreting what is in the payload.  Lucene makes no assumptions about\n   * what is in the byte array.\n   * <p>\n   * The default implementation returns 1.\n   *\n   * @param docId The docId currently being scored.  If this value is {@link #NO_DOC_ID_PROVIDED}, then it should be assumed that the PayloadQuery implementation does not provide document information\n   * @param fieldName The fieldName of the term this payload belongs to\n   * @param payload The payload byte array to be scored\n   * @param offset The offset into the payload array\n   * @param length The length in the array\n   * @return An implementation dependent float to be used as a scoring factor\n   *\n   */\n  public float scorePayload(int docId, String fieldName, byte [] payload, int offset, int length)\n  {\n    //TODO: When removing the deprecated scorePayload above, set this to return 1\n    return scorePayload(fieldName, payload, offset, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"25dd1cb2e42d3840232ff4a1c39639386facc7ef":["dedee37c4ed56f890e58e4b060bcca549990cc21"],"4c94837f36779069fd9b6b70e462b57515473d88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dedee37c4ed56f890e58e4b060bcca549990cc21":["4c94837f36779069fd9b6b70e462b57515473d88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25dd1cb2e42d3840232ff4a1c39639386facc7ef"]},"commit2Childs":{"25dd1cb2e42d3840232ff4a1c39639386facc7ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4c94837f36779069fd9b6b70e462b57515473d88":["dedee37c4ed56f890e58e4b060bcca549990cc21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c94837f36779069fd9b6b70e462b57515473d88"],"dedee37c4ed56f890e58e4b060bcca549990cc21":["25dd1cb2e42d3840232ff4a1c39639386facc7ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}