{"path":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","sourceOld":"  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"150488c1317972164a9a824be05b1ba2ba0fc68c","date":1284316090,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","sourceOld":"  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","sourceOld":"  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112629f1dfd1451722c6047bcf593e6efc96f5f4","date":1309910887,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n    int[] expDocNrs = {2, 3};\n    queriesTest(query, expDocNrs);\n  }\n\n","sourceOld":"  @Test\n  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n    int[] expDocNrs = {2, 3};\n    queriesTest(query, expDocNrs);\n  }\n\n","sourceOld":"  @Test\n  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n    int[] expDocNrs = {2, 3};\n    queriesTest(query, expDocNrs);\n  }\n\n","sourceOld":"  @Test\n  public void testQueries09() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries09().mjava","sourceNew":"  @Test\n  public void testQueries09() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n    int[] expDocNrs = {2, 3};\n    queriesTest(query, expDocNrs);\n  }\n\n","sourceOld":"  @Test\n  public void testQueries09() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n    int[] expDocNrs = {2, 3};\n    queriesTest(query, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["112629f1dfd1451722c6047bcf593e6efc96f5f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","150488c1317972164a9a824be05b1ba2ba0fc68c"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["150488c1317972164a9a824be05b1ba2ba0fc68c","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["150488c1317972164a9a824be05b1ba2ba0fc68c","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","112629f1dfd1451722c6047bcf593e6efc96f5f4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","150488c1317972164a9a824be05b1ba2ba0fc68c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}