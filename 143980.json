{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","commits":[{"id":"b52d7514e2ea9043764ad70add8ff00e8eccc0c1","date":1415780728,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddPrefixMatch() throws IOException {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    Directory dir = newDirectory();\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(dir, a);\n\n    assertEquals(\"<b>Sol</b>r\", pfmToString(suggester, \"Solr\", \"Sol\"));\n    assertEquals(\"<b>Solr</b>\", pfmToString(suggester, \"Solr\", \"Solr\"));\n\n    // Test SOLR-6085 - the analyzed tokens match due to ss->ß normalization\n    assertEquals(\"<b>daß</b>\", pfmToString(suggester, \"daß\", \"dass\"));\n\n    dir.close();\n    suggester.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","sourceNew":"  @Test\n  public void testAddPrefixMatch() throws IOException {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    Directory dir = newDirectory();\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(dir, a);\n\n    assertEquals(\"<b>Sol</b>r\", pfmToString(suggester, \"Solr\", \"Sol\"));\n    assertEquals(\"<b>Solr</b>\", pfmToString(suggester, \"Solr\", \"Solr\"));\n\n    // Test SOLR-6085 - the analyzed tokens match due to ss->ß normalization\n    assertEquals(\"<b>daß</b>\", pfmToString(suggester, \"daß\", \"dass\"));\n\n    dir.close();\n    suggester.close();\n    a.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAddPrefixMatch() throws IOException {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    Directory dir = newDirectory();\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(dir, a);\n\n    assertEquals(\"<b>Sol</b>r\", pfmToString(suggester, \"Solr\", \"Sol\"));\n    assertEquals(\"<b>Solr</b>\", pfmToString(suggester, \"Solr\", \"Solr\"));\n\n    // Test SOLR-6085 - the analyzed tokens match due to ss->ß normalization\n    assertEquals(\"<b>daß</b>\", pfmToString(suggester, \"daß\", \"dass\"));\n\n    dir.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testAddPrefixMatch().mjava","sourceNew":"  @Test\n  public void testAddPrefixMatch() throws IOException {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    Directory dir = newDirectory();\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(dir, a);\n\n    assertEquals(\"<b>Sol</b>r\", pfmToString(suggester, \"Solr\", \"Sol\"));\n    assertEquals(\"<b>Solr</b>\", pfmToString(suggester, \"Solr\", \"Solr\"));\n\n    // Test SOLR-6085 - the analyzed tokens match due to ss->ß normalization\n    assertEquals(\"<b>daß</b>\", pfmToString(suggester, \"daß\", \"dass\"));\n\n    dir.close();\n    suggester.close();\n    a.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAddPrefixMatch() throws IOException {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    Directory dir = newDirectory();\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(dir, a);\n\n    assertEquals(\"<b>Sol</b>r\", pfmToString(suggester, \"Solr\", \"Sol\"));\n    assertEquals(\"<b>Solr</b>\", pfmToString(suggester, \"Solr\", \"Solr\"));\n\n    // Test SOLR-6085 - the analyzed tokens match due to ss->ß normalization\n    assertEquals(\"<b>daß</b>\", pfmToString(suggester, \"daß\", \"dass\"));\n\n    dir.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["b52d7514e2ea9043764ad70add8ff00e8eccc0c1","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52d7514e2ea9043764ad70add8ff00e8eccc0c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["b52d7514e2ea9043764ad70add8ff00e8eccc0c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52d7514e2ea9043764ad70add8ff00e8eccc0c1"],"b52d7514e2ea9043764ad70add8ff00e8eccc0c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}