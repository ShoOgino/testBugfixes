{"path":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#initializeMetrics(SolrMetricsContext,String).mjava","commits":[{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateShardHandler#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    solrMetricsContext = parentContext.getChildContext(this);\n    String expandedScope = SolrMetricManager.mkName(scope, getCategory().name());\n    updateHttpListenerFactory.initializeMetrics(solrMetricsContext, expandedScope);\n    defaultConnectionManager.initializeMetrics(solrMetricsContext, expandedScope);\n    updateExecutor = MetricUtils.instrumentedExecutorService(updateExecutor, this, solrMetricsContext.getMetricRegistry(),\n        SolrMetricManager.mkName(\"updateOnlyExecutor\", expandedScope, \"threadPool\"));\n    recoveryExecutor = MetricUtils.instrumentedExecutorService(recoveryExecutor, this, solrMetricsContext.getMetricRegistry(),\n        SolrMetricManager.mkName(\"recoveryExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    registry = manager.registry(registryName);\n    String expandedScope = SolrMetricManager.mkName(scope, getCategory().name());\n    updateHttpListenerFactory.initializeMetrics(manager, registryName, tag, expandedScope);\n    defaultConnectionManager.initializeMetrics(manager, registryName, tag, expandedScope);\n    updateExecutor = MetricUtils.instrumentedExecutorService(updateExecutor, this, registry,\n        SolrMetricManager.mkName(\"updateOnlyExecutor\", expandedScope, \"threadPool\"));\n    recoveryExecutor = MetricUtils.instrumentedExecutorService(recoveryExecutor, this, registry,\n        SolrMetricManager.mkName(\"recoveryExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"]},"commit2Childs":{"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}