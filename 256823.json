{"path":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","commits":[{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderUtil.Slice[]).mjava","sourceNew":"  public MultiTermsEnum(ReaderSlice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiDocsEnum.EnumWithSlice[slices.length];\n    subDocsAndPositions = new MultiDocsAndPositionsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiDocsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n      subDocsAndPositions[i] = new MultiDocsAndPositionsEnum.EnumWithSlice();\n      subDocsAndPositions[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","sourceOld":"  public MultiTermsEnum(ReaderUtil.Slice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiDocsEnum.EnumWithSlice[slices.length];\n    subDocsAndPositions = new MultiDocsAndPositionsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiDocsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n      subDocsAndPositions[i] = new MultiDocsAndPositionsEnum.EnumWithSlice();\n      subDocsAndPositions[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","sourceNew":"  /** Sole constructor.\n   *  @param slices Which sub-reader slices we should\n   *  merge. */\n  public MultiTermsEnum(ReaderSlice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiDocsEnum.EnumWithSlice[slices.length];\n    subDocsAndPositions = new MultiDocsAndPositionsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiDocsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n      subDocsAndPositions[i] = new MultiDocsAndPositionsEnum.EnumWithSlice();\n      subDocsAndPositions[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","sourceOld":"  public MultiTermsEnum(ReaderSlice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiDocsEnum.EnumWithSlice[slices.length];\n    subDocsAndPositions = new MultiDocsAndPositionsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiDocsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n      subDocsAndPositions[i] = new MultiDocsAndPositionsEnum.EnumWithSlice();\n      subDocsAndPositions[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum#MultiTermsEnum(ReaderSlice[]).mjava","sourceNew":"  /** Sole constructor.\n   *  @param slices Which sub-reader slices we should\n   *  merge. */\n  public MultiTermsEnum(ReaderSlice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiPostingsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiPostingsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","sourceOld":"  /** Sole constructor.\n   *  @param slices Which sub-reader slices we should\n   *  merge. */\n  public MultiTermsEnum(ReaderSlice[] slices) {\n    queue = new TermMergeQueue(slices.length);\n    top = new TermsEnumWithSlice[slices.length];\n    subs = new TermsEnumWithSlice[slices.length];\n    subDocs = new MultiDocsEnum.EnumWithSlice[slices.length];\n    subDocsAndPositions = new MultiDocsAndPositionsEnum.EnumWithSlice[slices.length];\n    for(int i=0;i<slices.length;i++) {\n      subs[i] = new TermsEnumWithSlice(i, slices[i]);\n      subDocs[i] = new MultiDocsEnum.EnumWithSlice();\n      subDocs[i].slice = slices[i];\n      subDocsAndPositions[i] = new MultiDocsAndPositionsEnum.EnumWithSlice();\n      subDocsAndPositions[i].slice = slices[i];\n    }\n    currentSubs = new TermsEnumWithSlice[slices.length];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["51f5280f31484820499077f41fcdfe92d527d9dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}