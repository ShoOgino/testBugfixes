{"path":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","sourceNew":"  /**\n   * Returns the length of a file in the directory. This method follows the\n   * following contract:\n   * <ul>\n   * <li>Throws {@link FileNotFoundException} if the file does not exist\n   * <li>Returns a value &ge;0 if the file exists, which specifies its length.\n   * </ul>\n   * \n   * @param name the name of the file for which to return the length.\n   * @throws FileNotFoundException if the file does not exist.\n   * @throws IOException if there was an IO error while retrieving the file's\n   *         length.\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the length of a file in the directory. This method follows the\n   * following contract:\n   * <ul>\n   * <li>Throws {@link FileNotFoundException} if the file does not exist\n   * <li>Returns a value &ge;0 if the file exists, which specifies its length.\n   * </ul>\n   * \n   * @param name the name of the file for which to return the length.\n   * @throws FileNotFoundException if the file does not exist.\n   * @throws IOException if there was an IO error while retrieving the file's\n   *         length.\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52","date":1370989568,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","sourceNew":"  /**\n   * Returns the length of a file in the directory. This method follows the\n   * following contract:\n   * <ul>\n   * <li>Throws {@link FileNotFoundException} or {@link NoSuchFileException}\n   * if the file does not exist.\n   * <li>Returns a value &ge;0 if the file exists, which specifies its length.\n   * </ul>\n   * \n   * @param name the name of the file for which to return the length.\n   * @throws IOException if there was an IO error while retrieving the file's\n   *         length.\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the length of a file in the directory. This method follows the\n   * following contract:\n   * <ul>\n   * <li>Throws {@link FileNotFoundException} if the file does not exist\n   * <li>Returns a value &ge;0 if the file exists, which specifies its length.\n   * </ul>\n   * \n   * @param name the name of the file for which to return the length.\n   * @throws FileNotFoundException if the file does not exist.\n   * @throws IOException if there was an IO error while retrieving the file's\n   *         length.\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","bugFix":["e956a12cd04014022a7d97aefb34c563a5634018"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#fileLength(String).mjava","sourceNew":"  /**\n   * Returns the byte length of a file in the directory.\n   *\n   * This method must throw either {@link NoSuchFileException} or {@link FileNotFoundException}\n   * if {@code name} points to a non-existing file.\n   *\n   * @param name the name of an existing file.\n   * @throws IOException in case of I/O error\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the length of a file in the directory. This method follows the\n   * following contract:\n   * <ul>\n   * <li>Throws {@link FileNotFoundException} or {@link NoSuchFileException}\n   * if the file does not exist.\n   * <li>Returns a value &ge;0 if the file exists, which specifies its length.\n   * </ul>\n   * \n   * @param name the name of the file for which to return the length.\n   * @throws IOException if there was an IO error while retrieving the file's\n   *         length.\n   */\n  public abstract long fileLength(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3adea0022cffaaa592081efed775a7b8bf86b51":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}