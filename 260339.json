{"path":"lucene/backwards/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#snapshot().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#snapshot().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#snapshot().mjava","sourceNew":"  /** Take a snapshot of the most recent commit to the\n   *  index.  You must call release() to free this snapshot.\n   *  Note that while the snapshot is held, the files it\n   *  references will not be deleted, which will consume\n   *  additional disk space in your index. If you take a\n   *  snapshot at a particularly bad time (say just before\n   *  you call optimize()) then in the worst case this could\n   *  consume an extra 1X of your total index size, until\n   *  you release the snapshot. */\n  public synchronized IndexCommit snapshot() {\n    if (snapshot == null)\n      snapshot = lastCommit.getSegmentsFileName();\n    else\n      throw new IllegalStateException(\"snapshot is already set; please call release() first\");\n    return lastCommit;\n  }\n\n","sourceOld":"  /** Take a snapshot of the most recent commit to the\n   *  index.  You must call release() to free this snapshot.\n   *  Note that while the snapshot is held, the files it\n   *  references will not be deleted, which will consume\n   *  additional disk space in your index. If you take a\n   *  snapshot at a particularly bad time (say just before\n   *  you call optimize()) then in the worst case this could\n   *  consume an extra 1X of your total index size, until\n   *  you release the snapshot. */\n  public synchronized IndexCommit snapshot() {\n    if (snapshot == null)\n      snapshot = lastCommit.getSegmentsFileName();\n    else\n      throw new IllegalStateException(\"snapshot is already set; please call release() first\");\n    return lastCommit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#snapshot().mjava","sourceNew":null,"sourceOld":"  /** Take a snapshot of the most recent commit to the\n   *  index.  You must call release() to free this snapshot.\n   *  Note that while the snapshot is held, the files it\n   *  references will not be deleted, which will consume\n   *  additional disk space in your index. If you take a\n   *  snapshot at a particularly bad time (say just before\n   *  you call optimize()) then in the worst case this could\n   *  consume an extra 1X of your total index size, until\n   *  you release the snapshot. */\n  public synchronized IndexCommit snapshot() {\n    if (snapshot == null)\n      snapshot = lastCommit.getSegmentsFileName();\n    else\n      throw new IllegalStateException(\"snapshot is already set; please call release() first\");\n    return lastCommit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}