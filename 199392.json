{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","commits":[{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41Codec#getPostingsFormatForField(String).mjava","sourceNew":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","sourceOld":"  /** Returns the postings format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene41\"\n   */\n  public PostingsFormat getPostingsFormatForField(String field) {\n    return defaultFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["4cc45c615dbb82bf79d5f9550286098367874fbf","db4fdbf3d262768eabc027cd8321edca0cd11fa8","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}