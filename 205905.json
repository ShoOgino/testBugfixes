{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#isMetricEuqalOrLarger(int,String,Map[String,Long]).mjava","commits":[{"id":"4bb519c79b76e52145e37b6681a7012525ed5f4b","date":1544694716,"type":1,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#isMetricEuqalOrLarger(int,String,Map[String,Long]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertExpectedMetrics(int,String,Map[String,Long]).mjava","sourceNew":"  // Check that the actual metric is equal to or greater than the expected value, never less\n  private boolean isMetricEuqalOrLarger(int expected, String key, Map<String, Long> counts) {\n    long cnt = counts.get(key);\n    log.debug(\"Asserting that auth metrics count ({}) > expected ({})\", cnt, expected);\n    return(cnt >= expected);\n  }\n\n","sourceOld":"  // Check that the actual metric is equal to or greater than the expected value, never less\n  private void assertExpectedMetrics(int expected, String key, Map<String, Long> counts) {\n    long cnt = counts.get(key);\n    log.debug(\"Asserting that auth metrics count ({}) > expected ({})\", cnt, expected);\n    assertTrue(\"Expected \" + key + \" metric count to be \" + expected + \" or higher, but got \" + cnt, \n        cnt >= expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85091c28b30918e3b853626fb144d3de27b1cda8","date":1548330207,"type":4,"author":"Jan Høydahl","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#isMetricEuqalOrLarger(int,String,Map[String,Long]).mjava","sourceNew":null,"sourceOld":"  // Check that the actual metric is equal to or greater than the expected value, never less\n  private boolean isMetricEuqalOrLarger(int expected, String key, Map<String, Long> counts) {\n    long cnt = counts.get(key);\n    log.debug(\"Asserting that auth metrics count ({}) > expected ({})\", cnt, expected);\n    return(cnt >= expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85091c28b30918e3b853626fb144d3de27b1cda8":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85091c28b30918e3b853626fb144d3de27b1cda8"]},"commit2Childs":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["85091c28b30918e3b853626fb144d3de27b1cda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"85091c28b30918e3b853626fb144d3de27b1cda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}