{"path":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","pathOld":"solr/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","sourceNew":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","sourceOld":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","pathOld":"solr/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","sourceNew":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","sourceOld":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","pathOld":"solr/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","sourceNew":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","sourceOld":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70f01c1b67852e9f106e1689d1afffe115c5eeac","date":1311519071,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","sourceNew":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n  }\n\n","sourceOld":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n    clearIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/RequiredFieldsTest#testRequiredFieldsSingleAdd().mjava","sourceNew":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getLatestSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getLatestSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n  }\n\n","sourceOld":"  @Test\n  public void testRequiredFieldsSingleAdd() {      \n    SolrCore core = h.getCore();     \n    // Add a single document\n    assertU(\"adding document\",\n      adoc(\"id\", \"529\", \"name\", \"document with id, name, and subject\", \"field_t\", \"what's inside?\", \"subject\", \"info\"));\n    assertU(commit());\n    \n    // Check it it is in the index\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n\n    // Add another document without the required subject field, which\n    // has a configured defaultValue of \"Stuff\"\n    assertU(\"adding a doc without field w/ configured default\",\n          adoc(\"id\", \"530\", \"name\", \"document with id and name\", \"field_t\", \"what's inside?\"));\n    assertU(commit());\n\n    // Add another document without a subject, which has a default in schema\n    String subjectDefault = core.getSchema().getField(\"subject\").getDefaultValue();\n    assertNotNull(\"subject has no default value\", subjectDefault);\n    assertQ(\"should find one with subject=\"+subjectDefault, req(\"id:530 subject:\"+subjectDefault) ,\"//result[@numFound=1]\" );\n\n    // Add another document without a required name, which has no default\n    assertNull(core.getSchema().getField(\"name\").getDefaultValue());\n    ignoreException(\"missing required field\");\n    assertFailedU(\"adding doc without required field\",\n          adoc(\"id\", \"531\", \"subject\", \"no name document\", \"field_t\", \"what's inside?\") );\n    resetExceptionIgnores();\n    assertU(commit());\n    \n    // Check to make sure this submission did not succeed\n    assertQ(\"should not find any\", req(\"id:531\") ,\"//result[@numFound=0]\" ); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70f01c1b67852e9f106e1689d1afffe115c5eeac":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["70f01c1b67852e9f106e1689d1afffe115c5eeac"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["70f01c1b67852e9f106e1689d1afffe115c5eeac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"70f01c1b67852e9f106e1689d1afffe115c5eeac":["08970e5b8411182a29412c177eff67ec1110095b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"08970e5b8411182a29412c177eff67ec1110095b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}