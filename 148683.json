{"path":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","commits":[{"id":"d6d62214e818b74b9fa407c0c51956e44878a46a","date":1438266500,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","pathOld":"/dev/null","sourceNew":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = threadLocal.get();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          threadLocal.set(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        threadLocal.remove();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4750614f6dd69a084ba692ac13eac93df7e36b83"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4750614f6dd69a084ba692ac13eac93df7e36b83","date":1467144700,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","sourceNew":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        SolrRequestInfo.clearRequestInfo();\n      }\n    };\n  }\n\n","sourceOld":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = threadLocal.get();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          threadLocal.set(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        threadLocal.remove();\n      }\n    };\n  }\n\n","bugFix":["d6d62214e818b74b9fa407c0c51956e44878a46a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","sourceNew":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        SolrRequestInfo.clearRequestInfo();\n      }\n    };\n  }\n\n","sourceOld":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = threadLocal.get();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          threadLocal.set(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        threadLocal.remove();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","sourceNew":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void store(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void set(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo.clearRequestInfo();\n      }\n    };\n  }\n\n","sourceOld":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      public void store(AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      public void set(AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(AtomicReference ctx) {\n        SolrRequestInfo.clearRequestInfo();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a32e902eb5b2408fefa7ca7a8579e22f4ba6f2b4","date":1592286410,"type":3,"author":"Nazerke Seidan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SolrRequestInfo#getInheritableThreadLocalProvider().mjava","sourceNew":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void store(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void set(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        if (ctx.get() != null) {\n          SolrRequestInfo.clearRequestInfo();\n        }\n        SolrRequestInfo.reset();\n      }\n    };\n  }\n\n","sourceOld":"  public static ExecutorUtil.InheritableThreadLocalProvider getInheritableThreadLocalProvider() {\n    return new ExecutorUtil.InheritableThreadLocalProvider() {\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void store(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = SolrRequestInfo.getRequestInfo();\n        if (me != null) ctx.set(me);\n      }\n\n      @Override\n      @SuppressWarnings({\"unchecked\"})\n      public void set(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo me = (SolrRequestInfo) ctx.get();\n        if (me != null) {\n          ctx.set(null);\n          SolrRequestInfo.setRequestInfo(me);\n        }\n      }\n\n      @Override\n      public void clean(@SuppressWarnings({\"rawtypes\"})AtomicReference ctx) {\n        SolrRequestInfo.clearRequestInfo();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d6d62214e818b74b9fa407c0c51956e44878a46a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a32e902eb5b2408fefa7ca7a8579e22f4ba6f2b4":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["4750614f6dd69a084ba692ac13eac93df7e36b83"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d6d62214e818b74b9fa407c0c51956e44878a46a","4750614f6dd69a084ba692ac13eac93df7e36b83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a32e902eb5b2408fefa7ca7a8579e22f4ba6f2b4"],"4750614f6dd69a084ba692ac13eac93df7e36b83":["d6d62214e818b74b9fa407c0c51956e44878a46a"]},"commit2Childs":{"d6d62214e818b74b9fa407c0c51956e44878a46a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","4750614f6dd69a084ba692ac13eac93df7e36b83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6d62214e818b74b9fa407c0c51956e44878a46a"],"a32e902eb5b2408fefa7ca7a8579e22f4ba6f2b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["a32e902eb5b2408fefa7ca7a8579e22f4ba6f2b4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4750614f6dd69a084ba692ac13eac93df7e36b83":["bd25fa3647fa73152703b8dccb4fb5f43633de20","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}