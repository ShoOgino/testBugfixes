{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","commits":[{"id":"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e","date":1410548439,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed. \n    FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_SCHEMALESS_HOME), tempSolrHome);\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed. \n    FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_SCHEMALESS_HOME), tempSolrHome);\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed. \n    FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_SCHEMALESS_HOME), tempSolrHome);\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e25c332f157326faecb36f76173033c1284776a5","date":1414729852,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed. \n    FileUtils.copyDirectory(new File(ExternalPaths.EXAMPLE_SCHEMALESS_HOME), tempSolrHome);\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dac22e2c68188d3e5c96ca60febedc05a96f44f","date":1498433282,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","date":1498540685,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.SCHEMALESS_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createAndStartJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","bugFix":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5","date":1563597632,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(\n          new File(collection1Dir, \"core.properties\")), StandardCharsets.UTF_8);\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createAndStartJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    File tempSolrHome = createTempDir().toFile();\n    // Schemaless renames schema.xml -> schema.xml.bak, and creates + modifies conf/managed-schema,\n    // which violates the test security manager's rules, which disallow writes outside the build dir,\n    // so we copy the example/example-schemaless/solr/ directory to a new temp dir where writes are allowed.\n    FileUtils.copyFileToDirectory(new File(ExternalPaths.SERVER_HOME, \"solr.xml\"), tempSolrHome);\n    File collection1Dir = new File(tempSolrHome, \"collection1\");\n    FileUtils.forceMkdir(collection1Dir);\n    FileUtils.copyDirectoryToDirectory(new File(ExternalPaths.DEFAULT_CONFIGSET), collection1Dir);\n    Properties props = new Properties();\n    props.setProperty(\"name\",\"collection1\");\n    OutputStreamWriter writer = null;\n    try {\n      writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collection1Dir, \"core.properties\")), \"UTF-8\");\n      props.store(writer, null);\n    } finally {\n      if (writer != null) {\n        try {\n          writer.close();\n        } catch (Exception ignore){}\n      }\n    }\n    createAndStartJetty(tempSolrHome.getAbsolutePath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e25c332f157326faecb36f76173033c1284776a5","9bc766d645fa848f86c381c7f6acf2c881c99399"],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28288370235ed02234a64753cdbf0c6ec096304a"],"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":["9bc766d645fa848f86c381c7f6acf2c881c99399","6dac22e2c68188d3e5c96ca60febedc05a96f44f"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["e25c332f157326faecb36f76173033c1284776a5"],"e25c332f157326faecb36f76173033c1284776a5":["f4abec28b874149a7223e32cc7a01704c27790de"],"6dac22e2c68188d3e5c96ca60febedc05a96f44f":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"f4abec28b874149a7223e32cc7a01704c27790de":["ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e"],"28288370235ed02234a64753cdbf0c6ec096304a":["9bc766d645fa848f86c381c7f6acf2c881c99399","6dac22e2c68188d3e5c96ca60febedc05a96f44f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"],"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e"],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","6dac22e2c68188d3e5c96ca60febedc05a96f44f","28288370235ed02234a64753cdbf0c6ec096304a"],"e25c332f157326faecb36f76173033c1284776a5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9bc766d645fa848f86c381c7f6acf2c881c99399"],"6dac22e2c68188d3e5c96ca60febedc05a96f44f":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","28288370235ed02234a64753cdbf0c6ec096304a"],"f4abec28b874149a7223e32cc7a01704c27790de":["e25c332f157326faecb36f76173033c1284776a5"],"28288370235ed02234a64753cdbf0c6ec096304a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}