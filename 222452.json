{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","commits":[{"id":"dc4cbb07b89a0942261a14579fdfc607af58137c","date":1331160678,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3685dcafc9195b0631414aa4d422f788479e62b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3685dcafc9195b0631414aa4d422f788479e62b7","date":1364492243,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assertQ(\n        \"Return 5 docs with id range 1937 till 1940\",\n         req(\"id:[2000 TO 2004]\"),\n        \"*[count(//doc)=5]\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='1']\"\n    );\n    assertQ(\n        \"Return two facet counts for field airport_a with fq\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"fq\", \"duration_i1:5\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=2]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\",\n        \"//lst[@name='airport_s1']/int[@name='dus'][.='0']\"\n    );\n    assertQ(\n        \"Return one facet count for field airport_s1 with prefix a\",\n         req(\n             \"q\", \"*:*\",\n             \"fq\", \"id:[2000 TO 2004]\",\n             \"group\", \"true\",\n             \"group.facet\", \"true\",\n             \"group.field\", \"hotel_s1\",\n             \"facet\", \"true\",\n             \"facet.field\", \"airport_s1\",\n             \"facet.prefix\", \"a\"\n         ),\n        \"//lst[@name='facet_fields']/lst[@name='airport_s1']\",\n        \"*[count(//lst[@name='airport_s1']/int)=1]\",\n        \"//lst[@name='airport_s1']/int[@name='ams'][.='2']\"\n    );\n    \n    try {\n      h.query(\n           req(\n               \"q\", \"*:*\",\n               \"fq\", \"id:[2000 TO 2004]\",\n               \"group.facet\", \"true\",\n               \"facet\", \"true\",\n               \"facet.field\", \"airport_s1\",\n               \"facet.prefix\", \"a\"\n           )\n      );\n      fail(\"Exception should have been thrown\");\n    } catch (SolrException e) {\n      assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    }\n  }\n\n","bugFix":["dc4cbb07b89a0942261a14579fdfc607af58137c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351efe6fdecf9af62134d37ec2582e4a0331a4dc","date":1498149096,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assumeFalse(\"SOLR-10844: group.facet doesn't play nice with points *OR* DocValues\",\n                Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP) || Boolean.getBoolean(NUMERIC_POINTS_SYSPROP));\n                \n    \n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assumeFalse(\"SOLR-10844: group.facet doesn't play nice with points *OR* DocValues\",\n                Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP) || Boolean.getBoolean(NUMERIC_POINTS_SYSPROP));\n                \n    \n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedFacets().mjava","sourceNew":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    assumeFalse(\"SOLR-10844: group.facet doesn't play nice with points *OR* DocValues\",\n                Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP) || Boolean.getBoolean(NUMERIC_POINTS_SYSPROP));\n                \n    \n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleGroupedFacets() throws Exception {\n    // for the purposes of our test data, it shouldn't matter \n    // if we use facet.limit -100, -1, or 100 ...\n    // our set of values is small enough either way\n    testSimpleGroupedFacets(\"100\");\n    testSimpleGroupedFacets(\"-100\");\n    testSimpleGroupedFacets(\"-5\");\n    testSimpleGroupedFacets(\"-1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["3685dcafc9195b0631414aa4d422f788479e62b7"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc4cbb07b89a0942261a14579fdfc607af58137c"],"dc4cbb07b89a0942261a14579fdfc607af58137c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3685dcafc9195b0631414aa4d422f788479e62b7","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"3685dcafc9195b0631414aa4d422f788479e62b7":["dc4cbb07b89a0942261a14579fdfc607af58137c"],"28288370235ed02234a64753cdbf0c6ec096304a":["3685dcafc9195b0631414aa4d422f788479e62b7","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"dc4cbb07b89a0942261a14579fdfc607af58137c":["38e3b736c7ca086d61b7dbb841c905ee115490da","3685dcafc9195b0631414aa4d422f788479e62b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","dc4cbb07b89a0942261a14579fdfc607af58137c"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"3685dcafc9195b0631414aa4d422f788479e62b7":["351efe6fdecf9af62134d37ec2582e4a0331a4dc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}