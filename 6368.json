{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","date":1371479482,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrServer client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n    if (shardCount == 0) {//mostly for temp debugging\n      return;\n    }\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n    if (shardCount == 0) {//mostly for temp debugging\n      return;\n    }\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#indexDoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n    if (shardCount == 0) {//mostly for temp debugging\n      return;\n    }\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","sourceOld":"  /**\n   * Indexes the document in both the control client, and a randomly selected client\n   */\n  protected void indexDoc(SolrInputDocument doc) throws IOException, SolrServerException {\n    controlClient.add(doc);\n\n    int which = (doc.getField(id).toString().hashCode() & 0x7fffffff) % clients.size();\n    SolrClient client = clients.get(which);\n    client.add(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["bafca15d8e408346a67f4282ad1143b88023893b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["bafca15d8e408346a67f4282ad1143b88023893b","2ab027bdfe663227636ccbeda13ae82add302939"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c26f00b574427b55127e869b935845554afde1fa","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ab027bdfe663227636ccbeda13ae82add302939"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["bafca15d8e408346a67f4282ad1143b88023893b","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["37a0f60745e53927c4c876cfe5b5a58170f0646c","bafca15d8e408346a67f4282ad1143b88023893b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"bafca15d8e408346a67f4282ad1143b88023893b":["2ab027bdfe663227636ccbeda13ae82add302939","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}