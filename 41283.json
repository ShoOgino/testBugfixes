{"path":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length)\n        return false;\n      else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.setTermBuffer(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length)\n        return false;\n      else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.setTermBuffer(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a775c547c3519b47efd41c09cb47100ddb9604c7","date":1270914087,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length)\n        return false;\n      else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.append(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length)\n        return false;\n      else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.setTermBuffer(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length) {\n        return false;\n      } else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.append(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length)\n        return false;\n      else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.append(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsReader.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length) {\n        return false;\n      } else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.append(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenUpto >= tokens.length) {\n        return false;\n      } else {\n        final TestToken testToken = tokens[tokenUpto++];\n        clearAttributes();\n        termAtt.append(testToken.text);\n        offsetAtt.setOffset(testToken.startOffset, testToken.endOffset);\n        if (tokenUpto > 1) {\n          posIncrAtt.setPositionIncrement(testToken.pos - tokens[tokenUpto-2].pos);\n        } else {\n          posIncrAtt.setPositionIncrement(testToken.pos+1);\n        }\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a775c547c3519b47efd41c09cb47100ddb9604c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a775c547c3519b47efd41c09cb47100ddb9604c7":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a775c547c3519b47efd41c09cb47100ddb9604c7"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}