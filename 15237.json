{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#preferLocalShardsTest().mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#preferLocalShardsTest().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests if the specification of 'preferLocalShards' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 4-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferLocalShardsTest() throws Exception {\n\n    String collectionName = \"localShardsTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For preferLocalShards to succeed in a test, every shard should have\n    // all its cores on the same node.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, liveNodes)\n        .setMaxShardsPerNode(liveNodes * liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * liveNodes);\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual test for 'preferLocalShards'\n    queryWithShardsPreferenceRules(getRandomClient(), false, collectionName);\n    queryWithShardsPreferenceRules(getRandomClient(), true, collectionName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#preferLocalShardsTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#preferLocalShardsTest().mjava","sourceNew":"  /**\n   * Tests if the specification of 'preferLocalShards' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 4-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferLocalShardsTest() throws Exception {\n\n    String collectionName = \"localShardsTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For preferLocalShards to succeed in a test, every shard should have\n    // all its cores on the same node.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * liveNodes);\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual test for 'preferLocalShards'\n    queryWithShardsPreferenceRules(getRandomClient(), false, collectionName);\n    queryWithShardsPreferenceRules(getRandomClient(), true, collectionName);\n  }\n\n","sourceOld":"  /**\n   * Tests if the specification of 'preferLocalShards' in the query-params\n   * limits the distributed query to locally hosted shards only\n   */\n  @Test\n  // commented 4-Sep-2018 @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 2-Aug-2018\n  public void preferLocalShardsTest() throws Exception {\n\n    String collectionName = \"localShardsTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    // For preferLocalShards to succeed in a test, every shard should have\n    // all its cores on the same node.\n    // Hence the below configuration for our collection\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, liveNodes)\n        .setMaxShardsPerNode(liveNodes * liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * liveNodes);\n    // Add some new documents\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    // Run the actual test for 'preferLocalShards'\n    queryWithShardsPreferenceRules(getRandomClient(), false, collectionName);\n    queryWithShardsPreferenceRules(getRandomClient(), true, collectionName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}