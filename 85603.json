{"path":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#addField(FieldInfo).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#addField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public TermsConsumer addField(FieldInfo field) throws IOException {\n      final PostingsFormat format = getPostingsFormatForField(field.name);\n      if (format == null) {\n        throw new IllegalStateException(\"invalid null PostingsFormat for field=\\\"\" + field.name + \"\\\"\");\n      }\n\n      assert !fieldToFormat.containsKey(field.name);\n      fieldToFormat.put(field.name, format);\n\n      FieldsConsumerAndID consumerAndId = formats.get(format);\n      if (consumerAndId == null) {\n        // First time we are seeing this format; assign\n        // next id and init it:\n        final String segmentSuffix = getFullSegmentSuffix(field.name,\n                                                          segmentWriteState.segmentSuffix,\n                                                          \"\"+formats.size());\n        consumerAndId = new FieldsConsumerAndID(format.fieldsConsumer(new SegmentWriteState(segmentWriteState, segmentSuffix)),\n                                                segmentSuffix);\n        formats.put(format, consumerAndId);\n      }\n\n      return consumerAndId.fieldsConsumer.addField(field);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b0c99c9b095ebe88603d5dc33606fdfe7782cb2f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#addField(FieldInfo).mjava","sourceNew":"    @Override\n    public TermsConsumer addField(FieldInfo field) throws IOException {\n      final PostingsFormat format = getPostingsFormatForField(field.name);\n      if (format == null) {\n        throw new IllegalStateException(\"invalid null PostingsFormat for field=\\\"\" + field.name + \"\\\"\");\n      }\n\n      assert !fieldToFormat.containsKey(field.name);\n      fieldToFormat.put(field.name, format);\n\n      FieldsConsumerAndID consumerAndId = formats.get(format);\n      if (consumerAndId == null) {\n        // First time we are seeing this format; assign\n        // next id and init it:\n        final String segmentSuffix = getFullSegmentSuffix(field.name,\n                                                          segmentWriteState.segmentSuffix,\n                                                          \"\"+formats.size());\n        consumerAndId = new FieldsConsumerAndID(format.fieldsConsumer(new SegmentWriteState(segmentWriteState, segmentSuffix)),\n                                                segmentSuffix);\n        formats.put(format, consumerAndId);\n      }\n\n      return consumerAndId.fieldsConsumer.addField(field);\n    }\n\n","sourceOld":"    @Override\n    public TermsConsumer addField(FieldInfo field) throws IOException {\n      final PostingsFormat format = getPostingsFormatForField(field.name);\n      if (format == null) {\n        throw new IllegalStateException(\"invalid null PostingsFormat for field=\\\"\" + field.name + \"\\\"\");\n      }\n\n      assert !fieldToFormat.containsKey(field.name);\n      fieldToFormat.put(field.name, format);\n\n      FieldsConsumerAndID consumerAndId = formats.get(format);\n      if (consumerAndId == null) {\n        // First time we are seeing this format; assign\n        // next id and init it:\n        final String segmentSuffix = getFullSegmentSuffix(field.name,\n                                                          segmentWriteState.segmentSuffix,\n                                                          \"\"+formats.size());\n        consumerAndId = new FieldsConsumerAndID(format.fieldsConsumer(new SegmentWriteState(segmentWriteState, segmentSuffix)),\n                                                segmentSuffix);\n        formats.put(format, consumerAndId);\n      }\n\n      return consumerAndId.fieldsConsumer.addField(field);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}