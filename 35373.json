{"path":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"/dev/null","sourceNew":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":null,"sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"/dev/null","sourceNew":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","date":1292289052,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":["cf8271e70a650d15fbc7354d641c4b1eb2b62d7f","28a016ae2abf4934515e45810192aa4350e3092b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      SolrEventListener listener = createInitInstance(info, SolrEventListener.class,\"Event Listener\",null);      \n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        firstSearcherListeners.add(listener);\n      } else if(\"newSearcher\".equals(event) ){\n        newSearcherListeners.add(listener);\n      }\n      log.info(logid + \"Added SolrEventListener: \" + listener);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initListeners().mjava","sourceNew":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","sourceOld":"  private void initListeners() {\n    final Class<SolrEventListener> clazz = SolrEventListener.class;\n    final String label = \"Event Listener\";\n    for (PluginInfo info : solrConfig.getPluginInfos(SolrEventListener.class.getName())) {\n      String event = info.attributes.get(\"event\");\n      if(\"firstSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        firstSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for firstSearcher: \" + obj);\n      } else if(\"newSearcher\".equals(event) ){\n        SolrEventListener obj = createInitInstance(info,clazz,label,null);\n        newSearcherListeners.add(obj);\n        log.info(logid + \"Added SolrEventListener for newSearcher: \" + obj);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1da8d55113b689b06716246649de6f62430f15c0","28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"28e9b4f0446e4a60433a9442e4b2fa4e2f68d737":["c26f00b574427b55127e869b935845554afde1fa","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["28e9b4f0446e4a60433a9442e4b2fa4e2f68d737","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}