{"path":"src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","commits":[{"id":"e0eacdfc94f700086189bb44f7f73ed9cfd85c75","date":1095252623,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  public Field(String name, byte[] value) {\n    if (name == null)\n      throw new IllegalArgumentException(\"name cannot be null\");\n    if (value == null)\n      throw new IllegalArgumentException(\"value cannot be null\");\n    \n    this.name = name.intern();\n    this.binaryValue = value;\n    \n    this.isBinary    = true;\n    this.isStored    = true;\n    \n    this.isIndexed   = false;\n    this.isTokenized = false;\n    this.storeTermVector = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d038c41e70424a134ef69a524f3cc0fb40d854","date":1096548028,"type":5,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,byte[],Store).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","sourceNew":"  /**\n   * Create a stored field with binary value. Optionally the value may be compressed.\n   * \n   * @param name The name of the field\n   * @param value The binary value\n   * @param store How <code>value</code> should be stored (compressed or not.)\n   */\n  public Field(String name, byte[] value, Store store) {\n    if (name == null)\n      throw new IllegalArgumentException(\"name cannot be null\");\n    if (value == null)\n      throw new IllegalArgumentException(\"value cannot be null\");\n    if (store == Store.NO)\n      throw new IllegalArgumentException(\"binary values can't be unstored\");\n    if (store == Store.COMPRESS)\n      this.isCompressed = true;\n    \n    this.name = name.intern();\n    //wrap the byte[] to a ByteBuffer object\n    this.fieldsData = value;\n    \n    this.isBinary    = true;\n    this.isStored    = true;\n    \n    this.isIndexed   = false;\n    this.isTokenized = false;\n    this.storeTermVector = false;\n  }\n\n","sourceOld":"  public Field(String name, byte[] value) {\n    if (name == null)\n      throw new IllegalArgumentException(\"name cannot be null\");\n    if (value == null)\n      throw new IllegalArgumentException(\"value cannot be null\");\n    \n    this.name = name.intern();\n    this.binaryValue = value;\n    \n    this.isBinary    = true;\n    this.isStored    = true;\n    \n    this.isIndexed   = false;\n    this.isTokenized = false;\n    this.storeTermVector = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f16ad31b2a8f005ac68e5a48dbed0e0aad0d4a2","date":1261491902,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a stored field with binary value. Optionally the value may be compressed.\n   * \n   * @param name The name of the field\n   * @param value The binary value\n   */\n  public Field(String name, byte[] value) {\n    this(name, value, 0, value.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,byte[]).mjava","sourceNew":"  /**\n   * Create a stored field with binary value. Optionally the value may be compressed.\n   * \n   * @param name The name of the field\n   * @param value The binary value\n   */\n  public Field(String name, byte[] value) {\n    this(name, value, 0, value.length);\n  }\n\n","sourceOld":"  /**\n   * Create a stored field with binary value. Optionally the value may be compressed.\n   * \n   * @param name The name of the field\n   * @param value The binary value\n   */\n  public Field(String name, byte[] value) {\n    this(name, value, 0, value.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f16ad31b2a8f005ac68e5a48dbed0e0aad0d4a2":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3f16ad31b2a8f005ac68e5a48dbed0e0aad0d4a2"]},"commit2Childs":{"3f16ad31b2a8f005ac68e5a48dbed0e0aad0d4a2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["3f16ad31b2a8f005ac68e5a48dbed0e0aad0d4a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}