{"path":"solr/core/src/test/org/apache/solr/update/processor/TestDocBasedVersionConstraints#testManagingDeletes().mjava","commits":[{"id":"667eea18b7ca87af38d05d81d479f943a717a6b1","date":1548452298,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/TestDocBasedVersionConstraints#testManagingDeletes().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestDocBasedVersionConstraints#testManagingDeletes().mjava","sourceNew":"  /** \n   * Proof of concept test demonstrating how to manage and periodically cleanup\n   * the \"logically\" deleted documents\n   */\n  public void testManagingDeletes() throws Exception {\n    // add some docs\n    for (long ver = 1010; ver < 1020; ver++) {\n      for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n        assertU(adoc(\"id\", id, \"name\", \"name_\"+id, \"my_version_l\", \"\"+ver));\n      }\n    }\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"name_aaa\", \"my_version_l\", \"1030\"));\n    assertU(commit());\n    // sample queries\n    assertJQ(req(\"q\",\"*:*\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==4\");\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\",\n                 \"fl\",\"id,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':1030}]}\");\n    // logically delete\n    deleteAndGetVersion(\"aaa\",\n                        params(\"del_version\", \"1031\"));\n    assertU(commit());\n    // sample queries\n    assertJQ(req(\"q\",\"*:*\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==3\");\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==0\");\n    // placeholder doc is still in the index though\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:false\",\n                 \"fq\", \"timestamp_tdt:[* TO *]\",\n                 \"fl\",\"id,live_b,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':1031,'live_b':false}]}\");\n    // doc can't be re-added with a low version\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\", \"1025\"));\n    assertU(commit());\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==0\");\n\n    // \"dead\" placeholder docs can be periodically cleaned up \n    // ie: assertU(delQ(\"+live_b:false +timestamp_tdt:[* TO NOW/MINUTE-5MINUTE]\"));\n    // but to prevent the test from ebing time sensitive we'll just purge them all\n    assertU(delQ(\"+live_b:false\"));\n    assertU(commit());\n    // now doc can be re-added w/any version, no matter how low\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"aaa\", \"my_version_l\", \"7\"));\n    assertU(commit());\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\",\n                 \"fl\",\"id,live_b,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':7,'live_b':true}]}\");\n    \n  }\n\n","sourceOld":"  /** \n   * Proof of concept test demonstrating how to manage and periodically cleanup\n   * the \"logically\" deleted documents\n   */\n  public void testManagingDeletes() throws Exception {\n    // add some docs\n    for (long ver = 1010; ver < 1020; ver++) {\n      for (String id : new String[] {\"aaa\", \"bbb\", \"ccc\", \"ddd\"}) {\n        assertU(adoc(\"id\", id, \"name\", \"name_\"+id, \"my_version_l\", \"\"+ver));\n      }\n    }\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"name_aaa\", \"my_version_l\", \"1030\"));\n    assertU(commit());\n    // sample queries\n    assertJQ(req(\"q\",\"*:*\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==4\");\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\",\n                 \"fl\",\"id,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':1030}]}\");\n    // logically delete\n    deleteAndGetVersion(\"aaa\",\n                        params(\"del_version\", \"1031\"));\n    assertU(commit());\n    // sample queries\n    assertJQ(req(\"q\",\"*:*\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==3\");\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==0\");\n    // placeholder doc is still in the index though\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:false\",\n                 \"fq\", \"timestamp_tdt:[* TO *]\",\n                 \"fl\",\"id,live_b,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':1031,'live_b':false}]}\");\n    // doc can't be re-added with a low version\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"XX\", \"my_version_l\", \"1025\"));\n    assertU(commit());\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\")\n             ,\"/response/numFound==0\");\n\n    // \"dead\" placeholder docs can be periodically cleaned up \n    // ie: assertU(delQ(\"+live_b:false +timestamp_tdt:[* TO NOW/MINUTE-5MINUTE]\"));\n    // but to prevent the test from ebing time sensitive we'll just purge them all\n    assertU(delQ(\"+live_b:false\"));\n    assertU(commit());\n    // now doc can be re-added w/any version, no matter how low\n    assertU(adoc(\"id\", \"aaa\", \"name\", \"aaa\", \"my_version_l\", \"7\"));\n    assertU(commit());\n    assertJQ(req(\"q\",\"id:aaa\",\n                 \"fq\",\"live_b:true\",\n                 \"fl\",\"id,live_b,my_version_l\")\n             ,\"/response/numFound==1\"\n             ,\"/response/docs==[{'id':'aaa','my_version_l':7,'live_b':true}]}\");\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"667eea18b7ca87af38d05d81d479f943a717a6b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["667eea18b7ca87af38d05d81d479f943a717a6b1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"667eea18b7ca87af38d05d81d479f943a717a6b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}