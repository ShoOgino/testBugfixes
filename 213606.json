{"path":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#estimateTermStats(String,Terms,Map[String,Map[String,Object]],boolean).mjava","commits":[{"id":"e4583dbd381e291c87e23144564c59ba3391b188","date":1560187306,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/IndexSizeEstimator#estimateTermStats(String,Terms,Map[String,Map[String,Object]],boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void estimateTermStats(String field, Terms terms, Map<String, Map<String, Object>> stats, boolean isSampling) throws IOException {\n    Map<String, Object> perField = stats.computeIfAbsent(field, n -> new HashMap<>());\n    SummaryStatistics lengthSummary = (SummaryStatistics)perField.computeIfAbsent(\"lengths_terms\", s -> new MapWriterSummaryStatistics());\n    SummaryStatistics docFreqSummary = (SummaryStatistics)perField.computeIfAbsent(\"docFreqs\", s -> new MapWriterSummaryStatistics());\n    SummaryStatistics totalFreqSummary = (SummaryStatistics)perField.computeIfAbsent(\"lengths_postings\", s -> new MapWriterSummaryStatistics());\n    // TODO: add this at some point\n    //SummaryStatistics impactsSummary = (SummaryStatistics)perField.computeIfAbsent(\"lengths_impacts\", s -> new MapWriterSummaryStatistics());\n    SummaryStatistics payloadSummary = null;\n    if (terms.hasPayloads()) {\n      payloadSummary = (SummaryStatistics)perField.computeIfAbsent(\"lengths_payloads\", s -> new MapWriterSummaryStatistics());\n    }\n    ItemPriorityQueue topLen = (ItemPriorityQueue)perField.computeIfAbsent(\"topLen\", s -> new ItemPriorityQueue(topN));\n    ItemPriorityQueue topTotalFreq = (ItemPriorityQueue)perField.computeIfAbsent(\"topTotalFreq\", s -> new ItemPriorityQueue(topN));\n    TermsEnum termsEnum = terms.iterator();\n    BytesRef term;\n    PostingsEnum postings = null;\n    while ((term = termsEnum.next()) != null) {\n      if (isSampling) {\n        for (int i = 0; i < samplingStep; i++) {\n          lengthSummary.addValue(term.length);\n          docFreqSummary.addValue(termsEnum.docFreq());\n          totalFreqSummary.addValue(termsEnum.totalTermFreq());\n        }\n      } else {\n        lengthSummary.addValue(term.length);\n        docFreqSummary.addValue(termsEnum.docFreq());\n        totalFreqSummary.addValue(termsEnum.totalTermFreq());\n      }\n      if (terms.hasPayloads()) {\n        postings = termsEnum.postings(postings, PostingsEnum.ALL);\n        while (postings.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          int freq = postings.freq();\n          for (int i = 0; i < freq; i++) {\n            if (postings.nextPosition() < 0) {\n              break;\n            }\n            BytesRef payload = postings.getPayload();\n            if (payload != null) {\n              if (isSampling) {\n                for (int k = 0; k < samplingStep; k++) {\n                  payloadSummary.addValue(payload.length);\n                }\n              } else {\n                payloadSummary.addValue(payload.length);\n              }\n            }\n          }\n        }\n      }\n      String value = term.utf8ToString();\n      if (value.length() > maxLength) {\n        value = value.substring(0, maxLength);\n      }\n      topLen.insertWithOverflow(new Item(value, term.length));\n      topTotalFreq.insertWithOverflow(new Item(value, termsEnum.totalTermFreq()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4583dbd381e291c87e23144564c59ba3391b188":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4583dbd381e291c87e23144564c59ba3391b188"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4583dbd381e291c87e23144564c59ba3391b188"],"e4583dbd381e291c87e23144564c59ba3391b188":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}