{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n    delegate.addSortedNumericField(field, docToValueCount, values);\n    BKDTreeWriter writer = new BKDTreeWriter(maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> valueIt = values.iterator();\n    Iterator<Number> valueCountIt = docToValueCount.iterator();\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert valueCountIt.hasNext();\n      int count = valueCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert valueIt.hasNext();\n        long value = valueIt.next().longValue();\n        int latEnc = (int) (value >> 32);\n        int lonEnc = (int) (value & 0xffffffff);\n        writer.add(latEnc, lonEnc, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n    delegate.addSortedNumericField(field, docToValueCount, values);\n    BKDTreeWriter writer = new BKDTreeWriter(tempDir, tempFileNamePrefix, maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> valueIt = values.iterator();\n    Iterator<Number> valueCountIt = docToValueCount.iterator();\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert valueCountIt.hasNext();\n      int count = valueCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert valueIt.hasNext();\n        long value = valueIt.next().longValue();\n        int latEnc = (int) (value >> 32);\n        int lonEnc = (int) (value & 0xffffffff);\n        writer.add(latEnc, lonEnc, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n    delegate.addSortedNumericField(field, docToValueCount, values);\n    BKDTreeWriter writer = new BKDTreeWriter(maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> valueIt = values.iterator();\n    Iterator<Number> valueCountIt = docToValueCount.iterator();\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert valueCountIt.hasNext();\n      int count = valueCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert valueIt.hasNext();\n        long value = valueIt.next().longValue();\n        int latEnc = (int) (value >> 32);\n        int lonEnc = (int) (value & 0xffffffff);\n        writer.add(latEnc, lonEnc, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeDocValuesConsumer#addSortedNumericField(FieldInfo,Iterable[Number],Iterable[Number]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void addSortedNumericField(FieldInfo field, Iterable<Number> docToValueCount, Iterable<Number> values) throws IOException {\n    delegate.addSortedNumericField(field, docToValueCount, values);\n    BKDTreeWriter writer = new BKDTreeWriter(tempDir, tempFileNamePrefix, maxPointsInLeafNode, maxPointsSortInHeap);\n    Iterator<Number> valueIt = values.iterator();\n    Iterator<Number> valueCountIt = docToValueCount.iterator();\n    for (int docID=0;docID<state.segmentInfo.maxDoc();docID++) {\n      assert valueCountIt.hasNext();\n      int count = valueCountIt.next().intValue();\n      for(int i=0;i<count;i++) {\n        assert valueIt.hasNext();\n        long value = valueIt.next().longValue();\n        int latEnc = (int) (value >> 32);\n        int lonEnc = (int) (value & 0xffffffff);\n        writer.add(latEnc, lonEnc, docID);\n      }\n    }\n\n    long indexStartFP = writer.finish(out);\n\n    fieldIndexFPs.put(field.number, indexStartFP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}