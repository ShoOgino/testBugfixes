{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","commits":[{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.requiresPositions(flags)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, (flags & PostingsEnum.FLAG_FREQS) == 0 ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.requiresPositions(flags)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, (flags & PostingsEnum.FREQS) == 0 ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.requiresPositions(flags)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, (flags & PostingsEnum.FLAG_FREQS) == 0 ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9023c2bf8056230665bace786651c0716d78d31","date":1424736578,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.requiresPositions(flags)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, (flags & PostingsEnum.FREQS) == 0 ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5311f0bff57ce15a23909f4cfb953773630534","date":1424827033,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n      \n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions != null || postings.startOffsets != null) {\n          // TODO: reuse\n          SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n          e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n          return e;\n        }\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b4e3cd382d0d075a0f1725649c084bb6510c483","date":1428096423,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n      \n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions != null || postings.startOffsets != null) {\n          // TODO: reuse\n          SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n          e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n          return e;\n        }\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n\n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions == null && postings.startOffsets == null) {\n          return null;\n        }\n        // TODO: reuse\n        SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n        e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n        return e;\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(PostingsEnum,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsReader.SimpleTVTermsEnum#postings(Bits,PostingsEnum,int).mjava","sourceNew":"    @Override\n    public PostingsEnum postings(PostingsEnum reuse, int flags) throws IOException {\n      \n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions != null || postings.startOffsets != null) {\n          // TODO: reuse\n          SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n          e.reset(postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n          return e;\n        }\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","sourceOld":"    @Override\n    public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {\n      \n      if (PostingsEnum.featureRequested(flags, PostingsEnum.POSITIONS)) {\n        SimpleTVPostings postings = current.getValue();\n        if (postings.positions != null || postings.startOffsets != null) {\n          // TODO: reuse\n          SimpleTVPostingsEnum e = new SimpleTVPostingsEnum();\n          e.reset(liveDocs, postings.positions, postings.startOffsets, postings.endOffsets, postings.payloads);\n          return e;\n        }\n      }\n\n      // TODO: reuse\n      SimpleTVDocsEnum e = new SimpleTVDocsEnum();\n      e.reset(liveDocs, PostingsEnum.featureRequested(flags, PostingsEnum.FREQS) == false ? 1 : current.getValue().freq);\n      return e;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5311f0bff57ce15a23909f4cfb953773630534":["a9023c2bf8056230665bace786651c0716d78d31"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["6b4e3cd382d0d075a0f1725649c084bb6510c483"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"6b4e3cd382d0d075a0f1725649c084bb6510c483":["a9023c2bf8056230665bace786651c0716d78d31","cb5311f0bff57ce15a23909f4cfb953773630534"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9023c2bf8056230665bace786651c0716d78d31":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"cb5311f0bff57ce15a23909f4cfb953773630534":["6b4e3cd382d0d075a0f1725649c084bb6510c483"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["a9023c2bf8056230665bace786651c0716d78d31"],"6b4e3cd382d0d075a0f1725649c084bb6510c483":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a9023c2bf8056230665bace786651c0716d78d31":["cb5311f0bff57ce15a23909f4cfb953773630534","6b4e3cd382d0d075a0f1725649c084bb6510c483"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}