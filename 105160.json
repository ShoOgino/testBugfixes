{"path":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","pathOld":"/dev/null","sourceNew":"  void seek(TermInfo ti) throws IOException {\n    freqCount = ti.docFreq;\n    doc = 0;\n    freqStream.seek(ti.freqPointer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa8e9c04efb8c20778e66542a1d177eb9ab77d2","date":1011633132,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","sourceNew":"  void seek(TermInfo ti) throws IOException {\n    if (ti == null) {\n      freqCount = 0;\n    } else {\n      freqCount = ti.docFreq;\n      doc = 0;\n      freqStream.seek(ti.freqPointer);\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti) throws IOException {\n    freqCount = ti.docFreq;\n    doc = 0;\n    freqStream.seek(ti.freqPointer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7fb6d70db034a5456ae560175dd1b821eea9ff4","date":1066759157,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","sourceNew":null,"sourceOld":"  void seek(TermInfo ti) throws IOException {\n    if (ti == null) {\n      freqCount = 0;\n    } else {\n      freqCount = ti.docFreq;\n      doc = 0;\n      freqStream.seek(ti.freqPointer);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafd816608011f66422f3052c37962973582d12a","date":1087172166,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","pathOld":"/dev/null","sourceNew":"  void seek(TermInfo ti) throws IOException {\n    count = 0;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo,Term).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermInfo).mjava","sourceNew":"  void seek(TermInfo ti, Term term) throws IOException {\n    count = 0;\n    payloadLengthAtLastSkip = 0;\n    FieldInfo fi = parent.fieldInfos.fieldInfo(term.field);\n    currentFieldStoresPayloads = (fi != null) ? fi.storePayloads : false;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","sourceOld":"  void seek(TermInfo ti) throws IOException {\n    count = 0;\n    if (ti == null) {\n      df = 0;\n    } else {\n      df = ti.docFreq;\n      doc = 0;\n      skipDoc = 0;\n      skipCount = 0;\n      numSkips = df / skipInterval;\n      freqPointer = ti.freqPointer;\n      proxPointer = ti.proxPointer;\n      skipPointer = freqPointer + ti.skipOffset;\n      freqStream.seek(freqPointer);\n      haveSkipped = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eafd816608011f66422f3052c37962973582d12a":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"9fa8e9c04efb8c20778e66542a1d177eb9ab77d2":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["9fa8e9c04efb8c20778e66542a1d177eb9ab77d2"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["eafd816608011f66422f3052c37962973582d12a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8522ae207a56c6db28ca06fe6cc33e70911c3600"]},"commit2Childs":{"eafd816608011f66422f3052c37962973582d12a":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"9fa8e9c04efb8c20778e66542a1d177eb9ab77d2":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["9fa8e9c04efb8c20778e66542a1d177eb9ab77d2"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["eafd816608011f66422f3052c37962973582d12a"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}