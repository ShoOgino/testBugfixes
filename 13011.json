{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","sourceNew":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","sourceNew":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e6d6f6217dc04f29ee177d2837147dd47627787","date":1429543326,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","sourceNew":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalFields().mjava","sourceNew":"  final public ArrayList<String> OptionalFields() throws ParseException {Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\nif (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n{if (\"\" != null) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n}\n\n","sourceOld":"  final public ArrayList<String> OptionalFields() throws ParseException {\n  Token fieldName;\n  ArrayList<String> fieldNames = null;\n    label_1:\n    while (true) {\n      if (jj_2_1(2)) {\n        ;\n      } else {\n        break label_1;\n      }\n      // to the colon\n          fieldName = jj_consume_token(TERM);\n      jj_consume_token(COLON);\n      if (fieldNames == null) {\n        fieldNames = new ArrayList<String>();\n      }\n      fieldNames.add(fieldName.image);\n    }\n   {if (true) return fieldNames;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}