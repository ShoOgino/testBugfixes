{"path":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"/dev/null","sourceNew":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    }\n    throw new SolrException(1,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"183ba46e9837e95333f35c590df5d02d0071c076","date":1164074105,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","sourceNew":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    } else if (val.startsWith(\"NOW\")) {\n      /* :TODO: let Locale/TimeZone come from init args for rounding only */\n      DateMathParser p = new DateMathParser(UTC, Locale.US);\n      try {\n        return toInternal(p.parseMath(val.substring(3)));\n      } catch (ParseException e) {\n        throw new SolrException(400,\"Invalid Date Math String:'\" +val+'\\'',e);\n      }\n    }\n    throw new SolrException(400,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","sourceOld":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    }\n    throw new SolrException(1,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","sourceNew":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    } else if (val.startsWith(\"NOW\")) {\n      /* :TODO: let Locale/TimeZone come from init args for rounding only */\n      DateMathParser p = new DateMathParser(UTC, Locale.US);\n      try {\n        return toInternal(p.parseMath(val.substring(3)));\n      } catch (ParseException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid Date Math String:'\" +val+'\\'',e);\n      }\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","sourceOld":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    } else if (val.startsWith(\"NOW\")) {\n      /* :TODO: let Locale/TimeZone come from init args for rounding only */\n      DateMathParser p = new DateMathParser(UTC, Locale.US);\n      try {\n        return toInternal(p.parseMath(val.substring(3)));\n      } catch (ParseException e) {\n        throw new SolrException(400,\"Invalid Date Math String:'\" +val+'\\'',e);\n      }\n    }\n    throw new SolrException(400,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1","date":1185690521,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","sourceNew":"  public String toInternal(String val) {\n    final int len=val.length();\n    if (val.charAt(len-1) == Z) {\n      // check common case first, simple datetime\n      // NOTE: not parsed to ensure correctness\n      return val.substring(0,len-1);\n    }\n    return toInternal(parseMath(null, val));\n  }\n\n","sourceOld":"  public String toInternal(String val) {\n    int len=val.length();\n    if (val.charAt(len-1)=='Z') {\n      return val.substring(0,len-1);\n    } else if (val.startsWith(\"NOW\")) {\n      /* :TODO: let Locale/TimeZone come from init args for rounding only */\n      DateMathParser p = new DateMathParser(UTC, Locale.US);\n      try {\n        return toInternal(p.parseMath(val.substring(3)));\n      } catch (ParseException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid Date Math String:'\" +val+'\\'',e);\n      }\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid Date String:'\" +val+'\\'');\n  }\n\n","bugFix":null,"bugIntro":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc403e1b9435fee7d9e574f6e940b76e76d702bf","date":1211234422,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","sourceNew":"  public String toInternal(String val) {\n    return toInternal(parseMath(null, val));\n  }\n\n","sourceOld":"  public String toInternal(String val) {\n    final int len=val.length();\n    if (val.charAt(len-1) == Z) {\n      // check common case first, simple datetime\n      // NOTE: not parsed to ensure correctness\n      return val.substring(0,len-1);\n    }\n    return toInternal(parseMath(null, val));\n  }\n\n","bugFix":["487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1","0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/DateField#toInternal(String).mjava","sourceNew":"  public String toInternal(String val) {\n    return toInternal(parseMath(null, val));\n  }\n\n","sourceOld":"  public String toInternal(String val) {\n    return toInternal(parseMath(null, val));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"183ba46e9837e95333f35c590df5d02d0071c076":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"dc403e1b9435fee7d9e574f6e940b76e76d702bf":["487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["183ba46e9837e95333f35c590df5d02d0071c076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"183ba46e9837e95333f35c590df5d02d0071c076":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["183ba46e9837e95333f35c590df5d02d0071c076"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dc403e1b9435fee7d9e574f6e940b76e76d702bf":["ad94625fb8d088209f46650c8097196fec67f00c"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["487bcb36f5ba67741dd4dc6ebea3dc32420c4fb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}