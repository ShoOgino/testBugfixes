{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = numberOfShards+random().nextInt(4)+1;\n\n    int numberOfNodes = numberOfShards * maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = numberOfShards+random().nextInt(4)+1;\n\n    int numberOfNodes = numberOfShards * maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd","date":1503671644,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = random().nextInt(4)+1;\n\n    int numberOfNodes = (numberOfShards*numberOfReplicas + (maxShardsPerNode-1))/maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = numberOfShards+random().nextInt(4)+1;\n\n    int numberOfNodes = numberOfShards * maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","bugFix":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e6c4eb6f169ee828eabd776ced7d900664e65a","date":1503675775,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = random().nextInt(4)+1;\n\n    int numberOfNodes = (numberOfShards*numberOfReplicas + (maxShardsPerNode-1))/maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = numberOfShards+random().nextInt(4)+1;\n\n    int numberOfNodes = numberOfShards * maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = random().nextInt(4)+1;\n\n    int numberOfNodes = (numberOfShards*numberOfReplicas + (maxShardsPerNode-1))/maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = numberOfShards+random().nextInt(4)+1;\n\n    int numberOfNodes = numberOfShards * maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTROnSolrCloud#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n\n    int numberOfNodes = numberOfShards * numberOfReplicas;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes);\n\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    extraServlets = setupTestInit(solrconfig, schema, true);\n    System.setProperty(\"enable.update.log\", \"true\");\n\n    int numberOfShards = random().nextInt(4)+1;\n    int numberOfReplicas = random().nextInt(2)+1;\n    int maxShardsPerNode = random().nextInt(4)+1;\n\n    int numberOfNodes = (numberOfShards*numberOfReplicas + (maxShardsPerNode-1))/maxShardsPerNode;\n\n    setupSolrCluster(numberOfShards, numberOfReplicas, numberOfNodes, maxShardsPerNode);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","60e6c4eb6f169ee828eabd776ced7d900664e65a"],"3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["60e6c4eb6f169ee828eabd776ced7d900664e65a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"60e6c4eb6f169ee828eabd776ced7d900664e65a":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd"]},"commit2Childs":{"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd","9720b151fde2073f4e401450f4574e5f31c2d0ff","60e6c4eb6f169ee828eabd776ced7d900664e65a"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"3c8d3bfb0f69b530cbb72614ac4dc3461a79fbbd":["60e6c4eb6f169ee828eabd776ced7d900664e65a"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"60e6c4eb6f169ee828eabd776ced7d900664e65a":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}