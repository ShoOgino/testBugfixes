{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.BlockState#reset(int).mjava","commits":[{"id":"1f09f483a0844bb9dc34fb10380cb053aa96219b","date":1418894001,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.BlockState#reset(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Reset this block so that it stores state for the block\n     * that contains the given doc id.\n     */\n    void reset(int docID) throws IOException {\n      boolean success = false;\n      try {\n        doReset(docID);\n        success = true;\n      } finally {\n        if (success == false) {\n          // if the read failed, set chunkDocs to 0 so that it does not\n          // contain any docs anymore and is not reused. This should help\n          // get consistent exceptions when trying to get several\n          // documents which are in the same corrupted block since it will\n          // force the header to be decoded again\n          chunkDocs = 0;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f09f483a0844bb9dc34fb10380cb053aa96219b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f09f483a0844bb9dc34fb10380cb053aa96219b"],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}