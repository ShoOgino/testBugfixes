{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0 && text.compareTo(term) < 0) {\n        nextTerm = 0;\n        tvf.seek(tvfFP);\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0 && text.compareTo(term) < 0) {\n        nextTerm = 0;\n        tvf.seek(tvfFP);\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"814339e4b1ce2063ccbc6cacc6443a6446c7718b","date":1331991774,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0 && text.compareTo(term) < 0) {\n        nextTerm = 0;\n        tvf.seek(tvfFP);\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          nextTerm = 0;\n          tvf.seek(tvfFP);\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"814339e4b1ce2063ccbc6cacc6443a6446c7718b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["814339e4b1ce2063ccbc6cacc6443a6446c7718b"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["814339e4b1ce2063ccbc6cacc6443a6446c7718b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"]},"commit2Childs":{"814339e4b1ce2063ccbc6cacc6443a6446c7718b":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["814339e4b1ce2063ccbc6cacc6443a6446c7718b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}