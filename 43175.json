{"path":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","commits":[{"id":"29765e35c99654ed87e394d8bc13d8ab07b51092","date":1223889162,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.getDirectory(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.getDirectory(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.TOKENIZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = FSDirectory.open(newDir);\n    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_24), new MaxFieldLength(1000));\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["29765e35c99654ed87e394d8bc13d8ab07b51092"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"29765e35c99654ed87e394d8bc13d8ab07b51092":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["29765e35c99654ed87e394d8bc13d8ab07b51092"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"29765e35c99654ed87e394d8bc13d8ab07b51092":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}