{"path":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, FunctionValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, FunctionValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, DocValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n\tValueSource source = fp.parseValueSource();\n\tfinal float nvl = fp.parseFloat();\n\n\treturn new SimpleFloatFunction(source) {\n\t    @Override\n      protected String name() {\n\t\treturn \"nvl\";\n\t    }\n\n\t    @Override\n      protected float func(int doc, FunctionValues vals) {\n\t\tfloat v = vals.floatVal(doc);\n\t\tif (v == nvlFloatValue) {\n\t\t    return nvl;\n\t\t} else {\n\t\t    return v;\n\t\t}\n\t    }\n\t};\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws ParseException {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) throws IOException {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) throws IOException {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/NvlValueSourceParser#parse(FunctionQParser).mjava","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) throws IOException {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      ValueSource source = fp.parseValueSource();\n      final float nvl = fp.parseFloat();\n\n      return new SimpleFloatFunction(source) {\n        @Override\n      protected String name() {\n          return \"nvl\";\n        }\n\n        @Override\n        protected float func(int doc, FunctionValues vals) {\n          float v = vals.floatVal(doc);\n          if (v == nvlFloatValue) {\n            return nvl;\n          } else {\n            return v;\n          }\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3cdb67100dc016748799a77218aa409478372d79","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3cdb67100dc016748799a77218aa409478372d79":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","3cdb67100dc016748799a77218aa409478372d79"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3cdb67100dc016748799a77218aa409478372d79"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["19275ba31e621f6da1b83bf13af75233876fd3d4","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["c26f00b574427b55127e869b935845554afde1fa","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["19275ba31e621f6da1b83bf13af75233876fd3d4","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["d638301ad1cfcae567b681b893bc8781f0ee48a5"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"3cdb67100dc016748799a77218aa409478372d79":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["d638301ad1cfcae567b681b893bc8781f0ee48a5","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}