{"path":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyZnodesMatch(String,String).mjava","commits":[{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":0,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyZnodesMatch(String,String).mjava","pathOld":"/dev/null","sourceNew":"  // Insure that all znodes in first are in second and vice-versa\n  private void verifyZnodesMatch(String first, String second) throws KeeperException, InterruptedException {\n    verifyFirstNodesInSecond(first, second);\n    verifyFirstNodesInSecond(second, first);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5b515f281a63ffbd9030d4f3d458ede2e416337","date":1467591265,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyZnodesMatch(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyZnodesMatch(String,String).mjava","sourceNew":"  // Insure that all znodes in first are in second and vice-versa\n  private void verifyZnodesMatch(String first, String second) throws KeeperException, InterruptedException {\n    verifyFirstZNodesInSecond(first, second);\n    verifyFirstZNodesInSecond(second, first);\n  }\n\n","sourceOld":"  // Insure that all znodes in first are in second and vice-versa\n  private void verifyZnodesMatch(String first, String second) throws KeeperException, InterruptedException {\n    verifyFirstNodesInSecond(first, second);\n    verifyFirstNodesInSecond(second, first);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest#verifyZnodesMatch(String,String).mjava","pathOld":"/dev/null","sourceNew":"  // Insure that all znodes in first are in second and vice-versa\n  private void verifyZnodesMatch(String first, String second) throws KeeperException, InterruptedException {\n    verifyFirstZNodesInSecond(first, second);\n    verifyFirstZNodesInSecond(second, first);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d5b515f281a63ffbd9030d4f3d458ede2e416337":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d5b515f281a63ffbd9030d4f3d458ede2e416337"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5b515f281a63ffbd9030d4f3d458ede2e416337"]},"commit2Childs":{"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["d5b515f281a63ffbd9030d4f3d458ede2e416337"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d5b515f281a63ffbd9030d4f3d458ede2e416337":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}