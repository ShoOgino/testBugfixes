{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","commits":[{"id":"7c9cc1cf78edc774cdf339bab3ae62f077929607","date":1072205195,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Gets R1\n   *\n   * R1 - is the region after the first non-vowel follwing a vowel,\n   *      or is the null region at the end of the word if there is\n   *      no such non-vowel.\n   *\n   * @return null or a string representing R1\n\t */\n\tprivate String getR1( String value ) {\n    int     i;\n    int     j;\n    String  r1 = null ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    // find 1st vowel\n    i = value.length()-1 ;\n    for (j=0 ; j < i ; j++) {\n      if (isVowel(value.charAt(j))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    // find 1st non-vowel\n    for ( ; j < i ; j++) {\n      if (!(isVowel(value.charAt(j)))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    return value.substring(j+1) ;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53c309cc9a4957324d0036556f76dbc7c0ad4f79","date":1095448167,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","sourceNew":"\t/**\n\t * Gets R1\n   *\n   * R1 - is the region after the first non-vowel follwing a vowel,\n   *      or is the null region at the end of the word if there is\n   *      no such non-vowel.\n   *\n   * @return null or a string representing R1\n\t */\n\tprivate String getR1( String value ) {\n    int     i;\n    int     j;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    // find 1st vowel\n    i = value.length()-1 ;\n    for (j=0 ; j < i ; j++) {\n      if (isVowel(value.charAt(j))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    // find 1st non-vowel\n    for ( ; j < i ; j++) {\n      if (!(isVowel(value.charAt(j)))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    return value.substring(j+1) ;\n  }\n\n","sourceOld":"\t/**\n\t * Gets R1\n   *\n   * R1 - is the region after the first non-vowel follwing a vowel,\n   *      or is the null region at the end of the word if there is\n   *      no such non-vowel.\n   *\n   * @return null or a string representing R1\n\t */\n\tprivate String getR1( String value ) {\n    int     i;\n    int     j;\n    String  r1 = null ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    // find 1st vowel\n    i = value.length()-1 ;\n    for (j=0 ; j < i ; j++) {\n      if (isVowel(value.charAt(j))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    // find 1st non-vowel\n    for ( ; j < i ; j++) {\n      if (!(isVowel(value.charAt(j)))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    return value.substring(j+1) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#getR1(String).mjava","sourceNew":"\t/**\n\t * Gets R1\n   *\n   * R1 - is the region after the first non-vowel follwing a vowel,\n   *      or is the null region at the end of the word if there is\n   *      no such non-vowel.\n   *\n   * @return null or a string representing R1\n\t */\n\tprivate String getR1( String value ) {\n    int     i;\n    int     j;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    // find 1st vowel\n    i = value.length()-1 ;\n    for (j=0 ; j < i ; j++) {\n      if (isVowel(value.charAt(j))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    // find 1st non-vowel\n    for ( ; j < i ; j++) {\n      if (!(isVowel(value.charAt(j)))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    return value.substring(j+1) ;\n  }\n\n","sourceOld":"\t/**\n\t * Gets R1\n   *\n   * R1 - is the region after the first non-vowel follwing a vowel,\n   *      or is the null region at the end of the word if there is\n   *      no such non-vowel.\n   *\n   * @return null or a string representing R1\n\t */\n\tprivate String getR1( String value ) {\n    int     i;\n    int     j;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    // find 1st vowel\n    i = value.length()-1 ;\n    for (j=0 ; j < i ; j++) {\n      if (isVowel(value.charAt(j))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    // find 1st non-vowel\n    for ( ; j < i ; j++) {\n      if (!(isVowel(value.charAt(j)))) {\n        break ;\n      }\n    }\n\n    if (!(j < i)) {\n      return null ;\n    }\n\n    return value.substring(j+1) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["53c309cc9a4957324d0036556f76dbc7c0ad4f79"],"53c309cc9a4957324d0036556f76dbc7c0ad4f79":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"53c309cc9a4957324d0036556f76dbc7c0ad4f79":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["53c309cc9a4957324d0036556f76dbc7c0ad4f79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}