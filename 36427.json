{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","sourceOld":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","sourceOld":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","sourceOld":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","sourceOld":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"enablePositionIncrements\", \"false\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","sourceOld":"  @Test\n    public void testCreationWithWhiteList() throws Exception {\n      TypeTokenFilterFactory typeTokenFilterFactory = new TypeTokenFilterFactory();\n      Map<String, String> args = new HashMap<String, String>();\n      args.put(\"types\", \"stoptypes-1.txt, stoptypes-2.txt\");\n      args.put(\"enablePositionIncrements\", \"false\");\n      args.put(\"useWhitelist\",\"true\");\n      typeTokenFilterFactory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n      typeTokenFilterFactory.init(args);\n      NumericTokenStream input = new NumericTokenStream();\n      input.setIntValue(123);\n      typeTokenFilterFactory.create(input);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"enablePositionIncrements\", \"true\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","sourceOld":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"enablePositionIncrements\", \"false\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"192e49c0445803405b0bc0eebc8b758485480c21","date":1367699151,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","sourceOld":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"enablePositionIncrements\", \"true\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilterFactory#testCreationWithWhiteList().mjava","sourceNew":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"useWhitelist\", \"true\");\n    CannedTokenStream input = new CannedTokenStream();\n    factory.create(input);\n  }\n\n","sourceOld":"  public void testCreationWithWhiteList() throws Exception {\n    TokenFilterFactory factory = tokenFilterFactory(\"Type\",\n        \"types\", \"stoptypes-1.txt, stoptypes-2.txt\",\n        \"useWhitelist\", \"true\");\n    NumericTokenStream input = new NumericTokenStream();\n    input.setIntValue(123);\n    factory.create(input);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"192e49c0445803405b0bc0eebc8b758485480c21":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"770342641f7b505eaa8dccdc666158bff2419109":["192e49c0445803405b0bc0eebc8b758485480c21"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"192e49c0445803405b0bc0eebc8b758485480c21":["770342641f7b505eaa8dccdc666158bff2419109"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["192e49c0445803405b0bc0eebc8b758485480c21"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}