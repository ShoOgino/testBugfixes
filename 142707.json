{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw new RuntimeException(\"Huh? TODO: \" + parsedValue);\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw new RuntimeException(\"Huh? TODO: \" + parsedValue);\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fee3973eb91c4b44e67407077f9279ab8cf8629","date":1453821560,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","sourceNew":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw err(\"Unknown facet type key=\" + key + \" class=\" + (parsedValue == null ? \"null\" : parsedValue.getClass().getName()));\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","sourceOld":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw new RuntimeException(\"Huh? TODO: \" + parsedValue);\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac88193d9fe80e165a43bb0555c43afa83da8330","date":1453823827,"type":3,"author":"jbernste","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","sourceNew":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw err(\"Unknown facet type key=\" + key + \" class=\" + (parsedValue == null ? \"null\" : parsedValue.getClass().getName()));\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","sourceOld":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw new RuntimeException(\"Huh? TODO: \" + parsedValue);\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","sourceNew":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw err(\"Unknown facet type key=\" + key + \" class=\" + (parsedValue == null ? \"null\" : parsedValue.getClass().getName()));\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","sourceOld":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw new RuntimeException(\"Huh? TODO: \" + parsedValue);\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseSubs(Object).mjava","sourceNew":null,"sourceOld":"  // TODO: put the FacetRequest on the parser object?\n  public void parseSubs(Object o) throws SyntaxError {\n    if (o==null) return;\n    if (o instanceof Map) {\n      Map<String,Object> m = (Map<String, Object>) o;\n      for (Map.Entry<String,Object> entry : m.entrySet()) {\n        String key = entry.getKey();\n        Object value = entry.getValue();\n\n        if (\"processEmpty\".equals(key)) {\n          facet.processEmpty = getBoolean(m, \"processEmpty\", false);\n          continue;\n        }\n\n        // \"my_prices\" : { \"range\" : { \"field\":...\n        // key=\"my_prices\", value={\"range\":..\n\n        Object parsedValue = parseFacetOrStat(key, value);\n\n        // TODO: have parseFacetOrStat directly add instead of return?\n        if (parsedValue instanceof FacetRequest) {\n          facet.addSubFacet(key, (FacetRequest)parsedValue);\n        } else if (parsedValue instanceof AggValueSource) {\n          facet.addStat(key, (AggValueSource)parsedValue);\n        } else {\n          throw err(\"Unknown facet type key=\" + key + \" class=\" + (parsedValue == null ? \"null\" : parsedValue.getClass().getName()));\n        }\n      }\n    } else {\n      // facet : my_field?\n      throw err(\"Expected map for facet/stat\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac88193d9fe80e165a43bb0555c43afa83da8330":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","5fee3973eb91c4b44e67407077f9279ab8cf8629"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","ac88193d9fe80e165a43bb0555c43afa83da8330"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"5fee3973eb91c4b44e67407077f9279ab8cf8629":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ac88193d9fe80e165a43bb0555c43afa83da8330":["248f6ecc900c3a5633fd5ca6f564ea8b717720da","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac88193d9fe80e165a43bb0555c43afa83da8330","1e6acbaae7af722f17204ceccf0f7db5753eccf3","5fee3973eb91c4b44e67407077f9279ab8cf8629"],"5fee3973eb91c4b44e67407077f9279ab8cf8629":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}