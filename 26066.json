{"path":"lucene/core/src/java/org/apache/lucene/search/SearcherFactory#newSearcher(IndexReader,IndexReader).mjava","commits":[{"id":"e0dfae671422e7453a9199aa320f91427cd80d60","date":1427895926,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SearcherFactory#newSearcher(IndexReader,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns a new IndexSearcher over the given reader.\n   * @param reader the reader to create a new searcher for\n   * @param previousReader the reader previously used to create a new searcher.\n   *                       This can be <code>null</code> if unknown or if the given reader is the initially opened reader.\n   *                       If this reader is non-null it can be used to find newly opened segments compared to the new reader to warm\n   *                       the searcher up before returning.\n   */\n  public IndexSearcher newSearcher(IndexReader reader, IndexReader previousReader) throws IOException {\n    return new IndexSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SearcherFactory#newSearcher(IndexReader,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns a new IndexSearcher over the given reader.\n   * @param reader the reader to create a new searcher for\n   * @param previousReader the reader previously used to create a new searcher.\n   *                       This can be <code>null</code> if unknown or if the given reader is the initially opened reader.\n   *                       If this reader is non-null it can be used to find newly opened segments compared to the new reader to warm\n   *                       the searcher up before returning.\n   */\n  public IndexSearcher newSearcher(IndexReader reader, IndexReader previousReader) throws IOException {\n    return new IndexSearcher(reader);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0dfae671422e7453a9199aa320f91427cd80d60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e0dfae671422e7453a9199aa320f91427cd80d60"],"0c924d4069ef5a5bc479a493befe0121aada6896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0dfae671422e7453a9199aa320f91427cd80d60"]},"commit2Childs":{"e0dfae671422e7453a9199aa320f91427cd80d60":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0c924d4069ef5a5bc479a493befe0121aada6896"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0dfae671422e7453a9199aa320f91427cd80d60","0c924d4069ef5a5bc479a493befe0121aada6896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0c924d4069ef5a5bc479a493befe0121aada6896":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0c924d4069ef5a5bc479a493befe0121aada6896"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}