{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    try {\n      request.getParams();\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains,\n          e.getMessage().contains(errorContains));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    Exception e = expectThrows(Exception.class, request::getParams);\n    assertTrue(\"Expected exception message to contain: \" + errorContains,\n        e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    try {\n      request.getParams();\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains,\n          e.getMessage().contains(errorContains));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    Exception e = expectThrows(Exception.class, request::getParams);\n    assertTrue(\"Expected exception message to contain: \" + errorContains,\n        e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    try {\n      request.getParams();\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains,\n          e.getMessage().contains(errorContains));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    Exception e = expectThrows(Exception.class, request::getParams);\n    assertTrue(\"Expected exception message to contain: \" + errorContains,\n        e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    try {\n      request.getParams();\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains,\n          e.getMessage().contains(errorContains));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestConfigSetAdminRequest#verifyException(ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(@SuppressWarnings({\"rawtypes\"})ConfigSetAdminRequest request, String errorContains) {\n    Exception e = expectThrows(Exception.class, request::getParams);\n    assertTrue(\"Expected exception message to contain: \" + errorContains,\n        e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(ConfigSetAdminRequest request, String errorContains) {\n    Exception e = expectThrows(Exception.class, request::getParams);\n    assertTrue(\"Expected exception message to contain: \" + errorContains,\n        e.getMessage().contains(errorContains));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["2209af2c265d2258ec4b29c8cc78622d36994a15","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["2209af2c265d2258ec4b29c8cc78622d36994a15","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["9ba1b632c041956c93c41aa1143d16a567014891","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}