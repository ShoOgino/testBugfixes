{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#assertHits(int,String,IndexSearcher).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#assertHits(int,String,IndexSearcher).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is)\n      throws IOException, QueryNodeException {\n    StandardQueryParser qp = new StandardQueryParser();\n    qp.setAnalyzer(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n    qp.setLocale(Locale.ENGLISH);\n\n    Query q = qp.parse(query, \"date\");\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is)\n      throws IOException, QueryNodeException {\n    StandardQueryParser qp = new StandardQueryParser();\n    qp.setAnalyzer(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n    qp.setLocale(Locale.ENGLISH);\n\n    Query q = qp.parse(query, \"date\");\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#assertHits(int,String,IndexSearcher).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#assertHits(int,String,IndexSearcher).mjava","sourceNew":"  private void assertHits(int expected, String query, IndexSearcher is)\n      throws IOException, QueryNodeException {\n    StandardQueryParser qp = new StandardQueryParser();\n    qp.setAnalyzer(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n    qp.setLocale(Locale.ENGLISH);\n\n    Query q = qp.parse(query, \"date\");\n    ScoreDoc[] hits = is.search(q, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","sourceOld":"  private void assertHits(int expected, String query, IndexSearcher is)\n      throws IOException, QueryNodeException {\n    StandardQueryParser qp = new StandardQueryParser();\n    qp.setAnalyzer(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n    qp.setLocale(Locale.ENGLISH);\n\n    Query q = qp.parse(query, \"date\");\n    ScoreDoc[] hits = is.search(q, null, 1000).scoreDocs;\n    assertEquals(expected, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}