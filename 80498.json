{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","commits":[{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(ThreadSafeClientConnManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"10034129a9d9aaaeba391901f4be8f100b21eb7c","date":1360791957,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","sourceNew":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(PoolingClientConnectionManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((PoolingClientConnectionManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((PoolingClientConnectionManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(ThreadSafeClientConnManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","sourceNew":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(PoolingClientConnectionManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((PoolingClientConnectionManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((PoolingClientConnectionManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(ThreadSafeClientConnManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((ThreadSafeClientConnManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","sourceNew":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    try {\n      assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n      assertEquals(PoolingClientConnectionManager.class, client.getConnectionManager().getClass());\n      assertEquals(22345, ((PoolingClientConnectionManager)client.getConnectionManager()).getMaxTotal());\n      assertEquals(32345, ((PoolingClientConnectionManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n      assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n      assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n      assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n      assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n      assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    } finally {\n      client.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n    assertEquals(PoolingClientConnectionManager.class, client.getConnectionManager().getClass());\n    assertEquals(22345, ((PoolingClientConnectionManager)client.getConnectionManager()).getMaxTotal());\n    assertEquals(32345, ((PoolingClientConnectionManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n    assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n    assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n    assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n    assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n    assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    client.getConnectionManager().shutdown();\n  }\n\n","bugFix":["10034129a9d9aaaeba391901f4be8f100b21eb7c","eb99886ff640d94edb43e0d36112a2b7023379ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/HttpClientUtilTest#testSetParams().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSetParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_PASS, \"pass\");\n    params.set(HttpClientUtil.PROP_BASIC_AUTH_USER, \"user\");\n    params.set(HttpClientUtil.PROP_CONNECTION_TIMEOUT, 12345);\n    params.set(HttpClientUtil.PROP_FOLLOW_REDIRECTS, true);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 22345);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32345);\n    params.set(HttpClientUtil.PROP_SO_TIMEOUT, 42345);\n    params.set(HttpClientUtil.PROP_USE_RETRY, false);\n    DefaultHttpClient client = (DefaultHttpClient) HttpClientUtil.createClient(params);\n    try {\n      assertEquals(12345, HttpConnectionParams.getConnectionTimeout(client.getParams()));\n      assertEquals(PoolingClientConnectionManager.class, client.getConnectionManager().getClass());\n      assertEquals(22345, ((PoolingClientConnectionManager)client.getConnectionManager()).getMaxTotal());\n      assertEquals(32345, ((PoolingClientConnectionManager)client.getConnectionManager()).getDefaultMaxPerRoute());\n      assertEquals(42345, HttpConnectionParams.getSoTimeout(client.getParams()));\n      assertEquals(HttpClientUtil.NO_RETRY, client.getHttpRequestRetryHandler());\n      assertEquals(\"pass\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getPassword());\n      assertEquals(\"user\", client.getCredentialsProvider().getCredentials(new AuthScope(\"127.0.0.1\", 1234)).getUserPrincipal().getName());\n      assertEquals(true, client.getParams().getParameter(ClientPNames.HANDLE_REDIRECTS));\n    } finally {\n      client.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"10034129a9d9aaaeba391901f4be8f100b21eb7c":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"3b41f996b22bd5518650f897d050088ff808ec03":["eb99886ff640d94edb43e0d36112a2b7023379ba","10034129a9d9aaaeba391901f4be8f100b21eb7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["10034129a9d9aaaeba391901f4be8f100b21eb7c"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"10034129a9d9aaaeba391901f4be8f100b21eb7c":["3b41f996b22bd5518650f897d050088ff808ec03","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["859081acf00749f5dd462772c571d611d4a4d2db"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["10034129a9d9aaaeba391901f4be8f100b21eb7c","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}