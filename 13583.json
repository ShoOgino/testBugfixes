{"path":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[],int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[],int,int).mjava","sourceNew":"  void assertByteArrayEquals(byte[] b1, byte[] b2, int b2offset, int b2length) {\n        if (b1.length != b2length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[b2offset+i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[b2offset+i]);\n          }\n        }\n      }    \n\n","sourceOld":"  void assertByteArrayEquals(byte[] b1, byte[] b2, int b2offset, int b2length) {\n        if (b1.length != b2length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[b2offset+i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[b2offset+i]);\n          }\n        }\n      }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[],int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloads#assertByteArrayEquals(byte[],byte[],int,int).mjava","sourceNew":"  void assertByteArrayEquals(byte[] b1, byte[] b2, int b2offset, int b2length) {\n    if (b1.length != b2length) {\n      fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2length);\n    }\n        \n    for (int i = 0; i < b1.length; i++) {\n      if (b1[i] != b2[b2offset+i]) {\n        fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[b2offset+i]);\n      }\n    }\n  }    \n\n","sourceOld":"  void assertByteArrayEquals(byte[] b1, byte[] b2, int b2offset, int b2length) {\n        if (b1.length != b2length) {\n          fail(\"Byte arrays have different lengths: \" + b1.length + \", \" + b2length);\n        }\n        \n        for (int i = 0; i < b1.length; i++) {\n          if (b1[i] != b2[b2offset+i]) {\n            fail(\"Byte arrays different at index \" + i + \": \" + b1[i] + \", \" + b2[b2offset+i]);\n          }\n        }\n      }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}