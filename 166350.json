{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#getUnloadedCoreDescriptor(String).mjava","commits":[{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getUnloadedCoreDescriptor(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a solr core descriptor for a core that is not loaded. Note that if the caller calls this on a\n   * loaded core, the unloaded descriptor will be returned.\n   *\n   * @param cname - name of the unloaded core descriptor to load. NOTE:\n   * @return a coreDescriptor. May return null\n   */\n  public CoreDescriptor getUnloadedCoreDescriptor(String cname) {\n    return coreMaps.getUnloadedCoreDescriptor(cname);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getUnloadedCoreDescriptor(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getUnloadedCoreDescriptor(String).mjava","sourceNew":"  /**\n   * Gets a solr core descriptor for a core that is not loaded. Note that if the caller calls this on a\n   * loaded core, the unloaded descriptor will be returned.\n   *\n   * @param cname - name of the unloaded core descriptor to load. NOTE:\n   * @return a coreDescriptor. May return null\n   */\n  public CoreDescriptor getUnloadedCoreDescriptor(String cname) {\n    return solrCores.getUnloadedCoreDescriptor(cname);\n  }\n\n","sourceOld":"  /**\n   * Gets a solr core descriptor for a core that is not loaded. Note that if the caller calls this on a\n   * loaded core, the unloaded descriptor will be returned.\n   *\n   * @param cname - name of the unloaded core descriptor to load. NOTE:\n   * @return a coreDescriptor. May return null\n   */\n  public CoreDescriptor getUnloadedCoreDescriptor(String cname) {\n    return coreMaps.getUnloadedCoreDescriptor(cname);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9409650933cc688e77e565092a25e58adfc2e18d":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a837c064b67fa63a9394136e31218b908cdcf783":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9409650933cc688e77e565092a25e58adfc2e18d"]},"commit2Childs":{"9409650933cc688e77e565092a25e58adfc2e18d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["9409650933cc688e77e565092a25e58adfc2e18d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}