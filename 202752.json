{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","pathOld":"/dev/null","sourceNew":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    if(functionNames.containsKey(expression.getFunctionName())){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(functionNames.get(expression.getFunctionName()))){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60c716cf818aff6857d8490cd0fb8b5aa432408f","date":1577074826,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","sourceNew":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if(classSupplier != null){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(classSupplier.get())){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","sourceOld":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    if(functionNames.containsKey(expression.getFunctionName())){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(functionNames.get(expression.getFunctionName()))){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","sourceNew":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if(classSupplier != null){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(classSupplier.get())){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","sourceOld":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    if(functionNames.containsKey(expression.getFunctionName())){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(functionNames.get(expression.getFunctionName()))){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","sourceNew":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes) {\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if (classSupplier != null) {\n      for (Class clazz : clazzes) {\n        if (!clazz.isAssignableFrom(classSupplier.get())) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;    \n  }\n\n","sourceOld":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes){\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if(classSupplier != null){\n      for(Class clazz : clazzes){\n        if(!clazz.isAssignableFrom(classSupplier.get())){\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","date":1591744896,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#doesRepresentTypes(StreamExpression,Class...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public boolean doesRepresentTypes(StreamExpression expression, @SuppressWarnings({\"rawtypes\"})Class ... clazzes) {\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if (classSupplier != null) {\n      for (@SuppressWarnings({\"rawtypes\"})Class clazz : clazzes) {\n        if (!clazz.isAssignableFrom(classSupplier.get())) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;    \n  }\n\n","sourceOld":"  public boolean doesRepresentTypes(StreamExpression expression, Class ... clazzes) {\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName());\n    if (classSupplier != null) {\n      for (Class clazz : clazzes) {\n        if (!clazz.isAssignableFrom(classSupplier.get())) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["88073e8783f450d4c0218decc2f001a1ac2c7e7c","60c716cf818aff6857d8490cd0fb8b5aa432408f"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["804a8d5358fe7b7563b85ee7838714d720b89272"],"804a8d5358fe7b7563b85ee7838714d720b89272":["60c716cf818aff6857d8490cd0fb8b5aa432408f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"]},"commit2Childs":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","804a8d5358fe7b7563b85ee7838714d720b89272"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["60c716cf818aff6857d8490cd0fb8b5aa432408f","96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"804a8d5358fe7b7563b85ee7838714d720b89272":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}