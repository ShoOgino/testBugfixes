{"path":"solr/solrj/src/java/org/apache/noggit/JSONParser#getNumberChars().mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/noggit/JSONParser#getNumberChars().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the characters of a JSON numeric value.\n   * <p/>The underlying buffer of the returned <code>CharArr</code> should *not* be\n   * modified as it may be shared with the input buffer.\n   * <p/>The returned <code>CharArr</code> will only be valid up until\n   * the next JSONParser method is called.  Any required data should be\n   * read before that point.\n   */  \n  public CharArr getNumberChars() throws IOException {\n    int ev=0;\n    if (valstate==0) ev = nextEvent();\n\n    if (valstate == LONG || valstate == NUMBER) {\n      valstate=0;\n      return out;\n    }\n    else if (valstate==BIGNUMBER) {\n      continueNumber(out);\n      valstate=0;\n      return out;\n    } else {\n      throw err(\"Unexpected \" + ev);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8","date":1363620515,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/noggit/JSONParser#getNumberChars().mjava","sourceNew":null,"sourceOld":"  /** Returns the characters of a JSON numeric value.\n   * <p/>The underlying buffer of the returned <code>CharArr</code> should *not* be\n   * modified as it may be shared with the input buffer.\n   * <p/>The returned <code>CharArr</code> will only be valid up until\n   * the next JSONParser method is called.  Any required data should be\n   * read before that point.\n   */  \n  public CharArr getNumberChars() throws IOException {\n    int ev=0;\n    if (valstate==0) ev = nextEvent();\n\n    if (valstate == LONG || valstate == NUMBER) {\n      valstate=0;\n      return out;\n    }\n    else if (valstate==BIGNUMBER) {\n      continueNumber(out);\n      valstate=0;\n      return out;\n    } else {\n      throw err(\"Unexpected \" + ev);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"]},"commit2Childs":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}