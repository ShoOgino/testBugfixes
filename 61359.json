{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/IntervalFunction.UnorderedIntervalIterator#hasOverlaps(IntervalIterator).mjava","commits":[{"id":"c3480728ed564c17162fff1200a8d15c1a5f24cd","date":1527693339,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/IntervalFunction.UnorderedIntervalIterator#hasOverlaps(IntervalIterator).mjava","pathOld":"/dev/null","sourceNew":"    private boolean hasOverlaps(IntervalIterator candidate) {\n      for (IntervalIterator it : queue) {\n        if (it.start() < candidate.start()) {\n          if (it.end() >= candidate.start()) {\n            return true;\n          }\n          continue;\n        }\n        if (it.start() == candidate.start()) {\n          return true;\n        }\n        if (it.start() <= candidate.end()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/UnorderedIntervalsSource.UnorderedIntervalIterator#hasOverlaps(IntervalIterator).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/IntervalFunction.UnorderedIntervalIterator#hasOverlaps(IntervalIterator).mjava","sourceNew":"    private boolean hasOverlaps(IntervalIterator candidate) {\n      for (IntervalIterator it : queue) {\n        if (it.start() < candidate.start()) {\n          if (it.end() >= candidate.start()) {\n            return true;\n          }\n          continue;\n        }\n        if (it.start() == candidate.start()) {\n          return true;\n        }\n        if (it.start() <= candidate.end()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    private boolean hasOverlaps(IntervalIterator candidate) {\n      for (IntervalIterator it : queue) {\n        if (it.start() < candidate.start()) {\n          if (it.end() >= candidate.start()) {\n            return true;\n          }\n          continue;\n        }\n        if (it.start() == candidate.start()) {\n          return true;\n        }\n        if (it.start() <= candidate.end()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["c3480728ed564c17162fff1200a8d15c1a5f24cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3480728ed564c17162fff1200a8d15c1a5f24cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"]},"commit2Childs":{"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3480728ed564c17162fff1200a8d15c1a5f24cd"],"c3480728ed564c17162fff1200a8d15c1a5f24cd":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}