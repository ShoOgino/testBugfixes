{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","commits":[{"id":"9fa9cb6b109951110cc6d6a6a79c22ad6ee88444","date":1527778252,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"/dev/null","sourceNew":"  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dd9e307b8831fae9a784d5d04fe1d9606d4f973","date":1528204451,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","sourceNew":"  /**Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":"  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","sourceNew":"  /**Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":"  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","sourceNew":"  /**Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":"  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","sourceNew":"  /**\n   * Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath      path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath(clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":"  /**Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath( clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader#[T]_getClusterProperty(List[String],T).mjava","sourceNew":"  /**\n   * Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath      path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  @SuppressWarnings({\"unchecked\"})\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath(clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","sourceOld":"  /**\n   * Same as the above but allows a full json path as a list of parts\n   *\n   * @param keyPath      path to the property example [\"collectionDefauls\", \"numShards\"]\n   * @param defaultValue a default value to use if no such property exists\n   * @return the cluster property, or a default if the property is not set\n   */\n  public <T> T getClusterProperty(List<String> keyPath, T defaultValue) {\n    T value = (T) Utils.getObjectByPath(clusterProperties, false, keyPath);\n    if (value == null)\n      return defaultValue;\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["5dd9e307b8831fae9a784d5d04fe1d9606d4f973"],"5dd9e307b8831fae9a784d5d04fe1d9606d4f973":["9fa9cb6b109951110cc6d6a6a79c22ad6ee88444"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["9fa9cb6b109951110cc6d6a6a79c22ad6ee88444","5dd9e307b8831fae9a784d5d04fe1d9606d4f973"],"f592209545c71895260367152601e9200399776d":["9fa9cb6b109951110cc6d6a6a79c22ad6ee88444","5dd9e307b8831fae9a784d5d04fe1d9606d4f973"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"9fa9cb6b109951110cc6d6a6a79c22ad6ee88444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"5dd9e307b8831fae9a784d5d04fe1d9606d4f973":["2668c99990e4c94a78bac005aa682b7c5986d23a","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fa9cb6b109951110cc6d6a6a79c22ad6ee88444"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"9fa9cb6b109951110cc6d6a6a79c22ad6ee88444":["5dd9e307b8831fae9a784d5d04fe1d9606d4f973","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}