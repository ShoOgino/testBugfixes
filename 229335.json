{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","commits":[{"id":"e0976cda1a864caa753e58d43b5b11b8b9d9fbef","date":1353438038,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new TermFreqArrayIterator(new TermFreq[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new TermFreqArrayIterator(new TermFreq[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new TermFreqPayloadArrayIterator(new TermFreqPayload[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new TermFreqArrayIterator(new TermFreq[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new TermFreqPayloadArrayIterator(new TermFreqPayload[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    FuzzySuggester suggester = new FuzzySuggester(analyzer);\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    FuzzySuggester suggester = new FuzzySuggester(analyzer);\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    FuzzySuggester suggester = new FuzzySuggester(new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/FuzzySuggesterTest#testEmpty().mjava","sourceNew":"  public void testEmpty() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    Directory tempDir = getDirectory();\n    FuzzySuggester suggester = new FuzzySuggester(tempDir, \"fuzzy\", analyzer);\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n    IOUtils.close(analyzer, tempDir);\n  }\n\n","sourceOld":"  public void testEmpty() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    FuzzySuggester suggester = new FuzzySuggester(analyzer);\n    suggester.build(new InputArrayIterator(new Input[0]));\n\n    List<LookupResult> result = suggester.lookup(\"a\", false, 20);\n    assertTrue(result.isEmpty());\n    analyzer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7","a56958d7f71a28824f20031ffbb2e13502a0274e"],"e0976cda1a864caa753e58d43b5b11b8b9d9fbef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0976cda1a864caa753e58d43b5b11b8b9d9fbef"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["e0976cda1a864caa753e58d43b5b11b8b9d9fbef"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"e0976cda1a864caa753e58d43b5b11b8b9d9fbef":["407687e67faf6e1f02a211ca078d8e3eed631027","ada2f7352a7f964fe49bccd13227c4ec38563d39"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0976cda1a864caa753e58d43b5b11b8b9d9fbef","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}