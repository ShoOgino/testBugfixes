{"path":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Initially invalid, valid after next() called for the first time. \n     */\n    public int docFreq() {\n        if (actualEnum == null) return -1;\n        return actualEnum.docFreq();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b24692af739249f4a81d97bececd979938b963f","date":1101237744,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","sourceNew":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    public int docFreq() {\n        if (actualEnum == null) return -1;\n        return actualEnum.docFreq();\n    }\n\n","sourceOld":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Initially invalid, valid after next() called for the first time. \n     */\n    public int docFreq() {\n        if (actualEnum == null) return -1;\n        return actualEnum.docFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f7d84f690e0bbb5758c1aae9f89183da2fa31fd","date":1239737743,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","sourceNew":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    public int docFreq() {\n        if (currentTerm == null) return -1;\n        assert actualEnum != null;\n        return actualEnum.docFreq();\n    }\n\n","sourceOld":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    public int docFreq() {\n        if (actualEnum == null) return -1;\n        return actualEnum.docFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","sourceNew":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    @Override\n    public int docFreq() {\n        if (currentTerm == null) return -1;\n        assert actualEnum != null;\n        return actualEnum.docFreq();\n    }\n\n","sourceOld":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    public int docFreq() {\n        if (currentTerm == null) return -1;\n        assert actualEnum != null;\n        return actualEnum.docFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","pathOld":"src/java/org/apache/lucene/search/FilteredTermEnum#docFreq().mjava","sourceNew":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    @Override\n    public int docFreq() {\n        if (currentTerm == null) return -1;\n        assert actualEnum != null;\n        return actualEnum.docFreq();\n    }\n\n","sourceOld":"    /** \n     * Returns the docFreq of the current Term in the enumeration.\n     * Returns -1 if no Term matches or all terms have been enumerated.\n     */\n    @Override\n    public int docFreq() {\n        if (currentTerm == null) return -1;\n        assert actualEnum != null;\n        return actualEnum.docFreq();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2b24692af739249f4a81d97bececd979938b963f":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f7d84f690e0bbb5758c1aae9f89183da2fa31fd":["2b24692af739249f4a81d97bececd979938b963f"],"8a9e385641d717e641408d8fbbc62be8fc766357":["5f7d84f690e0bbb5758c1aae9f89183da2fa31fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"2b24692af739249f4a81d97bececd979938b963f":["5f7d84f690e0bbb5758c1aae9f89183da2fa31fd"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["2b24692af739249f4a81d97bececd979938b963f"],"5f7d84f690e0bbb5758c1aae9f89183da2fa31fd":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}