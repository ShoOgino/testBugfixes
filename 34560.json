{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","commits":[{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a37a7b0a78003a4b0171c6c70384c2a70c686670","date":1289859534,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    @Override\n    public BytesRef getPayload() throws IOException {\n      throw new IOException(\"No payloads exist for this field!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["a37a7b0a78003a4b0171c6c70384c2a70c686670"],"a37a7b0a78003a4b0171c6c70384c2a70c686670":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["99cf56f3a650b908f7017a72f9d23940418f8a52","a37a7b0a78003a4b0171c6c70384c2a70c686670"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a37a7b0a78003a4b0171c6c70384c2a70c686670"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["7b91922b55d15444d554721b352861d028eb8278","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a37a7b0a78003a4b0171c6c70384c2a70c686670":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a37a7b0a78003a4b0171c6c70384c2a70c686670","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}