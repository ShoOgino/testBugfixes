{"path":"lucene/test-framework/src/java/org/apache/lucene/search/BaseRangeFieldQueryTestCase#testLowCardinality().mjava","commits":[{"id":"646cad9a0473e40f431299c5d1567d1f4d32f689","date":1562050301,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseRangeFieldQueryTestCase#testLowCardinality().mjava","pathOld":"/dev/null","sourceNew":"  // Force low cardinality leaves\n  public void testLowCardinality() throws Exception {\n    int numDocs = atLeast(10000);\n    int dimensions = dimension();\n\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n    Range[][] diffRanges =  new Range[cardinality][];\n    for (int i = 0; i < cardinality; i++) {\n      diffRanges[i] =  new Range[] {nextRange(dimensions)};\n    }\n\n    Range[][] ranges = new Range[numDocs][];\n    for (int i = 0; i < numDocs; i++) {\n      ranges[i] =  diffRanges[random().nextInt(cardinality)];\n    }\n    verify(ranges);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BaseRangeFieldQueryTestCase#testLowCardinality().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/BaseRangeFieldQueryTestCase#testLowCardinality().mjava","sourceNew":"  // Force low cardinality leaves\n  public void testLowCardinality() throws Exception {\n    int numDocs = atLeast(1000);\n    int dimensions = dimension();\n\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n    Range[][] diffRanges =  new Range[cardinality][];\n    for (int i = 0; i < cardinality; i++) {\n      diffRanges[i] =  new Range[] {nextRange(dimensions)};\n    }\n\n    Range[][] ranges = new Range[numDocs][];\n    for (int i = 0; i < numDocs; i++) {\n      ranges[i] =  diffRanges[random().nextInt(cardinality)];\n    }\n    verify(ranges);\n  }\n\n","sourceOld":"  // Force low cardinality leaves\n  public void testLowCardinality() throws Exception {\n    int numDocs = atLeast(10000);\n    int dimensions = dimension();\n\n    int cardinality = TestUtil.nextInt(random(), 2, 20);\n    Range[][] diffRanges =  new Range[cardinality][];\n    for (int i = 0; i < cardinality; i++) {\n      diffRanges[i] =  new Range[] {nextRange(dimensions)};\n    }\n\n    Range[][] ranges = new Range[numDocs][];\n    for (int i = 0; i < numDocs; i++) {\n      ranges[i] =  diffRanges[random().nextInt(cardinality)];\n    }\n    verify(ranges);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["646cad9a0473e40f431299c5d1567d1f4d32f689"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"646cad9a0473e40f431299c5d1567d1f4d32f689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"]},"commit2Childs":{"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["646cad9a0473e40f431299c5d1567d1f4d32f689"],"646cad9a0473e40f431299c5d1567d1f4d32f689":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}