{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     * \t\t\t  which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     * \t\t\t  which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     *         which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     * \t\t\t  which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5848fb04b09461a04cf32c50f363081ca427939","date":1465481845,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See {@link QueryScorer#getMaxTermWeight()} \n     *         which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     *         which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","bugFix":["35a81445b1abe3f60806325dd678af931b62c2fc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See {@link QueryScorer#getMaxTermWeight()} \n     *         which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     *         which can be used to calibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5848fb04b09461a04cf32c50f363081ca427939":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","a5848fb04b09461a04cf32c50f363081ca427939"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5848fb04b09461a04cf32c50f363081ca427939"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a5848fb04b09461a04cf32c50f363081ca427939":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["a5848fb04b09461a04cf32c50f363081ca427939","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}