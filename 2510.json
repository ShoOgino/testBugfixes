{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new KeywordAnalyzer();\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new KeywordAnalyzer();\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new KeywordAnalyzer();\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new MockRAMDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory(newRandom());\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new MockRAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory(newRandom());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfd4d352ddf04b37253ad97ce1aad1448253f0f7","date":1310173878,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    paW = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerW );\n    paB = new QueryParser(TEST_VERSION_CURRENT,  F, analyzerB );\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random, MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/AbstractTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzerW = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzerB = new BigramAnalyzer();\n    analyzerK = new MockAnalyzer(random(), MockTokenizer.KEYWORD, false);\n    dir = newDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"c7f8e68717c68517265937c911e1ce9f25750247":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","43b04c27924fe393e38e9f0986e32c634f261859"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["a3776dccca01c11e7046323cfad46a3b4a471233","dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["43b04c27924fe393e38e9f0986e32c634f261859"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["43b04c27924fe393e38e9f0986e32c634f261859","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["c7f8e68717c68517265937c911e1ce9f25750247"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["c7f8e68717c68517265937c911e1ce9f25750247"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"c7f8e68717c68517265937c911e1ce9f25750247":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"43b04c27924fe393e38e9f0986e32c634f261859":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}