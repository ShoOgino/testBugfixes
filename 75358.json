{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","sourceNew":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto));\n    }\n  }\n\n","sourceOld":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","date":1339238489,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","sourceNew":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto), fstReader);\n    }\n  }\n\n","sourceOld":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","sourceNew":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label());\n      output[upto] = fst.outputs.add(output[upto-1], arc.output());\n      if (arc.label() == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto), fstReader);\n    }\n  }\n\n","sourceOld":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto), fstReader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FSTEnum#pushLast().mjava","sourceNew":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label());\n      output[upto] = fst.outputs.add(output[upto-1], arc.output());\n      if (arc.label() == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto), fstReader);\n    }\n  }\n\n","sourceOld":"  // Recurses from current arc, appending last arc all the\n  // way to the first final node\n  private void pushLast() throws IOException {\n\n    FST.Arc<T> arc = arcs[upto];\n    assert arc != null;\n\n    while (true) {\n      setCurrentLabel(arc.label);\n      output[upto] = fst.outputs.add(output[upto-1], arc.output);\n      if (arc.label == FST.END_LABEL) {\n        // Final node\n        break;\n      }\n      incr();\n\n      arc = fst.readLastTargetArc(arc, getArc(upto), fstReader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54204c8a3ca26aeafd273139fc29baf70d0f6786"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}