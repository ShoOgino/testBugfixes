{"path":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#setUp().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/lucene3x/TestTermInfosReaderIndex#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDivisor = _TestUtil.nextInt(random, 1, 10);\n    directory = newDirectory();\n    termIndexInterval = populate(directory);\n\n    IndexReader r0 = IndexReader.open(directory);\n    SegmentReader r = (SegmentReader) r0.getSequentialSubReaders()[0];\n    String segment = r.getSegmentName();\n    r.close();\n\n    FieldInfosReader infosReader = new PreFlexRWCodec().fieldInfosFormat().getFieldInfosReader();\n    FieldInfos fieldInfos = infosReader.read(directory, segment, IOContext.READONCE);\n    String segmentFileName = IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION);\n    long tiiFileLength = directory.fileLength(segmentFileName);\n    IndexInput input = directory.openInput(segmentFileName, newIOContext(random));\n    termEnum = new SegmentTermEnum(directory.openInput(IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION), newIOContext(random)), fieldInfos, false);\n    int totalIndexInterval = termEnum.indexInterval * indexDivisor;\n    \n    SegmentTermEnum indexEnum = new SegmentTermEnum(input, fieldInfos, true);\n    index = new TermInfosReaderIndex(indexEnum, indexDivisor, tiiFileLength, totalIndexInterval);\n    indexEnum.close();\n    input.close();\n    \n    reader = IndexReader.open(directory);\n    sampleTerms = sample(reader,1000);\n    \n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDivisor = _TestUtil.nextInt(random, 1, 10);\n    directory = newDirectory();\n    termIndexInterval = populate(directory);\n\n    IndexReader r0 = IndexReader.open(directory);\n    SegmentReader r = (SegmentReader) r0.getSequentialSubReaders()[0];\n    String segment = r.getSegmentName();\n    r.close();\n\n    FieldInfosReader infosReader = new PreFlexRWCodec().fieldInfosFormat().getFieldInfosReader();\n    FieldInfos fieldInfos = infosReader.read(directory, segment, IOContext.READONCE);\n    String segmentFileName = IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION);\n    long tiiFileLength = directory.fileLength(segmentFileName);\n    IndexInput input = directory.openInput(segmentFileName, newIOContext(random));\n    termEnum = new SegmentTermEnum(directory.openInput(IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION), newIOContext(random)), fieldInfos, false);\n    int totalIndexInterval = termEnum.indexInterval * indexDivisor;\n    \n    SegmentTermEnum indexEnum = new SegmentTermEnum(input, fieldInfos, true);\n    index = new TermInfosReaderIndex(indexEnum, indexDivisor, tiiFileLength, totalIndexInterval);\n    indexEnum.close();\n    input.close();\n    \n    reader = IndexReader.open(directory);\n    sampleTerms = sample(reader,1000);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    indexDivisor = _TestUtil.nextInt(random, 1, 10);\n    directory = newDirectory();\n    termIndexInterval = populate(directory);\n\n    IndexReader r0 = IndexReader.open(directory);\n    SegmentReader r = (SegmentReader) r0.getSequentialSubReaders()[0];\n    String segment = r.getSegmentName();\n    r.close();\n\n    FieldInfosReader infosReader = new PreFlexRWCodec().fieldInfosFormat().getFieldInfosReader();\n    FieldInfos fieldInfos = infosReader.read(directory, segment, IOContext.READONCE);\n    String segmentFileName = IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_INDEX_EXTENSION);\n    long tiiFileLength = directory.fileLength(segmentFileName);\n    IndexInput input = directory.openInput(segmentFileName, newIOContext(random));\n    termEnum = new SegmentTermEnum(directory.openInput(IndexFileNames.segmentFileName(segment, \"\", Lucene3xPostingsFormat.TERMS_EXTENSION), newIOContext(random)), fieldInfos, false);\n    int totalIndexInterval = termEnum.indexInterval * indexDivisor;\n    \n    SegmentTermEnum indexEnum = new SegmentTermEnum(input, fieldInfos, true);\n    index = new TermInfosReaderIndex(indexEnum, indexDivisor, tiiFileLength, totalIndexInterval);\n    indexEnum.close();\n    input.close();\n    \n    reader = IndexReader.open(directory);\n    sampleTerms = sample(reader,1000);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be580b58bcc650d428f3f22de81cadcf51d650a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}