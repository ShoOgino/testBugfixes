{"path":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"16cbef32b882ec68df422af3f08845ec82620335","date":1337802266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"127981e5a1e1d1425c5fdc816ceacf753ca70ee4","date":1354205321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  abstract void flush(SegmentWriteState state) throws IOException;\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  abstract void flush(SegmentWriteState state) throws IOException;\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":["06584e6e98d592b34e1329b384182f368d2025e8","16cbef32b882ec68df422af3f08845ec82620335"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  abstract void flush(SegmentWriteState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  abstract void flush(SegmentWriteState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  abstract void flush(SegmentWriteState state) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["d4d69c535930b5cce125cff868d40f6373dc27d4","52c7e49be259508735752fba88085255014a6ecf"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","16cbef32b882ec68df422af3f08845ec82620335"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["d4d69c535930b5cce125cff868d40f6373dc27d4","3394716f52b34ab259ad5247e7595d9f9db6e935"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16cbef32b882ec68df422af3f08845ec82620335":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"52c7e49be259508735752fba88085255014a6ecf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["d4d69c535930b5cce125cff868d40f6373dc27d4","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["16cbef32b882ec68df422af3f08845ec82620335"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"16cbef32b882ec68df422af3f08845ec82620335":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}