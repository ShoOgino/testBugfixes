{"path":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","commits":[{"id":"68759a52d8da5c4ac149c4484a1dbc071b480bb3","date":1276544744,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#doTestDegreeRads().mjava","sourceNew":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","sourceOld":"  public void doTestDegreeRads() throws Exception {\n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","sourceNew":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","sourceOld":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","sourceNew":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","sourceOld":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/TestFunctionQuery#testDegreeRads().mjava","sourceNew":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","sourceOld":"  @Test\n  public void testDegreeRads() throws Exception {    \n    assertU(adoc(\"id\", \"1\", \"x_td\", \"0\", \"y_td\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"x_td\", \"90\", \"y_td\", String.valueOf(Math.PI / 2)));\n    assertU(adoc(\"id\", \"3\", \"x_td\", \"45\", \"y_td\", String.valueOf(Math.PI / 4)));\n\n\n    assertU(commit());\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='\" + (float) (Math.PI / 2) + \"'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}rad(x_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='\" + (float) (Math.PI / 4) + \"'\");\n\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:1\"), \"//float[@name='score']='0.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:2\"), \"//float[@name='score']='90.0'\");\n    assertQ(req(\"fl\", \"*,score\", \"q\", \"{!func}deg(y_td)\", \"fq\", \"id:3\"), \"//float[@name='score']='45.0'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["68759a52d8da5c4ac149c4484a1dbc071b480bb3"],"c26f00b574427b55127e869b935845554afde1fa":["68759a52d8da5c4ac149c4484a1dbc071b480bb3","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68759a52d8da5c4ac149c4484a1dbc071b480bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["68759a52d8da5c4ac149c4484a1dbc071b480bb3"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","68759a52d8da5c4ac149c4484a1dbc071b480bb3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68759a52d8da5c4ac149c4484a1dbc071b480bb3","5f4e87790277826a2aea119328600dfb07761f32"],"68759a52d8da5c4ac149c4484a1dbc071b480bb3":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","5f4e87790277826a2aea119328600dfb07761f32"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}