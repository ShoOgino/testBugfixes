{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","commits":[{"id":"62cc423073d23f01208c6cf85844dedd80011121","date":1454731549,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#geoTermToString(long).mjava","sourceNew":"  /** Converts a long value into a bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","sourceOld":"  /** Converts long value to bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoUtils#geoTermToString(long).mjava","sourceNew":"  /** Converts a long value into a bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","sourceOld":"  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":1,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoUtils#geoTermToString(long).mjava","sourceNew":"  /** Converts a long value into a bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","sourceOld":"  /** Converts long value to bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"065f36185d91a7d825ce7adac5b0d8df5cb4f73f","date":1461251676,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/MortonEncoder#geoTermToString(long).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","sourceNew":"  /** Converts a long value into a full 64 bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","sourceOld":"  /** Converts a long value into a bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","date":1461308643,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/MortonEncoder#geoTermToString(long).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoEncodingUtils#geoTermToString(long).mjava","sourceNew":"  /** Converts a long value into a full 64 bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","sourceOld":"  /** Converts a long value into a bit string (useful for debugging) */\n  public static String geoTermToString(long term) {\n    StringBuilder s = new StringBuilder(64);\n    final int numberOfLeadingZeros = Long.numberOfLeadingZeros(term);\n    for (int i = 0; i < numberOfLeadingZeros; i++) {\n      s.append('0');\n    }\n    if (term != 0) {\n      s.append(Long.toBinaryString(term));\n    }\n    return s.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["5a207d19eac354d649c3f0e2cce070017c78125e"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["5a207d19eac354d649c3f0e2cce070017c78125e","065f36185d91a7d825ce7adac5b0d8df5cb4f73f"],"5a207d19eac354d649c3f0e2cce070017c78125e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62cc423073d23f01208c6cf85844dedd80011121"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62cc423073d23f01208c6cf85844dedd80011121"],"62cc423073d23f01208c6cf85844dedd80011121":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"]},"commit2Childs":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a207d19eac354d649c3f0e2cce070017c78125e":["065f36185d91a7d825ce7adac5b0d8df5cb4f73f","ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","62cc423073d23f01208c6cf85844dedd80011121"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"62cc423073d23f01208c6cf85844dedd80011121":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}