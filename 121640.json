{"path":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<ContentStream>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d17ec5164debc23076db7fd11d0331f201583b5","date":1426658173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    if (contentType != null) stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    if (contentType != null) stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c","date":1508275071,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#toContentStreams(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Take a string and make it an iterable ContentStream\n   * \n   * This should be moved to a helper class. (it is useful for the client too!)\n   */\n  public static Collection<ContentStream> toContentStreams( final String str, final String contentType )\n  {\n    ArrayList<ContentStream> streams = new ArrayList<>();\n    ContentStreamBase stream = new ContentStreamBase.StringStream( str );\n    if (contentType != null) stream.setContentType( contentType );\n    streams.add( stream );\n    return streams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0d17ec5164debc23076db7fd11d0331f201583b5"],"0d17ec5164debc23076db7fd11d0331f201583b5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c":["0d17ec5164debc23076db7fd11d0331f201583b5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff7024b6ebcfb64924eed7543a71a1cbd1e7466c"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d17ec5164debc23076db7fd11d0331f201583b5"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ff7024b6ebcfb64924eed7543a71a1cbd1e7466c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"ff7024b6ebcfb64924eed7543a71a1cbd1e7466c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}