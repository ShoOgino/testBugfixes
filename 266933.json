{"path":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","commits":[{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","pathOld":"/dev/null","sourceNew":"  /** Correctness test for the BEB1 DFR model. */\n  public void testBEB1() throws IOException {\n    SimilarityBase sim = new DFRSimilarity(\n        new BasicModelBE(), new AfterEffectB(), new NormalizationH1());\n    float tfn = FREQ * AVG_FIELD_LENGTH / DOC_LEN;  // 8.75\n    float b = (TOTAL_TERM_FREQ + 1) / (DOC_FREQ * (tfn + 1));  // 0.728205128205\n    float f = TOTAL_TERM_FREQ + tfn;\n    float n = f + NUMBER_OF_DOCUMENTS;\n    float n1 = n + f - 1;        // 256.5\n    float m1 = n + f - tfn - 2;  // 246.75\n    float n2 = f;                                      // 78.75\n    float m2 = f - tfn;                                // 70.0\n    float be = (float)(-SimilarityBase.log2(n - 1) -\n               SimilarityBase.log2(Math.E) +                   // -8.916400790508378\n               ((m1 + 0.5f) * SimilarityBase.log2(n1 / m1) +\n                (n1 - m1) * SimilarityBase.log2(n1)) -         // 91.85089272283668\n               ((m2 + 0.5f) * SimilarityBase.log2(n2 / m2) +\n                (n2 - m2) * SimilarityBase.log2(n2)));         // 67.09778276257171\n               // 15.836709\n    float gold = b * be;                                       // 11.532373\n    correctnessTestCore(sim, gold);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c5c06a413042e52dc241808ed12b0a1324acaffd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5c06a413042e52dc241808ed12b0a1324acaffd","date":1315790003,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","sourceNew":"  /** Correctness test for the BEB1 DFR model. */\n  public void testBEB1() throws IOException {\n    SimilarityBase sim = new DFRSimilarity(\n        new BasicModelBE(), new AfterEffectB(), new NormalizationH1());\n    float tfn = FREQ * AVG_FIELD_LENGTH / DOC_LEN;  // 8.75\n    float b = (TOTAL_TERM_FREQ + 1 + 1) / ((DOC_FREQ + 1) * (tfn + 1));  // 0.67132866\n    double f = TOTAL_TERM_FREQ + 1 + tfn;\n    double n = f + NUMBER_OF_DOCUMENTS;\n    double n1 = n + f - 1;        // 258.5\n    double m1 = n + f - tfn - 2;  // 248.75\n    double n2 = f;                                      // 79.75\n    double m2 = f - tfn;                                // 71.0\n    float be = (float)(-SimilarityBase.log2(n - 1) -\n               SimilarityBase.log2(Math.E) +                   // -8.924494472554715\n               ((m1 + 0.5f) * SimilarityBase.log2(n1 / m1) +\n                (n1 - m1) * SimilarityBase.log2(n1)) -         // 91.9620374903885\n               ((m2 + 0.5f) * SimilarityBase.log2(n2 / m2) +\n                (n2 - m2) * SimilarityBase.log2(n2)));         // 67.26544321004599\n               // 15.7720995\n    float gold = b * be;                                       // 10.588263\n    correctnessTestCore(sim, gold);\n  }\n\n","sourceOld":"  /** Correctness test for the BEB1 DFR model. */\n  public void testBEB1() throws IOException {\n    SimilarityBase sim = new DFRSimilarity(\n        new BasicModelBE(), new AfterEffectB(), new NormalizationH1());\n    float tfn = FREQ * AVG_FIELD_LENGTH / DOC_LEN;  // 8.75\n    float b = (TOTAL_TERM_FREQ + 1) / (DOC_FREQ * (tfn + 1));  // 0.728205128205\n    float f = TOTAL_TERM_FREQ + tfn;\n    float n = f + NUMBER_OF_DOCUMENTS;\n    float n1 = n + f - 1;        // 256.5\n    float m1 = n + f - tfn - 2;  // 246.75\n    float n2 = f;                                      // 78.75\n    float m2 = f - tfn;                                // 70.0\n    float be = (float)(-SimilarityBase.log2(n - 1) -\n               SimilarityBase.log2(Math.E) +                   // -8.916400790508378\n               ((m1 + 0.5f) * SimilarityBase.log2(n1 / m1) +\n                (n1 - m1) * SimilarityBase.log2(n1)) -         // 91.85089272283668\n               ((m2 + 0.5f) * SimilarityBase.log2(n2 / m2) +\n                (n2 - m2) * SimilarityBase.log2(n2)));         // 67.09778276257171\n               // 15.836709\n    float gold = b * be;                                       // 11.532373\n    correctnessTestCore(sim, gold);\n  }\n\n","bugFix":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/similarities/TestSimilarityBase#testBEB1().mjava","sourceNew":"  /** Correctness test for the BEB1 DFR model. */\n  public void testBEB1() throws IOException {\n    SimilarityBase sim = new DFRSimilarity(\n        new BasicModelBE(), new AfterEffectB(), new NormalizationH1());\n    float tfn = FREQ * AVG_FIELD_LENGTH / DOC_LEN;  // 8.75\n    float b = (TOTAL_TERM_FREQ + 1 + 1) / ((DOC_FREQ + 1) * (tfn + 1));  // 0.67132866\n    double f = TOTAL_TERM_FREQ + 1 + tfn;\n    double n = f + NUMBER_OF_DOCUMENTS;\n    double n1 = n + f - 1;        // 258.5\n    double m1 = n + f - tfn - 2;  // 248.75\n    double n2 = f;                                      // 79.75\n    double m2 = f - tfn;                                // 71.0\n    float be = (float)(-SimilarityBase.log2(n - 1) -\n               SimilarityBase.log2(Math.E) +                   // -8.924494472554715\n               ((m1 + 0.5f) * SimilarityBase.log2(n1 / m1) +\n                (n1 - m1) * SimilarityBase.log2(n1)) -         // 91.9620374903885\n               ((m2 + 0.5f) * SimilarityBase.log2(n2 / m2) +\n                (n2 - m2) * SimilarityBase.log2(n2)));         // 67.26544321004599\n               // 15.7720995\n    float gold = b * be;                                       // 10.588263\n    correctnessTestCore(sim, gold);\n  }\n\n","sourceOld":"  /** Correctness test for the BEB1 DFR model. */\n  public void testBEB1() throws IOException {\n    SimilarityBase sim = new DFRSimilarity(\n        new BasicModelBE(), new AfterEffectB(), new NormalizationH1());\n    float tfn = FREQ * AVG_FIELD_LENGTH / DOC_LEN;  // 8.75\n    float b = (TOTAL_TERM_FREQ + 1 + 1) / ((DOC_FREQ + 1) * (tfn + 1));  // 0.67132866\n    double f = TOTAL_TERM_FREQ + 1 + tfn;\n    double n = f + NUMBER_OF_DOCUMENTS;\n    double n1 = n + f - 1;        // 258.5\n    double m1 = n + f - tfn - 2;  // 248.75\n    double n2 = f;                                      // 79.75\n    double m2 = f - tfn;                                // 71.0\n    float be = (float)(-SimilarityBase.log2(n - 1) -\n               SimilarityBase.log2(Math.E) +                   // -8.924494472554715\n               ((m1 + 0.5f) * SimilarityBase.log2(n1 / m1) +\n                (n1 - m1) * SimilarityBase.log2(n1)) -         // 91.9620374903885\n               ((m2 + 0.5f) * SimilarityBase.log2(n2 / m2) +\n                (n2 - m2) * SimilarityBase.log2(n2)));         // 67.26544321004599\n               // 15.7720995\n    float gold = b * be;                                       // 10.588263\n    correctnessTestCore(sim, gold);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c5c06a413042e52dc241808ed12b0a1324acaffd"],"c5c06a413042e52dc241808ed12b0a1324acaffd":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c5c06a413042e52dc241808ed12b0a1324acaffd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["c5c06a413042e52dc241808ed12b0a1324acaffd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}