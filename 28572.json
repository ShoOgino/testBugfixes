{"path":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","commits":[{"id":"017c035439201490351b0f5f3d33a393c6c24551","date":1305551986,"type":0,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","sourceNew":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","sourceOld":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/SolrStopwordsCarrot2LexicalDataFactory#getSolrStopWordsForField(String).mjava","sourceNew":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","sourceOld":"\t/**\r\n\t * Obtains stop words for a field from the associated\r\n\t * {@link StopFilterFactory}, if any.\r\n\t */\r\n\tprivate Collection<CharArraySet> getSolrStopWordsForField(String fieldName) {\r\n\t\t// No need to synchronize here, Carrot2 ensures that instances\r\n\t\t// of this class are not used by multiple threads at a time.\r\n\t\tif (!solrStopWords.containsKey(fieldName)) {\r\n\t\t\tfinal Analyzer fieldAnalyzer = schema.getFieldType(fieldName)\r\n\t\t\t\t\t.getAnalyzer();\r\n\t\t\tif (fieldAnalyzer instanceof TokenizerChain) {\r\n\t\t\t\tfinal TokenFilterFactory[] filterFactories = ((TokenizerChain) fieldAnalyzer)\r\n\t\t\t\t\t\t.getTokenFilterFactories();\r\n\t\t\t\tfor (TokenFilterFactory factory : filterFactories) {\r\n\t\t\t\t\tif (factory instanceof StopFilterFactory) {\r\n\t\t\t\t\t\t// StopFilterFactory holds the stop words in a CharArraySet, but\r\n\t\t\t\t\t\t// the getStopWords() method returns a Set<?>, so we need to cast.\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((StopFilterFactory) factory).getStopWords());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (factory instanceof CommonGramsFilterFactory) {\r\n\t\t\t\t\t\tsolrStopWords.put(fieldName,\r\n\t\t\t\t\t\t\t\t(CharArraySet) ((CommonGramsFilterFactory) factory)\r\n\t\t\t\t\t\t\t\t\t\t.getCommonWords());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn solrStopWords.get(fieldName);\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"017c035439201490351b0f5f3d33a393c6c24551":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","017c035439201490351b0f5f3d33a393c6c24551"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","017c035439201490351b0f5f3d33a393c6c24551"],"c26f00b574427b55127e869b935845554afde1fa":["017c035439201490351b0f5f3d33a393c6c24551","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","017c035439201490351b0f5f3d33a393c6c24551"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"017c035439201490351b0f5f3d33a393c6c24551":["c3a8a449466c1ff7ce2274fe73dab487256964b4","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["017c035439201490351b0f5f3d33a393c6c24551","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}