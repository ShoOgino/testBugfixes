{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","commits":[{"id":"519ac3b8f2711b5bfeb1c90c77bb007032270a41","date":1384456090,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    TaxonomyFacetCounts facets = new TaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"798b82b2c9877fae10a0a7d2025c05cac832bda2","date":1384710991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    TaxonomyFacetCounts facets = new TaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"441c188ff9fd7da36e0e4d8a9b51cebe63b31192","date":1384814749,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"798b82b2c9877fae10a0a7d2025c05cac832bda2":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["798b82b2c9877fae10a0a7d2025c05cac832bda2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519ac3b8f2711b5bfeb1c90c77bb007032270a41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"798b82b2c9877fae10a0a7d2025c05cac832bda2":["441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["798b82b2c9877fae10a0a7d2025c05cac832bda2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}