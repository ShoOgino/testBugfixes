{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.FromDoubleValuesSource#getValues(Map[Object,Object],LeafReaderContext).mjava","commits":[{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":1,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.FromDoubleValuesSource#getValues(Map[Object,Object],LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.FromDoubleValuesSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(Map<Object, Object> context, LeafReaderContext readerContext) throws IOException {\n      Scorable scorer = (Scorable) context.get(\"scorer\");\n      DoubleValues scores = scorer == null ? null : DoubleValuesSource.fromScorer(scorer);\n\n      IndexSearcher searcher = (IndexSearcher) context.get(\"searcher\");\n      DoubleValues inner;\n      if (searcher != null)\n        inner = in.rewrite(searcher).getValues(readerContext, scores);\n      else\n        inner = in.getValues(readerContext, scores);\n\n      return new FunctionValues() {\n        @Override\n        public String toString(int doc) throws IOException {\n          return in.toString();\n        }\n\n        @Override\n        public float floatVal(int doc) throws IOException {\n          if (inner.advanceExact(doc) == false)\n            return 0;\n          return (float) inner.doubleValue();\n        }\n\n        @Override\n        public double doubleVal(int doc) throws IOException {\n          if (inner.advanceExact(doc) == false)\n            return 0;\n          return inner.doubleValue();\n        }\n\n        @Override\n        public boolean exists(int doc) throws IOException {\n          return inner.advanceExact(doc);\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      Scorable scorer = (Scorable) context.get(\"scorer\");\n      DoubleValues scores = scorer == null ? null : DoubleValuesSource.fromScorer(scorer);\n\n      IndexSearcher searcher = (IndexSearcher) context.get(\"searcher\");\n      DoubleValues inner;\n      if (searcher != null)\n        inner = in.rewrite(searcher).getValues(readerContext, scores);\n      else\n        inner = in.getValues(readerContext, scores);\n\n      return new FunctionValues() {\n        @Override\n        public String toString(int doc) throws IOException {\n          return in.toString();\n        }\n\n        @Override\n        public float floatVal(int doc) throws IOException {\n          if (inner.advanceExact(doc) == false)\n            return 0;\n          return (float) inner.doubleValue();\n        }\n\n        @Override\n        public double doubleVal(int doc) throws IOException {\n          if (inner.advanceExact(doc) == false)\n            return 0;\n          return inner.doubleValue();\n        }\n\n        @Override\n        public boolean exists(int doc) throws IOException {\n          return inner.advanceExact(doc);\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}