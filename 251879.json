{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", new StringReader(\"boring\"));\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", new StringReader(\"boring\"));\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n    protectedAnalyzer.close();\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#testNoFieldNamePollution().mjava","sourceNew":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n    protectedAnalyzer.close();\n  }\n\n","sourceOld":"  public void testNoFieldNamePollution() throws Exception {\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer( appAnalyzer, reader, Arrays.asList(\"repetitiveField\"), 10);\n\n    TokenStream protectedTokenStream = protectedAnalyzer.tokenStream(\"repetitiveField\", \"boring\");\n    // Check filter set up OK\n    assertTokenStreamContents(protectedTokenStream, new String[0]);\n\n    protectedTokenStream = protectedAnalyzer.tokenStream(\"variedField\", \"boring\");\n    // Filter should not prevent stopwords in one field being used in another\n    assertTokenStreamContents(protectedTokenStream, new String[]{\"boring\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["379db3ad24c4f0214f30a122265a6d6be003a99d","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["ff4227bb146f97aabae888091c19e48c88dbb0db","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}