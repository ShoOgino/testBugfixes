{"path":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory,boolean).mjava","commits":[{"id":"b583d3621fe173e7296abcf62f82fb707c901234","date":1194717060,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.  If null, the default\n   *        {@link SimpleFSLockFactory} is used.\n   * @param doSync if true (the default), sync() is called\n   *        on all file descriptors before close().  This\n   *        improves the likelihood that the index will\n   *        remain consistent when the OS or machine crashes\n   *        or the power cord is pulled.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory, boolean doSync)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory, doSync);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015c55424dd37249054283bedc90388bd45358f","date":1197049353,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory,boolean).mjava","sourceNew":null,"sourceOld":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.  If null, the default\n   *        {@link SimpleFSLockFactory} is used.\n   * @param doSync if true (the default), sync() is called\n   *        on all file descriptors before close().  This\n   *        improves the likelihood that the index will\n   *        remain consistent when the OS or machine crashes\n   *        or the power cord is pulled.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory, boolean doSync)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory, doSync);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b583d3621fe173e7296abcf62f82fb707c901234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a015c55424dd37249054283bedc90388bd45358f":["b583d3621fe173e7296abcf62f82fb707c901234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a015c55424dd37249054283bedc90388bd45358f"]},"commit2Childs":{"b583d3621fe173e7296abcf62f82fb707c901234":["a015c55424dd37249054283bedc90388bd45358f"],"a015c55424dd37249054283bedc90388bd45358f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b583d3621fe173e7296abcf62f82fb707c901234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}