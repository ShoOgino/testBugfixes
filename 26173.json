{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new StandardPostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7","date":1323207588,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"929d416aad35e36f2d2743c625e05e23908e7563","date":1323209095,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state)\n          throws IOException {\n    PostingsWriterBase docsWriter = new Lucene40PostingsWriter(state);\n    boolean success = false;\n    AppendingTermsIndexWriter indexWriter = null;\n    try {\n      indexWriter = new AppendingTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        docsWriter.close();\n      }\n    }\n    success = false;\n    try {\n      FieldsConsumer ret = new AppendingTermsDictWriter(indexWriter, state, docsWriter);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          docsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"929d416aad35e36f2d2743c625e05e23908e7563":["7b91922b55d15444d554721b352861d028eb8278","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["929d416aad35e36f2d2743c625e05e23908e7563","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"929d416aad35e36f2d2743c625e05e23908e7563":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["929d416aad35e36f2d2743c625e05e23908e7563","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["929d416aad35e36f2d2743c625e05e23908e7563","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}