{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#isMatch(ReplicaInfo,String,String).mjava","commits":[{"id":"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733","date":1532604765,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#isMatch(ReplicaInfo,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public boolean isMatch(ReplicaInfo r, String collection, String shard) {\n    if (type != null && r.getType() != type) return false;\n    if (r.getCollection().equals(collection)) {\n      if (this.shard == null || this.shard.val.equals(Policy.ANY)) return true;\n      else if (this.shard.val.equals(Policy.EACH) && r.getShard().equals(shard)) return true;\n      else return this.shard.val.equals(r.getShard()) && r.getShard().equals(shard);\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#isMatch(Replica,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#isMatch(ReplicaInfo,String,String).mjava","sourceNew":"  public boolean isMatch(Replica r, String collection, String shard) {\n    if (type != null && r.getType() != type) return false;\n    if (r.getCollection().equals(collection)) {\n      if (this.shard == null || this.shard.val.equals(Policy.ANY)) return true;\n      else if (this.shard.val.equals(Policy.EACH) && r.getShard().equals(shard)) return true;\n      else return this.shard.val.equals(r.getShard()) && r.getShard().equals(shard);\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean isMatch(ReplicaInfo r, String collection, String shard) {\n    if (type != null && r.getType() != type) return false;\n    if (r.getCollection().equals(collection)) {\n      if (this.shard == null || this.shard.val.equals(Policy.ANY)) return true;\n      else if (this.shard.val.equals(Policy.EACH) && r.getShard().equals(shard)) return true;\n      else return this.shard.val.equals(r.getShard()) && r.getShard().equals(shard);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733"],"7b9f478d4eb5c08e4b0a9717fe37bd99f09ea733":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}