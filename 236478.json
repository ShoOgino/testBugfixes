{"path":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","commits":[{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"61e20f33ce8ff701576366fdb03955eded5f209b","date":1327852832,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61e20f33ce8ff701576366fdb03955eded5f209b":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","61e20f33ce8ff701576366fdb03955eded5f209b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","32e7c2a80dad193a76a03ec46b878969d469ff6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"61e20f33ce8ff701576366fdb03955eded5f209b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["32e7c2a80dad193a76a03ec46b878969d469ff6c","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["61e20f33ce8ff701576366fdb03955eded5f209b","5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}