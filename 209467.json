{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","commits":[{"id":"6616b1fd222bb5a60f7f7856ace312252bc97890","date":1350142044,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#setSkipData(int,boolean,int,boolean,int).mjava","sourceNew":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","sourceOld":"  /**\n   * Sets the values for the current skip data. \n   */\n  public void setSkipData(int doc, boolean storePayloads, int payloadLength, boolean storeOffsets, int offsetLength) {\n    assert storePayloads || payloadLength == -1;\n    assert storeOffsets  || offsetLength == -1;\n    this.curDoc = doc;\n    this.curStorePayloads = storePayloads;\n    this.curPayloadLength = payloadLength;\n    this.curStoreOffsets = storeOffsets;\n    this.curOffsetLength = offsetLength;\n    this.curFreqPointer = freqOutput.getFilePointer();\n    if (proxOutput != null)\n      this.curProxPointer = proxOutput.getFilePointer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6616b1fd222bb5a60f7f7856ace312252bc97890":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6616b1fd222bb5a60f7f7856ace312252bc97890"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"6616b1fd222bb5a60f7f7856ace312252bc97890":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["4cc45c615dbb82bf79d5f9550286098367874fbf","db4fdbf3d262768eabc027cd8321edca0cd11fa8","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6616b1fd222bb5a60f7f7856ace312252bc97890","c7492bcb52be51e55d596134b95b2e53cc4ffb91","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}