{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","commits":[{"id":"a7c17dc4c5b0359d9f98d705a68340f132d6c4da","date":1399505484,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"/dev/null","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n    for(int i=0;i<300;i++){\n      doc.add(new TextField(toField, \"\"+i, Field.Store.NO));\n      if(!multipleValues){\n        w.addDocument(doc);\n        doc.removeFields(toField);\n      }\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n    for(int i=0;i<300;i++){\n      doc.add(new TextField(toField, \"\"+i, Field.Store.NO));\n      if(!multipleValues){\n        w.addDocument(doc);\n        doc.removeFields(toField);\n      }\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n    for(int i=0;i<300;i++){\n      doc.add(new TextField(toField, \"\"+i, Field.Store.NO));\n      if(!multipleValues){\n        w.addDocument(doc);\n        doc.removeFields(toField);\n      }\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n    for(int i=0;i<300;i++){\n      doc.add(new TextField(toField, \"\"+i, Field.Store.NO));\n      if(!multipleValues){\n        w.addDocument(doc);\n        doc.removeFields(toField);\n      }\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9359ad4a5596673c3154ffa1133458f00e124234","date":1428012026,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n   \n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe4b37941dda041ab19456b15412aacb9c657a26","date":1429449253,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#test300spartans(boolean,ScoreMode).mjava","sourceNew":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits.value);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  void test300spartans(boolean multipleValues, ScoreMode scoreMode) throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"random text\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"name1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"0\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"0\")));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new TextField(\"price\", \"10.0\", Field.Store.NO));\n\n    if (multipleValues) {\n      for(int i=0;i<300;i++) {\n        doc.add(new SortedSetDocValuesField(toField, new BytesRef(\"\"+i)));\n      }\n    } else {\n      doc.add(new SortedDocValuesField(toField, new BytesRef(\"0\")));\n    }\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for product\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, multipleValues, idField, new TermQuery(new Term(\"price\", \"10.0\")), indexSearcher, scoreMode);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9359ad4a5596673c3154ffa1133458f00e124234":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a7c17dc4c5b0359d9f98d705a68340f132d6c4da","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["d0ef034a4f10871667ae75181537775ddcf8ade4","9359ad4a5596673c3154ffa1133458f00e124234"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["a7c17dc4c5b0359d9f98d705a68340f132d6c4da"],"fe4b37941dda041ab19456b15412aacb9c657a26":["9359ad4a5596673c3154ffa1133458f00e124234"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["fe4b37941dda041ab19456b15412aacb9c657a26"],"56572ec06f1407c066d6b7399413178b33176cd8":["a7c17dc4c5b0359d9f98d705a68340f132d6c4da","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a7c17dc4c5b0359d9f98d705a68340f132d6c4da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9359ad4a5596673c3154ffa1133458f00e124234":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","fe4b37941dda041ab19456b15412aacb9c657a26"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7c17dc4c5b0359d9f98d705a68340f132d6c4da"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["9359ad4a5596673c3154ffa1133458f00e124234","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"fe4b37941dda041ab19456b15412aacb9c657a26":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"a7c17dc4c5b0359d9f98d705a68340f132d6c4da":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}