{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/ScoringMatch#matchWithSimilarity(Similarity).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/ScoringMatch#matchWithSimilarity(Similarity).mjava","pathOld":"/dev/null","sourceNew":"  public static final MatcherFactory<ScoringMatch> matchWithSimilarity(Similarity similarity) {\n    return searcher -> {\n      searcher.setSimilarity(similarity);\n      return new CollectingMatcher<ScoringMatch>(searcher, ScoreMode.COMPLETE) {\n        @Override\n        protected ScoringMatch doMatch(String queryId, int doc, Scorable scorer) throws IOException {\n          float score = scorer.score();\n          if (score > 0)\n            return new ScoringMatch(queryId, score);\n          return null;\n        }\n\n        @Override\n        public ScoringMatch resolve(ScoringMatch match1, ScoringMatch match2) {\n          return new ScoringMatch(match1.getQueryId(), match1.getScore() + match2.getScore());\n        }\n      };\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}