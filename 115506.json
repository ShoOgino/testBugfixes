{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8eab7160b056ec8e7148e8754bf056eb47e423","date":1341950673,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new Sort());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), StandardCharsets.UTF_8));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), StandardCharsets.UTF_8));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), \"UTF-8\"));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), StandardCharsets.UTF_8));\n    \n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch.get(), count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), StandardCharsets.UTF_8));\n    \n    BytesRef scratch = new BytesRef();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch, count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    Path input = Paths.get(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = Files.newBufferedReader(input, StandardCharsets.UTF_8);\n    \n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch.get(), count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    Path fstFile = Paths.get(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.toAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File input = new File(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = new BufferedReader(\n        new InputStreamReader(\n            new FileInputStream(input), StandardCharsets.UTF_8));\n    \n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch.get(), count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    File fstFile = new File(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.getAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/LargeInputFST#main(String[]).mjava","sourceNew":null,"sourceOld":"  public static void main(String[] args) throws IOException {\n    Path input = Paths.get(\"/home/dweiss/tmp/shuffled.dict\");\n\n    int buckets = 20;\n    int shareMaxTail = 10;\n\n    ExternalRefSorter sorter = new ExternalRefSorter(new OfflineSorter());\n    FSTCompletionBuilder builder = new FSTCompletionBuilder(buckets, sorter, shareMaxTail);\n\n    BufferedReader reader = Files.newBufferedReader(input, StandardCharsets.UTF_8);\n    \n    BytesRefBuilder scratch = new BytesRefBuilder();\n    String line;\n    int count = 0;\n    while ((line = reader.readLine()) != null) {\n      scratch.copyChars(line);\n      builder.add(scratch.get(), count % buckets);\n      if ((count++ % 100000) == 0) {\n        System.err.println(\"Line: \" + count);\n      }\n    }\n\n    System.out.println(\"Building FSTCompletion.\");\n    FSTCompletion completion = builder.build();\n\n    Path fstFile = Paths.get(\"completion.fst\");\n    System.out.println(\"Done. Writing automaton: \" + fstFile.toAbsolutePath());\n    completion.getFST().save(fstFile);\n    sorter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["ba791bce8103c79e38f957e9c5a53a75871bd918","7d89d7e4e5101347833eea558851bf4209218619"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["7d89d7e4e5101347833eea558851bf4209218619"],"f4abec28b874149a7223e32cc7a01704c27790de":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7d89d7e4e5101347833eea558851bf4209218619":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ec8eab7160b056ec8e7148e8754bf056eb47e423"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["ec8eab7160b056ec8e7148e8754bf056eb47e423","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ec8eab7160b056ec8e7148e8754bf056eb47e423"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ec8eab7160b056ec8e7148e8754bf056eb47e423"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ec8eab7160b056ec8e7148e8754bf056eb47e423":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["f4abec28b874149a7223e32cc7a01704c27790de"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"f4abec28b874149a7223e32cc7a01704c27790de":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","ec8eab7160b056ec8e7148e8754bf056eb47e423"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ba791bce8103c79e38f957e9c5a53a75871bd918":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ec8eab7160b056ec8e7148e8754bf056eb47e423":["aba371508186796cc6151d8223a5b4e16d02e26e","ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}