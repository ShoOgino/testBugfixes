{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","commits":[{"id":"3f767f8c99eaedb984df754fe61f21c5de260f94","date":1344105153,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/CloudState#CloudState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"\tpublic ClusterState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","sourceOld":"\tpublic CloudState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da94fd5fcff99442877e118f00fb42094b59f497","date":1344115365,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   * \n   * @param liveNodes\n   * @param collectionStates\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","sourceOld":"\tpublic ClusterState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/CloudState#CloudState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"\tpublic ClusterState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","sourceOld":"\tpublic CloudState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   * \n   * @param liveNodes\n   * @param collectionStates\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   * \n   * @param liveNodes\n   * @param collectionStates\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","sourceOld":"\tpublic ClusterState(Set<String> liveNodes,\n\t\t\tMap<String, Map<String,Slice>> collectionStates) {\n\t\tthis.liveNodes = new HashSet<String>(liveNodes.size());\n\t\tthis.liveNodes.addAll(liveNodes);\n\t\tthis.collectionStates = new HashMap<String, Map<String,Slice>>(collectionStates.size());\n\t\tthis.collectionStates.putAll(collectionStates);\n\t\taddRangeInfos(collectionStates.keySet());\n\t\tgetShardLeaders();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","sourceOld":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   * \n   * @param liveNodes\n   * @param collectionStates\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,DocCollection]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, DocCollection> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","sourceOld":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#ClusterState(Set[String],Map[String,Map[String,Slice]]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Use this constr when ClusterState is meant for publication.\n   * \n   * hashCode and equals will only depend on liveNodes and not clusterStateVersion.\n   */\n  public ClusterState(Set<String> liveNodes,\n      Map<String, Map<String,Slice>> collectionStates) {\n    this(null, liveNodes, collectionStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["da94fd5fcff99442877e118f00fb42094b59f497"],"3f767f8c99eaedb984df754fe61f21c5de260f94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["8fd5be977c105554c6a7b68afcdbc511439723ab","da94fd5fcff99442877e118f00fb42094b59f497"],"c5a558d54519c651068ddb202f03befefb1514a7":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","c5a558d54519c651068ddb202f03befefb1514a7"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da94fd5fcff99442877e118f00fb42094b59f497"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f767f8c99eaedb984df754fe61f21c5de260f94"],"da94fd5fcff99442877e118f00fb42094b59f497":["3f767f8c99eaedb984df754fe61f21c5de260f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5a558d54519c651068ddb202f03befefb1514a7"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c5a558d54519c651068ddb202f03befefb1514a7","407687e67faf6e1f02a211ca078d8e3eed631027"],"3f767f8c99eaedb984df754fe61f21c5de260f94":["8fd5be977c105554c6a7b68afcdbc511439723ab","da94fd5fcff99442877e118f00fb42094b59f497"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f767f8c99eaedb984df754fe61f21c5de260f94","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"c5a558d54519c651068ddb202f03befefb1514a7":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"da94fd5fcff99442877e118f00fb42094b59f497":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","407687e67faf6e1f02a211ca078d8e3eed631027","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}