{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      Map<String, Object> ns = new HashMap<String, Object>();\n      Date d = new Date();\n      ns.put(\"dt\", d);\n      vri.addNamespace(\"A\", ns);\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                      vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      Map<String, Object> ns = new HashMap<String, Object>();\n      Date d = new Date();\n      ns.put(\"dt\", d);\n      vri.addNamespace(\"A\", ns);\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                      vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      Map<String, Object> ns = new HashMap<String, Object>();\n      Date d = new Date();\n      ns.put(\"dt\", d);\n      vri.addNamespace(\"A\", ns);\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                      vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      Map<String, Object> ns = new HashMap<String, Object>();\n      Date d = new Date();\n      ns.put(\"dt\", d);\n      vri.addNamespace(\"A\", ns);\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                      vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null, vri));\n    Map<String, Object> ns = new HashMap<String, Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                    vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));   \n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, vri, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n              .getFunctionsNamespace(Collections.EMPTY_LIST, null));\n      Map<String, Object> ns = new HashMap<String, Object>();\n      Date d = new Date();\n      ns.put(\"dt\", d);\n      vri.addNamespace(\"A\", ns);\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                      vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    Map<String, Object> ns = new HashMap<String, Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                    vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));   \n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null, vri));\n    Map<String, Object> ns = new HashMap<String, Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                    vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6","date":1353344064,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<String,Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    Map<String, Object> ns = new HashMap<String, Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                    vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34338590ce1e3be4b7cecb7044c5c5b1641332f","date":1353352684,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<String,Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ROOT).format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<String,Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<String,Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ROOT).format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolverImpl vri = new VariableResolverImpl();\n    vri.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null, vri));\n    Map<String, Object> ns = new HashMap<String, Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(d),\n                    vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ROOT).format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<String,Object>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ROOT).format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestVariableResolver#dateNamespaceWithValue().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void dateNamespaceWithValue() {\n    VariableResolver vri = new VariableResolver();\n    vri.setEvaluators(new DataImporter().getEvaluators(Collections\n        .<Map<String,String>> emptyList()));\n    Map<String,Object> ns = new HashMap<>();\n    Date d = new Date();\n    ns.put(\"dt\", d);\n    vri.addNamespace(\"A\", ns);\n    assertEquals(\n        new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.ROOT).format(d),\n        vri.replaceTokens(\"${dataimporter.functions.formatDate(A.dt,'yyyy-MM-dd HH:mm:ss')}\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["c26f00b574427b55127e869b935845554afde1fa"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e34338590ce1e3be4b7cecb7044c5c5b1641332f"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["4b84e23a1c994ea309896dd9424563e0092f3607"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4b84e23a1c994ea309896dd9424563e0092f3607","e34338590ce1e3be4b7cecb7044c5c5b1641332f"],"e34338590ce1e3be4b7cecb7044c5c5b1641332f":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e1e9c3b0a1f683f4f9e53940d80b2791059be6b6":["e34338590ce1e3be4b7cecb7044c5c5b1641332f"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["e1e9c3b0a1f683f4f9e53940d80b2791059be6b6"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4b84e23a1c994ea309896dd9424563e0092f3607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"e34338590ce1e3be4b7cecb7044c5c5b1641332f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}