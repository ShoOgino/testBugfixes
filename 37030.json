{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = in;\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = in;\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aacb5fe7681a2df3c798f84c79a481407db87a6f","date":1333822076,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = in;\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1fe9452de26a70442324c5bdc5a5a333e55f07db","date":1333912637,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    assert remainder >= 0 && remainder < 10 : \"invalid parameter\";\n  }\n\n","bugFix":["7e477c2108982ba9974f73aa8800270c75cb4971"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    super(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    super(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockCharFilter#MockCharFilter(Reader,int).mjava","sourceNew":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    super(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","sourceOld":"  // for testing only\n  public MockCharFilter(Reader in, int remainder) {\n    this.in = CharReader.get(in);\n    // TODO: instead of fixed remainder... maybe a fixed\n    // random seed?\n    this.remainder = remainder;\n    if (remainder < 0 || remainder >= 10) {\n      throw new IllegalArgumentException(\"invalid remainder parameter (must be 0..10): \" + remainder);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["1fe9452de26a70442324c5bdc5a5a333e55f07db","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fe9452de26a70442324c5bdc5a5a333e55f07db":["aacb5fe7681a2df3c798f84c79a481407db87a6f"],"aacb5fe7681a2df3c798f84c79a481407db87a6f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["1fe9452de26a70442324c5bdc5a5a333e55f07db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc706b1e03a539d44d99998108feb684bb44cbb2"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["aacb5fe7681a2df3c798f84c79a481407db87a6f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1fe9452de26a70442324c5bdc5a5a333e55f07db":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"aacb5fe7681a2df3c798f84c79a481407db87a6f":["1fe9452de26a70442324c5bdc5a5a333e55f07db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}