{"path":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","commits":[{"id":"2e327741cef719817558806865704ff0864d12fd","date":1363899030,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"/dev/null","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a64e93bc1feffac85dcc3907934278ff8214ad8","date":1363964145,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"707f5285c280ff14fa898e7722e57b7a46b81a76","date":1363965759,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"681329f0d8aa847be84b952db62031b9c15f96c5","date":1364143277,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      assertEquals(expected.freq(), actual.freq());\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      assertEquals(expected.freq(), actual.freq());\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.nextDoc());\n      return;\n    }\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expected.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actual.advance(prevDoc+amount));\n      assertEquals(expected.freq(), actual.freq());\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actual.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc14da055888b63b4f8c922d0e1579f3cb315ad7","date":1510744456,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      assertEquals(expected.freq(), actual.freq());\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7732a106554be0db3e03ac5211e46f6e0c285b8","date":1511975378,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, 0d);\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#assertAdvance(Scorer,Scorer,int).mjava","sourceNew":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, 0d);\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","sourceOld":"  private void assertAdvance(Scorer expected, Scorer actual, int amount) throws Exception {\n    if (actual == null) {\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, expected.iterator().nextDoc());\n      return;\n    }\n    DocIdSetIterator expectedIt = expected.iterator();\n    DocIdSetIterator actualIt = actual.iterator();\n    int prevDoc = 0;\n    int doc;\n    while ((doc = expectedIt.advance(prevDoc+amount)) != DocIdSetIterator.NO_MORE_DOCS) {\n      assertEquals(doc, actualIt.advance(prevDoc+amount));\n      float expectedScore = expected.score();\n      float actualScore = actual.score();\n      assertEquals(expectedScore, actualScore, CheckHits.explainToleranceDelta(expectedScore, actualScore));\n      prevDoc = doc;\n    }\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, actualIt.advance(prevDoc+amount));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"2e327741cef719817558806865704ff0864d12fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["dc14da055888b63b4f8c922d0e1579f3cb315ad7","c7732a106554be0db3e03ac5211e46f6e0c285b8"],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"681329f0d8aa847be84b952db62031b9c15f96c5":["707f5285c280ff14fa898e7722e57b7a46b81a76"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["681329f0d8aa847be84b952db62031b9c15f96c5"],"7a64e93bc1feffac85dcc3907934278ff8214ad8":["2e327741cef719817558806865704ff0864d12fd"],"707f5285c280ff14fa898e7722e57b7a46b81a76":["7a64e93bc1feffac85dcc3907934278ff8214ad8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1aad05eeff7818b0833c02ac6b743aa72054963b"]},"commit2Childs":{"c7732a106554be0db3e03ac5211e46f6e0c285b8":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"2e327741cef719817558806865704ff0864d12fd":["7a64e93bc1feffac85dcc3907934278ff8214ad8"],"1aad05eeff7818b0833c02ac6b743aa72054963b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["c7732a106554be0db3e03ac5211e46f6e0c285b8","1aad05eeff7818b0833c02ac6b743aa72054963b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e327741cef719817558806865704ff0864d12fd"],"681329f0d8aa847be84b952db62031b9c15f96c5":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"7a64e93bc1feffac85dcc3907934278ff8214ad8":["707f5285c280ff14fa898e7722e57b7a46b81a76"],"707f5285c280ff14fa898e7722e57b7a46b81a76":["681329f0d8aa847be84b952db62031b9c15f96c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}