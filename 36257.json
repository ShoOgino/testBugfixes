{"path":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","commits":[{"id":"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67","date":1348934182,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    _TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(new MockAnalyzer(random()))\n                                 .setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(new MockAnalyzer(random()))\n                                 .setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(new MockAnalyzer(random()))\n                                 .setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feb4029567b43f074ed7b6eb8fb126d355075dfd","date":1544812585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2#testMergeUnusedPerFieldCodec().mjava","sourceNew":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(new MockAnalyzer(random()))\n                                 .setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.getDocStats().maxDoc);\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.getDocStats().maxDoc);\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /*\n   * Test that heterogeneous index segments are merge successfully\n   */\n  @Test\n  public void testMergeUnusedPerFieldCodec() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwconf = newIndexWriterConfig(new MockAnalyzer(random()))\n                                 .setOpenMode(OpenMode.CREATE).setCodec(new MockCodec());\n    IndexWriter writer = newWriter(dir, iwconf);\n    addDocs(writer, 10);\n    writer.commit();\n    addDocs3(writer, 10);\n    writer.commit();\n    addDocs2(writer, 10);\n    writer.commit();\n    assertEquals(30, writer.maxDoc());\n    TestUtil.checkIndex(dir);\n    writer.forceMerge(1);\n    assertEquals(30, writer.maxDoc());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6613659748fe4411a7dcf85266e55db1f95f7315":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"],"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feb4029567b43f074ed7b6eb8fb126d355075dfd"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"feb4029567b43f074ed7b6eb8fb126d355075dfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["feb4029567b43f074ed7b6eb8fb126d355075dfd"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}