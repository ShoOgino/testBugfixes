{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","commits":[{"id":"1257989f08e6750eeab73e5e9f7847fc48b04a1a","date":1531102463,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void checkTragicException(SolrCore solrCore) {\n    Throwable tragicException = null;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["621e93cf8b1c2790854610edc69525443538210b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void checkTragicException(SolrCore solrCore) {\n    Throwable tragicException = null;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void checkTragicException(SolrCore solrCore) {\n    Throwable tragicException = null;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c96c6402e44d386e86f90412fcf0f5ad5c689d2d","date":1532997723,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","sourceNew":"  /**\n   * @param solrCore te core against which we check if there has been a tragic exception\n   * @return whether this solr core has tragic exception\n   */\n  public boolean checkTragicException(SolrCore solrCore) {\n    Throwable tragicException;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n    \n    return tragicException != null;\n  }\n\n","sourceOld":"  public void checkTragicException(SolrCore solrCore) {\n    Throwable tragicException = null;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["621e93cf8b1c2790854610edc69525443538210b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"621e93cf8b1c2790854610edc69525443538210b","date":1550271095,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","sourceNew":"  /**\n   * @param solrCore the core against which we check if there has been a tragic exception\n   * @return whether this Solr core has tragic exception\n   * @see org.apache.lucene.index.IndexWriter#getTragicException()\n   */\n  public boolean checkTragicException(SolrCore solrCore) {\n    Throwable tragicException;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null && isZooKeeperAware()) {\n      getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n    }\n    \n    return tragicException != null;\n  }\n\n","sourceOld":"  /**\n   * @param solrCore te core against which we check if there has been a tragic exception\n   * @return whether this solr core has tragic exception\n   */\n  public boolean checkTragicException(SolrCore solrCore) {\n    Throwable tragicException;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null) {\n      if (isZooKeeperAware()) {\n        getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n      }\n    }\n    \n    return tragicException != null;\n  }\n\n","bugFix":["c96c6402e44d386e86f90412fcf0f5ad5c689d2d","1257989f08e6750eeab73e5e9f7847fc48b04a1a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#checkTragicException(SolrCore).mjava","sourceNew":"  /**\n   * @param solrCore the core against which we check if there has been a tragic exception\n   * @return whether this Solr core has tragic exception\n   * @see org.apache.lucene.index.IndexWriter#getTragicException()\n   */\n  public boolean checkTragicException(SolrCore solrCore) {\n    Throwable tragicException;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null && isZooKeeperAware()) {\n      getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n    }\n\n    return tragicException != null;\n  }\n\n","sourceOld":"  /**\n   * @param solrCore the core against which we check if there has been a tragic exception\n   * @return whether this Solr core has tragic exception\n   * @see org.apache.lucene.index.IndexWriter#getTragicException()\n   */\n  public boolean checkTragicException(SolrCore solrCore) {\n    Throwable tragicException;\n    try {\n      tragicException = solrCore.getSolrCoreState().getTragicException();\n    } catch (IOException e) {\n      // failed to open an indexWriter\n      tragicException = e;\n    }\n\n    if (tragicException != null && isZooKeeperAware()) {\n      getZkController().giveupLeadership(solrCore.getCoreDescriptor(), tragicException);\n    }\n    \n    return tragicException != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"621e93cf8b1c2790854610edc69525443538210b":["c96c6402e44d386e86f90412fcf0f5ad5c689d2d"],"1257989f08e6750eeab73e5e9f7847fc48b04a1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1257989f08e6750eeab73e5e9f7847fc48b04a1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["621e93cf8b1c2790854610edc69525443538210b"],"c96c6402e44d386e86f90412fcf0f5ad5c689d2d":["1257989f08e6750eeab73e5e9f7847fc48b04a1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b627755385655c7cd3fb296f17593658805cf4d5"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1257989f08e6750eeab73e5e9f7847fc48b04a1a"]},"commit2Childs":{"621e93cf8b1c2790854610edc69525443538210b":["b627755385655c7cd3fb296f17593658805cf4d5"],"1257989f08e6750eeab73e5e9f7847fc48b04a1a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c96c6402e44d386e86f90412fcf0f5ad5c689d2d","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1257989f08e6750eeab73e5e9f7847fc48b04a1a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c96c6402e44d386e86f90412fcf0f5ad5c689d2d":["621e93cf8b1c2790854610edc69525443538210b"],"b627755385655c7cd3fb296f17593658805cf4d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}