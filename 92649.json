{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","commits":[{"id":"930e87866b6876f955e62721287d102120585a9a","date":1296482805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":["930e87866b6876f955e62721287d102120585a9a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n                     new StringReader(\"Dogs Trees Birds Houses\")),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fae06511695f4be0bce5337deb3b3f813d0c3e7c","date":1323890147,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(\"Birds\", \"Houses\"))), \n                     new HashSet<String>(Arrays.asList(\"Dogs\", \"Trees\"))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(new String[] { \"Birds\", \"Houses\" }))), \n                     new HashSet<String>(Arrays.asList(new String[] { \"Dogs\", \"Trees\" }))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":null,"bugIntro":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Birds\", \"Houses\"), false)), \n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Dogs\", \"Trees\"), false)));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new HashSet<String>(Arrays.asList(\"Birds\", \"Houses\"))), \n                     new HashSet<String>(Arrays.asList(\"Dogs\", \"Trees\"))));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":["fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestKeywordMarkerFilter#testComposition().mjava","sourceNew":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Birds\", \"Houses\"), false)), \n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Dogs\", \"Trees\"), false)));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","sourceOld":"  // LUCENE-2901\n  public void testComposition() throws Exception {   \n    TokenStream ts = new LowerCaseFilterMock(\n                     new KeywordMarkerFilter(\n                     new KeywordMarkerFilter(\n                     new MockTokenizer(new StringReader(\"Dogs Trees Birds Houses\"), MockTokenizer.WHITESPACE, false),\n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Birds\", \"Houses\"), false)), \n                     new CharArraySet(TEST_VERSION_CURRENT, asSet(\"Dogs\", \"Trees\"), false)));\n    \n    assertTokenStreamContents(ts, new String[] { \"Dogs\", \"Trees\", \"Birds\", \"Houses\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["930e87866b6876f955e62721287d102120585a9a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"930e87866b6876f955e62721287d102120585a9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["29ef99d61cda9641b6250bf9567329a6e65f901d","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a3776dccca01c11e7046323cfad46a3b4a471233":["930e87866b6876f955e62721287d102120585a9a","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","930e87866b6876f955e62721287d102120585a9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","930e87866b6876f955e62721287d102120585a9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","fae06511695f4be0bce5337deb3b3f813d0c3e7c"],"930e87866b6876f955e62721287d102120585a9a":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["930e87866b6876f955e62721287d102120585a9a","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fae06511695f4be0bce5337deb3b3f813d0c3e7c":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}