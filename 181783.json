{"path":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    TermDocs tdocs = reader.termDocs();\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    tdocs.seek(ta);\n    assertTrue(tdocs.next());\n    assertEquals(0, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(1, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(2, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // without next\n    tdocs.seek(ta);\n    assertTrue(tdocs.skipTo(0));\n    assertEquals(0, tdocs.doc());\n    assertTrue(tdocs.skipTo(4));\n    assertEquals(4, tdocs.doc());\n    assertTrue(tdocs.skipTo(9));\n    assertEquals(9, tdocs.doc());\n    assertFalse(tdocs.skipTo(10));\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tb);\n    assertTrue(tdocs.next());\n    assertEquals(10, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(11, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(12, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // without next\n    tdocs.seek(tb);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(10, tdocs.doc());\n    assertTrue(tdocs.skipTo(15));\n    assertEquals(15, tdocs.doc());\n    assertTrue(tdocs.skipTo(24));\n    assertEquals(24, tdocs.doc());\n    assertTrue(tdocs.skipTo(25));\n    assertEquals(25, tdocs.doc());\n    assertFalse(tdocs.skipTo(26));\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs.seek(tc);\n    assertTrue(tdocs.next());\n    assertEquals(26, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.next());\n    assertEquals(27, tdocs.doc());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(28, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    //without next\n    tdocs.seek(tc);\n    assertTrue(tdocs.skipTo(5));\n    assertEquals(26, tdocs.doc());\n    assertTrue(tdocs.skipTo(40));\n    assertEquals(40, tdocs.doc());\n    assertTrue(tdocs.skipTo(57));\n    assertEquals(57, tdocs.doc());\n    assertTrue(tdocs.skipTo(74));\n    assertEquals(74, tdocs.doc());\n    assertTrue(tdocs.skipTo(75));\n    assertEquals(75, tdocs.doc());\n    assertFalse(tdocs.skipTo(76));\n    \n    tdocs.close();\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(), TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(), TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(), TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(), TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getDeletedDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getDeletedDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.optimize();\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                 MultiFields.getLiveDocs(reader),\n                                                 ta.field(),\n                                                 new BytesRef(ta.text()));\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        ta.field(),\n                                        new BytesRef(ta.text()));\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tb.field(),\n                                        new BytesRef(tb.text()));\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = MultiFields.getTermDocsEnum(reader,\n                                        MultiFields.getLiveDocs(reader),\n                                        tc.field(),\n                                        new BytesRef(tc.text()));\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, null, true, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentTermDocs#testSkipTo(int).mjava","sourceNew":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSkipTo(int indexDivisor) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    \n    Term ta = new Term(\"content\",\"aaa\");\n    for(int i = 0; i < 10; i++)\n      addDoc(writer, \"aaa aaa aaa aaa\");\n      \n    Term tb = new Term(\"content\",\"bbb\");\n    for(int i = 0; i < 16; i++)\n      addDoc(writer, \"bbb bbb bbb bbb\");\n      \n    Term tc = new Term(\"content\",\"ccc\");\n    for(int i = 0; i < 50; i++)\n      addDoc(writer, \"ccc ccc ccc ccc\");\n      \n    // assure that we deal with a single segment  \n    writer.forceMerge(1);\n    writer.close();\n    \n    IndexReader reader = IndexReader.open(dir, indexDivisor);\n\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    ta.field(),\n                                    new BytesRef(ta.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    true);\n    \n    // without optimization (assumption skipInterval == 16)\n    \n    // with next\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(1, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(2, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           ta.field(),\n                           new BytesRef(ta.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    \n    assertTrue(tdocs.advance(0) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(0, tdocs.docID());\n    assertTrue(tdocs.advance(4) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(4, tdocs.docID());\n    assertTrue(tdocs.advance(9) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(9, tdocs.docID());\n    assertFalse(tdocs.advance(10) != DocsEnum.NO_MORE_DOCS);\n    \n    // exactly skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(11, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(12, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tb.field(),\n                           new BytesRef(tb.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n    \n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(10, tdocs.docID());\n    assertTrue(tdocs.advance(15) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(15, tdocs.docID());\n    assertTrue(tdocs.advance(24) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(24, tdocs.docID());\n    assertTrue(tdocs.advance(25) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(25, tdocs.docID());\n    assertFalse(tdocs.advance(26) != DocsEnum.NO_MORE_DOCS);\n    \n    // much more than skipInterval documents and therefore with optimization\n    \n    // with next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           true);\n\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    assertEquals(27, tdocs.docID());\n    assertEquals(4, tdocs.freq());\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(28, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    //without next\n    tdocs = _TestUtil.docs(random, reader,\n                           tc.field(),\n                           new BytesRef(tc.text()),\n                           MultiFields.getLiveDocs(reader),\n                           null,\n                           false);\n    assertTrue(tdocs.advance(5) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(26, tdocs.docID());\n    assertTrue(tdocs.advance(40) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(40, tdocs.docID());\n    assertTrue(tdocs.advance(57) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(57, tdocs.docID());\n    assertTrue(tdocs.advance(74) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(74, tdocs.docID());\n    assertTrue(tdocs.advance(75) != DocsEnum.NO_MORE_DOCS);\n    assertEquals(75, tdocs.docID());\n    assertFalse(tdocs.advance(76) != DocsEnum.NO_MORE_DOCS);\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["872cff1d3a554e0cd64014cd97f88d3002b0f491","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","1f653cfcf159baeaafe5d01682a911e95bba4012"],"c19f985e36a65cc969e8e564fe337a0d41512075":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["c19f985e36a65cc969e8e564fe337a0d41512075"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","c19f985e36a65cc969e8e564fe337a0d41512075"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["d572389229127c297dd1fa5ce4758e1cec41e799"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"5f4e87790277826a2aea119328600dfb07761f32":["d572389229127c297dd1fa5ce4758e1cec41e799","28427ef110c4c5bf5b4057731b83110bd1e13724"],"962d04139994fce5193143ef35615499a9a96d78":["45669a651c970812a680841b97a77cce06af559f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f2c5f0cb44df114db4228c8f77861714b5cabaea","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["872cff1d3a554e0cd64014cd97f88d3002b0f491","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["872cff1d3a554e0cd64014cd97f88d3002b0f491","b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c19f985e36a65cc969e8e564fe337a0d41512075":["01e5948db9a07144112d2f08f28ca2e3cd880348","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","a3776dccca01c11e7046323cfad46a3b4a471233"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["f2c5f0cb44df114db4228c8f77861714b5cabaea","45669a651c970812a680841b97a77cce06af559f"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["b21422ff1d1d56499dec481f193b402e5e8def5b","5f4e87790277826a2aea119328600dfb07761f32"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","b65b350ca9588f9fc76ce7d6804160d06c45ff42","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"962d04139994fce5193143ef35615499a9a96d78":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"45669a651c970812a680841b97a77cce06af559f":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}