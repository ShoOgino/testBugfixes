{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST.DefaultBytesWriter#writeBytes(byte[],int,int).mjava","commits":[{"id":"cb27634f76319b68d6d8fd11a7104d20294722c5","date":1355210077,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.DefaultBytesWriter#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.BytesWriter#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.DefaultBytesWriter#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.BytesWriter#writeBytes(byte[],int,int).mjava","sourceNew":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","sourceOld":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e78f3c129251e74ecc2ff73a32de0f27cf09d5","date":1358006150,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.DefaultBytesWriter#writeBytes(byte[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.DefaultBytesWriter#writeBytes(byte[],int,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void writeBytes(byte[] b, int offset, int length) {\n      final int size = posWrite + length;\n      assert bytes.length < Integer.MAX_VALUE: \"FST too large (> 2.1 GB)\";\n      bytes = ArrayUtil.grow(bytes, size);\n      System.arraycopy(b, offset, bytes, posWrite, length);\n      posWrite += length;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb27634f76319b68d6d8fd11a7104d20294722c5"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["cb27634f76319b68d6d8fd11a7104d20294722c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cb27634f76319b68d6d8fd11a7104d20294722c5"],"87e78f3c129251e74ecc2ff73a32de0f27cf09d5":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb27634f76319b68d6d8fd11a7104d20294722c5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","87e78f3c129251e74ecc2ff73a32de0f27cf09d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}