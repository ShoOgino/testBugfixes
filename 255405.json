{"path":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","commits":[{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","sourceNew":"  final void addDocument(Document doc) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","sourceNew":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsWriter#addDocument(Document,FieldInfos).mjava","sourceNew":"  final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.stored()) {\n        storedCount++;\n      }\n    }\n    fieldsStream.writeVInt(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.stored()) {\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n      }\n    }\n  }\n\n","sourceOld":"  final void addDocument(Document doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      if (field.isStored())\n          storedCount++;\n    }\n    fieldsStream.writeVInt(storedCount);\n\n\n    for (Fieldable field : fields) {\n      if (field.isStored())\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1224a4027481acce15495b03bce9b48b93b42722","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["1224a4027481acce15495b03bce9b48b93b42722","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"]},"commit2Childs":{"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d619839baa8ce5503e496b94a9e42ad6f079293f","b0c7a8f7304b75b1528814c5820fa23a96816c27","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"1224a4027481acce15495b03bce9b48b93b42722":["d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}