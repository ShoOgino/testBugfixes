{"path":"lucene/core/src/test/org/apache/lucene/search/TestBoostQuery#testToString().mjava","commits":[{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBoostQuery#testToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testToString() {\n    assertEquals(\"foo:bar^2.0\", new BoostQuery(new TermQuery(new Term(\"foo\", \"bar\")), 2).toString());\n    BooleanQuery bq = new BooleanQuery.Builder()\n        .add(new TermQuery(new Term(\"foo\", \"bar\")), Occur.SHOULD)\n        .add(new TermQuery(new Term(\"foo\", \"baz\")), Occur.SHOULD)\n        .build();\n    assertEquals(\"(foo:bar foo:baz)^2.0\", new BoostQuery(bq, 2).toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0cdf628dda21ad509f09608c835dc27541d1ca3","date":1444665868,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBoostQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBoostQuery#testToString().mjava","sourceNew":"  public void testToString() {\n    assertEquals(\"(foo:bar)^2.0\", new BoostQuery(new TermQuery(new Term(\"foo\", \"bar\")), 2).toString());\n    BooleanQuery bq = new BooleanQuery.Builder()\n        .add(new TermQuery(new Term(\"foo\", \"bar\")), Occur.SHOULD)\n        .add(new TermQuery(new Term(\"foo\", \"baz\")), Occur.SHOULD)\n        .build();\n    assertEquals(\"(foo:bar foo:baz)^2.0\", new BoostQuery(bq, 2).toString());\n  }\n\n","sourceOld":"  public void testToString() {\n    assertEquals(\"foo:bar^2.0\", new BoostQuery(new TermQuery(new Term(\"foo\", \"bar\")), 2).toString());\n    BooleanQuery bq = new BooleanQuery.Builder()\n        .add(new TermQuery(new Term(\"foo\", \"bar\")), Occur.SHOULD)\n        .add(new TermQuery(new Term(\"foo\", \"baz\")), Occur.SHOULD)\n        .build();\n    assertEquals(\"(foo:bar foo:baz)^2.0\", new BoostQuery(bq, 2).toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0cdf628dda21ad509f09608c835dc27541d1ca3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["b0cdf628dda21ad509f09608c835dc27541d1ca3"],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}