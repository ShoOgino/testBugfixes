{"path":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d374631bb6f5665bd5907a6186a9bb283a315f7d","date":1336345692,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a67285d1a68175d877eb9fd1624fccad3db028ff","date":1402779028,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      compiled.lightAutomaton.writeDot(\"compiled\");\n      \n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","date":1402946522,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      compiled.lightAutomaton.writeDot(\"compiled\");\n      \n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRefBuilder())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c5c0e8e826d8fd169840564bcf8606cf81d15b","date":1473715404,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm) throws IOException {\n    assert editDistance < automata.length;\n    final CompiledAutomaton compiled = automata[editDistance];\n    BytesRef initialSeekTerm;\n    if (lastTerm == null) {\n      // This is the first enum we are pulling:\n      initialSeekTerm = null;\n    } else {\n      // We are pulling this enum (e.g., ed=1) after iterating for a while already (e.g., ed=2):\n      initialSeekTerm = compiled.floor(lastTerm, new BytesRefBuilder());\n    }\n    return terms.intersect(compiled, initialSeekTerm);\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRefBuilder())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm) throws IOException {\n    assert editDistance < automata.length;\n    final CompiledAutomaton compiled = automata[editDistance];\n    BytesRef initialSeekTerm;\n    if (lastTerm == null) {\n      // This is the first enum we are pulling:\n      initialSeekTerm = null;\n    } else {\n      // We are pulling this enum (e.g., ed=1) after iterating for a while already (e.g., ed=2):\n      initialSeekTerm = compiled.floor(lastTerm, new BytesRefBuilder());\n    }\n    return terms.intersect(compiled, initialSeekTerm);\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRefBuilder())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm) throws IOException {\n    assert editDistance < automata.length;\n    final CompiledAutomaton compiled = automata[editDistance];\n    BytesRef initialSeekTerm;\n    if (lastTerm == null) {\n      // This is the first enum we are pulling:\n      initialSeekTerm = null;\n    } else {\n      // We are pulling this enum (e.g., ed=1) after iterating for a while already (e.g., ed=2):\n      initialSeekTerm = compiled.floor(lastTerm, new BytesRefBuilder());\n    }\n    return terms.intersect(compiled, initialSeekTerm);\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRefBuilder())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm) throws IOException {\n    assert editDistance < automata.length;\n    final CompiledAutomaton compiled = automata[editDistance];\n    BytesRef initialSeekTerm;\n    if (lastTerm == null) {\n      // This is the first enum we are pulling:\n      initialSeekTerm = null;\n    } else {\n      // We are pulling this enum (e.g., ed=1) after iterating for a while already (e.g., ed=2):\n      initialSeekTerm = compiled.floor(lastTerm, new BytesRefBuilder());\n    }\n    return terms.intersect(compiled, initialSeekTerm);\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  protected TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRefBuilder())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["a67285d1a68175d877eb9fd1624fccad3db028ff"],"a67285d1a68175d877eb9fd1624fccad3db028ff":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","89424def13674ea17829b41c5883c54ecc31a132"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["5c84485629d80d203608e8975a1139de9933cc38"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5c84485629d80d203608e8975a1139de9933cc38":["d374631bb6f5665bd5907a6186a9bb283a315f7d","31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","b9c5c0e8e826d8fd169840564bcf8606cf81d15b"]},"commit2Childs":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["5c84485629d80d203608e8975a1139de9933cc38"],"a67285d1a68175d877eb9fd1624fccad3db028ff":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","b9c5c0e8e826d8fd169840564bcf8606cf81d15b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["a67285d1a68175d877eb9fd1624fccad3db028ff","5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"b9c5c0e8e826d8fd169840564bcf8606cf81d15b":["89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}