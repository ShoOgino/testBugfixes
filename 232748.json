{"path":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","commits":[{"id":"d87e79dd2fe0ebb0cd960cf5f9738bcb0d8da823","date":1141573484,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"/dev/null","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    System.out.println(hits.id(0));\n    System.out.println(hits.id(1));\n    assertEquals(0, hits.length());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b596f2a26314452d516ce909093895a93ed522bc","date":1141779568,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    assertEquals(0, hits.length());\n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    System.out.println(hits.id(0));\n    System.out.println(hits.id(1));\n    assertEquals(0, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aabae793f43472efdf1dcdaae4e01e28cfc23ccd","date":1161750034,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    assertEquals(0, hits.length());\n    QueryUtils.check(query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    assertEquals(0, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    Hits hits = searcher.search(bq);\n    assertEquals(0, hits.length());\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b596f2a26314452d516ce909093895a93ed522bc":["d87e79dd2fe0ebb0cd960cf5f9738bcb0d8da823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"d87e79dd2fe0ebb0cd960cf5f9738bcb0d8da823":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["b596f2a26314452d516ce909093895a93ed522bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"b596f2a26314452d516ce909093895a93ed522bc":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d87e79dd2fe0ebb0cd960cf5f9738bcb0d8da823"],"d87e79dd2fe0ebb0cd960cf5f9738bcb0d8da823":["b596f2a26314452d516ce909093895a93ed522bc"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}