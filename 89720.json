{"path":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","commits":[{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","pathOld":"/dev/null","sourceNew":"  private void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd564443cc619840b8e9859c46194b087f94ffce","date":1479727773,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","sourceNew":"  protected void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","sourceOld":"  private void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd70af1186a18d10a788433cc33be44327a83ce7","date":1479767946,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","sourceNew":"  protected void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","sourceOld":"  private void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ac99c5ad157ae4ccdb201f140463a90f12f07b3","date":1582540181,"type":4,"author":"Alessandro Benedetti","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/QueryBuilder#add(BooleanQuery.Builder,List[Term],BooleanClause.Occur).mjava","sourceNew":null,"sourceOld":"  protected void add(BooleanQuery.Builder q, List<Term> current, BooleanClause.Occur operator) {\n    if (current.isEmpty()) {\n      return;\n    }\n    if (current.size() == 1) {\n      q.add(newTermQuery(current.get(0)), operator);\n    } else {\n      q.add(newSynonymQuery(current.toArray(new Term[current.size()])), operator);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ac99c5ad157ae4ccdb201f140463a90f12f07b3":["bd564443cc619840b8e9859c46194b087f94ffce"],"bd564443cc619840b8e9859c46194b087f94ffce":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd70af1186a18d10a788433cc33be44327a83ce7":["81d0720146de53dd3a4a023d2a3d1089d86d748d","bd564443cc619840b8e9859c46194b087f94ffce"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ac99c5ad157ae4ccdb201f140463a90f12f07b3"]},"commit2Childs":{"3ac99c5ad157ae4ccdb201f140463a90f12f07b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd564443cc619840b8e9859c46194b087f94ffce":["3ac99c5ad157ae4ccdb201f140463a90f12f07b3","cd70af1186a18d10a788433cc33be44327a83ce7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"cd70af1186a18d10a788433cc33be44327a83ce7":[],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["bd564443cc619840b8e9859c46194b087f94ffce","cd70af1186a18d10a788433cc33be44327a83ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd70af1186a18d10a788433cc33be44327a83ce7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}