{"path":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","pathOld":"/dev/null","sourceNew":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n    \n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n      \n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n\twhile (positions.next()) {\n\t  System.out.print(\" doc=\" + positions.doc());\n\t  System.out.print(\" TF=\" + positions.freq());\n\t  System.out.print(\" pos=\");\n\t  System.out.print(positions.nextPosition());\n\t  for (int j = 1; j < positions.freq(); j++)\n\t    System.out.print(\",\" + positions.nextPosition());\n\t  System.out.println(\"\");\n\t}\n      } finally {\n\tpositions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a49825bb29a22d2429de7a48020fd3e3d220e0","date":1043862193,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","pathOld":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","sourceNew":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n\twhile (positions.next()) {\n\t  System.out.print(\" doc=\" + positions.doc());\n\t  System.out.print(\" TF=\" + positions.freq());\n\t  System.out.print(\" pos=\");\n\t  System.out.print(positions.nextPosition());\n\t  for (int j = 1; j < positions.freq(); j++)\n\t    System.out.print(\",\" + positions.nextPosition());\n\t  System.out.println(\"\");\n\t}\n      } finally {\n\tpositions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n    \n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n      \n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n\twhile (positions.next()) {\n\t  System.out.print(\" doc=\" + positions.doc());\n\t  System.out.print(\" TF=\" + positions.freq());\n\t  System.out.print(\" pos=\");\n\t  System.out.print(positions.nextPosition());\n\t  for (int j = 1; j < positions.freq(); j++)\n\t    System.out.print(\",\" + positions.nextPosition());\n\t  System.out.println(\"\");\n\t}\n      } finally {\n\tpositions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":3,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","pathOld":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","sourceNew":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n        while (positions.next()) {\n          System.out.print(\" doc=\" + positions.doc());\n          System.out.print(\" TF=\" + positions.freq());\n          System.out.print(\" pos=\");\n          System.out.print(positions.nextPosition());\n          for (int j = 1; j < positions.freq(); j++)\n            System.out.print(\",\" + positions.nextPosition());\n          System.out.println(\"\");\n        }\n      } finally {\n        positions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n\twhile (positions.next()) {\n\t  System.out.print(\" doc=\" + positions.doc());\n\t  System.out.print(\" TF=\" + positions.freq());\n\t  System.out.print(\" pos=\");\n\t  System.out.print(positions.nextPosition());\n\t  for (int j = 1; j < positions.freq(); j++)\n\t    System.out.print(\",\" + positions.nextPosition());\n\t  System.out.println(\"\");\n\t}\n      } finally {\n\tpositions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e5d88b55f1b57feab6da94a5c635a224539bd2a","date":1095877947,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","pathOld":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","sourceNew":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      SegmentReader.get(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n        while (positions.next()) {\n          System.out.print(\" doc=\" + positions.doc());\n          System.out.print(\" TF=\" + positions.freq());\n          System.out.print(\" pos=\");\n          System.out.print(positions.nextPosition());\n          for (int j = 1; j < positions.freq(); j++)\n            System.out.print(\",\" + positions.nextPosition());\n          System.out.println(\"\");\n        }\n      } finally {\n        positions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      new SegmentReader(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n        while (positions.next()) {\n          System.out.print(\" doc=\" + positions.doc());\n          System.out.print(\" TF=\" + positions.freq());\n          System.out.print(\" pos=\");\n          System.out.print(positions.nextPosition());\n          for (int j = 1; j < positions.freq(); j++)\n            System.out.print(\",\" + positions.nextPosition());\n          System.out.println(\"\");\n        }\n      } finally {\n        positions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b5a967d59f4825942c3bc3c0dd0fd792aa8ab23","date":1133544035,"type":4,"author":"Bernhard Messer","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/DocTest#printSegment(String).mjava","sourceNew":null,"sourceOld":"  static void printSegment(String segment)\n       throws Exception {\n    Directory directory = FSDirectory.getDirectory(\"test\", false);\n    SegmentReader reader =\n      SegmentReader.get(new SegmentInfo(segment, 1, directory));\n\n    for (int i = 0; i < reader.numDocs(); i++)\n      System.out.println(reader.document(i));\n\n    TermEnum tis = reader.terms();\n    while (tis.next()) {\n      System.out.print(tis.term());\n      System.out.println(\" DF=\" + tis.docFreq());\n\n      TermPositions positions = reader.termPositions(tis.term());\n      try {\n        while (positions.next()) {\n          System.out.print(\" doc=\" + positions.doc());\n          System.out.print(\" TF=\" + positions.freq());\n          System.out.print(\" pos=\");\n          System.out.print(positions.nextPosition());\n          for (int j = 1; j < positions.freq(); j++)\n            System.out.print(\",\" + positions.nextPosition());\n          System.out.println(\"\");\n        }\n      } finally {\n        positions.close();\n      }\n    }\n    tis.close();\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b5a967d59f4825942c3bc3c0dd0fd792aa8ab23":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5a49825bb29a22d2429de7a48020fd3e3d220e0":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a5a49825bb29a22d2429de7a48020fd3e3d220e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b5a967d59f4825942c3bc3c0dd0fd792aa8ab23"]},"commit2Childs":{"8b5a967d59f4825942c3bc3c0dd0fd792aa8ab23":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a5a49825bb29a22d2429de7a48020fd3e3d220e0"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["8b5a967d59f4825942c3bc3c0dd0fd792aa8ab23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a5a49825bb29a22d2429de7a48020fd3e3d220e0":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}