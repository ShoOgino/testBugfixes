{"path":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_UNSTORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_UNSTORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_UNSTORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_UNSTORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_UNSTORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testInfiniteFreq1().mjava","sourceNew":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"lyrics\", \"drug\"), 1);\n    builder.add(new Term(\"lyrics\", \"drug\"), 3);\n    builder.setSlop(1);\n    PhraseQuery pq = builder.build();\n    // \"drug the drug\"~1\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testInfiniteFreq1() throws Exception {\n    String document = \"drug druggy drug drug drug\";\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newField(\"lyrics\", document, new FieldType(TextField.TYPE_NOT_STORED)));\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    \n    IndexSearcher is = newSearcher(ir);\n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 3);\n    pq.setSlop(1);\n    assertSaneScoring(pq, is);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"e9e1499c5d26c936238506df90a3c02c76707722":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["e9e1499c5d26c936238506df90a3c02c76707722"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}