{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toAutomaton(int).mjava","commits":[{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toAutomaton(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toAutomaton(AutomatonProvider).mjava","sourceNew":"  /**\n   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param maxDeterminizedStates maximum number of states in the resulting\n   *   automata.  If the automata would need more than this many states\n   *   TooComplextToDeterminizeException is thrown.  Higher number require more\n   *   space but can process more complex regexes.\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   * @exception TooComplexToDeterminizeException if determinizing this regexp\n   *   requires more than maxDeterminizedStates states\n   */\n  public Automaton toAutomaton(int maxDeterminizedStates)\n      throws IllegalArgumentException, TooComplexToDeterminizeException {\n    return toAutomaton(null, null, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /**\n   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param automaton_provider provider of automata for named identifiers\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   */\n  public Automaton toAutomaton(AutomatonProvider automaton_provider)\n      throws IllegalArgumentException {\n    return toAutomaton(null, automaton_provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b316f82baae88f5e279893a9cb7eee51fd8902f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}