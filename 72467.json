{"path":"lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests#assertFailureCount(int,Result).mjava","commits":[{"id":"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518","date":1398331323,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests#assertFailureCount(int,Result).mjava","pathOld":"/dev/null","sourceNew":"  protected void assertFailureCount(int expected, Result result) {\n    if (result.getFailureCount() != expected) {\n      StringBuilder b = new StringBuilder();\n      for (Failure f : result.getFailures()) {\n        b.append(\"\\n\\n\");\n        b.append(f.getMessage());\n        b.append(\"\\n\");\n        b.append(f.getTrace());\n      }\n      RandomizedTest.assertFalse(\"Expected failures: \" + expected + \" but was \" + \n          result.getFailureCount() + \", failures below: \" + b.toString(), true);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d524d41bd211f811312cf6639e3792dae4df6cbb","date":1398850727,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests#assertFailureCount(int,Result).mjava","pathOld":"/dev/null","sourceNew":"  protected void assertFailureCount(int expected, Result result) {\n    if (result.getFailureCount() != expected) {\n      StringBuilder b = new StringBuilder();\n      for (Failure f : result.getFailures()) {\n        b.append(\"\\n\\n\");\n        b.append(f.getMessage());\n        b.append(\"\\n\");\n        b.append(f.getTrace());\n      }\n      RandomizedTest.assertFalse(\"Expected failures: \" + expected + \" but was \" + \n          result.getFailureCount() + \", failures below: \" + b.toString(), true);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/WithNestedTests#assertFailureCount(int,Result).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/WithNestedTests#assertFailureCount(int,Result).mjava","sourceNew":"  protected void assertFailureCount(int expected, Result result) {\n    if (result.getFailureCount() != expected) {\n      StringBuilder b = new StringBuilder();\n      for (Failure f : result.getFailures()) {\n        b.append(\"\\n\\n\");\n        b.append(f.getMessage());\n        b.append(\"\\n\");\n        b.append(f.getTrace());\n      }\n      RandomizedTest.assertFalse(\"Expected failures: \" + expected + \" but was \" + \n          result.getFailureCount() + \", failures below: \" + b.toString(), true);\n    }\n  }\n\n","sourceOld":"  protected void assertFailureCount(int expected, Result result) {\n    if (result.getFailureCount() != expected) {\n      StringBuilder b = new StringBuilder();\n      for (Failure f : result.getFailures()) {\n        b.append(\"\\n\\n\");\n        b.append(f.getMessage());\n        b.append(\"\\n\");\n        b.append(f.getTrace());\n      }\n      RandomizedTest.assertFalse(\"Expected failures: \" + expected + \" but was \" + \n          result.getFailureCount() + \", failures below: \" + b.toString(), true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d524d41bd211f811312cf6639e3792dae4df6cbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"d524d41bd211f811312cf6639e3792dae4df6cbb":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d524d41bd211f811312cf6639e3792dae4df6cbb","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}