{"path":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","commits":[{"id":"9ad07cf326135fbb108f766a0798c8ee00b17dcb","date":1077215339,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentsReader#numDocs().mjava","sourceNew":"  public synchronized int numDocs() {\n    if (numDocs == -1) {\t\t\t  // check cache\n      int n = 0;\t\t\t\t  // cache miss--recompute\n      for (int i = 0; i < readers.length; i++)\n\tn += readers[i].numDocs();\t\t  // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  public final synchronized int numDocs() {\n    if (numDocs == -1) {\t\t\t  // check cache\n      int n = 0;\t\t\t\t  // cache miss--recompute\n      for (int i = 0; i < readers.length; i++)\n\tn += readers[i].numDocs();\t\t  // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  public synchronized int numDocs() {\n    if (numDocs == -1) {\t\t\t  // check cache\n      int n = 0;\t\t\t\t  // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n\tn += subReaders[i].numDocs();\t\t  // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  public synchronized int numDocs() {\n    if (numDocs == -1) {\t\t\t  // check cache\n      int n = 0;\t\t\t\t  // cache miss--recompute\n      for (int i = 0; i < readers.length; i++)\n\tn += readers[i].numDocs();\t\t  // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbe196f6406e5d96f401c346389b069dc7fd0e1","date":1084538986,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  public synchronized int numDocs() {\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  public synchronized int numDocs() {\n    if (numDocs == -1) {\t\t\t  // check cache\n      int n = 0;\t\t\t\t  // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n\tn += subReaders[i].numDocs();\t\t  // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  public synchronized int numDocs() {\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  public synchronized int numDocs() {\r\n    // Don't call ensureOpen() here (it could affect performance)\r\n    if (numDocs == -1) {        // check cache\r\n      int n = 0;                // cache miss--recompute\r\n      for (int i = 0; i < subReaders.length; i++)\r\n        n += subReaders[i].numDocs();      // sum from readers\r\n      numDocs = n;\r\n    }\r\n    return numDocs;\r\n  }\r\n\n","sourceOld":"  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  @Override\n  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ee41a444cd904f922cebbaa1d52c166447e46d7","date":1260989504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  @Override\n  public int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    // NOTE: multiple threads may wind up init'ing\n    // numDocs... but that's harmless\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  @Override\n  public synchronized int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#numDocs().mjava","sourceNew":"  @Override\n  public int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    // NOTE: multiple threads may wind up init'ing\n    // numDocs... but that's harmless\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","sourceOld":"  @Override\n  public int numDocs() {\n    // Don't call ensureOpen() here (it could affect performance)\n    // NOTE: multiple threads may wind up init'ing\n    // numDocs... but that's harmless\n    if (numDocs == -1) {        // check cache\n      int n = 0;                // cache miss--recompute\n      for (int i = 0; i < subReaders.length; i++)\n        n += subReaders[i].numDocs();      // sum from readers\n      numDocs = n;\n    }\n    return numDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"8a9e385641d717e641408d8fbbc62be8fc766357":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ee41a444cd904f922cebbaa1d52c166447e46d7":["8a9e385641d717e641408d8fbbc62be8fc766357"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1ee41a444cd904f922cebbaa1d52c166447e46d7"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["8a9e385641d717e641408d8fbbc62be8fc766357"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"8a9e385641d717e641408d8fbbc62be8fc766357":["1ee41a444cd904f922cebbaa1d52c166447e46d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"1ee41a444cd904f922cebbaa1d52c166447e46d7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}