{"path":"lucene/queries/src/java/org/apache/lucene/queries/intervals/ConjunctionDISI#addIterator(DocIdSetIterator,List[DocIdSetIterator]).mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/ConjunctionDISI#addIterator(DocIdSetIterator,List[DocIdSetIterator]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/ConjunctionDISI#addIterator(DocIdSetIterator,List[DocIdSetIterator]).mjava","sourceNew":"  private static void addIterator(DocIdSetIterator disi, List<DocIdSetIterator> allIterators) {\n    if (disi.getClass() == ConjunctionDISI.class) { // Check for exactly this class for collapsing\n      ConjunctionDISI conjunction = (ConjunctionDISI) disi;\n      // subconjuctions have already split themselves into two phase iterators and others, so we can take those\n      // iterators as they are and move them up to this conjunction\n      allIterators.add(conjunction.lead1);\n      allIterators.add(conjunction.lead2);\n      Collections.addAll(allIterators, conjunction.others);\n    } else {\n      allIterators.add(disi);\n    }\n  }\n\n","sourceOld":"  private static void addIterator(DocIdSetIterator disi, List<DocIdSetIterator> allIterators) {\n    if (disi.getClass() == ConjunctionDISI.class) { // Check for exactly this class for collapsing\n      ConjunctionDISI conjunction = (ConjunctionDISI) disi;\n      // subconjuctions have already split themselves into two phase iterators and others, so we can take those\n      // iterators as they are and move them up to this conjunction\n      allIterators.add(conjunction.lead1);\n      allIterators.add(conjunction.lead2);\n      Collections.addAll(allIterators, conjunction.others);\n    } else {\n      allIterators.add(disi);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}