{"path":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeFilterBuilderTestCase#testGetFilterFloat().mjava","commits":[{"id":"05bdab91555bc2728769812fa2e40814e900f661","date":1269650215,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeFilterBuilderTestCase#testGetFilterFloat().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testGetFilterFloat() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tassertTrue(filter instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter = (NumericRangeFilter) filter;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter.getField());\n\t\tassertTrue(numRangeFilter.includesMin());\n\t\tassertTrue(numRangeFilter.includesMax());\n\n\t\tString xml2 = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23' includeUpper='false' precisionStep='2' />\";\n\t\tDocument doc2 = getDocumentFromString(xml2);\n\n\t\tFilter filter2 = filterBuilder.getFilter(doc2.getDocumentElement());\n\t\tassertTrue(filter2 instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter2 = (NumericRangeFilter) filter2;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter2.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter2.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter2.getField());\n\t\tassertTrue(numRangeFilter2.includesMin());\n\t\tassertFalse(numRangeFilter2.includesMax());\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"539040a2eeaeb2ec1252c35b94773ddf32175f5a","date":1269681454,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterFloat().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeFilterBuilderTestCase#testGetFilterFloat().mjava","sourceNew":"\tpublic void testGetFilterFloat() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tassertTrue(filter instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter = (NumericRangeFilter) filter;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter.getField());\n\t\tassertTrue(numRangeFilter.includesMin());\n\t\tassertTrue(numRangeFilter.includesMax());\n\n\t\tString xml2 = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23' includeUpper='false' precisionStep='2' />\";\n\t\tDocument doc2 = getDocumentFromString(xml2);\n\n\t\tFilter filter2 = filterBuilder.getFilter(doc2.getDocumentElement());\n\t\tassertTrue(filter2 instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter2 = (NumericRangeFilter) filter2;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter2.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter2.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter2.getField());\n\t\tassertTrue(numRangeFilter2.includesMin());\n\t\tassertFalse(numRangeFilter2.includesMax());\n\t}\n\n","sourceOld":"\tpublic void testGetFilterFloat() throws Exception {\n\t\tNumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n\t\tfilterBuilder.setStrictMode(true);\n\n\t\tString xml = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\n\t\tFilter filter = filterBuilder.getFilter(doc.getDocumentElement());\n\t\tassertTrue(filter instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter = (NumericRangeFilter) filter;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter.getField());\n\t\tassertTrue(numRangeFilter.includesMin());\n\t\tassertTrue(numRangeFilter.includesMax());\n\n\t\tString xml2 = \"<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23' includeUpper='false' precisionStep='2' />\";\n\t\tDocument doc2 = getDocumentFromString(xml2);\n\n\t\tFilter filter2 = filterBuilder.getFilter(doc2.getDocumentElement());\n\t\tassertTrue(filter2 instanceof NumericRangeFilter<?>);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tNumericRangeFilter<Float> numRangeFilter2 = (NumericRangeFilter) filter2;\n\t\tassertEquals(Float.valueOf(-2.321432f), numRangeFilter2.getMin());\n\t\tassertEquals(Float.valueOf(32432.23f), numRangeFilter2.getMax());\n\t\tassertEquals(\"AGE\", numRangeFilter2.getField());\n\t\tassertTrue(numRangeFilter2.includesMin());\n\t\tassertFalse(numRangeFilter2.includesMax());\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["05bdab91555bc2728769812fa2e40814e900f661"],"05bdab91555bc2728769812fa2e40814e900f661":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05bdab91555bc2728769812fa2e40814e900f661"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05bdab91555bc2728769812fa2e40814e900f661":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}