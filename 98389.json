{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(readOnly); // Preserve current readOnly\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(readOnly); // Preserve current readOnly\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8414cdacb05e1277df96a30710f570f4251d9a","date":1323040348,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(true);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(readOnly); // Preserve current readOnly\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef5d5589290633d3913407e8e8320c227949ff40","date":1323041363,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(true);\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"326990249d982376dfa2e6fd97c28f4580df4e7c","date":1323042771,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(readOnly); // Preserve current readOnly\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      return clone(readOnly); // Preserve current readOnly\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, writer);\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, writer);\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true);\n      newReader.writer = writer;\n      newReader.hasDeletions = hasDeletions;\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeb24fe119d55091148e2a3d94e80c9e349d886c","date":1323807643,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, writer);\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, writer);\n      assert newReader.readerFinishedListeners != null;\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#clone().mjava","sourceNew":null,"sourceOld":"  @Override\n  public final synchronized Object clone() {\n    try {\n      DirectoryReader newReader = doOpenIfChanged((SegmentInfos) segmentInfos.clone(), true, writer);\n      return newReader;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b8414cdacb05e1277df96a30710f570f4251d9a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ef5d5589290633d3913407e8e8320c227949ff40":["4b8414cdacb05e1277df96a30710f570f4251d9a"],"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["9454a6510e2db155fb01faa5c049b06ece95fab9","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["9454a6510e2db155fb01faa5c049b06ece95fab9","326990249d982376dfa2e6fd97c28f4580df4e7c"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["eeb24fe119d55091148e2a3d94e80c9e349d886c"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["ef5d5589290633d3913407e8e8320c227949ff40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4b8414cdacb05e1277df96a30710f570f4251d9a":["ef5d5589290633d3913407e8e8320c227949ff40"],"ef5d5589290633d3913407e8e8320c227949ff40":["326990249d982376dfa2e6fd97c28f4580df4e7c"],"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","eeb24fe119d55091148e2a3d94e80c9e349d886c"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4b8414cdacb05e1277df96a30710f570f4251d9a","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}