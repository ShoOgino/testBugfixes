{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","commits":[{"id":"cdd3a20c3f7b8db3ed0313a58cb6304f9b5bc340","date":1295995357,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeb24fe119d55091148e2a3d94e80c9e349d886c","date":1323807643,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderFinishedListener listener = new IndexReader.ReaderFinishedListener() {\n      public void finished(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderFinishedListener(listener);\n\n    reader.close();\n\n    // Just the top reader\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    // Now also the subs\n    assertEquals(3, closeCount[0]);\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderFinishedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(3, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final DirectoryReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    DirectoryReader reader2 = DirectoryReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final DirectoryReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    DirectoryReader reader2 = DirectoryReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final IndexReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testReaderFinishedListener().mjava","sourceNew":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final DirectoryReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    DirectoryReader reader2 = DirectoryReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2474\n  public void testReaderFinishedListener() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(3);\n    writer.addDocument(new Document());\n    writer.commit();\n    writer.addDocument(new Document());\n    writer.commit();\n    final DirectoryReader reader = writer.getReader();\n    final int[] closeCount = new int[1];\n    final IndexReader.ReaderClosedListener listener = new IndexReader.ReaderClosedListener() {\n      public void onClose(IndexReader reader) {\n        closeCount[0]++;\n      }\n    };\n\n    reader.addReaderClosedListener(listener);\n\n    reader.close();\n\n    // Close the top reader, its the only one that should be closed\n    assertEquals(1, closeCount[0]);\n    writer.close();\n\n    DirectoryReader reader2 = DirectoryReader.open(dir);\n    reader2.addReaderClosedListener(listener);\n\n    closeCount[0] = 0;\n    reader2.close();\n    assertEquals(1, closeCount[0]);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"06584e6e98d592b34e1329b384182f368d2025e8":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"c19f985e36a65cc969e8e564fe337a0d41512075":["cdd3a20c3f7b8db3ed0313a58cb6304f9b5bc340"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["eeb24fe119d55091148e2a3d94e80c9e349d886c","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"cdd3a20c3f7b8db3ed0313a58cb6304f9b5bc340":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c19f985e36a65cc969e8e564fe337a0d41512075"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["06584e6e98d592b34e1329b384182f368d2025e8"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["eeb24fe119d55091148e2a3d94e80c9e349d886c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["eeb24fe119d55091148e2a3d94e80c9e349d886c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c19f985e36a65cc969e8e564fe337a0d41512075":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cdd3a20c3f7b8db3ed0313a58cb6304f9b5bc340":["c19f985e36a65cc969e8e564fe337a0d41512075"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["06584e6e98d592b34e1329b384182f368d2025e8","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cdd3a20c3f7b8db3ed0313a58cb6304f9b5bc340","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["5cab9a86bd67202d20b6adc463008c8e982b070a","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}