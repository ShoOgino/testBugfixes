{"path":"src/test/org/apache/solr/servlet/NoCacheHeaderTest#doETag(String).mjava","commits":[{"id":"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d","date":1203633859,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/servlet/NoCacheHeaderTest#doETag(String).mjava","pathOld":"/dev/null","sourceNew":"  // test ETag\n  protected void doETag(String method) throws Exception {\n    HttpMethodBase get = getSelectMethod(method);\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n\n    assertEquals(\"Got no response code 200 in initial request\", 200, get\n        .getStatusCode());\n\n    Header head = get.getResponseHeader(\"ETag\");\n    assertNull(\"We got an ETag in the response\", head);\n\n    // If-None-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-None-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // we now set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-None-Match: Got no response 200 for star ETag\", 200, get\n        .getStatusCode());\n\n    // If-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // now we set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-Match: Got no response 200 to star ETag\", 200, get\n        .getStatusCode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/servlet/NoCacheHeaderTest#doETag(String).mjava","pathOld":"src/test/org/apache/solr/servlet/NoCacheHeaderTest#doETag(String).mjava","sourceNew":"  // test ETag\n  protected void doETag(String method) throws Exception {\n    HttpMethodBase get = getSelectMethod(method);\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n\n    assertEquals(\"Got no response code 200 in initial request\", 200, get\n        .getStatusCode());\n\n    Header head = get.getResponseHeader(\"ETag\");\n    assertNull(\"We got an ETag in the response\", head);\n\n    // If-None-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-None-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // we now set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-None-Match: Got no response 200 for star ETag\", 200, get\n        .getStatusCode());\n\n    // If-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // now we set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-Match: Got no response 200 to star ETag\", 200, get\n        .getStatusCode());\n  }\n\n","sourceOld":"  // test ETag\n  protected void doETag(String method) throws Exception {\n    HttpMethodBase get = getSelectMethod(method);\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n\n    assertEquals(\"Got no response code 200 in initial request\", 200, get\n        .getStatusCode());\n\n    Header head = get.getResponseHeader(\"ETag\");\n    assertNull(\"We got an ETag in the response\", head);\n\n    // If-None-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-None-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // we now set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-None-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-None-Match: Got no response 200 for star ETag\", 200, get\n        .getStatusCode());\n\n    // If-Match tests\n    // we set a non matching ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"\\\"xyz123456\\\"\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\n        \"If-Match: Got no response code 200 in response to non matching ETag\",\n        200, get.getStatusCode());\n\n    // now we set the special star ETag\n    get = getSelectMethod(method);\n    get.addRequestHeader(\"If-Match\", \"*\");\n    getClient().executeMethod(get);\n    checkResponseBody(method, get);\n    assertEquals(\"If-Match: Got no response 200 to star ETag\", 200, get\n        .getStatusCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}