{"path":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","commits":[{"id":"8202a964e77292b3d78e5ac2b4aa21881d84df74","date":1344508470,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * Reloads the hash function list from the given {@link ClassLoader}.\r\n   * Changes to the function list are visible after the method ends, all\r\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \r\n   * \r\n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\r\n   * never removed or replaced.\r\n   * \r\n   * <p><em>This method is expensive and should only be called for discovery\r\n   * of new functions on the given classpath/classloader!</em>\r\n   */\r\n  public static void reloadHashFunctions(ClassLoader classloader) {\r\n    loader.reload(classloader);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * Reloads the hash function list from the given {@link ClassLoader}.\r\n   * Changes to the function list are visible after the method ends, all\r\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \r\n   * \r\n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\r\n   * never removed or replaced.\r\n   * \r\n   * <p><em>This method is expensive and should only be called for discovery\r\n   * of new functions on the given classpath/classloader!</em>\r\n   */\r\n  public static void reloadHashFunctions(ClassLoader classloader) {\r\n    loader.reload(classloader);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * Reloads the hash function list from the given {@link ClassLoader}.\r\n   * Changes to the function list are visible after the method ends, all\r\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \r\n   * \r\n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\r\n   * never removed or replaced.\r\n   * \r\n   * <p><em>This method is expensive and should only be called for discovery\r\n   * of new functions on the given classpath/classloader!</em>\r\n   */\r\n  public static void reloadHashFunctions(ClassLoader classloader) {\r\n    loader.reload(classloader);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d681ca1a1c487b2501ef9bde8602a65c4c717a46","date":1346078839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","sourceNew":"  /** \n   * Reloads the hash function list from the given {@link ClassLoader}.\n   * Changes to the function list are visible after the method ends, all\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \n   * \n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\n   * never removed or replaced.\n   * \n   * <p><em>This method is expensive and should only be called for discovery\n   * of new functions on the given classpath/classloader!</em>\n   */\n  public static void reloadHashFunctions(ClassLoader classloader) {\n    loader.reload(classloader);\n  }\n\n","sourceOld":"  /** \r\n   * Reloads the hash function list from the given {@link ClassLoader}.\r\n   * Changes to the function list are visible after the method ends, all\r\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \r\n   * \r\n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\r\n   * never removed or replaced.\r\n   * \r\n   * <p><em>This method is expensive and should only be called for discovery\r\n   * of new functions on the given classpath/classloader!</em>\r\n   */\r\n  public static void reloadHashFunctions(ClassLoader classloader) {\r\n    loader.reload(classloader);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","sourceNew":"  /** \n   * Reloads the hash function list from the given {@link ClassLoader}.\n   * Changes to the function list are visible after the method ends, all\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \n   * \n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\n   * never removed or replaced.\n   * \n   * <p><em>This method is expensive and should only be called for discovery\n   * of new functions on the given classpath/classloader!</em>\n   */\n  public static void reloadHashFunctions(ClassLoader classloader) {\n    loader.reload(classloader);\n  }\n\n","sourceOld":"  /** \r\n   * Reloads the hash function list from the given {@link ClassLoader}.\r\n   * Changes to the function list are visible after the method ends, all\r\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \r\n   * \r\n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\r\n   * never removed or replaced.\r\n   * \r\n   * <p><em>This method is expensive and should only be called for discovery\r\n   * of new functions on the given classpath/classloader!</em>\r\n   */\r\n  public static void reloadHashFunctions(ClassLoader classloader) {\r\n    loader.reload(classloader);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","date":1346918556,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/HashFunction#reloadHashFunctions(ClassLoader).mjava","sourceNew":null,"sourceOld":"  /** \n   * Reloads the hash function list from the given {@link ClassLoader}.\n   * Changes to the function list are visible after the method ends, all\n   * iterators ({@link #availableHashFunctionNames()},...) stay consistent. \n   * \n   * <p><b>NOTE:</b> Only new functions are added, existing ones are\n   * never removed or replaced.\n   * \n   * <p><em>This method is expensive and should only be called for discovery\n   * of new functions on the given classpath/classloader!</em>\n   */\n  public static void reloadHashFunctions(ClassLoader classloader) {\n    loader.reload(classloader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8202a964e77292b3d78e5ac2b4aa21881d84df74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8202a964e77292b3d78e5ac2b4aa21881d84df74"],"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["8202a964e77292b3d78e5ac2b4aa21881d84df74"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8202a964e77292b3d78e5ac2b4aa21881d84df74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"]},"commit2Childs":{"8202a964e77292b3d78e5ac2b4aa21881d84df74":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d681ca1a1c487b2501ef9bde8602a65c4c717a46","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8202a964e77292b3d78e5ac2b4aa21881d84df74","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}