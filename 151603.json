{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExecutorStream#toExpression(StreamFactory,boolean).mjava","commits":[{"id":"5c9480bf8e52feb02af9b7fa13bf50929da7900b","date":1477527580,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExecutorStream#toExpression(StreamFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {\n\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n    expression.addParameter(new StreamExpressionNamedParameter(\"threads\", Integer.toString(threads)));\n\n    // stream\n    if(includeStreams) {\n      if (stream instanceof Expressible) {\n        expression.addParameter(((Expressible) stream).toExpression(factory));\n      } else {\n        throw new IOException(\"The ExecuteStream contains a non-expressible TupleStream - it cannot be converted to an expression\");\n      }\n    }\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/ExecutorStream#toExpression(StreamFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {\n\n    // function name\n    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));\n    expression.addParameter(new StreamExpressionNamedParameter(\"threads\", Integer.toString(threads)));\n\n    // stream\n    if(includeStreams) {\n      if (stream instanceof Expressible) {\n        expression.addParameter(((Expressible) stream).toExpression(factory));\n      } else {\n        throw new IOException(\"The ExecuteStream contains a non-expressible TupleStream - it cannot be converted to an expression\");\n      }\n    }\n\n    return expression;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c9480bf8e52feb02af9b7fa13bf50929da7900b"],"5c9480bf8e52feb02af9b7fa13bf50929da7900b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c9480bf8e52feb02af9b7fa13bf50929da7900b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","5c9480bf8e52feb02af9b7fa13bf50929da7900b"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"5c9480bf8e52feb02af9b7fa13bf50929da7900b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}