{"path":"lucene/core/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","sourceNew":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","sourceOld":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","sourceNew":null,"sourceOld":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/SmallFloat#byte52ToFloat(byte).mjava","sourceNew":null,"sourceOld":"  /** byteToFloat(b, mantissaBits=5, zeroExponent=2) */\n  public static float byte52ToFloat(byte b) {\n    // on Java1.5 & 1.6 JVMs, prebuilding a decoding array and doing a lookup\n    // is only a little bit faster (anywhere from 0% to 7%)\n    if (b == 0) return 0.0f;\n    int bits = (b&0xff) << (24-5);\n    bits += (63-2) << 24;\n    return Float.intBitsToFloat(bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}