{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","commits":[{"id":"11f75174865a8734695cd60a4093339a4e63fcbb","date":1323039567,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (openFiles != null) {\n        IOUtils.close(openFiles.keySet());\n      }\n    } finally {\n      norms = null;\n      openFiles = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d6c554455db6752562dfe09614cdf3fd06062c3","date":1323301343,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      if (openFiles != null) {\n        IOUtils.close(openFiles);\n      }\n    } finally {\n      norms = null;\n      openFiles = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      if (openFiles != null) {\n        IOUtils.close(openFiles.keySet());\n      }\n    } finally {\n      norms = null;\n      openFiles = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"968c91176bd0af7259bb4d6ae6f15ab0b530d613","date":1323302672,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(openFiles);\n    } finally {\n      norms.clear();\n      openFiles.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      if (openFiles != null) {\n        IOUtils.close(openFiles);\n      }\n    } finally {\n      norms = null;\n      openFiles = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(openFiles);\n    } finally {\n      norms.clear();\n      openFiles.clear();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(openFiles);\n    } finally {\n      norms.clear();\n      openFiles.clear();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(openFiles);\n    } finally {\n      norms.clear();\n      openFiles.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(openFiles);\n    } finally {\n      norms.clear();\n      openFiles.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11f75174865a8734695cd60a4093339a4e63fcbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","968c91176bd0af7259bb4d6ae6f15ab0b530d613"],"7d6c554455db6752562dfe09614cdf3fd06062c3":["11f75174865a8734695cd60a4093339a4e63fcbb"],"968c91176bd0af7259bb4d6ae6f15ab0b530d613":["7d6c554455db6752562dfe09614cdf3fd06062c3"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"11f75174865a8734695cd60a4093339a4e63fcbb":["7d6c554455db6752562dfe09614cdf3fd06062c3"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11f75174865a8734695cd60a4093339a4e63fcbb","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"7d6c554455db6752562dfe09614cdf3fd06062c3":["968c91176bd0af7259bb4d6ae6f15ab0b530d613"],"968c91176bd0af7259bb4d6ae6f15ab0b530d613":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}