{"path":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,int).mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,int).mjava","pathOld":"/dev/null","sourceNew":"    public SimpleFSCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(SimpleFSDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,int).mjava","pathOld":"/dev/null","sourceNew":"    public SimpleFSCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(SimpleFSDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,int).mjava","sourceNew":"    public SimpleFSCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(SimpleFSDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","sourceOld":"    public SimpleFSCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(SimpleFSDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/SimpleFSDirectory.SimpleFSCompoundFileDirectory#SimpleFSCompoundFileDirectory(String,int).mjava","sourceNew":"    public SimpleFSCompoundFileDirectory(String fileName, IOContext context) throws IOException {\n      super(SimpleFSDirectory.this, fileName, context);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","sourceOld":"    public SimpleFSCompoundFileDirectory(String fileName, int readBufferSize) throws IOException {\n      super(SimpleFSDirectory.this, fileName, readBufferSize);\n      IndexInput stream = null;\n      try {\n        final File f = new File(SimpleFSDirectory.this.getDirectory(), fileName);\n        fd = new SimpleFSIndexInput.Descriptor(f, \"r\");\n        stream = new SimpleFSIndexInput(fd, 0, fd.length, readBufferSize,\n            getReadChunkSize());\n        initForRead(CompoundFileDirectory.readEntries(stream, SimpleFSDirectory.this, fileName));\n        stream.close();\n      } catch (IOException e) {\n        // throw our original exception\n        IOUtils.closeSafely(e, fd, stream);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["0aab6e810b4b0d3743d6a048be0602801f4b3920","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}