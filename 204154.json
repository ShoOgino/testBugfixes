{"path":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","commits":[{"id":"794214a4691ccb0a156a9ea0dfd8663ab9f05bb4","date":1373484264,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","pathOld":"/dev/null","sourceNew":"  /** Return the list of bits which are set in b encoded as followed:\n   * <code>(i >>> (4 * n)) & 0x0F</code> is the offset of the n-th set bit of\n   * the given byte plus one, or 0 if there are n or less bits set in the given\n   * byte. For example <code>bitList(12)</code> returns 0x43:<ul>\n   * <li><code>0x43 & 0x0F</code> is 3, meaning the the first bit set is at offset 3-1 = 2,</li>\n   * <li><code>(0x43 >>> 4) & 0x0F</code> is 4, meaning there is a second bit set at offset 4-1=3,</li>\n   * <li><code>(0x43 >>> 8) & 0x0F</code> is 0, meaning there is no more bit set in this byte.</li>\n   * </ul>*/\n  public static int bitList(byte b) {\n    return BIT_LISTS[b & 0xFF];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","pathOld":"/dev/null","sourceNew":"  /** Return the list of bits which are set in b encoded as followed:\n   * <code>(i >>> (4 * n)) & 0x0F</code> is the offset of the n-th set bit of\n   * the given byte plus one, or 0 if there are n or less bits set in the given\n   * byte. For example <code>bitList(12)</code> returns 0x43:<ul>\n   * <li><code>0x43 & 0x0F</code> is 3, meaning the the first bit set is at offset 3-1 = 2,</li>\n   * <li><code>(0x43 >>> 4) & 0x0F</code> is 4, meaning there is a second bit set at offset 4-1=3,</li>\n   * <li><code>(0x43 >>> 8) & 0x0F</code> is 0, meaning there is no more bit set in this byte.</li>\n   * </ul>*/\n  public static int bitList(byte b) {\n    return BIT_LISTS[b & 0xFF];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","sourceNew":"  /** Return the list of bits which are set in b encoded as followed:\n   * {@code (i >>> (4 * n)) & 0x0F} is the offset of the n-th set bit of\n   * the given byte plus one, or 0 if there are n or less bits set in the given\n   * byte. For example <code>bitList(12)</code> returns 0x43:<ul>\n   * <li>{@code 0x43 & 0x0F} is 3, meaning the the first bit set is at offset 3-1 = 2,</li>\n   * <li>{@code (0x43 >>> 4) & 0x0F} is 4, meaning there is a second bit set at offset 4-1=3,</li>\n   * <li>{@code (0x43 >>> 8) & 0x0F} is 0, meaning there is no more bit set in this byte.</li>\n   * </ul>*/\n  public static int bitList(byte b) {\n    return BIT_LISTS[b & 0xFF];\n  }\n\n","sourceOld":"  /** Return the list of bits which are set in b encoded as followed:\n   * <code>(i >>> (4 * n)) & 0x0F</code> is the offset of the n-th set bit of\n   * the given byte plus one, or 0 if there are n or less bits set in the given\n   * byte. For example <code>bitList(12)</code> returns 0x43:<ul>\n   * <li><code>0x43 & 0x0F</code> is 3, meaning the the first bit set is at offset 3-1 = 2,</li>\n   * <li><code>(0x43 >>> 4) & 0x0F</code> is 4, meaning there is a second bit set at offset 4-1=3,</li>\n   * <li><code>(0x43 >>> 8) & 0x0F</code> is 0, meaning there is no more bit set in this byte.</li>\n   * </ul>*/\n  public static int bitList(byte b) {\n    return BIT_LISTS[b & 0xFF];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fca1501b3644f1192df67879bb23de00a2c8ae6f","date":1428404382,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#bitList(byte).mjava","sourceNew":null,"sourceOld":"  /** Return the list of bits which are set in b encoded as followed:\n   * {@code (i >>> (4 * n)) & 0x0F} is the offset of the n-th set bit of\n   * the given byte plus one, or 0 if there are n or less bits set in the given\n   * byte. For example <code>bitList(12)</code> returns 0x43:<ul>\n   * <li>{@code 0x43 & 0x0F} is 3, meaning the the first bit set is at offset 3-1 = 2,</li>\n   * <li>{@code (0x43 >>> 4) & 0x0F} is 4, meaning there is a second bit set at offset 4-1=3,</li>\n   * <li>{@code (0x43 >>> 8) & 0x0F} is 0, meaning there is no more bit set in this byte.</li>\n   * </ul>*/\n  public static int bitList(byte b) {\n    return BIT_LISTS[b & 0xFF];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"794214a4691ccb0a156a9ea0dfd8663ab9f05bb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["794214a4691ccb0a156a9ea0dfd8663ab9f05bb4"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","794214a4691ccb0a156a9ea0dfd8663ab9f05bb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fca1501b3644f1192df67879bb23de00a2c8ae6f"],"fca1501b3644f1192df67879bb23de00a2c8ae6f":["b1eb427f2c6beed80d1724555fc1db003ccf3030"]},"commit2Childs":{"794214a4691ccb0a156a9ea0dfd8663ab9f05bb4":["b1eb427f2c6beed80d1724555fc1db003ccf3030","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["fca1501b3644f1192df67879bb23de00a2c8ae6f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["794214a4691ccb0a156a9ea0dfd8663ab9f05bb4","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fca1501b3644f1192df67879bb23de00a2c8ae6f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}