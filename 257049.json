{"path":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return in.readLong();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return in.readLong();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72","date":1434509375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","sourceOld":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return in.readLong();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","date":1453975275,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    if (in.length() < footerLength()) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): length=\" + in.length() + \" but footerLength==\" + footerLength(), in);\n    }\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","sourceOld":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    if (in.length() < footerLength()) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): length=\" + in.length() + \" but footerLength==\" + footerLength(), in);\n    }\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","sourceOld":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/CodecUtil#retrieveChecksum(IndexInput).mjava","sourceNew":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    if (in.length() < footerLength()) {\n      throw new CorruptIndexException(\"misplaced codec footer (file truncated?): length=\" + in.length() + \" but footerLength==\" + footerLength(), in);\n    }\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","sourceOld":"  /** \n   * Returns (but does not validate) the checksum previously written by {@link #checkFooter}.\n   * @return actual checksum value\n   * @throws IOException if the footer is invalid\n   */\n  public static long retrieveChecksum(IndexInput in) throws IOException {\n    in.seek(in.length() - footerLength());\n    validateFooter(in);\n    return readCRC(in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72","8d15e34266d75e4e8b95da046cd0afc812367b38"],"83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72","b485ce675d4e8b9dbfafd122ca9b7b33a883be7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d15e34266d75e4e8b95da046cd0afc812367b38"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"83dbd35bcc0f6436f58fb7e47b8b3e1ba7600c72":["b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","1e6acbaae7af722f17204ceccf0f7db5753eccf3","8d15e34266d75e4e8b95da046cd0afc812367b38"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}