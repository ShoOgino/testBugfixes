{"path":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntHashSet#remove(int).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntHashSet#remove(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/IntHashSet#remove(int).mjava","sourceNew":"  /**\n   * Remove a pair from the map, specified by it's key.\n   * \n   * @param value\n   *            specify the value to be removed\n   * \n   * @return true if the map was changed (the key was found and removed).\n   *         false otherwise.\n   */\n  public boolean remove(int value) {\n    int baseHashIndex = calcBaseHashIndex(value);\n    int index = findForRemove(value, baseHashIndex);\n    if (index != 0) {\n      // If it is the first in the collision list, we should promote its\n      // next colliding element.\n      if (prev == 0) {\n        baseHash[baseHashIndex] = next[index];\n      }\n\n      next[prev] = next[index];\n      next[index] = firstEmpty;\n      firstEmpty = index;\n      --size;\n      return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Remove a pair from the map, specified by it's key.\n   * \n   * @param value\n   *            specify the value to be removed\n   * \n   * @return true if the map was changed (the key was found and removed).\n   *         false otherwise.\n   */\n  public boolean remove(int value) {\n    int baseHashIndex = calcBaseHashIndex(value);\n    int index = findForRemove(value, baseHashIndex);\n    if (index != 0) {\n      // If it is the first in the collision list, we should promote its\n      // next colliding element.\n      if (prev == 0) {\n        baseHash[baseHashIndex] = next[index];\n      }\n\n      next[prev] = next[index];\n      next[index] = firstEmpty;\n      firstEmpty = index;\n      --size;\n      return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntHashSet#remove(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Remove a pair from the map, specified by it's key.\n   * \n   * @param value\n   *            specify the value to be removed\n   * \n   * @return true if the map was changed (the key was found and removed).\n   *         false otherwise.\n   */\n  public boolean remove(int value) {\n    int baseHashIndex = calcBaseHashIndex(value);\n    int index = findForRemove(value, baseHashIndex);\n    if (index != 0) {\n      // If it is the first in the collision list, we should promote its\n      // next colliding element.\n      if (prev == 0) {\n        baseHash[baseHashIndex] = next[index];\n      }\n\n      next[prev] = next[index];\n      next[index] = firstEmpty;\n      firstEmpty = index;\n      --size;\n      return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntHashSet#remove(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Remove a pair from the map, specified by it's key.\n   * \n   * @param value\n   *            specify the value to be removed\n   * \n   * @return true if the map was changed (the key was found and removed).\n   *         false otherwise.\n   */\n  public boolean remove(int value) {\n    int baseHashIndex = calcBaseHashIndex(value);\n    int index = findForRemove(value, baseHashIndex);\n    if (index != 0) {\n      // If it is the first in the collision list, we should promote its\n      // next colliding element.\n      if (prev == 0) {\n        baseHash[baseHashIndex] = next[index];\n      }\n\n      next[prev] = next[index];\n      next[index] = firstEmpty;\n      firstEmpty = index;\n      --size;\n      return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}