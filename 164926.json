{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    }\n    \n    Token clone = (Token) singleToken.clone();\n    \n    termAtt.setTermBuffer(clone.termBuffer(), 0, clone.termLength());\n    offsetAtt.setOffset(clone.startOffset(), clone.endOffset());\n    flagsAtt.setFlags(clone.getFlags());\n    typeAtt.setType(clone.type());\n    posIncAtt.setPositionIncrement(clone.getPositionIncrement());\n    payloadAtt.setPayload(clone.getPayload());\n    exhausted = true;\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"91d0e16ae1a83f5658ad4d16453fb88650460140","date":1250287302,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","sourceNew":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    }\n    \n    Token clone = (Token) singleToken.clone();\n    \n    clearAttributes();\n    termAtt.setTermBuffer(clone.termBuffer(), 0, clone.termLength());\n    offsetAtt.setOffset(clone.startOffset(), clone.endOffset());\n    flagsAtt.setFlags(clone.getFlags());\n    typeAtt.setType(clone.type());\n    posIncAtt.setPositionIncrement(clone.getPositionIncrement());\n    payloadAtt.setPayload(clone.getPayload());\n    exhausted = true;\n    return true;\n  }\n\n","sourceOld":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    }\n    \n    Token clone = (Token) singleToken.clone();\n    \n    termAtt.setTermBuffer(clone.termBuffer(), 0, clone.termLength());\n    offsetAtt.setOffset(clone.startOffset(), clone.endOffset());\n    flagsAtt.setFlags(clone.getFlags());\n    typeAtt.setType(clone.type());\n    posIncAtt.setPositionIncrement(clone.getPositionIncrement());\n    payloadAtt.setPayload(clone.getPayload());\n    exhausted = true;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","sourceNew":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    } else {\n      clearAttributes();\n      singleToken.copyTo(tokenAtt);\n      exhausted = true;\n      return true;\n    }\n  }\n\n","sourceOld":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    }\n    \n    Token clone = (Token) singleToken.clone();\n    \n    clearAttributes();\n    termAtt.setTermBuffer(clone.termBuffer(), 0, clone.termLength());\n    offsetAtt.setOffset(clone.startOffset(), clone.endOffset());\n    flagsAtt.setFlags(clone.getFlags());\n    typeAtt.setType(clone.type());\n    posIncAtt.setPositionIncrement(clone.getPositionIncrement());\n    payloadAtt.setPayload(clone.getPayload());\n    exhausted = true;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    } else {\n      clearAttributes();\n      singleToken.copyTo(tokenAtt);\n      exhausted = true;\n      return true;\n    }\n  }\n\n","sourceOld":"  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    } else {\n      clearAttributes();\n      singleToken.copyTo(tokenAtt);\n      exhausted = true;\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/SingleTokenTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    } else {\n      clearAttributes();\n      singleToken.copyTo(tokenAtt);\n      exhausted = true;\n      return true;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (exhausted) {\n      return false;\n    } else {\n      clearAttributes();\n      singleToken.copyTo(tokenAtt);\n      exhausted = true;\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"91d0e16ae1a83f5658ad4d16453fb88650460140":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["91d0e16ae1a83f5658ad4d16453fb88650460140"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"91d0e16ae1a83f5658ad4d16453fb88650460140":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["91d0e16ae1a83f5658ad4d16453fb88650460140"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}