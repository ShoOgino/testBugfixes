{"path":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanComplex1().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanComplex1().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanComplex1().mjava","sourceNew":"  public void testSpanComplex1() throws Exception {\n      \n    SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\",\"six\"));\n    SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt1 = new SpanNearQuery(new SpanQuery[] {t1, t2}, 0,true);\n\n    SpanTermQuery t3 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t4 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt2 = new SpanNearQuery(new SpanQuery[] {t3, t4}, 0,true);\n    \n    SpanTermQuery t5 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t6 = new SpanTermQuery(new Term(\"field\",\"six\"));\n\n    SpanOrQuery to1 = new SpanOrQuery(new SpanQuery[] {tt1, tt2});\n    SpanOrQuery to2 = new SpanOrQuery(new SpanQuery[] {t5, t6});\n    \n    SpanNearQuery query = new SpanNearQuery(new SpanQuery[] {to1, to2},\n                                            100, true);\n    \n    checkHits(query, new int[]\n      {606, 607, 626, 627, 636, 637, 646, 647, \n       656, 657, 666, 667, 676, 677, 686, 687, 696, 697,\n       706, 707, 726, 727, 736, 737, 746, 747, \n       756, 757, 766, 767, 776, 777, 786, 787, 796, 797});\n  }\n\n","sourceOld":"  public void testSpanComplex1() throws Exception {\n      \n    SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\",\"six\"));\n    SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt1 = new SpanNearQuery(new SpanQuery[] {t1, t2}, 0,true);\n\n    SpanTermQuery t3 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t4 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt2 = new SpanNearQuery(new SpanQuery[] {t3, t4}, 0,true);\n    \n    SpanTermQuery t5 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t6 = new SpanTermQuery(new Term(\"field\",\"six\"));\n\n    SpanOrQuery to1 = new SpanOrQuery(new SpanQuery[] {tt1, tt2});\n    SpanOrQuery to2 = new SpanOrQuery(new SpanQuery[] {t5, t6});\n    \n    SpanNearQuery query = new SpanNearQuery(new SpanQuery[] {to1, to2},\n                                            100, true);\n    \n    checkHits(query, new int[]\n      {606, 607, 626, 627, 636, 637, 646, 647, \n       656, 657, 666, 667, 676, 677, 686, 687, 696, 697,\n       706, 707, 726, 727, 736, 737, 746, 747, \n       756, 757, 766, 767, 776, 777, 786, 787, 796, 797});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/spans/TestBasics#testSpanComplex1().mjava","sourceNew":null,"sourceOld":"  public void testSpanComplex1() throws Exception {\n      \n    SpanTermQuery t1 = new SpanTermQuery(new Term(\"field\",\"six\"));\n    SpanTermQuery t2 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt1 = new SpanNearQuery(new SpanQuery[] {t1, t2}, 0,true);\n\n    SpanTermQuery t3 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t4 = new SpanTermQuery(new Term(\"field\",\"hundred\"));\n    SpanNearQuery tt2 = new SpanNearQuery(new SpanQuery[] {t3, t4}, 0,true);\n    \n    SpanTermQuery t5 = new SpanTermQuery(new Term(\"field\",\"seven\"));\n    SpanTermQuery t6 = new SpanTermQuery(new Term(\"field\",\"six\"));\n\n    SpanOrQuery to1 = new SpanOrQuery(new SpanQuery[] {tt1, tt2});\n    SpanOrQuery to2 = new SpanOrQuery(new SpanQuery[] {t5, t6});\n    \n    SpanNearQuery query = new SpanNearQuery(new SpanQuery[] {to1, to2},\n                                            100, true);\n    \n    checkHits(query, new int[]\n      {606, 607, 626, 627, 636, 637, 646, 647, \n       656, 657, 666, 667, 676, 677, 686, 687, 696, 697,\n       706, 707, 726, 727, 736, 737, 746, 747, \n       756, 757, 766, 767, 776, 777, 786, 787, 796, 797});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}