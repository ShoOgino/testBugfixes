{"path":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","commits":[{"id":"f85e0317037f2f84a7379222c6683b5d4b29a868","date":1494955156,"type":0,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"/dev/null","sourceNew":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","date":1495081498,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"/dev/null","sourceNew":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"/dev/null","sourceNew":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5627e15617078174dbb4df182fd7eea55dc13a53","date":1504755192,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","sourceNew":"  /**\n   * Initiates javax.net.ssl.* system properties from the proper sources.\n   */\n  public void init() {\n\n    String clientKeystorePassword = getClientKeyStorePassword();\n    String keystorePassword = getKeyStorePassword();\n\n    String clientTruststorePassword = getClientTrustStorePassword();\n    String truststorePassword = getTrustStorePassword();\n\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n\n  }\n\n","sourceOld":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5116709312b934bc0896b2bfacec613e226ca0db","date":1504820111,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","sourceNew":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","sourceOld":"  /**\n   * Initiates javax.net.ssl.* system properties from the proper sources.\n   */\n  public void init() {\n\n    String clientKeystorePassword = getClientKeyStorePassword();\n    String keystorePassword = getKeyStorePassword();\n\n    String clientTruststorePassword = getClientTrustStorePassword();\n    String truststorePassword = getTrustStorePassword();\n\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"157272e74802c6a6ac491fdaa27cec01f78c3b06","date":1523329076,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","sourceNew":"  /**\n   * Initiates javax.net.ssl.* system properties from the proper sources.\n   */\n  public void init() {\n\n    String clientKeystorePassword = getClientKeyStorePassword();\n    String keystorePassword = getKeyStorePassword();\n\n    String clientTruststorePassword = getClientTrustStorePassword();\n    String truststorePassword = getTrustStorePassword();\n\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n\n  }\n\n","sourceOld":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"431c2627ab600554864fa78f5e76abef81faa42d","date":1523357854,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/configuration/SSLConfigurations#init().mjava","sourceNew":"  /**\n   * Initiates javax.net.ssl.* system properties from the proper sources.\n   */\n  public void init() {\n\n    String clientKeystorePassword = getClientKeyStorePassword();\n    String keystorePassword = getKeyStorePassword();\n\n    String clientTruststorePassword = getClientTrustStorePassword();\n    String truststorePassword = getTrustStorePassword();\n\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.info(\"Setting {}\", SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_CLIENT_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n\n  }\n\n","sourceOld":"  /** Initiates javax.net.ssl.* system properties from the proper sources. */\n  public void init() {\n\n    String clientKeystorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_KEY_STORE_PASSWORD);\n    String keystorePassword = envVars.get(EnvVars.SOLR_SSL_KEY_STORE_PASSWORD);\n\n    String clientTruststorePassword = envVars.get(EnvVars.SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD);\n    String truststorePassword = envVars.get(EnvVars.SOLR_SSL_TRUST_STORE_PASSWORD);\n\n    if (isEmpty(System.getProperty(SysProps.SSL_KEY_STORE_PASSWORD))\n        && !(isEmpty(clientKeystorePassword) && isEmpty(keystorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_KEY_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_KEY_STORE_PASSWORD, clientKeystorePassword != null ? clientKeystorePassword : keystorePassword);\n    }\n    if (isEmpty(System.getProperty(SysProps.SSL_TRUST_STORE_PASSWORD))\n        && !(isEmpty(clientTruststorePassword) && isEmpty(truststorePassword))) {\n      log.debug(\"Setting {} based on env var\", SysProps.SSL_TRUST_STORE_PASSWORD);\n      System.setProperty(SysProps.SSL_TRUST_STORE_PASSWORD, clientTruststorePassword != null ? clientTruststorePassword : truststorePassword);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f85e0317037f2f84a7379222c6683b5d4b29a868":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"157272e74802c6a6ac491fdaa27cec01f78c3b06":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5627e15617078174dbb4df182fd7eea55dc13a53":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"5116709312b934bc0896b2bfacec613e226ca0db":["5627e15617078174dbb4df182fd7eea55dc13a53"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f85e0317037f2f84a7379222c6683b5d4b29a868"],"431c2627ab600554864fa78f5e76abef81faa42d":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","157272e74802c6a6ac491fdaa27cec01f78c3b06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["431c2627ab600554864fa78f5e76abef81faa42d"]},"commit2Childs":{"f85e0317037f2f84a7379222c6683b5d4b29a868":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"157272e74802c6a6ac491fdaa27cec01f78c3b06":["431c2627ab600554864fa78f5e76abef81faa42d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f85e0317037f2f84a7379222c6683b5d4b29a868","e9017cf144952056066919f1ebc7897ff9bd71b1","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"5627e15617078174dbb4df182fd7eea55dc13a53":["5116709312b934bc0896b2bfacec613e226ca0db"],"5116709312b934bc0896b2bfacec613e226ca0db":[],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["e9017cf144952056066919f1ebc7897ff9bd71b1","157272e74802c6a6ac491fdaa27cec01f78c3b06","5627e15617078174dbb4df182fd7eea55dc13a53","431c2627ab600554864fa78f5e76abef81faa42d"],"431c2627ab600554864fa78f5e76abef81faa42d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","5116709312b934bc0896b2bfacec613e226ca0db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}