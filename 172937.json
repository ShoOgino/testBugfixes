{"path":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","pathOld":"src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","sourceNew":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","sourceOld":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec58fb7921964848d01bea54f8ec4a2ac813eaeb","date":1295476876,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[BytesRef]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","sourceNew":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<BytesRef> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","sourceOld":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[BytesRef]).mjava","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","sourceNew":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<BytesRef> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","sourceOld":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.AnalysisContext#AnalysisContext(FieldType,Analyzer,Set[String]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Constructs a new AnalysisContext with a given field tpe, analyzer and \n     * termsToMatch. By default the field name in this context will be \n     * {@code null}. During the analysis processs, The produced tokens will \n     * be compaired to the terms in the {@code termsToMatch} set. When found, \n     * these tokens will be marked as a match.\n     *\n     * @param fieldType    The type of the field the analysis is performed on.\n     * @param analyzer     The analyzer to be used.\n     * @param termsToMatch Holds all the terms that should match during the \n     *                     analysis process.\n     */\n    public AnalysisContext(FieldType fieldType, Analyzer analyzer, Set<String> termsToMatch) {\n      this(null, fieldType, analyzer, termsToMatch);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","ec58fb7921964848d01bea54f8ec4a2ac813eaeb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ec58fb7921964848d01bea54f8ec4a2ac813eaeb":["1da8d55113b689b06716246649de6f62430f15c0"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["1da8d55113b689b06716246649de6f62430f15c0","ec58fb7921964848d01bea54f8ec4a2ac813eaeb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec58fb7921964848d01bea54f8ec4a2ac813eaeb"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["29ef99d61cda9641b6250bf9567329a6e65f901d","ec58fb7921964848d01bea54f8ec4a2ac813eaeb","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"ec58fb7921964848d01bea54f8ec4a2ac813eaeb":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}