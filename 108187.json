{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) throws IOException {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentCommitInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentInfoPerCommit info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentCommitInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directoryOrig);\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentCommitInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89697e7abc9807639c384eecf5a2a6eef1080426","date":1587733375,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ensureValidMerge(MergePolicy.OneMerge).mjava","sourceNew":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentCommitInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString());\n      }\n    }\n  }\n\n","sourceOld":"  private synchronized void ensureValidMerge(MergePolicy.OneMerge merge) {\n    for(SegmentCommitInfo info : merge.segments) {\n      if (!segmentInfos.contains(info)) {\n        throw new MergePolicy.MergeException(\"MergePolicy selected a segment (\" + info.info.name + \") that is not in the current index \" + segString(), directoryOrig);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89697e7abc9807639c384eecf5a2a6eef1080426":["618635065f043788c9e034f96ca5cd5cea1b4592"],"618635065f043788c9e034f96ca5cd5cea1b4592":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","9d153abcf92dc5329d98571a8c3035df9bd80648"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89697e7abc9807639c384eecf5a2a6eef1080426"]},"commit2Childs":{"89697e7abc9807639c384eecf5a2a6eef1080426":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"618635065f043788c9e034f96ca5cd5cea1b4592":["89697e7abc9807639c384eecf5a2a6eef1080426"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["618635065f043788c9e034f96ca5cd5cea1b4592"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}