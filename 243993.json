{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7","date":1509555533,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#getSpecificValue(String,String...).mjava","sourceNew":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return getValue(ord);\n  }\n\n","sourceOld":"  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    DimConfig dimConfig = verifyDim(dim);\n    if (path.length == 0) {\n      if (dimConfig.hierarchical && dimConfig.multiValued == false) {\n        // ok: rolled up at search time\n      } else if (dimConfig.requireDimCount && dimConfig.multiValued) {\n        // ok: we indexed all ords at index time\n      } else {\n        throw new IllegalArgumentException(\"cannot return dimension-level value alone; use getTopChildren instead\");\n      }\n    }\n    int ord = taxoReader.getOrdinal(new FacetLabel(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}