{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer.Builder#whenTerm(Predicate[CharSequence]).mjava","commits":[{"id":"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd","date":1526034899,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer.Builder#whenTerm(Predicate[CharSequence]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Apply subsequent token filters if the current token's term matches a predicate\n     *\n     * This is the equivalent of:\n     * <pre>\n     *   when(new ConditionalTokenFilterFactory(Collections.emptyMap()) {\n     *      {@code @}Override\n     *      protected ConditionalTokenFilter create(TokenStream input, Function&lt;TokenStream, TokenStream&gt; inner) {\n     *        return new ConditionalTokenFilter(input, inner) {\n     *          CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);\n     *          {@code @}Override\n     *          protected boolean shouldFilter() {\n     *            return predicate.test(termAtt);\n     *          }\n     *        };\n     *      }\n     *   });\n     * </pre>\n     */\n    public ConditionBuilder whenTerm(Predicate<CharSequence> predicate) {\n      return new ConditionBuilder(new ConditionalTokenFilterFactory(Collections.emptyMap()) {\n        @Override\n        protected ConditionalTokenFilter create(TokenStream input, Function<TokenStream, TokenStream> inner) {\n          return new ConditionalTokenFilter(input, inner) {\n            CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);\n            @Override\n            protected boolean shouldFilter() {\n              return predicate.test(termAtt);\n            }\n          };\n        }\n      }, this);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}