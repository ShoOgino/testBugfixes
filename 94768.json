{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","commits":[{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(1, bytes, 0);\n    points.append(bytes, 0);\n    NumericUtils.intToSortableBytes(2, bytes, 0);\n    points.append(bytes, 1);\n    NumericUtils.intToSortableBytes(3, bytes, 0);\n    points.append(bytes, 2);\n    NumericUtils.intToSortableBytes(4, bytes, 0);\n    points.append(bytes, 3);\n    points.close();\n    verify(dir, points, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69ebf290ab26d026cc224e517e0d93d931ac87b","date":1549869083,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","sourceNew":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(1, bytes, 0);\n    points.append(bytes, 0);\n    NumericUtils.intToSortableBytes(2, bytes, 0);\n    points.append(bytes, 1);\n    NumericUtils.intToSortableBytes(3, bytes, 0);\n    points.append(bytes, 2);\n    NumericUtils.intToSortableBytes(4, bytes, 0);\n    points.append(bytes, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(1, bytes, 0);\n    points.append(bytes, 0);\n    NumericUtils.intToSortableBytes(2, bytes, 0);\n    points.append(bytes, 1);\n    NumericUtils.intToSortableBytes(3, bytes, 0);\n    points.append(bytes, 2);\n    NumericUtils.intToSortableBytes(4, bytes, 0);\n    points.append(bytes, 3);\n    points.close();\n    verify(dir, points, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","sourceNew":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] value = new byte[packedLength];\n    NumericUtils.intToSortableBytes(1, value, 0);\n    points.append(value, 0);\n    NumericUtils.intToSortableBytes(2, value, 0);\n    points.append(value, 1);\n    NumericUtils.intToSortableBytes(3, value, 0);\n    points.append(value, 2);\n    NumericUtils.intToSortableBytes(4, value, 0);\n    points.append(value, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] bytes = new byte[Integer.BYTES];\n    NumericUtils.intToSortableBytes(1, bytes, 0);\n    points.append(bytes, 0);\n    NumericUtils.intToSortableBytes(2, bytes, 0);\n    points.append(bytes, 1);\n    NumericUtils.intToSortableBytes(3, bytes, 0);\n    points.append(bytes, 2);\n    NumericUtils.intToSortableBytes(4, bytes, 0);\n    points.append(bytes, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"619d6ef89bb642f6258a8369ba5a7a330580e97f","date":1561535144,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","sourceNew":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] value = new byte[packedLength];\n    NumericUtils.intToSortableBytes(1, value, 0);\n    points.append(value, 0);\n    NumericUtils.intToSortableBytes(2, value, 0);\n    points.append(value, 1);\n    NumericUtils.intToSortableBytes(3, value, 0);\n    points.append(value, 2);\n    NumericUtils.intToSortableBytes(4, value, 0);\n    points.append(value, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] value = new byte[packedLength];\n    NumericUtils.intToSortableBytes(1, value, 0);\n    points.append(value, 0);\n    NumericUtils.intToSortableBytes(2, value, 0);\n    points.append(value, 1);\n    NumericUtils.intToSortableBytes(3, value, 0);\n    points.append(value, 2);\n    NumericUtils.intToSortableBytes(4, value, 0);\n    points.append(value, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSelector#testBasic().mjava","sourceNew":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions = 1;\n    int bytesPerDimensions = Integer.BYTES;\n    BKDConfig config = new BKDConfig(dimensions, dimensions, bytesPerDimensions, BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n    PointWriter points = getRandomPointWriter(config, dir, values);\n    byte[] value = new byte[config.packedBytesLength];\n    NumericUtils.intToSortableBytes(1, value, 0);\n    points.append(value, 0);\n    NumericUtils.intToSortableBytes(2, value, 0);\n    points.append(value, 1);\n    NumericUtils.intToSortableBytes(3, value, 0);\n    points.append(value, 2);\n    NumericUtils.intToSortableBytes(4, value, 0);\n    points.append(value, 3);\n    points.close();\n    PointWriter copy = copyPoints(config, dir,points);\n    verify(config, dir, copy, 0, values, middle, 0);\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws IOException {\n    int values = 4;\n    Directory dir = getDirectory(values);\n    int middle = 2;\n    int dimensions =1;\n    int bytesPerDimensions = Integer.BYTES;\n    int packedLength = dimensions * bytesPerDimensions;\n    PointWriter points = getRandomPointWriter(dir, values, packedLength);\n    byte[] value = new byte[packedLength];\n    NumericUtils.intToSortableBytes(1, value, 0);\n    points.append(value, 0);\n    NumericUtils.intToSortableBytes(2, value, 0);\n    points.append(value, 1);\n    NumericUtils.intToSortableBytes(3, value, 0);\n    points.append(value, 2);\n    NumericUtils.intToSortableBytes(4, value, 0);\n    points.append(value, 3);\n    points.close();\n    PointWriter copy = copyPoints(dir,points, packedLength);\n    verify(dir, copy, dimensions, dimensions, 0, values, middle, packedLength, bytesPerDimensions, 0);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"619d6ef89bb642f6258a8369ba5a7a330580e97f":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["619d6ef89bb642f6258a8369ba5a7a330580e97f"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["a69ebf290ab26d026cc224e517e0d93d931ac87b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a69ebf290ab26d026cc224e517e0d93d931ac87b":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"619d6ef89bb642f6258a8369ba5a7a330580e97f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["619d6ef89bb642f6258a8369ba5a7a330580e97f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a69ebf290ab26d026cc224e517e0d93d931ac87b"],"a69ebf290ab26d026cc224e517e0d93d931ac87b":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}