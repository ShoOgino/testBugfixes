{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new Field(field, value, StringField.TYPE_UNSTORED));\n    if (canUseIDV) {\n      doc.add(new DocValuesField(field, new BytesRef(value), DocValues.Type.BYTES_VAR_SORTED));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new Field(field, value, StringField.TYPE_UNSTORED));\n    if (canUseIDV) {\n      doc.add(new DocValuesField(field, new BytesRef(value), DocValues.Type.BYTES_VAR_SORTED));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd659803551ebd8ca09b9e4ad7abd18d3d558f9d","date":1336650316,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new Field(field, value, StringField.TYPE_UNSTORED));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field, new BytesRef(value)));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new Field(field, value, StringField.TYPE_UNSTORED));\n    if (canUseIDV) {\n      doc.add(new DocValuesField(field, new BytesRef(value), DocValues.Type.BYTES_VAR_SORTED));\n    }\n  }\n\n","bugFix":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field, new BytesRef(value)));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new Field(field, value, StringField.TYPE_UNSTORED));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field, new BytesRef(value)));\n    }\n  }\n\n","bugFix":["8b89f8e2c44ce7efaf10978b9e5c6b95a31706b2"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46bf1a48fd33bf34430ade646b7dd67b984be2a8","date":1358725746,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field, new BytesRef(value)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedBytesDocValuesField(field, new BytesRef(value)));\n    }\n  }\n\n","bugFix":["cd659803551ebd8ca09b9e4ad7abd18d3d558f9d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505dfd7dfae7faacd62d5e532edbdc7bf856b56e","date":1399828832,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    assert canUseIDV;\n    doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    assert canUseIDV;\n    doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest#addField(Document,String,String,boolean).mjava","sourceNew":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    assert canUseIDV;\n    doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n  }\n\n","sourceOld":"  private void addField(Document doc, String field, String value, boolean canUseIDV) {\n    doc.add(new StringField(field, value, Field.Store.NO));\n    if (canUseIDV) {\n      doc.add(new SortedDocValuesField(field + \"_dv\", new BytesRef(value)));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["cd659803551ebd8ca09b9e4ad7abd18d3d558f9d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46bf1a48fd33bf34430ade646b7dd67b984be2a8":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["04f07771a2a7dd3a395700665ed839c3dae2def2","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d4d69c535930b5cce125cff868d40f6373dc27d4","505dfd7dfae7faacd62d5e532edbdc7bf856b56e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"505dfd7dfae7faacd62d5e532edbdc7bf856b56e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["46bf1a48fd33bf34430ade646b7dd67b984be2a8"],"cd659803551ebd8ca09b9e4ad7abd18d3d558f9d":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"56572ec06f1407c066d6b7399413178b33176cd8":["d4d69c535930b5cce125cff868d40f6373dc27d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["46bf1a48fd33bf34430ade646b7dd67b984be2a8","d4d69c535930b5cce125cff868d40f6373dc27d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd659803551ebd8ca09b9e4ad7abd18d3d558f9d"],"46bf1a48fd33bf34430ade646b7dd67b984be2a8":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["93dd449115a9247533e44bab47e8429e5dccbc6d","505dfd7dfae7faacd62d5e532edbdc7bf856b56e","56572ec06f1407c066d6b7399413178b33176cd8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"505dfd7dfae7faacd62d5e532edbdc7bf856b56e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd659803551ebd8ca09b9e4ad7abd18d3d558f9d":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}