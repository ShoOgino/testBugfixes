{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","commits":[{"id":"db5a3aeba34624ea274f34df5691d40ca25f2b67","date":1358965297,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    throw new AssertionError();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1982459c2ac4916bf3c0644b801f0cb3e4ee159f","date":1359034079,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ef85d40fcb2c5bb7ec40780b12e543600a1ae38","date":1359036780,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","date":1359046870,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        default:\n          throw new AssertionError(); // nocommit\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"769aa5c7a844c7615167d4fc9352373d85eef21e","date":1359050293,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        default:\n          throw new AssertionError(); // nocommit\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesReader#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      switch(LegacyDocValuesType.valueOf(field.getAttribute(legacyKey))) {\n        case BYTES_FIXED_STRAIGHT:\n          instance = loadBytesFixedStraight(field);\n          break;\n        case BYTES_VAR_STRAIGHT:\n          instance = loadBytesVarStraight(field);\n          break;\n        case BYTES_FIXED_DEREF:\n          instance = loadBytesFixedDeref(field);\n          break;\n        case BYTES_VAR_DEREF:\n          instance = loadBytesVarDeref(field);\n          break;\n        default:\n          throw new AssertionError();\n      }\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["0ef85d40fcb2c5bb7ec40780b12e543600a1ae38"],"db5a3aeba34624ea274f34df5691d40ca25f2b67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ef85d40fcb2c5bb7ec40780b12e543600a1ae38":["1982459c2ac4916bf3c0644b801f0cb3e4ee159f"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","769aa5c7a844c7615167d4fc9352373d85eef21e"],"769aa5c7a844c7615167d4fc9352373d85eef21e":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"1982459c2ac4916bf3c0644b801f0cb3e4ee159f":["db5a3aeba34624ea274f34df5691d40ca25f2b67"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d4d69c535930b5cce125cff868d40f6373dc27d4","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["769aa5c7a844c7615167d4fc9352373d85eef21e"],"db5a3aeba34624ea274f34df5691d40ca25f2b67":["1982459c2ac4916bf3c0644b801f0cb3e4ee159f"],"0ef85d40fcb2c5bb7ec40780b12e543600a1ae38":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"769aa5c7a844c7615167d4fc9352373d85eef21e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db5a3aeba34624ea274f34df5691d40ca25f2b67","d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"1982459c2ac4916bf3c0644b801f0cb3e4ee159f":["0ef85d40fcb2c5bb7ec40780b12e543600a1ae38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}