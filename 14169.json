{"path":"solr/solrj/src/java/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","sourceNew":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","sourceNew":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","pathOld":"solr/src/common/org/apache/solr/common/params/ModifiableSolrParams#add(String,String...).mjava","sourceNew":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Add the given values to any existing name\n   * @param name Key\n   * @param val Array of value(s) added to the name. NOTE: If val is null \n   *     or a member of val is null, then a corresponding null reference \n   *     will be included when a get method is called on the key later.\n   *  @return this\n   */\n  public ModifiableSolrParams add( String name, String ... val ) {\n    String[] old = vals.put(name, val);\n    if( old != null ) {\n      if( val == null || val.length < 1 ) {\n        String[] both = new String[old.length+1];\n        System.arraycopy(old, 0, both, 0, old.length);\n        both[old.length] = null;\n        vals.put( name, both );\n      }\n      else {\n        String[] both = new String[old.length+val.length];\n        System.arraycopy(old, 0, both, 0, old.length);\n        System.arraycopy(val, 0, both, old.length, val.length);\n        vals.put( name, both );\n      }\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}