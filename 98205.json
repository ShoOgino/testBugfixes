{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#deleteButSuffixFrom(String,String[],String,boolean).mjava","commits":[{"id":"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b","date":1074593221,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#deleteButSuffixFrom(String,String[],String,boolean).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Delete a suffix searched in zone \"source\" if preceded by the prefix\n\t *\n\t * @param source java.lang.String - the primary source zone for search\n\t * @param search java.lang.String[] - the strings to search for suppression\n\t * @param prefix java.lang.String - the prefix to add to the search string to test\n\t * @param without boolean - true if it will be deleted even without prefix found\n\t */\n\tprivate void deleteButSuffixFrom( String source, String[] search, String prefix, boolean without ) {\n\t\tif (source!=null)\n\t\t{\n\t\t\tfor (int i = 0; i < search.length; i++) {\n\t\t\t\tif ( source.endsWith( prefix + search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - (prefix.length() + search[i].length()), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if ( without && source.endsWith( search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - search[i].length(), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#deleteButSuffixFrom(String,String[],String,boolean).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#deleteButSuffixFrom(String,String[],String,boolean).mjava","sourceNew":"\t/**\n\t * Delete a suffix searched in zone \"source\" if preceded by the prefix\n\t *\n\t * @param source java.lang.String - the primary source zone for search\n\t * @param search java.lang.String[] - the strings to search for suppression\n\t * @param prefix java.lang.String - the prefix to add to the search string to test\n\t * @param without boolean - true if it will be deleted even without prefix found\n\t */\n\tprivate void deleteButSuffixFrom( String source, String[] search, String prefix, boolean without ) {\n\t\tif (source!=null)\n\t\t{\n\t\t\tfor (int i = 0; i < search.length; i++) {\n\t\t\t\tif ( source.endsWith( prefix + search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - (prefix.length() + search[i].length()), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if ( without && source.endsWith( search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - search[i].length(), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n","sourceOld":"\t/**\n\t * Delete a suffix searched in zone \"source\" if preceded by the prefix\n\t *\n\t * @param source java.lang.String - the primary source zone for search\n\t * @param search java.lang.String[] - the strings to search for suppression\n\t * @param prefix java.lang.String - the prefix to add to the search string to test\n\t * @param without boolean - true if it will be deleted even without prefix found\n\t */\n\tprivate void deleteButSuffixFrom( String source, String[] search, String prefix, boolean without ) {\n\t\tif (source!=null)\n\t\t{\n\t\t\tfor (int i = 0; i < search.length; i++) {\n\t\t\t\tif ( source.endsWith( prefix + search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - (prefix.length() + search[i].length()), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if ( without && source.endsWith( search[i] ))\n\t\t\t\t{\n\t\t\t\t\tsb.delete( sb.length() - search[i].length(), sb.length() );\n\t\t\t\t\tmodified = true;\n\t\t\t\t\tsetStrings();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"838eb4e82b036bedc8730b5d97f5ae1d4a0d906b":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["838eb4e82b036bedc8730b5d97f5ae1d4a0d906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}