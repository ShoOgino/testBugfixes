{"path":"lucene/core/src/java/org/apache/lucene/search/MatchesUtils#disjunction(LeafReaderContext,int,Query,String,BytesRefIterator).mjava","commits":[{"id":"862b3783ab6028d6600f5324c7df1aec78b6d58b","date":1561435808,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MatchesUtils#disjunction(LeafReaderContext,int,Query,String,BytesRefIterator).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a MatchesIterator that is a disjunction over a list of terms extracted from a {@link BytesRefIterator}.\n   *\n   * Only terms that have at least one match in the given document will be included\n   */\n  public static MatchesIterator disjunction(LeafReaderContext context, int doc, Query query, String field, BytesRefIterator terms) throws IOException {\n    return DisjunctionMatchesIterator.fromTermsEnum(context, doc, query, field, terms);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"862b3783ab6028d6600f5324c7df1aec78b6d58b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["862b3783ab6028d6600f5324c7df1aec78b6d58b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["862b3783ab6028d6600f5324c7df1aec78b6d58b"],"862b3783ab6028d6600f5324c7df1aec78b6d58b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}