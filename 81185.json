{"path":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"/dev/null","sourceNew":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(CMD_INDEX_VERSION, c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames().toString());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4f1a1d7f1604a41328b566b1be0c5ad6038117e8","760d6304fb87927aadb84287ce91cd84a59d83e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"760d6304fb87927aadb84287ce91cd84a59d83e7","date":1236494274,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames().toString());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(CMD_INDEX_VERSION, c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames().toString());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","c01638f4dd94981c1d3d52c4f7991246a5a24aba","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4f1a1d7f1604a41328b566b1be0c5ad6038117e8","date":1252499131,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames().toString());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","pathOld":"src/java/org/apache/solr/handler/ReplicationHandler#getCommits().mjava","sourceNew":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","sourceOld":"  private List<NamedList> getCommits() {\n    Map<Long, IndexCommit> commits = core.getDeletionPolicy().getCommits();\n    List<NamedList> l = new ArrayList<NamedList>();\n\n    for (IndexCommit c : commits.values()) {\n      try {\n        NamedList nl = new NamedList();\n        nl.add(\"indexVersion\", c.getVersion());\n        nl.add(GENERATION, c.getGeneration());\n        nl.add(CMD_GET_FILE_LIST, c.getFileNames());\n        l.add(nl);\n      } catch (IOException e) {\n        LOG.warn(\"Exception while reading files for commit \" + c, e);\n      }\n    }\n    return l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"4f1a1d7f1604a41328b566b1be0c5ad6038117e8":["760d6304fb87927aadb84287ce91cd84a59d83e7"],"ad94625fb8d088209f46650c8097196fec67f00c":["4f1a1d7f1604a41328b566b1be0c5ad6038117e8"],"760d6304fb87927aadb84287ce91cd84a59d83e7":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["760d6304fb87927aadb84287ce91cd84a59d83e7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f1a1d7f1604a41328b566b1be0c5ad6038117e8":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"760d6304fb87927aadb84287ce91cd84a59d83e7":["4f1a1d7f1604a41328b566b1be0c5ad6038117e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}