{"path":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","commits":[{"id":"8aa3ac5678898d1ec767463baf78092a23dcb061","date":1487253427,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"706a7a3396c030cc66dda92a0492eb492131c4c0","date":1509705614,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da1460d7a5dea2658e7b8e4f6e632e53ade440ac","date":1510316270,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestUsageTrackingFilterCachingPolicy.DummyQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(DummyQuery.this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return new ConstantScoreScorer(this, score(), DocIdSetIterator.all(1));\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"706a7a3396c030cc66dda92a0492eb492131c4c0":["8aa3ac5678898d1ec767463baf78092a23dcb061"],"da1460d7a5dea2658e7b8e4f6e632e53ade440ac":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["8aa3ac5678898d1ec767463baf78092a23dcb061","706a7a3396c030cc66dda92a0492eb492131c4c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"8aa3ac5678898d1ec767463baf78092a23dcb061":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"417142ff08fda9cf0b72d5133e63097a166c6458":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"706a7a3396c030cc66dda92a0492eb492131c4c0":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"da1460d7a5dea2658e7b8e4f6e632e53ade440ac":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8aa3ac5678898d1ec767463baf78092a23dcb061"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"8aa3ac5678898d1ec767463baf78092a23dcb061":["706a7a3396c030cc66dda92a0492eb492131c4c0","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}