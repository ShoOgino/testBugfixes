{"path":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","pathOld":"/dev/null","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","sourceNew":null,"sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","pathOld":"src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","pathOld":"/dev/null","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"406e7055a3e99d3fa6ce49a555a51dd18b321806","date":1282520243,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","sourceNew":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","bugFix":["c1489a6cc46d2aee93ac7b3caad58d8ec068d9cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18260135b66895e9d69aac929b2760331da0c7","date":1285291048,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","sourceNew":null,"sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && delDocs.get(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/FunctionQuery.AllScorer#next().mjava","sourceNew":null,"sourceOld":"    // instead of matching all docs, we could also embed a query.\n    // the score could either ignore the subscore, or boost it.\n    // Containment:  floatline(foo:myTerm, \"myFloatField\", 1.0, 0.0f)\n    // Boost:        foo:myTerm^floatline(\"myFloatField\",1.0,0.0f)\n    public boolean next() throws IOException {\n      for(;;) {\n        ++doc;\n        if (doc>=maxDoc) {\n          return false;\n        }\n        if (hasDeletions && reader.isDeleted(doc)) continue;\n        // todo: maybe allow score() to throw a specific exception\n        // and continue on to the next document if it is thrown...\n        // that may be useful, but exceptions aren't really good\n        // for flow control.\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"6c18260135b66895e9d69aac929b2760331da0c7":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","6c18260135b66895e9d69aac929b2760331da0c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6c18260135b66895e9d69aac929b2760331da0c7"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["406e7055a3e99d3fa6ce49a555a51dd18b321806","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"6c18260135b66895e9d69aac929b2760331da0c7":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["6c18260135b66895e9d69aac929b2760331da0c7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}