{"path":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"/dev/null","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n    currentDoc++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"/dev/null","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n    currentDoc++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5844844466689b1121b12ccb467623f894eb269d","date":1475600453,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, currentDoc);\n    docsWithField.set(currentDoc);\n  }\n\n","sourceOld":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n    currentDoc++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, currentDoc);\n    docsWithField.set(currentDoc);\n  }\n\n","sourceOld":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n    currentDoc++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceec64003e8cc400e862d44c8589a41570432ab9","date":1478783055,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField.add(currentDoc);\n  }\n\n","sourceOld":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, currentDoc);\n    docsWithField.set(currentDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedNumericDocValuesWriter#finishCurrentDoc().mjava","sourceNew":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField.add(currentDoc);\n  }\n\n","sourceOld":"  // finalize currentDoc: this sorts the values in the current doc\n  private void finishCurrentDoc() {\n    if (currentDoc == -1) {\n      return;\n    }\n    Arrays.sort(currentValues, 0, currentUpto);\n    for (int i = 0; i < currentUpto; i++) {\n      pending.add(currentValues[i]);\n    }\n    // record the number of values for this doc\n    pendingCounts.add(currentUpto);\n    currentUpto = 0;\n\n    docsWithField = FixedBitSet.ensureCapacity(docsWithField, currentDoc);\n    docsWithField.set(currentDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5844844466689b1121b12ccb467623f894eb269d":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ceec64003e8cc400e862d44c8589a41570432ab9"],"ceec64003e8cc400e862d44c8589a41570432ab9":["5844844466689b1121b12ccb467623f894eb269d"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d14ffaac9c4a4a2c750bf0cd956506802561e062","5844844466689b1121b12ccb467623f894eb269d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ceec64003e8cc400e862d44c8589a41570432ab9"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5844844466689b1121b12ccb467623f894eb269d":["ceec64003e8cc400e862d44c8589a41570432ab9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"ceec64003e8cc400e862d44c8589a41570432ab9":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["5844844466689b1121b12ccb467623f894eb269d","c6f080a2ab37c464dd98db173f6cbf10dc74f211","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}