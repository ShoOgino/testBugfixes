{"path":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader,boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader,boolean).mjava","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr, boolean drop) throws IOException {\n\n      final boolean pooled = readerMap.containsKey(sr.getSegmentInfo());\n\n      assert !pooled | readerMap.get(sr.getSegmentInfo()) == sr;\n\n      // Drop caller's ref\n      sr.decRef();\n\n      if (pooled && (drop || (!poolReaders && sr.getRefCount() == 1))) {\n\n        // We are the last ref to this reader; since we're\n        // not pooling readers, we release it:\n        readerMap.remove(sr.getSegmentInfo());\n\n        assert !sr.hasChanges || Thread.holdsLock(IndexWriter.this);\n\n        // Drop our ref -- this will commit any pending\n        // changes to the dir\n        boolean success = false;\n        try {\n          sr.close();\n          success = true;\n        } finally {\n          if (!success && sr.hasChanges) {\n            // Abandon the changes & retry closing:\n            sr.hasChanges = false;\n            try {\n              sr.close();\n            } catch (Throwable ignore) {\n              // Keep throwing original exception\n            }\n          }\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr, boolean drop) throws IOException {\n\n      final boolean pooled = readerMap.containsKey(sr.getSegmentInfo());\n\n      assert !pooled | readerMap.get(sr.getSegmentInfo()) == sr;\n\n      // Drop caller's ref\n      sr.decRef();\n\n      if (pooled && (drop || (!poolReaders && sr.getRefCount() == 1))) {\n\n        // We are the last ref to this reader; since we're\n        // not pooling readers, we release it:\n        readerMap.remove(sr.getSegmentInfo());\n\n        assert !sr.hasChanges || Thread.holdsLock(IndexWriter.this);\n\n        // Drop our ref -- this will commit any pending\n        // changes to the dir\n        boolean success = false;\n        try {\n          sr.close();\n          success = true;\n        } finally {\n          if (!success && sr.hasChanges) {\n            // Abandon the changes & retry closing:\n            sr.hasChanges = false;\n            try {\n              sr.close();\n            } catch (Throwable ignore) {\n              // Keep throwing original exception\n            }\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader,boolean).mjava","sourceNew":null,"sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr, boolean drop) throws IOException {\n\n      final boolean pooled = readerMap.containsKey(sr.getSegmentInfo());\n\n      assert !pooled | readerMap.get(sr.getSegmentInfo()) == sr;\n\n      // Drop caller's ref\n      sr.decRef();\n\n      if (pooled && (drop || (!poolReaders && sr.getRefCount() == 1))) {\n\n        // We are the last ref to this reader; since we're\n        // not pooling readers, we release it:\n        readerMap.remove(sr.getSegmentInfo());\n\n        assert !sr.hasChanges || Thread.holdsLock(IndexWriter.this);\n\n        // Drop our ref -- this will commit any pending\n        // changes to the dir\n        boolean success = false;\n        try {\n          sr.close();\n          success = true;\n        } finally {\n          if (!success && sr.hasChanges) {\n            // Abandon the changes & retry closing:\n            sr.hasChanges = false;\n            try {\n              sr.close();\n            } catch (Throwable ignore) {\n              // Keep throwing original exception\n            }\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}