{"path":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   * @param rb\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a2ba67a463f52915e77a5fd8714aa7d36faf59c","date":1348538193,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        PivotFacetHelper pivotHelper = new PivotFacetHelper(rb.req,\n            rb.getResults().docSet,\n            params,\n            rb );\n        NamedList v = pivotHelper.process(pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        NamedList v = pivotHelper.process(rb, params, pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n      \n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (pivots != null && pivots.length > 0) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n      \n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException\n  {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req,\n              rb.getResults().docSet,\n              params,\n              rb );\n\n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams( FacetParams.FACET_PIVOT );\n      if( pivots != null && pivots.length > 0 ) {\n        PivotFacetHelper pivotHelper = new PivotFacetHelper(rb.req,\n            rb.getResults().docSet,\n            params,\n            rb );\n        NamedList v = pivotHelper.process(pivots);\n        if( v != null ) {\n          counts.add( PIVOT_KEY, v );\n        }\n      }\n      \n      // TODO ???? add this directly to the response, or to the builder?\n      rb.rsp.add( \"facet_counts\", counts );\n    }\n  }\n\n","bugFix":null,"bugIntro":["2513ddf6498076f811b0f80cce5b0414a077b143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b8a06631c6dd7816f50f77a22d08dac33e15f1f1","date":1408391117,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    //SolrParams params = rb.req.getParams();\n    if (rb.doFacets) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      SolrParams origParams = rb.req.getParams();\n      Iterator<String> iter = origParams.getParameterNamesIterator();\n      while (iter.hasNext()) {\n        String paramName = iter.next();\n        // Deduplicate the list with LinkedHashSet, but _only_ for facet params.\n        if (paramName.startsWith(FacetParams.FACET) == false) {\n          params.add(paramName, origParams.getParams(paramName));\n          continue;\n        }\n        HashSet<String> deDupe = new LinkedHashSet<>(Arrays.asList(origParams.getParams(paramName)));\n        params.add(paramName, deDupe.toArray(new String[deDupe.size()]));\n      }\n\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n      \n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (pivots != null && pivots.length > 0) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n      \n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n      \n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (pivots != null && pivots.length > 0) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n      \n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    //SolrParams params = rb.req.getParams();\n    if (rb.doFacets) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      SolrParams origParams = rb.req.getParams();\n      Iterator<String> iter = origParams.getParameterNamesIterator();\n      while (iter.hasNext()) {\n        String paramName = iter.next();\n        // Deduplicate the list with LinkedHashSet, but _only_ for facet params.\n        if (paramName.startsWith(FacetParams.FACET) == false) {\n          params.add(paramName, origParams.getParams(paramName));\n          continue;\n        }\n        HashSet<String> deDupe = new LinkedHashSet<>(Arrays.asList(origParams.getParams(paramName)));\n        params.add(paramName, deDupe.toArray(new String[deDupe.size()]));\n      }\n\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n      \n      NamedList<Object> counts = f.getFacetCounts();\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (pivots != null && pivots.length > 0) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n      \n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e5f469d206ae27a1d59e654e70a1413ffcec765","date":1462661221,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      RTimer timer = null;\n      FacetDebugInfo fdebug = null;\n\n      if (rb.isDebug()) {\n        fdebug = new FacetDebugInfo();\n        rb.req.getContext().put(\"FacetDebugInfo-nonJson\", fdebug);\n        timer = new RTimer();\n      }\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f, fdebug);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      if (fdebug != null) {\n        long timeElapsed = (long) timer.getTime();\n        fdebug.setElapse(timeElapsed);\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      RTimer timer = null;\n      FacetDebugInfo fdebug = null;\n\n      if (rb.isDebug()) {\n        fdebug = new FacetDebugInfo();\n        rb.req.getContext().put(\"FacetDebugInfo-nonJson\", fdebug);\n        timer = new RTimer();\n      }\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f, fdebug);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      if (fdebug != null) {\n        long timeElapsed = (long) timer.getTime();\n        fdebug.setElapse(timeElapsed);\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      RTimer timer = null;\n      FacetDebugInfo fdebug = null;\n\n      if (rb.isDebug()) {\n        fdebug = new FacetDebugInfo();\n        rb.req.getContext().put(\"FacetDebugInfo-nonJson\", fdebug);\n        timer = new RTimer();\n      }\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f, fdebug);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      if (fdebug != null) {\n        long timeElapsed = (long) timer.getTime();\n        fdebug.setElapse(timeElapsed);\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2513ddf6498076f811b0f80cce5b0414a077b143","date":1486394510,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#process(ResponseBuilder).mjava","sourceNew":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = newSimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      RTimer timer = null;\n      FacetDebugInfo fdebug = null;\n\n      if (rb.isDebug()) {\n        fdebug = new FacetDebugInfo();\n        rb.req.getContext().put(\"FacetDebugInfo-nonJson\", fdebug);\n        timer = new RTimer();\n      }\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f, fdebug);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      if (fdebug != null) {\n        long timeElapsed = (long) timer.getTime();\n        fdebug.setElapse(timeElapsed);\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually run the query\n   */\n  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n\n    if (rb.doFacets) {\n      SolrParams params = rb.req.getParams();\n      SimpleFacets f = new SimpleFacets(rb.req, rb.getResults().docSet, params, rb);\n\n      RTimer timer = null;\n      FacetDebugInfo fdebug = null;\n\n      if (rb.isDebug()) {\n        fdebug = new FacetDebugInfo();\n        rb.req.getContext().put(\"FacetDebugInfo-nonJson\", fdebug);\n        timer = new RTimer();\n      }\n\n      NamedList<Object> counts = FacetComponent.getFacetCounts(f, fdebug);\n      String[] pivots = params.getParams(FacetParams.FACET_PIVOT);\n      if (!ArrayUtils.isEmpty(pivots)) {\n        PivotFacetProcessor pivotProcessor \n          = new PivotFacetProcessor(rb.req, rb.getResults().docSet, params, rb);\n        SimpleOrderedMap<List<NamedList<Object>>> v \n          = pivotProcessor.process(pivots);\n        if (v != null) {\n          counts.add(PIVOT_KEY, v);\n        }\n      }\n\n      if (fdebug != null) {\n        long timeElapsed = (long) timer.getTime();\n        fdebug.setElapse(timeElapsed);\n      }\n\n      rb.rsp.add(\"facet_counts\", counts);\n    }\n  }\n\n","bugFix":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"92751ba9273251eab6a2e379ec42a1697a32ff96":["7a2ba67a463f52915e77a5fd8714aa7d36faf59c"],"b8a06631c6dd7816f50f77a22d08dac33e15f1f1":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"2513ddf6498076f811b0f80cce5b0414a077b143":["3e5f469d206ae27a1d59e654e70a1413ffcec765"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["22d0a81a05eba47d5e18976f17d88306b218cc22","3e5f469d206ae27a1d59e654e70a1413ffcec765"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e5f469d206ae27a1d59e654e70a1413ffcec765":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a2ba67a463f52915e77a5fd8714aa7d36faf59c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["b8a06631c6dd7816f50f77a22d08dac33e15f1f1"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["22d0a81a05eba47d5e18976f17d88306b218cc22","3e5f469d206ae27a1d59e654e70a1413ffcec765"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2513ddf6498076f811b0f80cce5b0414a077b143"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["7a2ba67a463f52915e77a5fd8714aa7d36faf59c"],"92751ba9273251eab6a2e379ec42a1697a32ff96":["b8a06631c6dd7816f50f77a22d08dac33e15f1f1"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"b8a06631c6dd7816f50f77a22d08dac33e15f1f1":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"2513ddf6498076f811b0f80cce5b0414a077b143":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"3e5f469d206ae27a1d59e654e70a1413ffcec765":["2513ddf6498076f811b0f80cce5b0414a077b143","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e66a459d38c1c4a2f97128433dab546f683a9fed"],"7a2ba67a463f52915e77a5fd8714aa7d36faf59c":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3e5f469d206ae27a1d59e654e70a1413ffcec765","e66a459d38c1c4a2f97128433dab546f683a9fed"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e66a459d38c1c4a2f97128433dab546f683a9fed","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}