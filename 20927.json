{"path":"solr/core/src/java/org/apache/solr/search/CaffeineCache#warm(SolrIndexSearcher,SolrCache[K,V]).mjava","commits":[{"id":"87f0484c38f986062889ed50f3bf3bd462848c26","date":1570108628,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CaffeineCache#warm(SolrIndexSearcher,SolrCache[K,V]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void warm(SolrIndexSearcher searcher, SolrCache<K,V> old) {\n    if (regenerator == null) {\n      return;\n    }\n    \n    long warmingStartTime = System.nanoTime();\n    Map<K, V> hottest = Collections.emptyMap();\n    CaffeineCache<K,V> other = (CaffeineCache<K,V>)old;\n\n    // warm entries\n    if (isAutowarmingOn()) {\n      Eviction<K, V> policy = other.cache.policy().eviction().get();\n      int size = autowarm.getWarmCount(other.cache.asMap().size());\n      hottest = policy.hottest(size);\n    }\n\n    for (Entry<K, V> entry : hottest.entrySet()) {\n      try {\n        boolean continueRegen = regenerator.regenerateItem(\n            searcher, this, old, entry.getKey(), entry.getValue());\n        if (!continueRegen) {\n          break;\n        }\n      }\n      catch (Exception e) {\n        SolrException.log(log, \"Error during auto-warming of key:\" + entry.getKey(), e);\n      }\n    }\n\n    inserts.reset();\n    priorStats = other.cache.stats().plus(other.priorStats);\n    priorInserts = other.inserts.sum() + other.priorInserts;\n    warmupTime = TimeUnit.MILLISECONDS.convert(System.nanoTime() - warmingStartTime, TimeUnit.NANOSECONDS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CaffeineCache#warm(SolrIndexSearcher,SolrCache[K,V]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void warm(SolrIndexSearcher searcher, SolrCache<K,V> old) {\n    if (regenerator == null) {\n      return;\n    }\n    \n    long warmingStartTime = System.nanoTime();\n    Map<K, V> hottest = Collections.emptyMap();\n    CaffeineCache<K,V> other = (CaffeineCache<K,V>)old;\n\n    // warm entries\n    if (isAutowarmingOn()) {\n      Eviction<K, V> policy = other.cache.policy().eviction().get();\n      int size = autowarm.getWarmCount(other.cache.asMap().size());\n      hottest = policy.hottest(size);\n    }\n\n    for (Entry<K, V> entry : hottest.entrySet()) {\n      try {\n        boolean continueRegen = regenerator.regenerateItem(\n            searcher, this, old, entry.getKey(), entry.getValue());\n        if (!continueRegen) {\n          break;\n        }\n      }\n      catch (Exception e) {\n        SolrException.log(log, \"Error during auto-warming of key:\" + entry.getKey(), e);\n      }\n    }\n\n    inserts.reset();\n    priorStats = other.cache.stats().plus(other.priorStats);\n    priorInserts = other.inserts.sum() + other.priorInserts;\n    warmupTime = TimeUnit.MILLISECONDS.convert(System.nanoTime() - warmingStartTime, TimeUnit.NANOSECONDS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87f0484c38f986062889ed50f3bf3bd462848c26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87f0484c38f986062889ed50f3bf3bd462848c26"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87f0484c38f986062889ed50f3bf3bd462848c26"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87f0484c38f986062889ed50f3bf3bd462848c26","b0b597c65628ca9e73913a07e81691f8229bae35"],"87f0484c38f986062889ed50f3bf3bd462848c26":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}