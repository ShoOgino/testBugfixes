{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput).mjava","commits":[{"id":"945146c7fd6d18148836dae96cbac42c5c809cdf","date":1430264780,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput).mjava","pathOld":"/dev/null","sourceNew":"  private static Codec readCodec(DataInput input) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // give better error messages if we can, first check if this is a legacy codec\n      if (unsupportedCodecs.contains(name)) {\n        IOException newExc = new IndexFormatTooOldException(input, \"Codec '\" + name + \"' is too old\");\n        newExc.initCause(e);\n        throw newExc;\n      }\n      // or maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f3189d15ef66702bbb45771403a68793d5cd137","date":1433872507,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput).mjava","sourceNew":"  private static Codec readCodec(DataInput input, boolean unsupportedAllowed) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // give better error messages if we can, first check if this is a legacy codec\n      if (unsupportedCodecs.contains(name)) {\n        // We should only get here on pre-5.3 indices, but we can't test this until 7.0 when 5.x indices become too old:\n        assert unsupportedAllowed;\n        IOException newExc = new IndexFormatTooOldException(input, \"Codec '\" + name + \"' is too old\");\n        newExc.initCause(e);\n        throw newExc;\n      }\n      // or maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":"  private static Codec readCodec(DataInput input) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // give better error messages if we can, first check if this is a legacy codec\n      if (unsupportedCodecs.contains(name)) {\n        IOException newExc = new IndexFormatTooOldException(input, \"Codec '\" + name + \"' is too old\");\n        newExc.initCause(e);\n        throw newExc;\n      }\n      // or maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba","date":1499240590,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput,boolean).mjava","sourceNew":"  private static Codec readCodec(DataInput input) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":"  private static Codec readCodec(DataInput input, boolean unsupportedAllowed) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // give better error messages if we can, first check if this is a legacy codec\n      if (unsupportedCodecs.contains(name)) {\n        // We should only get here on pre-5.3 indices, but we can't test this until 7.0 when 5.x indices become too old:\n        assert unsupportedAllowed;\n        IOException newExc = new IndexFormatTooOldException(input, \"Codec '\" + name + \"' is too old\");\n        newExc.initCause(e);\n        throw newExc;\n      }\n      // or maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCodec(DataInput,boolean).mjava","sourceNew":"  private static Codec readCodec(DataInput input) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","sourceOld":"  private static Codec readCodec(DataInput input, boolean unsupportedAllowed) throws IOException {\n    final String name = input.readString();\n    try {\n      return Codec.forName(name);\n    } catch (IllegalArgumentException e) {\n      // give better error messages if we can, first check if this is a legacy codec\n      if (unsupportedCodecs.contains(name)) {\n        // We should only get here on pre-5.3 indices, but we can't test this until 7.0 when 5.x indices become too old:\n        assert unsupportedAllowed;\n        IOException newExc = new IndexFormatTooOldException(input, \"Codec '\" + name + \"' is too old\");\n        newExc.initCause(e);\n        throw newExc;\n      }\n      // or maybe it's an old default codec that moved\n      if (name.startsWith(\"Lucene\")) {\n        throw new IllegalArgumentException(\"Could not load codec '\" + name + \"'.  Did you forget to add lucene-backward-codecs.jar?\", e);\n      }\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"945146c7fd6d18148836dae96cbac42c5c809cdf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["8f3189d15ef66702bbb45771403a68793d5cd137","433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba"],"8f3189d15ef66702bbb45771403a68793d5cd137":["945146c7fd6d18148836dae96cbac42c5c809cdf"],"433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba":["8f3189d15ef66702bbb45771403a68793d5cd137"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba"]},"commit2Childs":{"945146c7fd6d18148836dae96cbac42c5c809cdf":["8f3189d15ef66702bbb45771403a68793d5cd137"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["945146c7fd6d18148836dae96cbac42c5c809cdf"],"e73d8d559120669b47658108d818b637df5456ea":[],"8f3189d15ef66702bbb45771403a68793d5cd137":["e73d8d559120669b47658108d818b637df5456ea","433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba"],"433e23dec73b7ea0552ae1ff3d85d80d7d07f7ba":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}