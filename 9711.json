{"path":"src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#bits(IndexReader).mjava","commits":[{"id":"2aa365c0765407d280cd5df0569b430c6f36832e","date":1239881843,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#bits(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a BitSet with true for documents which should be\n   * permitted in search results, and false for those that should\n   * not.\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  //@Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    final TermEnum enumerator = query.getEnum(reader);\n    try {\n      final BitSet bitSet = new BitSet(reader.maxDoc());\n      new TermGenerator() {\n        public void handleDoc(int doc) {\n          bitSet.set(doc);\n        }\n      }.generate(reader, enumerator);\n      return bitSet;\n    } finally {\n      enumerator.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a9e462a51fd525218b83cdc33329f5ee00ca20","date":1254431499,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#bits(IndexReader).mjava","pathOld":"src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#bits(IndexReader).mjava","sourceNew":"  /**\n   * Returns a BitSet with true for documents which should be\n   * permitted in search results, and false for those that should\n   * not.\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    final TermEnum enumerator = query.getEnum(reader);\n    try {\n      final BitSet bitSet = new BitSet(reader.maxDoc());\n      new TermGenerator() {\n        public void handleDoc(int doc) {\n          bitSet.set(doc);\n        }\n      }.generate(reader, enumerator);\n      return bitSet;\n    } finally {\n      enumerator.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a BitSet with true for documents which should be\n   * permitted in search results, and false for those that should\n   * not.\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  //@Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    final TermEnum enumerator = query.getEnum(reader);\n    try {\n      final BitSet bitSet = new BitSet(reader.maxDoc());\n      new TermGenerator() {\n        public void handleDoc(int doc) {\n          bitSet.set(doc);\n        }\n      }.generate(reader, enumerator);\n      return bitSet;\n    } finally {\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15bd365049a486e1ddff4a17c8aaab9b002969a0","date":1254951825,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#bits(IndexReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a BitSet with true for documents which should be\n   * permitted in search results, and false for those that should\n   * not.\n   * @deprecated Use {@link #getDocIdSet(IndexReader)} instead.\n   */\n  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    final TermEnum enumerator = query.getEnum(reader);\n    try {\n      final BitSet bitSet = new BitSet(reader.maxDoc());\n      new TermGenerator() {\n        public void handleDoc(int doc) {\n          bitSet.set(doc);\n        }\n      }.generate(reader, enumerator);\n      return bitSet;\n    } finally {\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["2aa365c0765407d280cd5df0569b430c6f36832e"],"2aa365c0765407d280cd5df0569b430c6f36832e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15bd365049a486e1ddff4a17c8aaab9b002969a0"],"15bd365049a486e1ddff4a17c8aaab9b002969a0":["70a9e462a51fd525218b83cdc33329f5ee00ca20"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2aa365c0765407d280cd5df0569b430c6f36832e"],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["15bd365049a486e1ddff4a17c8aaab9b002969a0"],"2aa365c0765407d280cd5df0569b430c6f36832e":["70a9e462a51fd525218b83cdc33329f5ee00ca20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"15bd365049a486e1ddff4a17c8aaab9b002969a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}