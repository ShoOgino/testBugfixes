{"path":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","commits":[{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"SegmentDeletes [numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed + \"]\";\n    } else {\n      String s = \"\";\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentDeletes#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"SegmentDeletes [numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed + \"]\";\n    } else {\n      String s = \"\";\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c00afe74a80796ed1f30a9509b150ff104746a1f","date":1312881735,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \") terms=\" + terms.keySet();\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \")\";\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","bugFix":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BufferedDeletes#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \") terms=\" + terms.keySet();\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    if (VERBOSE_DELETES) {\n      return \"gen=\" + gen + \" numTerms=\" + numTermDeletes + \", terms=\" + terms\n        + \", queries=\" + queries + \", docIDs=\" + docIDs + \", bytesUsed=\"\n        + bytesUsed;\n    } else {\n      String s = \"gen=\" + gen;\n      if (numTermDeletes.get() != 0) {\n        s += \" \" + numTermDeletes.get() + \" deleted terms (unique count=\" + terms.size() + \") terms=\" + terms.keySet();\n      }\n      if (queries.size() != 0) {\n        s += \" \" + queries.size() + \" deleted queries\";\n      }\n      if (docIDs.size() != 0) {\n        s += \" \" + docIDs.size() + \" deleted docIDs\";\n      }\n      if (bytesUsed.get() != 0) {\n        s += \" bytesUsed=\" + bytesUsed.get();\n      }\n\n      return s;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c00afe74a80796ed1f30a9509b150ff104746a1f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c00afe74a80796ed1f30a9509b150ff104746a1f":["c19f985e36a65cc969e8e564fe337a0d41512075"],"c19f985e36a65cc969e8e564fe337a0d41512075":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","c19f985e36a65cc969e8e564fe337a0d41512075","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c00afe74a80796ed1f30a9509b150ff104746a1f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c19f985e36a65cc969e8e564fe337a0d41512075":["29ef99d61cda9641b6250bf9567329a6e65f901d","c00afe74a80796ed1f30a9509b150ff104746a1f","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}