{"path":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","commits":[{"id":"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9","date":1414167719,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b73e9c1914a76cfa16576e9d7165e286cc35c36e","date":1593099382,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThreshold\", 80, solrConfig.memoryCircuitBreakerThreshold);\n  }\n\n","sourceOld":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c24f8f07a3e4a885c0e19286d51575df197a611b","date":1593281672,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n  }\n\n","sourceOld":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThreshold\", 80, solrConfig.memoryCircuitBreakerThreshold);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef8e4fae9bcd156a117f5758819aeabdae3e963","date":1593674028,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThresholdPct\", 95, solrConfig.memoryCircuitBreakerThresholdPct);\n  }\n\n","sourceOld":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a761febaf4b3c09d4490395eb90617263016fc2a","date":1597909886,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThresholdPct\", 95, solrConfig.memCBThreshold);\n    assertEquals(\"wrong config for cpuCircuitBreakerThreshold\", 95, solrConfig.cpuCBThreshold);\n  }\n\n","sourceOld":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThresholdPct\", 95, solrConfig.memoryCircuitBreakerThresholdPct);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ef286034ca1be064a363aaec38e34e64a59154c","date":1598517382,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testConfiguration().mjava","sourceNew":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n  }\n\n","sourceOld":"  @Test\n  public void testConfiguration() throws Exception {\n    assertEquals(\"wrong config for slowQueryThresholdMillis\", 2000, solrConfig.slowQueryThresholdMillis);\n    assertEquals(\"wrong config for maxBooleanClauses\", 1024, solrConfig.booleanQueryMaxClauseCount);\n    assertEquals(\"wrong config for enableLazyFieldLoading\", true, solrConfig.enableLazyFieldLoading);\n    assertEquals(\"wrong config for queryResultWindowSize\", 10, solrConfig.queryResultWindowSize);\n    assertEquals(\"wrong config for useCircuitBreakers\", false, solrConfig.useCircuitBreakers);\n    assertEquals(\"wrong config for memoryCircuitBreakerThresholdPct\", 95, solrConfig.memCBThreshold);\n    assertEquals(\"wrong config for cpuCircuitBreakerThreshold\", 95, solrConfig.cpuCBThreshold);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"0ef286034ca1be064a363aaec38e34e64a59154c":["a761febaf4b3c09d4490395eb90617263016fc2a"],"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ef286034ca1be064a363aaec38e34e64a59154c"],"a761febaf4b3c09d4490395eb90617263016fc2a":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"]},"commit2Childs":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"],"0ef286034ca1be064a363aaec38e34e64a59154c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb55f6c347c48c2f7a9fb29b2e6dfe819b1a56f9"],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["a761febaf4b3c09d4490395eb90617263016fc2a"],"a761febaf4b3c09d4490395eb90617263016fc2a":["0ef286034ca1be064a363aaec38e34e64a59154c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}