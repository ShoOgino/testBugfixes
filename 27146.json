{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    if (shift >= valSize)\n      return false;\n\n    clearAttributes();\n    final char[] buffer;\n    switch (valSize) {\n      case 64:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_LONG);\n        termAtt.setTermLength(NumericUtils.longToPrefixCoded(value, shift, buffer));\n        break;\n      \n      case 32:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_INT);\n        termAtt.setTermLength(NumericUtils.intToPrefixCoded((int) value, shift, buffer));\n        break;\n      \n      default:\n        // should not happen\n        throw new IllegalArgumentException(\"valSize must be 32 or 64\");\n    }\n    \n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    shift += precisionStep;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    if (shift >= valSize)\n      return false;\n\n    clearAttributes();\n    final char[] buffer;\n    switch (valSize) {\n      case 64:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_LONG);\n        termAtt.setTermLength(NumericUtils.longToPrefixCoded(value, shift, buffer));\n        break;\n      \n      case 32:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_INT);\n        termAtt.setTermLength(NumericUtils.intToPrefixCoded((int) value, shift, buffer));\n        break;\n      \n      default:\n        // should not happen\n        throw new IllegalArgumentException(\"valSize must be 32 or 64\");\n    }\n    \n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    shift += precisionStep;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    if (shift >= valSize)\n      return false;\n\n    clearAttributes();\n    final char[] buffer;\n    switch (valSize) {\n      case 64:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_LONG);\n        termAtt.setTermLength(NumericUtils.longToPrefixCoded(value, shift, buffer));\n        break;\n      \n      case 32:\n        buffer = termAtt.resizeTermBuffer(NumericUtils.BUF_SIZE_INT);\n        termAtt.setTermLength(NumericUtils.intToPrefixCoded((int) value, shift, buffer));\n        break;\n      \n      default:\n        // should not happen\n        throw new IllegalArgumentException(\"valSize must be 32 or 64\");\n    }\n    \n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    shift += precisionStep;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}