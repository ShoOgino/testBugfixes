{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","commits":[{"id":"441c188ff9fd7da36e0e4d8a9b51cebe63b31192","date":1384814749,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testWrongIndexFieldName().mjava","sourceNew":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testWrongIndexFieldName() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"a\", \"$facets2\");\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    // Uses default $facets field:\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, config, c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n    assertTrue(results.isEmpty());\n\n    try {\n      facets.getSpecificValue(\"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    try {\n      facets.getTopChildren(10, \"a\");\n      fail(\"should have hit exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["7554009c97f9365492660c1df175b6349f7ec05c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["006838107b0cd2051371f3470740d23ec91b1886"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":["006838107b0cd2051371f3470740d23ec91b1886"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"006838107b0cd2051371f3470740d23ec91b1886":["ae75def1e2525383b6e1397ed97c44387da9941c"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["7554009c97f9365492660c1df175b6349f7ec05c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}