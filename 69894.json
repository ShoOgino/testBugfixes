{"path":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82387c09d589bad6a23aabfc649893c771748599","date":1483047809,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"no reverse, no false positive\",\n        req(\"q\", \"+id:1 +three:[* TO a]\", \n            \"debugQuery\", \"true\"),\n        \"//result[@numFound=0]\");\n    {\n      String reverseField = random().nextBoolean() ? \"one\":\"two\";\n      assertQ(\"false positive\",\n          req(\"q\", \"+id:1 +\"+reverseField+\":[* TO a]\", \n              \"debugQuery\", \"true\"),\n          \"//result[@numFound=0]\");\n    }\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"no reverse, no false positive\",\n        req(\"q\", \"+id:1 +three:[* TO a]\", \n            \"debugQuery\", \"true\"),\n        \"//result[@numFound=0]\");\n    {\n      String reverseField = random().nextBoolean() ? \"one\":\"two\";\n      assertQ(\"false positive\",\n          req(\"q\", \"+id:1 +\"+reverseField+\":[* TO a]\", \n              \"debugQuery\", \"true\"),\n          \"//result[@numFound=0]\");\n    }\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestReversedWildcardFilterFactory#testFalsePositives().mjava","sourceNew":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"no reverse, no false positive\",\n        req(\"q\", \"+id:1 +three:[* TO a]\", \n            \"debugQuery\", \"true\"),\n        \"//result[@numFound=0]\");\n    {\n      String reverseField = random().nextBoolean() ? \"one\":\"two\";\n      assertQ(\"false positive\",\n          req(\"q\", \"+id:1 +\"+reverseField+\":[* TO a]\", \n              \"debugQuery\", \"true\"),\n          \"//result[@numFound=0]\");\n    }\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  @Test\n  public void testFalsePositives() throws Exception {\n    // add a doc\n    assertU(adoc(\"id\", \"1\", \"one\", \"gomez\", \"two\", \"gomez\", \"three\", \"gomez\"));\n    assertU(commit());\n    \n    assertQ(\"false positive\",\n        req(\"+id:1 +one:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +two:*zemog*\"),\n        \"//result[@numFound=0]\");\n    assertQ(\"false positive\",\n        req(\"+id:1 +three:*zemog*\"),\n        \"//result[@numFound=0]\");\n    \n    assertQ(\"should have matched\",\n        req(\"+id:1 +one:*omez*\"),\n        \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82387c09d589bad6a23aabfc649893c771748599":["c26f00b574427b55127e869b935845554afde1fa"],"de0b5d8cac74be1676bcc2f805bc0d0630176659":["c26f00b574427b55127e869b935845554afde1fa","82387c09d589bad6a23aabfc649893c771748599"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["c26f00b574427b55127e869b935845554afde1fa","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"82387c09d589bad6a23aabfc649893c771748599":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"de0b5d8cac74be1676bcc2f805bc0d0630176659":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["82387c09d589bad6a23aabfc649893c771748599","de0b5d8cac74be1676bcc2f805bc0d0630176659","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}