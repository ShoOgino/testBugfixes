{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","commits":[{"id":"1c215be2eed9175b15dc0027a12e6f3a6ace25f8","date":1483848648,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(content, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(content, query, 7));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(content, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(content, query, 7));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5de502b5478255493125e7e801411ba17a6682ec","date":1490974101,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 7));\n  }\n\n","sourceOld":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(content, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(content, query, 7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f20fd35e3055a0c5b387df0b986a68d65d86441","date":1491045405,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 7));\n  }\n\n","sourceOld":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(content, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(content, query, 7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab9796b8ce55058e483d2f195ac9b1942fcf478","date":1577858220,"type":3,"author":"Nándor Mátravölgyi","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent A\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 0, 0.f));\n    assertEquals(\"almost two sent B\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 1, 0.5f));\n    assertEquals(\"almost two sent C\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 5, 1.f));\n\n    assertEquals(\"barely two sent A\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 1, 0.f));\n    assertEquals(\"barely two sent B\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 2, 0.5f));\n    assertEquals(\"barely two sent C\",\n        \"Aa bb. Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 7, 1.f));\n    assertEquals(\"barely two sent D/a\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 2, 0.55f));\n    assertEquals(\"barely two sent D/b\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 3, 0.55f));\n    assertEquals(\"barely two sent E/a\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 10, 0.5f));\n    assertEquals(\"barely two sent E/b\",\n        \"Aa bb. Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 10, 0.7f));\n    assertEquals(\"barely two sent E/c\",\n        \"Aa bb. Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 9, 0.9f));\n\n    query = query(\"ddxyzee\");\n    assertEquals(\"test fragment search from the middle of the match; almost including\",\n        \"<b>ddxyzee</b> \", highlightMinLen(CONTENT3, query, 7, 0.5f, ' '));\n    assertEquals(\"test fragment search from the middle of the match; barely including\",\n        \"bbcc <b>ddxyzee</b> ffgg \", highlightMinLen(CONTENT3, query, 8, 0.5f, ' '));\n  }\n\n","sourceOld":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c606b777c4250f3f3f6f66d659c7c4c403679b71","date":1577958559,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/LengthGoalBreakIteratorTest#testMinLen().mjava","sourceNew":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent A\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 0, 0.f));\n    assertEquals(\"almost two sent B\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 1, 0.5f));\n    assertEquals(\"almost two sent C\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 5, 1.f));\n\n    assertEquals(\"barely two sent A\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 1, 0.f));\n    assertEquals(\"barely two sent B\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 2, 0.5f));\n    assertEquals(\"barely two sent C\",\n        \"Aa bb. Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 7, 1.f));\n    assertEquals(\"barely two sent D/a\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 2, 0.55f));\n    assertEquals(\"barely two sent D/b\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 3, 0.55f));\n    assertEquals(\"barely two sent E/a\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 10, 0.5f));\n    assertEquals(\"barely two sent E/b\",\n        \"Aa bb. Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 10, 0.7f));\n    assertEquals(\"barely two sent E/c\",\n        \"Aa bb. Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 9, 0.9f));\n\n    query = query(\"ddxyzee\");\n    assertEquals(\"test fragment search from the middle of the match; almost including\",\n        \"<b>ddxyzee</b> \", highlightMinLen(CONTENT3, query, 7, 0.5f, ' '));\n    assertEquals(\"test fragment search from the middle of the match; barely including\",\n        \"bbcc <b>ddxyzee</b> ffgg \", highlightMinLen(CONTENT3, query, 8, 0.5f, ' '));\n  }\n\n","sourceOld":"  public void testMinLen() throws IOException {\n    // minLen mode is simpler than targetLen... just test a few cases\n\n    Query query = query(\"dd\");\n    assertEquals(\"almost two sent\",\n        \" Cc <b>dd</b>.\", highlightMinLen(CONTENT, query, 6));\n    assertEquals(\"barely two sent\",\n        \" Cc <b>dd</b>. Ee ff\", highlightMinLen(CONTENT, query, 7));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ab9796b8ce55058e483d2f195ac9b1942fcf478":["5de502b5478255493125e7e801411ba17a6682ec"],"5de502b5478255493125e7e801411ba17a6682ec":["1c215be2eed9175b15dc0027a12e6f3a6ace25f8"],"c606b777c4250f3f3f6f66d659c7c4c403679b71":["5de502b5478255493125e7e801411ba17a6682ec","9ab9796b8ce55058e483d2f195ac9b1942fcf478"],"1c215be2eed9175b15dc0027a12e6f3a6ace25f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":["1c215be2eed9175b15dc0027a12e6f3a6ace25f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c215be2eed9175b15dc0027a12e6f3a6ace25f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ab9796b8ce55058e483d2f195ac9b1942fcf478"]},"commit2Childs":{"9ab9796b8ce55058e483d2f195ac9b1942fcf478":["c606b777c4250f3f3f6f66d659c7c4c403679b71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5de502b5478255493125e7e801411ba17a6682ec":["9ab9796b8ce55058e483d2f195ac9b1942fcf478","c606b777c4250f3f3f6f66d659c7c4c403679b71"],"c606b777c4250f3f3f6f66d659c7c4c403679b71":[],"1c215be2eed9175b15dc0027a12e6f3a6ace25f8":["5de502b5478255493125e7e801411ba17a6682ec","6f20fd35e3055a0c5b387df0b986a68d65d86441","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1c215be2eed9175b15dc0027a12e6f3a6ace25f8","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c606b777c4250f3f3f6f66d659c7c4c403679b71","6f20fd35e3055a0c5b387df0b986a68d65d86441","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}