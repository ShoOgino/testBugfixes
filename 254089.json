{"path":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.openSlice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundReader#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundReader#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileDirectory#openInput(String,IOContext).mjava","sourceNew":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","sourceOld":"  @Override\n  public synchronized IndexInput openInput(String name, IOContext context) throws IOException {\n    ensureOpen();\n    assert !openForWrite;\n    final String id = IndexFileNames.stripSegmentName(name);\n    final FileEntry entry = entries.get(id);\n    if (entry == null) {\n      throw new FileNotFoundException(\"No sub-file with id \" + id + \" found (fileName=\" + name + \" files: \" + entries.keySet() + \")\");\n    }\n    return handle.slice(name, entry.offset, entry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","989d940c4bf402188f4f0ae13736836885227383"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["9bb9a29a5e71a90295f175df8919802993142c9a"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["989d940c4bf402188f4f0ae13736836885227383","9bb9a29a5e71a90295f175df8919802993142c9a","56572ec06f1407c066d6b7399413178b33176cd8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}