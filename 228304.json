{"path":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","commits":[{"id":"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c","date":1166653933,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.TOKENIZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.TOKENIZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.TOKENIZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.ANALYZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.ANALYZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.ANALYZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.TOKENIZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.TOKENIZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.TOKENIZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.ANALYZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.ANALYZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.ANALYZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.ANALYZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.ANALYZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.ANALYZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/index/TestFieldNormModifier#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.ANALYZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.ANALYZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.ANALYZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true, MaxFieldLength.UNLIMITED);\n    \n    for (int i = 0; i < NUM_DOCS; i++) {\n      Document d = new Document();\n      d.add(new Field(\"field\", \"word\", Field.Store.YES, Field.Index.ANALYZED));\n      d.add(new Field(\"nonorm\", \"word\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      d.add(new Field(\"untokfield\", \"20061212 20071212\", Field.Store.YES, Field.Index.ANALYZED));\n      \n      for (int j = 1; j <= i; j++) {\n        d.add(new Field(\"field\", \"crap\", Field.Store.YES, Field.Index.ANALYZED));\n        d.add(new Field(\"nonorm\", \"more words\", Field.Store.YES, Field.Index.NOT_ANALYZED_NO_NORMS));\n      }\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}