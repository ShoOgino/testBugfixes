{"path":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testDateField().mjava","commits":[{"id":"94a0eda7dbad12579530df39279403d27344ebcb","date":1500511909,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testDateField().mjava","pathOld":"/dev/null","sourceNew":"  public void testDateField() { \n    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + \"schema15.xml\", config);\n    \n    final TrieDateField tdt = new TrieDateField();\n    {\n      final Map<String, String> args = new HashMap<>();\n      args.put(\"sortMissingLast\", \"true\");\n      args.put(\"indexed\", \"true\");\n      args.put(\"stored\", \"false\");\n      args.put(\"docValues\", \"true\");\n      args.put(\"precisionStep\", \"16\");\n      tdt.setArgs(schema, args);\n      assertEquals(16, tdt.getPrecisionStep());\n    }\n    final DatePointField pdt = new DatePointField();\n    {\n      final Map<String, String> args = new HashMap<>();\n      args.put(\"sortMissingLast\", \"true\");\n      args.put(\"indexed\", \"true\");\n      args.put(\"stored\", \"false\");\n      args.put(\"docValues\", \"true\");\n      pdt.setArgs(schema, args);\n    }\n    \n    for (FieldType ft : Arrays.asList(tdt, pdt)) {\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.OMIT_NORMS));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.SORT_MISSING_LAST));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.INDEXED));\n      assertFalse(ft.getClass().getName(), ft.hasProperty(FieldType.STORED));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.DOC_VALUES));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/PrimitiveFieldTypeTest#testDateField().mjava","pathOld":"/dev/null","sourceNew":"  public void testDateField() { \n    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + \"schema15.xml\", config);\n    \n    final TrieDateField tdt = new TrieDateField();\n    {\n      final Map<String, String> args = new HashMap<>();\n      args.put(\"sortMissingLast\", \"true\");\n      args.put(\"indexed\", \"true\");\n      args.put(\"stored\", \"false\");\n      args.put(\"docValues\", \"true\");\n      args.put(\"precisionStep\", \"16\");\n      tdt.setArgs(schema, args);\n      assertEquals(16, tdt.getPrecisionStep());\n    }\n    final DatePointField pdt = new DatePointField();\n    {\n      final Map<String, String> args = new HashMap<>();\n      args.put(\"sortMissingLast\", \"true\");\n      args.put(\"indexed\", \"true\");\n      args.put(\"stored\", \"false\");\n      args.put(\"docValues\", \"true\");\n      pdt.setArgs(schema, args);\n    }\n    \n    for (FieldType ft : Arrays.asList(tdt, pdt)) {\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.OMIT_NORMS));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.SORT_MISSING_LAST));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.INDEXED));\n      assertFalse(ft.getClass().getName(), ft.hasProperty(FieldType.STORED));\n      assertTrue(ft.getClass().getName(), ft.hasProperty(FieldType.DOC_VALUES));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94a0eda7dbad12579530df39279403d27344ebcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94a0eda7dbad12579530df39279403d27344ebcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94a0eda7dbad12579530df39279403d27344ebcb"]},"commit2Childs":{"94a0eda7dbad12579530df39279403d27344ebcb":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94a0eda7dbad12579530df39279403d27344ebcb","936cdd5882761db3b844afd6f84ab81cbb011a75"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}