{"path":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","commits":[{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date value, int count) {\n    sum += value.getTime() * count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a4469b796ffbb01ca57a182e25a95de21fb4538","date":1331234730,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    sumOfSquares += (value * value * count); // for std deviation\n    sum += value * count;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date value, int count) {\n    sum += value.getTime() * count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    sumOfSquares += (value * value * count); // for std deviation\n    sum += value * count;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date value, int count) {\n    sum += value.getTime() * count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += (value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    sumOfSquares += (value * value * count); // for std deviation\n    sum += value * count;\n  }\n\n","bugFix":null,"bugIntro":["ad100f9e08ad77986f3b61ff2e904679206b68dd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += (value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    sumOfSquares += (value * value * count); // for std deviation\n    sum += value * count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad100f9e08ad77986f3b61ff2e904679206b68dd","date":1456369337,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += (value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","bugFix":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":"  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateStatsValues[StatsValuesFactory]#updateTypeSpecificStats(Date,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void updateTypeSpecificStats(Date v, int count) {\n    long value = v.getTime();\n    if (computeSumOfSquares) {\n      sumOfSquares += ((double)value * value * count); // for std deviation\n    }\n    if (computeSum) {\n      sum += value * count;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["11982a7b6834a8571852448312db4624c32990b5","1a4469b796ffbb01ca57a182e25a95de21fb4538"],"ad100f9e08ad77986f3b61ff2e904679206b68dd":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"b94236357aaa22b76c10629851fe4e376e0cea82":["ad100f9e08ad77986f3b61ff2e904679206b68dd","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["1a4469b796ffbb01ca57a182e25a95de21fb4538","d12bbc45d641864ffe03291bc30f178eb34e434c"],"1a4469b796ffbb01ca57a182e25a95de21fb4538":["11982a7b6834a8571852448312db4624c32990b5"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["ad100f9e08ad77986f3b61ff2e904679206b68dd"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["1a4469b796ffbb01ca57a182e25a95de21fb4538"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"11982a7b6834a8571852448312db4624c32990b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"ad100f9e08ad77986f3b61ff2e904679206b68dd":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"b94236357aaa22b76c10629851fe4e376e0cea82":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1a4469b796ffbb01ca57a182e25a95de21fb4538":["38e3b736c7ca086d61b7dbb841c905ee115490da","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11982a7b6834a8571852448312db4624c32990b5"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["ad100f9e08ad77986f3b61ff2e904679206b68dd","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"11982a7b6834a8571852448312db4624c32990b5":["38e3b736c7ca086d61b7dbb841c905ee115490da","1a4469b796ffbb01ca57a182e25a95de21fb4538"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}