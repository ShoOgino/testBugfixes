{"path":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"7455ee5c847b2ee7e44656e4218141f62dacb572","date":1386032125,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(stream.getStream());\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(stream.getStream());\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b20fb0ec13a714c528bd1ff701c977114e476c58","date":1420694146,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws InterruptedException, KeeperException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    String op = req.getParams().get(OP_PARAM);\n    if (OP_WRITE.equalsIgnoreCase(op) || OP_TEST.equalsIgnoreCase(op)) {\n      String fname = req.getParams().get(\"file\", null);\n      if (fname == null) {\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"No file name specified for write operation.\"));\n      } else {\n        fname = fname.replace('\\\\', '/');\n        stream = getOneInputStream(req, rsp);\n        if (stream == null) {\n          return; // Error already in rsp.\n        }\n\n        data = IOUtils.toByteArray(stream.getStream());\n\n        // If it's \"solrconfig.xml\", try parsing it as that object. Otherwise, if it ends in '.xml',\n        // see if it at least parses.\n        if (\"solrconfig.xml\".equals(fname)) {\n          try {\n            new SolrConfig(\"unused\", new InputSource(new ByteArrayInputStream(data)));\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid solr config file: \" + e.getMessage()));\n            return;\n          }\n        } else if (fname.endsWith(\".xml\")) { // At least do a rudimentary test, see if the thing parses.\n          try {\n            new Config(null, null, new InputSource(new ByteArrayInputStream(data)), null, false);\n          } catch (Exception e) {\n            rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"Invalid XML file: \" + e.getMessage()));\n            return;\n          }\n        }\n        if (ShowFileRequestHandler.isHiddenFile(req, rsp, fname, true, hiddenFiles) == false) {\n          if (coreContainer.isZooKeeperAware()) {\n            writeToZooKeeper(req, rsp);\n          } else {\n            writeToFileSystem(req, rsp);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["7455ee5c847b2ee7e44656e4218141f62dacb572","9d3d365762604952e436b51980101dfc84cc1b3e"],"b20fb0ec13a714c528bd1ff701c977114e476c58":["9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d365762604952e436b51980101dfc84cc1b3e":["7455ee5c847b2ee7e44656e4218141f62dacb572"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7455ee5c847b2ee7e44656e4218141f62dacb572":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7455ee5c847b2ee7e44656e4218141f62dacb572"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b20fb0ec13a714c528bd1ff701c977114e476c58"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b20fb0ec13a714c528bd1ff701c977114e476c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","b20fb0ec13a714c528bd1ff701c977114e476c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7455ee5c847b2ee7e44656e4218141f62dacb572","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"7455ee5c847b2ee7e44656e4218141f62dacb572":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}