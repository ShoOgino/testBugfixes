{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","commits":[{"id":"6ef6348b84bf0f8a649826b69a70ac815ff560e2","date":1343106054,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","date":1343203827,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#start(JettySolrRunner).mjava","sourceNew":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  public static boolean start(JettySolrRunner jetty) throws Exception {\n    try {\n      jetty.start();\n    } catch (BindException e) {\n      jetty.stop();\n      Thread.sleep(2000);\n      try {\n        jetty.start();\n      } catch (BindException e2) {\n        jetty.stop();\n        Thread.sleep(5000);\n        try {\n          jetty.start();\n        } catch (BindException e3) {\n          // we coud not get the port\n          jetty.stop();\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2c30e4c1cee08b3b229a77991882594fe7250b66"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","2c30e4c1cee08b3b229a77991882594fe7250b66"],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"6ef6348b84bf0f8a649826b69a70ac815ff560e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["6ef6348b84bf0f8a649826b69a70ac815ff560e2"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":[],"6ef6348b84bf0f8a649826b69a70ac815ff560e2":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}