{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#populateChild(Type).mjava","commits":[{"id":"ef9659be74f43b907ff558f1bafe80488bb9f4b7","date":1423940662,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#populateChild(Type).mjava","pathOld":"/dev/null","sourceNew":"    private void populateChild(Type typ) {\n      if (typ == null) {\n        throw new RuntimeException(\"no type information available for\" + (field == null ? setter : field));\n      }\n      if (typ.getClass() == Class.class) {//of type class\n        type = (Class) typ;\n      } else if (typ instanceof ParameterizedType) {\n        try {\n          type = Class.forName(((ParameterizedType) typ).getActualTypeArguments()[0].getTypeName());\n        } catch (ClassNotFoundException e) {\n          throw new BindingException(\"Invalid type information available for\" + (field == null ? setter : field));\n        }\n      } else {\n        throw new BindingException(\"Invalid type information available for\" + (field == null ? setter : field));\n\n      }\n      child = getDocFields(type);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef9659be74f43b907ff558f1bafe80488bb9f4b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef9659be74f43b907ff558f1bafe80488bb9f4b7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef9659be74f43b907ff558f1bafe80488bb9f4b7"],"ef9659be74f43b907ff558f1bafe80488bb9f4b7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}