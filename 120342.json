{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestPointFieldSortError(String,String,String...).mjava","commits":[{"id":"79900e89f08cc17c4bcf49789dd61a2236ee7840","date":1492541915,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestPointFieldSortError(String,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Checks that the specified field can not be sorted on, even if there are documents \n   * with (all) the specified values in the index.\n   *\n   * @param field the field name to try and sort on\n   * @param errSubStr substring to look for in the error msg\n   * @param values one or more values to put into the doc(s) in the index - may be more then one for multivalued fields\n   */\n  private void doTestPointFieldSortError(String field, String errSubStr, String... values) throws Exception {\n\n    final int numDocs = atLeast(random(), 10);\n    for (int i = 0; i < numDocs; i++) {\n      SolrInputDocument doc = sdoc(\"id\", String.valueOf(i));\n      for (String v: values) {\n        doc.addField(field, v);\n      }\n      assertU(adoc(doc));\n    }\n\n    assertQEx(\"Should not be able to sort on field: \" + field, errSubStr,\n              req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", field + \" desc\"), \n              SolrException.ErrorCode.BAD_REQUEST);\n    \n    clearIndex();\n    assertU(commit());\n    \n    // empty index should (also) give same error\n    assertQEx(\"Should not be able to sort on field: \" + field, errSubStr,\n              req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", field + \" desc\"), \n              SolrException.ErrorCode.BAD_REQUEST);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestPointFieldSortError(String,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Checks that the specified field can not be sorted on, even if there are documents \n   * with (all) the specified values in the index.\n   *\n   * @param field the field name to try and sort on\n   * @param errSubStr substring to look for in the error msg\n   * @param values one or more values to put into the doc(s) in the index - may be more then one for multivalued fields\n   */\n  private void doTestPointFieldSortError(String field, String errSubStr, String... values) throws Exception {\n\n    final int numDocs = atLeast(random(), 10);\n    for (int i = 0; i < numDocs; i++) {\n      SolrInputDocument doc = sdoc(\"id\", String.valueOf(i));\n      for (String v: values) {\n        doc.addField(field, v);\n      }\n      assertU(adoc(doc));\n    }\n\n    assertQEx(\"Should not be able to sort on field: \" + field, errSubStr,\n              req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", field + \" desc\"), \n              SolrException.ErrorCode.BAD_REQUEST);\n    \n    clearIndex();\n    assertU(commit());\n    \n    // empty index should (also) give same error\n    assertQEx(\"Should not be able to sort on field: \" + field, errSubStr,\n              req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", field + \" desc\"), \n              SolrException.ErrorCode.BAD_REQUEST);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79900e89f08cc17c4bcf49789dd61a2236ee7840":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79900e89f08cc17c4bcf49789dd61a2236ee7840"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","79900e89f08cc17c4bcf49789dd61a2236ee7840"],"79900e89f08cc17c4bcf49789dd61a2236ee7840":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}