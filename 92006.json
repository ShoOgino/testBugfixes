{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","commits":[{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"239f79ed06f0979cfe1911ec5fba32b94fda43c1","date":1359553898,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    assert assertParams(facetSearchParams) == null : assertParams(facetSearchParams);\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    assert assertParams(facetSearchParams) == null : assertParams(facetSearchParams);\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    assert assertParams(facetSearchParams) == null : assertParams(facetSearchParams);\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["07155cdd910937cdf6877e48884d5782845c8b8b","239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["571abba77e55fea386a38c0024f72ffa5b37a9ad"]},"commit2Childs":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["239f79ed06f0979cfe1911ec5fba32b94fda43c1","07155cdd910937cdf6877e48884d5782845c8b8b"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","07155cdd910937cdf6877e48884d5782845c8b8b"],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["61d5f95d14e5b9b046998c51e16709a398c15226","571abba77e55fea386a38c0024f72ffa5b37a9ad"],"07155cdd910937cdf6877e48884d5782845c8b8b":["61d5f95d14e5b9b046998c51e16709a398c15226"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}