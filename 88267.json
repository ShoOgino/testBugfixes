{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n        }\n      } else {\n        writer.deleteDoc(value);\n      }\n    }\n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n        }\n      } else {\n        writer.deleteDoc(value);\n      }\n    }\n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n        }\n      } else {\n        writer.deleteDoc(value);\n      }\n    }\n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n        }\n      } else {\n        writer.deleteDoc(value);\n      }\n    }\n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"430386fa8c880f8c17537a3f4e30ad4611527450","date":1310548555,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n        }\n      } else {\n        writer.deleteDoc(value);\n      }\n    }\n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":["8388f9c1189f751eac28894de3b56d55286dd5d8"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b604003611eabbb4d3f0fb1f89d3b6a017f8faa","date":1386079993,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":["18b5e8b70d18c7d8fb665bb1abd1154166882745","8388f9c1189f751eac28894de3b56d55286dd5d8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(\"$deleteDocById\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(\"$deleteDocByQuery\");\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(\"$docBoost\");\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(\"$skipDoc\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(\"$skipRow\");\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        LOG.warn(message);\n      } else {\n        LOG.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      float value1 = 1.0f;\n      if (value instanceof Number) {\n        value1 = ((Number) value).floatValue();\n      } else {\n        value1 = Float.parseFloat(value.toString());\n      }\n      doc.setDocumentBoost(value1);\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        log.warn(message);\n      } else {\n        log.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        LOG.warn(message);\n      } else {\n        LOG.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        log.warn(message);\n      } else {\n        log.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        log.warn(message);\n      } else {\n        log.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#handleSpecialCommands(Map[String,Object],DocWrapper).mjava","sourceNew":null,"sourceOld":"  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {\n    Object value = arow.get(DELETE_DOC_BY_ID);\n    if (value != null) {\n      if (value instanceof Collection) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteDoc(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteDoc(value);\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }    \n    value = arow.get(DELETE_DOC_BY_QUERY);\n    if (value != null) {\n      if (value instanceof Collection) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection collection = (Collection) value;\n        for (Object o : collection) {\n          writer.deleteByQuery(o.toString());\n          importStatistics.deletedDocCount.incrementAndGet();\n        }\n      } else {\n        writer.deleteByQuery(value.toString());\n        importStatistics.deletedDocCount.incrementAndGet();\n      }\n    }\n    value = arow.get(DOC_BOOST);\n    if (value != null) {\n      String message = \"Ignoring document boost: \" + value + \" as index-time boosts are not supported anymore\";\n      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n        log.warn(message);\n      } else {\n        log.debug(message);\n      }\n    }\n\n    value = arow.get(SKIP_DOC);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP,\n                \"Document skipped :\" + arow);\n      }\n    }\n\n    value = arow.get(SKIP_ROW);\n    if (value != null) {\n      if (Boolean.parseBoolean(value.toString())) {\n        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b604003611eabbb4d3f0fb1f89d3b6a017f8faa":["430386fa8c880f8c17537a3f4e30ad4611527450"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"430386fa8c880f8c17537a3f4e30ad4611527450":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["430386fa8c880f8c17537a3f4e30ad4611527450","1b604003611eabbb4d3f0fb1f89d3b6a017f8faa"],"acd9883560fd89e6448b2b447302fe543040cd4f":["1b604003611eabbb4d3f0fb1f89d3b6a017f8faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"1b604003611eabbb4d3f0fb1f89d3b6a017f8faa":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","acd9883560fd89e6448b2b447302fe543040cd4f"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"430386fa8c880f8c17537a3f4e30ad4611527450":["1b604003611eabbb4d3f0fb1f89d3b6a017f8faa","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"c26f00b574427b55127e869b935845554afde1fa":["430386fa8c880f8c17537a3f4e30ad4611527450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["024e13388acbf5562fcbb77a129620982a5e2d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}