{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTermExclusionFilter#testExcludeTerms().mjava","commits":[{"id":"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd","date":1526034899,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTermExclusionFilter#testExcludeTerms().mjava","pathOld":"/dev/null","sourceNew":"  public void testExcludeTerms() throws IOException {\n\n    CannedTokenStream cts = new CannedTokenStream(\n        new Token(\"Alice\", 1, 0, 5),\n        new Token(\"Bob\", 1, 6, 9),\n        new Token(\"Clara\", 1, 10, 15),\n        new Token(\"David\", 1, 16, 21)\n    );\n\n    CharArraySet exclusions = new CharArraySet(5, true);\n    exclusions.add(\"bob\");\n\n    TokenStream ts = new TermExclusionFilter(exclusions, cts, LowerCaseFilter::new);\n    assertTokenStreamContents(ts, new String[]{ \"alice\", \"Bob\", \"clara\", \"david\" });\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9809bf55e3bf03659b8b93fd16170aaa7eb92012","date":1526860327,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestProtectedTermFilter#testBasic().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTermExclusionFilter#testExcludeTerms().mjava","sourceNew":"  public void testBasic() throws IOException {\n\n    CannedTokenStream cts = new CannedTokenStream(\n        new Token(\"Alice\", 1, 0, 5),\n        new Token(\"Bob\", 1, 6, 9),\n        new Token(\"Clara\", 1, 10, 15),\n        new Token(\"David\", 1, 16, 21)\n    );\n\n    CharArraySet protectedTerms = new CharArraySet(5, true);\n    protectedTerms.add(\"bob\");\n\n    TokenStream ts = new ProtectedTermFilter(protectedTerms, cts, LowerCaseFilter::new);\n    assertTokenStreamContents(ts, new String[]{ \"alice\", \"Bob\", \"clara\", \"david\" });\n\n  }\n\n","sourceOld":"  public void testExcludeTerms() throws IOException {\n\n    CannedTokenStream cts = new CannedTokenStream(\n        new Token(\"Alice\", 1, 0, 5),\n        new Token(\"Bob\", 1, 6, 9),\n        new Token(\"Clara\", 1, 10, 15),\n        new Token(\"David\", 1, 16, 21)\n    );\n\n    CharArraySet exclusions = new CharArraySet(5, true);\n    exclusions.add(\"bob\");\n\n    TokenStream ts = new TermExclusionFilter(exclusions, cts, LowerCaseFilter::new);\n    assertTokenStreamContents(ts, new String[]{ \"alice\", \"Bob\", \"clara\", \"david\" });\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9809bf55e3bf03659b8b93fd16170aaa7eb92012":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9809bf55e3bf03659b8b93fd16170aaa7eb92012"]},"commit2Childs":{"9809bf55e3bf03659b8b93fd16170aaa7eb92012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["9809bf55e3bf03659b8b93fd16170aaa7eb92012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}