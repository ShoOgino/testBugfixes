{"path":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","commits":[{"id":"bc80d5792f650001840fbb5a6710647c90e8bb20","date":1075987046,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"/dev/null","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"field\", \"the stop words are here\"));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773e104db917d6cc9acade5a8aeb91a886192b99","date":1094581596,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"field\", \"the stop words are here\"));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aabae793f43472efdf1dcdaae4e01e28cfc23ccd","date":1161750034,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    Hits hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query);\n    assertEquals(1, hits.length());\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(false);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer();\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(false);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // currently StopAnalyzer does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(Version.LUCENE_24).setAnalyzer(stopAnalyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(Version.LUCENE_24).setAnalyzer(stopAnalyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        Version.LUCENE_24, stopAnalyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, stopAnalyzer, true, \n                                         IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryWithStopAnalyzer().mjava","sourceNew":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        Version.LUCENE_24, stopAnalyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryWithStopAnalyzer() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    StopAnalyzer stopAnalyzer = new StopAnalyzer(Version.LUCENE_24);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        Version.LUCENE_24, stopAnalyzer));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"the stop words are here\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n\n    // valid exact phrase query\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\",\"stop\"));\n    query.add(new Term(\"field\",\"words\"));\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    // StopAnalyzer as of 2.4 does not leave \"holes\", so this matches.\n    query = new PhraseQuery();\n    query.add(new Term(\"field\", \"words\"));\n    query.add(new Term(\"field\", \"here\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(query,searcher);\n\n\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["ba1116b3450a9c1642c89445d131b37344055245"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["773e104db917d6cc9acade5a8aeb91a886192b99"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"bc80d5792f650001840fbb5a6710647c90e8bb20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["0a046c0c310bc77931fc8441bd920053b607dd14"],"773e104db917d6cc9acade5a8aeb91a886192b99":["bc80d5792f650001840fbb5a6710647c90e8bb20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"0a046c0c310bc77931fc8441bd920053b607dd14":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"aabae793f43472efdf1dcdaae4e01e28cfc23ccd":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"ba1116b3450a9c1642c89445d131b37344055245":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bc80d5792f650001840fbb5a6710647c90e8bb20":["773e104db917d6cc9acade5a8aeb91a886192b99"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc80d5792f650001840fbb5a6710647c90e8bb20"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"773e104db917d6cc9acade5a8aeb91a886192b99":["aabae793f43472efdf1dcdaae4e01e28cfc23ccd"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}