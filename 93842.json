{"path":"solr/solrj/src/test/org/apache/solr/common/util/TestDateUtil#assertParsedDate(long,String).mjava","commits":[{"id":"323636301fa111a6b9faa70c5bea02722c205465","date":1436436143,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestDateUtil#assertParsedDate(long,String).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = DateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69","date":1459364429,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/TestExtractionDateUtil#assertParsedDate(long,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestDateUtil#assertParsedDate(long,String).mjava","sourceNew":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = ExtractionDateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","sourceOld":"  private static void assertParsedDate(long ts, String dateStr) throws ParseException {\n    long parsed = DateUtil.parseDate(dateStr).getTime();\n    assertTrue(String.format(Locale.ENGLISH, \"Incorrect parsed timestamp: %d != %d (%s)\", ts, parsed, dateStr), Math.abs(ts - parsed) <= 1000L);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["323636301fa111a6b9faa70c5bea02722c205465"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"323636301fa111a6b9faa70c5bea02722c205465":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"]},"commit2Childs":{"7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["323636301fa111a6b9faa70c5bea02722c205465"],"323636301fa111a6b9faa70c5bea02722c205465":["7d60e61c65a1b9de0ec7baf2c94de9f228a9ba69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}