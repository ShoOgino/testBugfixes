{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestPrefixQuery#testPrefixQuery().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestPrefixQuery#testPrefixQuery().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestPrefixQuery#testPrefixQuery().mjava","sourceNew":"  public void testPrefixQuery() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[] {\"/Computers\",\n                                        \"/Computers/Mac\",\n                                        \"/Computers/Windows\"};\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < categories.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n\n    PrefixQuery query = new PrefixQuery(new Term(\"category\", \"/Computers\"));\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"All documents in /Computers category and below\", 3, hits.length);\n\n    query = new PrefixQuery(new Term(\"category\", \"/Computers/Mac\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"One in /Computers/Mac\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPrefixQuery() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[] {\"/Computers\",\n                                        \"/Computers/Mac\",\n                                        \"/Computers/Windows\"};\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < categories.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n\n    PrefixQuery query = new PrefixQuery(new Term(\"category\", \"/Computers\"));\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"All documents in /Computers category and below\", 3, hits.length);\n\n    query = new PrefixQuery(new Term(\"category\", \"/Computers/Mac\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"One in /Computers/Mac\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestPrefixQuery#testPrefixQuery().mjava","sourceNew":null,"sourceOld":"  public void testPrefixQuery() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n\n    String[] categories = new String[] {\"/Computers\",\n                                        \"/Computers/Mac\",\n                                        \"/Computers/Windows\"};\n    IndexWriter writer = new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < categories.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"category\", categories[i], Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n\n    PrefixQuery query = new PrefixQuery(new Term(\"category\", \"/Computers\"));\n    IndexSearcher searcher = new IndexSearcher(directory, true);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"All documents in /Computers category and below\", 3, hits.length);\n\n    query = new PrefixQuery(new Term(\"category\", \"/Computers/Mac\"));\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"One in /Computers/Mac\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}