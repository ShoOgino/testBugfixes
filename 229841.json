{"path":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#createLocalTempFile(File,String,boolean).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#createLocalTempFile(File,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a tmp file for a base file.\n   * @param basefile the base file of the tmp\n   * @param prefix file name prefix of tmp\n   * @param isDeleteOnExit if true, the tmp will be deleted when the VM exits\n   * @return a newly created tmp file\n   * @exception IOException If a tmp file cannot created\n   * @see java.io.File#createTempFile(String, String, File)\n   * @see java.io.File#deleteOnExit()\n   */\n  public static File createLocalTempFile(final File basefile,\n                                         final String prefix,\n                                         final boolean isDeleteOnExit)\n      throws IOException {\n    File tmp = File.createTempFile(prefix + basefile.getName(),\n        \"\", basefile.getParentFile());\n    if (isDeleteOnExit) {\n      tmp.deleteOnExit();\n    }\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#createLocalTempFile(File,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a tmp file for a base file.\n   * @param basefile the base file of the tmp\n   * @param prefix file name prefix of tmp\n   * @param isDeleteOnExit if true, the tmp will be deleted when the VM exits\n   * @return a newly created tmp file\n   * @exception IOException If a tmp file cannot created\n   * @see java.io.File#createTempFile(String, String, File)\n   * @see java.io.File#deleteOnExit()\n   */\n  public static File createLocalTempFile(final File basefile,\n                                         final String prefix,\n                                         final boolean isDeleteOnExit)\n      throws IOException {\n    File tmp = File.createTempFile(prefix + basefile.getName(),\n        \"\", basefile.getParentFile());\n    if (isDeleteOnExit) {\n      tmp.deleteOnExit();\n    }\n    return tmp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}