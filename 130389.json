{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a","date":1363294103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      boolean termConjunction = clauses.isEmpty() || minNrShouldMatch != 0 ? false : true;\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        if (!(c.isRequired() && (w instanceof TermWeight))) {\n          termConjunction = false;\n        }\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n      this.termConjunction = termConjunction;\n    }\n\n","bugFix":["ee1513e4ee2237693ff50a460d78dff5246c3d34"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea","date":1390928346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) {\n          maxCoord++;\n        }\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) maxCoord++;\n      }\n    }\n\n","bugFix":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) {\n          maxCoord++;\n        }\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<Weight>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) {\n          maxCoord++;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#BooleanWeight(IndexSearcher,boolean).mjava","sourceNew":"    public BooleanWeight(IndexSearcher searcher, boolean needsScores, boolean disableCoord)\n      throws IOException {\n      super(BooleanQuery.this);\n      this.needsScores = needsScores;\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        final boolean queryNeedsScores = needsScores && c.getOccur() != Occur.MUST_NOT;\n        Weight w = c.getQuery().createWeight(searcher, queryNeedsScores);\n        weights.add(w);\n        if (!c.isProhibited()) {\n          maxCoord++;\n        }\n      }\n    }\n\n","sourceOld":"    public BooleanWeight(IndexSearcher searcher, boolean disableCoord)\n      throws IOException {\n      this.similarity = searcher.getSimilarity();\n      this.disableCoord = disableCoord;\n      weights = new ArrayList<>(clauses.size());\n      for (int i = 0 ; i < clauses.size(); i++) {\n        BooleanClause c = clauses.get(i);\n        Weight w = c.getQuery().createWeight(searcher);\n        weights.add(w);\n        if (!c.isProhibited()) {\n          maxCoord++;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fb17639909a369c1e64866842e5c213440acc17e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}