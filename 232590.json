{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","commits":[{"id":"13f90c0381cfc00b7f9b911c80ed6411a34ba843","date":1408554983,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","pathOld":"/dev/null","sourceNew":"  /** See https://github.com/spatial4j/spatial4j/issues/85 */\n  @Test\n  public void testAlongDatelineOppositeSign() throws IOException {\n    // Due to Spatial4j bug #85, we can't simply do:\n    //    testOperation(indexedShape,\n    //        SpatialOperation.IsWithin,\n    //        queryShape, true);\n\n    //both on dateline but expressed using opposite signs\n    setupGeo();\n    final Rectangle indexedShape = ctx.makeRectangle(180, 180, -10, 10);\n    final Rectangle queryShape = ctx.makeRectangle(-180, -180, -20, 20);\n    final SpatialOperation operation = SpatialOperation.IsWithin;\n    final boolean match = true;//yes it is within\n\n    //the rest is super.testOperation without leading assert:\n\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","sourceNew":"  /** See https://github.com/spatial4j/spatial4j/issues/85 */\n  @Test\n  public void testAlongDatelineOppositeSign() throws IOException {\n    // Due to Spatial4j bug #85, we can't simply do:\n    //    testOperation(indexedShape,\n    //        SpatialOperation.IsWithin,\n    //        queryShape, true);\n\n    //both on dateline but expressed using opposite signs\n    setupGeo();\n    final Rectangle indexedShape = ctx.makeRectangle(180, 180, -10, 10);\n    final Rectangle queryShape = ctx.makeRectangle(-180, -180, -20, 20);\n    final SpatialOperation operation = SpatialOperation.IsWithin;\n    final boolean match = true;//yes it is within\n\n    //the rest is super.testOperation without leading assert:\n\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","sourceOld":"  /** See https://github.com/spatial4j/spatial4j/issues/85 */\n  @Test\n  public void testAlongDatelineOppositeSign() throws IOException {\n    // Due to Spatial4j bug #85, we can't simply do:\n    //    testOperation(indexedShape,\n    //        SpatialOperation.IsWithin,\n    //        queryShape, true);\n\n    //both on dateline but expressed using opposite signs\n    setupGeo();\n    final Rectangle indexedShape = ctx.makeRectangle(180, 180, -10, 10);\n    final Rectangle queryShape = ctx.makeRectangle(-180, -180, -20, 20);\n    final SpatialOperation operation = SpatialOperation.IsWithin;\n    final boolean match = true;//yes it is within\n\n    //the rest is super.testOperation without leading assert:\n\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/bbox/TestBBoxStrategy#testAlongDatelineOppositeSign().mjava","sourceNew":"  /** See https://github.com/spatial4j/spatial4j/issues/85 */\n  @Test\n  public void testAlongDatelineOppositeSign() throws IOException {\n    // Due to Spatial4j bug #85, we can't simply do:\n    //    testOperation(indexedShape,\n    //        SpatialOperation.IsWithin,\n    //        queryShape, true);\n\n    //both on dateline but expressed using opposite signs\n    setupGeo();\n    final Rectangle indexedShape = ctx.makeRectangle(180, 180, -10, 10);\n    final Rectangle queryShape = ctx.makeRectangle(-180, -180, -20, 20);\n    final SpatialOperation operation = SpatialOperation.IsWithin;\n    final boolean match = true;//yes it is within\n\n    //the rest is super.testOperation without leading assert:\n\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","sourceOld":"  /** See https://github.com/spatial4j/spatial4j/issues/85 */\n  @Test\n  public void testAlongDatelineOppositeSign() throws IOException {\n    // Due to Spatial4j bug #85, we can't simply do:\n    //    testOperation(indexedShape,\n    //        SpatialOperation.IsWithin,\n    //        queryShape, true);\n\n    //both on dateline but expressed using opposite signs\n    setupGeo();\n    final Rectangle indexedShape = ctx.makeRectangle(180, 180, -10, 10);\n    final Rectangle queryShape = ctx.makeRectangle(-180, -180, -20, 20);\n    final SpatialOperation operation = SpatialOperation.IsWithin;\n    final boolean match = true;//yes it is within\n\n    //the rest is super.testOperation without leading assert:\n\n    adoc(\"0\", indexedShape);\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(operation, queryShape));\n    SearchResults got = executeQuery(query, 1);\n    assert got.numFound <= 1 : \"unclean test env\";\n    if ((got.numFound == 1) != match)\n      fail(operation+\" I:\" + indexedShape + \" Q:\" + queryShape);\n    deleteAll();//clean up after ourselves\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["13f90c0381cfc00b7f9b911c80ed6411a34ba843","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["13f90c0381cfc00b7f9b911c80ed6411a34ba843"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"13f90c0381cfc00b7f9b911c80ed6411a34ba843":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13f90c0381cfc00b7f9b911c80ed6411a34ba843"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"13f90c0381cfc00b7f9b911c80ed6411a34ba843":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}