{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","commits":[{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams,Map[String,String]).mjava","sourceNew":"  public DocBuilder(DataImporter context, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = context;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n  }\n\n","sourceOld":"  public DocBuilder(DataImporter context, SolrWriter writer,\n                    DataImporter.RequestParams reqParams, Map<String, String> variables) {\n    INSTANCE.set(this);\n    this.dataImporter = context;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    defaultVariables = Collections.unmodifiableMap(variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dfc8d8c033e2239995c45b976c90c18559da31e","date":1235021328,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","sourceNew":"  public DocBuilder(DataImporter context, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = context;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    functionsNamespace = EvaluatorBag.getFunctionsNamespace(dataImporter.getConfig().functions, this);\n  }\n\n","sourceOld":"  public DocBuilder(DataImporter context, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = context;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d","date":1235123016,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","sourceNew":"  public DocBuilder(DataImporter dataImporter, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = dataImporter;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    functionsNamespace = EvaluatorBag.getFunctionsNamespace(this.dataImporter.getConfig().functions, this);\n    persistedProperties = writer.readIndexerProperties();\n  }\n\n","sourceOld":"  public DocBuilder(DataImporter context, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = context;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    functionsNamespace = EvaluatorBag.getFunctionsNamespace(dataImporter.getConfig().functions, this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#DocBuilder(DataImporter,SolrWriter,DataImporter.RequestParams).mjava","sourceNew":"  public DocBuilder(DataImporter dataImporter, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = dataImporter;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    functionsNamespace = EvaluatorBag.getFunctionsNamespace(this.dataImporter.getConfig().functions, this);\n    persistedProperties = writer.readIndexerProperties();\n  }\n\n","sourceOld":"  public DocBuilder(DataImporter dataImporter, SolrWriter writer, DataImporter.RequestParams reqParams) {\n    INSTANCE.set(this);\n    this.dataImporter = dataImporter;\n    this.writer = writer;\n    DataImporter.QUERY_COUNT.set(importStatistics.queryCount);\n    requestParameters = reqParams;\n    verboseDebug = requestParameters.debug && requestParameters.verbose;\n    functionsNamespace = EvaluatorBag.getFunctionsNamespace(this.dataImporter.getConfig().functions, this);\n    persistedProperties = writer.readIndexerProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7dfc8d8c033e2239995c45b976c90c18559da31e":["db6dfac30d1553e9356900c2b76b768139483a62"],"ad94625fb8d088209f46650c8097196fec67f00c":["5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d"],"db6dfac30d1553e9356900c2b76b768139483a62":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["db6dfac30d1553e9356900c2b76b768139483a62"],"7dfc8d8c033e2239995c45b976c90c18559da31e":["5850c9b195a2c8b5a2ef6d4775d905dfcd1eca1d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"db6dfac30d1553e9356900c2b76b768139483a62":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}