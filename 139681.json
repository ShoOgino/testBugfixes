{"path":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      File[] files = dir.listFiles();\n      for (int i = 0; i < files.length; i++) {\n        if (!files[i].delete()) {\n          throw new IOException(\"could not delete \" + files[i]);\n        }\n      }\n      dir.delete();\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      File[] files = dir.listFiles();\n      for (int i = 0; i < files.length; i++) {\n        if (!files[i].delete()) {\n          throw new IOException(\"could not delete \" + files[i]);\n        }\n      }\n      dir.delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e45742e10e8e3b98e854babe6dbb07a4197b71","date":1280230285,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      File[] files = dir.listFiles();\n      for (int i = 0; i < files.length; i++) {\n        if (!files[i].delete()) {\n          throw new IOException(\"could not delete \" + files[i]);\n        }\n      }\n      dir.delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      File[] files = dir.listFiles();\n      for (int i = 0; i < files.length; i++) {\n        if (!files[i].delete()) {\n          throw new IOException(\"could not delete \" + files[i]);\n        }\n      }\n      dir.delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#rmDir(File).mjava","sourceNew":"  /**\n   * Deletes a directory and everything underneath it.\n   */\n  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","sourceOld":"  public static void rmDir(File dir) throws IOException {\n    if (dir.exists()) {\n      for (File f : dir.listFiles()) {\n        if (f.isDirectory()) {\n          rmDir(f);\n        } else {\n          if (!f.delete()) {\n            throw new IOException(\"could not delete \" + f);\n          }\n        }\n      }\n      if (!dir.delete()) {\n        throw new IOException(\"could not delete \" + dir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["9454a6510e2db155fb01faa5c049b06ece95fab9","a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e45742e10e8e3b98e854babe6dbb07a4197b71","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["3242a09f703274d3b9283f2064a1a33064b53a1b","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["3242a09f703274d3b9283f2064a1a33064b53a1b","29ef99d61cda9641b6250bf9567329a6e65f901d","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e45742e10e8e3b98e854babe6dbb07a4197b71","3242a09f703274d3b9283f2064a1a33064b53a1b"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}