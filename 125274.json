{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","sourceNew":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize,\n      int sampleSetSize) throws IOException;\n\n","sourceOld":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize,\n      int sampleSetSize) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","sourceNew":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize, int sampleSetSize) \n      throws IOException;\n\n","sourceOld":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize,\n      int sampleSetSize) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","sourceNew":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize, int sampleSetSize) \n      throws IOException;\n\n","sourceOld":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize,\n      int sampleSetSize) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/sampling/Sampler#createSample(ScoredDocIDs,int,int).mjava","sourceNew":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize, int sampleSetSize) \n      throws IOException;\n\n","sourceOld":"  /**\n   * Create and return a sample of the input set\n   * @param docids input set out of which a sample is to be created \n   * @param actualSize original size of set, prior to sampling\n   * @param sampleSetSize required size of sample set\n   * @return sample of the input set in the required size\n   */\n  protected abstract SampleResult createSample(ScoredDocIDs docids, int actualSize, int sampleSetSize) \n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["b89678825b68eccaf09e6ab71675fc0b0af1e099","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","8917bfede3b4ca30f4305c1e391e9218959cd723"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["607428da722dcb3e86bbd11c63de8986e6275c36","8917bfede3b4ca30f4305c1e391e9218959cd723"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}