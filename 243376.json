{"path":"lucene/core/src/java/org/apache/lucene/search/ExactPhraseMatcher#nextMatch().mjava","commits":[{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ExactPhraseMatcher#nextMatch().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer#phraseFreq().mjava","sourceNew":"  @Override\n  public boolean nextMatch() throws IOException {\n    final PostingsAndPosition lead = postings[0];\n    if (lead.upTo < lead.freq) {\n      lead.pos = lead.postings.nextPosition();\n      lead.upTo += 1;\n    }\n    else {\n      return false;\n    }\n    advanceHead:\n    while (true) {\n      final int phrasePos = lead.pos - lead.offset;\n      for (int j = 1; j < postings.length; ++j) {\n        final PostingsAndPosition posting = postings[j];\n        final int expectedPos = phrasePos + posting.offset;\n\n        // advance up to the same position as the lead\n        if (advancePosition(posting, expectedPos) == false) {\n          break advanceHead;\n        }\n\n        if (posting.pos != expectedPos) { // we advanced too far\n          if (advancePosition(lead, posting.pos - posting.offset + lead.offset)) {\n            continue advanceHead;\n          } else {\n            break advanceHead;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  private int phraseFreq() throws IOException {\n    // reset state\n    final PostingsAndPosition[] postings = this.postings;\n    for (PostingsAndPosition posting : postings) {\n      posting.freq = posting.postings.freq();\n      posting.pos = posting.postings.nextPosition();\n      posting.upTo = 1;\n    }\n\n    int freq = 0;\n    final PostingsAndPosition lead = postings[0];\n\n    advanceHead:\n    while (true) {\n      final int phrasePos = lead.pos - lead.offset;\n      for (int j = 1; j < postings.length; ++j) {\n        final PostingsAndPosition posting = postings[j];\n        final int expectedPos = phrasePos + posting.offset;\n\n        // advance up to the same position as the lead\n        if (advancePosition(posting, expectedPos) == false) {\n          break advanceHead;\n        }\n\n        if (posting.pos != expectedPos) { // we advanced too far\n          if (advancePosition(lead, posting.pos - posting.offset + lead.offset)) {\n            continue advanceHead;\n          } else {\n            break advanceHead;\n          }\n        }\n      }\n\n      freq += 1;\n      if (needsScores == false) {\n        break;\n      }\n\n      if (lead.upTo == lead.freq) {\n        break;\n      }\n      lead.pos = lead.postings.nextPosition();\n      lead.upTo += 1;\n    }\n\n    return this.freq = freq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b11b9d5eaf9707760ca5151530830a825197023":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b11b9d5eaf9707760ca5151530830a825197023"]},"commit2Childs":{"3b11b9d5eaf9707760ca5151530830a825197023":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b11b9d5eaf9707760ca5151530830a825197023"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}