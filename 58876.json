{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","sourceNew":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","sourceOld":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5db3cbd9c8643765faaef10ef026c766b653290","date":1380617685,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","sourceNew":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    scorer.trackPendingChildHits();\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","sourceOld":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d9452e13e015fa1187b0b1bed1a1d08b9c96241","date":1485723373,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","sourceNew":null,"sourceOld":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    scorer.trackPendingChildHits();\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","sourceNew":null,"sourceOld":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    scorer.trackPendingChildHits();\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a5db3cbd9c8643765faaef10ef026c766b653290","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"a5db3cbd9c8643765faaef10ef026c766b653290":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["a5db3cbd9c8643765faaef10ef026c766b653290"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d9452e13e015fa1187b0b1bed1a1d08b9c96241"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a5db3cbd9c8643765faaef10ef026c766b653290"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"a5db3cbd9c8643765faaef10ef026c766b653290":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}