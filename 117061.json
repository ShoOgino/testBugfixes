{"path":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testMinExactCountDisabledByCollapse().mjava","commits":[{"id":"6b8ad6d99eb2424679c78255c369b8fac243e7dd","date":1590104557,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testMinExactCountDisabledByCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testMinExactHitsDisabledByCollapse().mjava","sourceNew":"  @Test\n  public void testMinExactCountDisabledByCollapse() throws Exception {\n    int numDocs = 10;\n    String collapseFieldInt = \"field_ti_dv\";\n    String collapseFieldFloat = \"field_tf_dv\";\n    String collapseFieldString = \"field_s_dv\";\n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"field_s\", String.valueOf(i % 2),\n          collapseFieldInt, String.valueOf(i),\n          collapseFieldFloat, String.valueOf(i),\n          collapseFieldString, String.valueOf(i)));\n        assertU(commit());\n    }\n    \n    for (String collapseField : new String[] {collapseFieldInt, collapseFieldFloat, collapseFieldString}) {\n      assertQ(req(\n          \"q\", \"{!cache=false}field_s:1\",\n          \"rows\", \"1\",\n          \"minExactCount\", \"1\",\n          // this collapse will end up matching all docs\n          \"fq\", \"{!collapse field=\" + collapseField + \" nullPolicy=expand}\"// nullPolicy needed due to a bug when val=0\n          ),\"//*[@numFoundExact='true']\"\n          ,\"//*[@numFound='\" + (numDocs/2) + \"']\"\n          );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMinExactHitsDisabledByCollapse() throws Exception {\n    int numDocs = 10;\n    String collapseFieldInt = \"field_ti_dv\";\n    String collapseFieldFloat = \"field_tf_dv\";\n    String collapseFieldString = \"field_s_dv\";\n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"field_s\", String.valueOf(i % 2),\n          collapseFieldInt, String.valueOf(i),\n          collapseFieldFloat, String.valueOf(i),\n          collapseFieldString, String.valueOf(i)));\n        assertU(commit());\n    }\n    \n    for (String collapseField : new String[] {collapseFieldInt, collapseFieldFloat, collapseFieldString}) {\n      assertQ(req(\n          \"q\", \"{!cache=false}field_s:1\",\n          \"rows\", \"1\",\n          \"minExactHits\", \"1\",\n          // this collapse will end up matching all docs\n          \"fq\", \"{!collapse field=\" + collapseField + \" nullPolicy=expand}\"// nullPolicy needed due to a bug when val=0\n          ),\"//*[@numFoundExact='true']\"\n          ,\"//*[@numFound='\" + (numDocs/2) + \"']\"\n          );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72afa881b0b5c361ebd0b6d37927fe072151fbe0","date":1590107364,"type":0,"author":"Erick Erickson","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin#testMinExactCountDisabledByCollapse().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMinExactCountDisabledByCollapse() throws Exception {\n    int numDocs = 10;\n    String collapseFieldInt = \"field_ti_dv\";\n    String collapseFieldFloat = \"field_tf_dv\";\n    String collapseFieldString = \"field_s_dv\";\n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"field_s\", String.valueOf(i % 2),\n          collapseFieldInt, String.valueOf(i),\n          collapseFieldFloat, String.valueOf(i),\n          collapseFieldString, String.valueOf(i)));\n        assertU(commit());\n    }\n    \n    for (String collapseField : new String[] {collapseFieldInt, collapseFieldFloat, collapseFieldString}) {\n      assertQ(req(\n          \"q\", \"{!cache=false}field_s:1\",\n          \"rows\", \"1\",\n          \"minExactCount\", \"1\",\n          // this collapse will end up matching all docs\n          \"fq\", \"{!collapse field=\" + collapseField + \" nullPolicy=expand}\"// nullPolicy needed due to a bug when val=0\n          ),\"//*[@numFoundExact='true']\"\n          ,\"//*[@numFound='\" + (numDocs/2) + \"']\"\n          );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["72afa881b0b5c361ebd0b6d37927fe072151fbe0","6b8ad6d99eb2424679c78255c369b8fac243e7dd"],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b8ad6d99eb2424679c78255c369b8fac243e7dd":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}