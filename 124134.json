{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#BlockJoinScorer(Weight,Scorer,BitSet,ScoreMode).mjava","commits":[{"id":"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","date":1485769582,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#BlockJoinScorer(Weight,Scorer,BitSet,ScoreMode).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#BlockJoinScorer(Weight,Scorer,BitSet,int,ScoreMode).mjava","sourceNew":"    public BlockJoinScorer(Weight weight, Scorer childScorer, BitSet parentBits, ScoreMode scoreMode) {\n      super(weight);\n      //System.out.println(\"Q.init firstChildDoc=\" + firstChildDoc);\n      this.parentBits = parentBits;\n      this.childScorer = childScorer;\n      this.scoreMode = scoreMode;\n      childTwoPhase = childScorer.twoPhaseIterator();\n      if (childTwoPhase == null) {\n        childApproximation = childScorer.iterator();\n        parentApproximation = new ParentApproximation(childApproximation, parentBits);\n        parentTwoPhase = null;\n      } else {\n        childApproximation = childTwoPhase.approximation();\n        parentApproximation = new ParentApproximation(childTwoPhase.approximation(), parentBits);\n        parentTwoPhase = new ParentTwoPhase(parentApproximation, childTwoPhase);\n      }\n    }\n\n","sourceOld":"    public BlockJoinScorer(Weight weight, Scorer childScorer, BitSet parentBits, int firstChildDoc, ScoreMode scoreMode) {\n      super(weight);\n      //System.out.println(\"Q.init firstChildDoc=\" + firstChildDoc);\n      this.parentBits = parentBits;\n      this.childScorer = childScorer;\n      this.scoreMode = scoreMode;\n      nextChildDoc = firstChildDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#BlockJoinScorer(Weight,Scorer,BitSet,ScoreMode).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#BlockJoinScorer(Weight,Scorer,BitSet,int,ScoreMode).mjava","sourceNew":"    public BlockJoinScorer(Weight weight, Scorer childScorer, BitSet parentBits, ScoreMode scoreMode) {\n      super(weight);\n      //System.out.println(\"Q.init firstChildDoc=\" + firstChildDoc);\n      this.parentBits = parentBits;\n      this.childScorer = childScorer;\n      this.scoreMode = scoreMode;\n      childTwoPhase = childScorer.twoPhaseIterator();\n      if (childTwoPhase == null) {\n        childApproximation = childScorer.iterator();\n        parentApproximation = new ParentApproximation(childApproximation, parentBits);\n        parentTwoPhase = null;\n      } else {\n        childApproximation = childTwoPhase.approximation();\n        parentApproximation = new ParentApproximation(childTwoPhase.approximation(), parentBits);\n        parentTwoPhase = new ParentTwoPhase(parentApproximation, childTwoPhase);\n      }\n    }\n\n","sourceOld":"    public BlockJoinScorer(Weight weight, Scorer childScorer, BitSet parentBits, int firstChildDoc, ScoreMode scoreMode) {\n      super(weight);\n      //System.out.println(\"Q.init firstChildDoc=\" + firstChildDoc);\n      this.parentBits = parentBits;\n      this.childScorer = childScorer;\n      this.scoreMode = scoreMode;\n      nextChildDoc = firstChildDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}