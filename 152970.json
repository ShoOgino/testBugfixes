{"path":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","commits":[{"id":"b26b95c804ccc233c7f7290bf5f7befe43baea94","date":1245802310,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"/dev/null","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, CharReader.get( new StringReader( \"cccc\" ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    List real = getTokens( ts );\n    List expect = tokens( \"cc,1,0,4\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, CharReader.get( new StringReader( \"cccc\" ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","sourceOld":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, CharReader.get( new StringReader( \"cccc\" ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    List real = getTokens( ts );\n    List expect = tokens( \"cc,1,0,4\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a82fda1447250ff156ff3b862d94a99bf0a3c23c","date":1252649533,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","sourceOld":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, CharReader.get( new StringReader( \"cccc\" ) ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","bugFix":["b26b95c804ccc233c7f7290bf5f7befe43baea94"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( Version.LUCENE_CURRENT, cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","sourceOld":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( TEST_VERSION_CURRENT, cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","sourceOld":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( Version.LUCENE_CURRENT, cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestMappingCharFilter#test4to2().mjava","sourceNew":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( TEST_VERSION_CURRENT, cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","sourceOld":"  public void test4to2() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap, new StringReader( \"cccc\" ) );\n    TokenStream ts = new WhitespaceTokenizer( TEST_VERSION_CURRENT, cs );\n    assertTokenStreamContents(ts, new String[]{\"cc\"}, new int[]{0}, new int[]{4});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b26b95c804ccc233c7f7290bf5f7befe43baea94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["b26b95c804ccc233c7f7290bf5f7befe43baea94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"]},"commit2Childs":{"b26b95c804ccc233c7f7290bf5f7befe43baea94":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b26b95c804ccc233c7f7290bf5f7befe43baea94"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}