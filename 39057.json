{"path":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.US);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC);\n    setNow(p, \"1234-07-04T12:08:56.235\");\n\n    // No-Op\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"/MILLIS\"); // no change\n    assertMath(\"1234-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"1234-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"1234-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"1234-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"1234-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"1234-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"1234-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"1234-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"1234-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"1234-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"1234-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"1235-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"1234-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"1234-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"1234-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"1234-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"1234-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"1233-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"1233-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"1233-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"1233-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"1233-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    setNow(p, \"2006-01-31T17:09:59.999\");\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":["183ba46e9837e95333f35c590df5d02d0071c076","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC);\n    setNow(p, \"1234-07-04T12:08:56.235\");\n\n    // No-Op\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"/MILLIS\"); // no change\n    assertMath(\"1234-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"1234-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"1234-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"1234-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"1234-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"1234-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"1234-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"1234-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"1234-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"1234-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"1234-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"1235-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"1234-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"1234-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"1234-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"1234-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"1234-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"1233-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"1233-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"1233-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"1233-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"1233-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    setNow(p, \"2006-01-31T17:09:59.999\");\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC);\n    setNow(p, \"1234-07-04T12:08:56.235\");\n\n    // No-Op\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"/MILLIS\"); // no change\n    assertMath(\"1234-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"1234-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"1234-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"1234-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"1234-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"1234-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"1234-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"1234-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"1234-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"1234-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"1234-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"1235-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"1234-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"1234-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"1234-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"1234-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"1234-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"1233-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"1233-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"1233-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"1233-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"1233-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    setNow(p, \"2006-01-31T17:09:59.999\");\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DateMathParserTest#testParseMath().mjava","sourceNew":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC);\n    setNow(p, \"1234-07-04T12:08:56.235\");\n\n    // No-Op\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"/MILLIS\"); // no change\n    assertMath(\"1234-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"1234-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"1234-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"1234-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"1234-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"1234-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"1234-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"1234-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"1234-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"1234-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"1234-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"1235-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"1234-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"1234-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"1234-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"1234-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"1234-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"1233-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"1234-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"1233-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"1233-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"1233-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"1233-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"1233-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"1233-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"1233-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"1233-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"1233-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"1233-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"1233-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    setNow(p, \"2006-01-31T17:09:59.999\");\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n  }\n\n","sourceOld":"  public void testParseMath() throws Exception {\n\n    DateMathParser p = new DateMathParser(UTC, Locale.ROOT);\n    p.setNow(parser.parse(\"2001-07-04T12:08:56.235\"));\n\n    // No-Op\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"\");\n    \n    // simple round\n    assertMath(\"2001-07-04T12:08:56.000\", p, \"/SECOND\");\n    assertMath(\"2001-07-04T12:08:00.000\", p, \"/MINUTE\");\n    assertMath(\"2001-07-04T12:00:00.000\", p, \"/HOUR\");\n    assertMath(\"2001-07-04T00:00:00.000\", p, \"/DAY\");\n    assertMath(\"2001-07-01T00:00:00.000\", p, \"/MONTH\");\n    assertMath(\"2001-01-01T00:00:00.000\", p, \"/YEAR\");\n\n    // simple addition\n    assertMath(\"2001-07-04T12:08:56.236\", p, \"+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:57.235\", p, \"+1SECOND\");\n    assertMath(\"2001-07-04T12:09:56.235\", p, \"+1MINUTE\");\n    assertMath(\"2001-07-04T13:08:56.235\", p, \"+1HOUR\");\n    assertMath(\"2001-07-05T12:08:56.235\", p, \"+1DAY\");\n    assertMath(\"2001-08-04T12:08:56.235\", p, \"+1MONTH\");\n    assertMath(\"2002-07-04T12:08:56.235\", p, \"+1YEAR\");\n\n    // simple subtraction\n    assertMath(\"2001-07-04T12:08:56.234\", p, \"-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:55.235\", p, \"-1SECOND\");\n    assertMath(\"2001-07-04T12:07:56.235\", p, \"-1MINUTE\");\n    assertMath(\"2001-07-04T11:08:56.235\", p, \"-1HOUR\");\n    assertMath(\"2001-07-03T12:08:56.235\", p, \"-1DAY\");\n    assertMath(\"2001-06-04T12:08:56.235\", p, \"-1MONTH\");\n    assertMath(\"2000-07-04T12:08:56.235\", p, \"-1YEAR\");\n\n    // simple '+/-'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MILLISECOND-1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1SECOND-1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MINUTE-1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1HOUR-1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1DAY-1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1MONTH-1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"+1YEAR-1YEAR\");\n\n    // simple '-/+'\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MILLISECOND+1MILLISECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1SECOND+1SECOND\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MINUTE+1MINUTE\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1HOUR+1HOUR\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1DAY+1DAY\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1MONTH+1MONTH\");\n    assertMath(\"2001-07-04T12:08:56.235\", p, \"-1YEAR+1YEAR\");\n\n    // more complex stuff\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"+1MILLISECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"+1SECOND-1YEAR\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"+1MINUTE-1YEAR\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"+1HOUR-1YEAR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"+1DAY-1YEAR\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"+1MONTH-1YEAR\");\n    assertMath(\"2000-07-04T12:08:56.236\", p, \"-1YEAR+1MILLISECOND\");\n    assertMath(\"2000-07-04T12:08:57.235\", p, \"-1YEAR+1SECOND\");\n    assertMath(\"2000-07-04T12:09:56.235\", p, \"-1YEAR+1MINUTE\");\n    assertMath(\"2000-07-04T13:08:56.235\", p, \"-1YEAR+1HOUR\");\n    assertMath(\"2000-07-05T12:08:56.235\", p, \"-1YEAR+1DAY\");\n    assertMath(\"2000-08-04T12:08:56.235\", p, \"-1YEAR+1MONTH\");\n    assertMath(\"2000-07-01T00:00:00.000\", p, \"-1YEAR+1MILLISECOND/MONTH\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1SECOND/DAY\");\n    assertMath(\"2000-07-04T00:00:00.000\", p, \"-1YEAR+1MINUTE/DAY\");\n    assertMath(\"2000-07-04T13:00:00.000\", p, \"-1YEAR+1HOUR/HOUR\");\n    assertMath(\"2000-07-05T12:08:56.000\", p, \"-1YEAR+1DAY/SECOND\");\n    assertMath(\"2000-08-04T12:08:56.000\", p, \"-1YEAR+1MONTH/SECOND\");\n\n    // \"tricky\" cases\n    p.setNow(parser.parse(\"2006-01-31T17:09:59.999\"));\n    assertMath(\"2006-02-28T17:09:59.999\", p, \"+1MONTH\");\n    assertMath(\"2008-02-29T17:09:59.999\", p, \"+25MONTH\");\n    assertMath(\"2006-02-01T00:00:00.000\", p, \"/MONTH+35DAYS/MONTH\");\n    assertMath(\"2006-01-31T17:10:00.000\", p, \"+3MILLIS/MINUTE\");\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"0ad30c6a479e764150a3316e57263319775f1df2":["2acf500f78aa12b92e371fd89c719291986b6b90","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2acf500f78aa12b92e371fd89c719291986b6b90","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["2acf500f78aa12b92e371fd89c719291986b6b90","0ad30c6a479e764150a3316e57263319775f1df2"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["2acf500f78aa12b92e371fd89c719291986b6b90"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"commit2Childs":{"c26f00b574427b55127e869b935845554afde1fa":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"2acf500f78aa12b92e371fd89c719291986b6b90":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","46d8ada1fff8d18cb197c38c7983225162599948","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}