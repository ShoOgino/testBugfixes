{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","commits":[{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3","date":1327944832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3":["78977ccc47b451a8e645b77504e2ef0a05e4b1a3"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}