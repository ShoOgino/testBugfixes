{"path":"src/java/org/apache/lucene/index/NewIndexModifier#applyDeletesSelectively(HashMap,IndexReader).mjava","commits":[{"id":"6b772434f9f358356f8eedc2e017b9ddfb2615ec","date":1170327312,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/NewIndexModifier#applyDeletesSelectively(HashMap,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  // apply buffered delete terms to the segment just flushed from ram\n  // apply appropriately so that a delete term is only applied to\n  // the documents buffered before it, not those buffered after it\n  private final void applyDeletesSelectively(HashMap deleteTerms,\n      IndexReader reader) throws IOException {\n    Iterator iter = deleteTerms.entrySet().iterator();\n    while (iter.hasNext()) {\n      Entry entry = (Entry)iter.next();\n      Term term = (Term)entry.getKey();\n\n      TermDocs docs = reader.termDocs(term);\n      if (docs != null) {\n        int num = ((Num)entry.getValue()).getNum();\n        try {\n          while (docs.next()) {\n            int doc = docs.doc();\n            if (doc >= num) {\n              break;\n            }\n            reader.deleteDocument(doc);\n          }\n        } finally {\n          docs.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fde68de507dbf344495d7b5e8052866fe5f254ab","1b54a9bc667895a2095a886184bf69a3179e63df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42a18cb0bca2c4ac9747f31c7a74fac90c661f39","date":1171363388,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#applyDeletesSelectively(HashMap,IndexReader).mjava","pathOld":"src/java/org/apache/lucene/index/NewIndexModifier#applyDeletesSelectively(HashMap,IndexReader).mjava","sourceNew":"  // Apply buffered delete terms to the segment just flushed from ram\n  // apply appropriately so that a delete term is only applied to\n  // the documents buffered before it, not those buffered after it.\n  private final void applyDeletesSelectively(HashMap deleteTerms,\n      IndexReader reader) throws IOException {\n    Iterator iter = deleteTerms.entrySet().iterator();\n    while (iter.hasNext()) {\n      Entry entry = (Entry) iter.next();\n      Term term = (Term) entry.getKey();\n\n      TermDocs docs = reader.termDocs(term);\n      if (docs != null) {\n        int num = ((Num) entry.getValue()).getNum();\n        try {\n          while (docs.next()) {\n            int doc = docs.doc();\n            if (doc >= num) {\n              break;\n            }\n            reader.deleteDocument(doc);\n          }\n        } finally {\n          docs.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // apply buffered delete terms to the segment just flushed from ram\n  // apply appropriately so that a delete term is only applied to\n  // the documents buffered before it, not those buffered after it\n  private final void applyDeletesSelectively(HashMap deleteTerms,\n      IndexReader reader) throws IOException {\n    Iterator iter = deleteTerms.entrySet().iterator();\n    while (iter.hasNext()) {\n      Entry entry = (Entry)iter.next();\n      Term term = (Term)entry.getKey();\n\n      TermDocs docs = reader.termDocs(term);\n      if (docs != null) {\n        int num = ((Num)entry.getValue()).getNum();\n        try {\n          while (docs.next()) {\n            int doc = docs.doc();\n            if (doc >= num) {\n              break;\n            }\n            reader.deleteDocument(doc);\n          }\n        } finally {\n          docs.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}