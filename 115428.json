{"path":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","commits":[{"id":"da83c90417e805f2b355afc2d79f4d2b2ce27469","date":1464346037,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    assertNotNull(cluster.createCollection(collection, shards, replicas,\n        configName,\n        collectionProperties));\n    \n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, \n        cluster.getSolrClient().getZkStateReader(), false, true, 30);\n   \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da8a02bef7458089240404614139b53c9f875ec7","date":1464597207,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    assertNotNull(cluster.createCollection(collection, shards, replicas,\n        configName,\n        collectionProperties));\n    \n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, \n        cluster.getSolrClient().getZkStateReader(), false, true, 30);\n   \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    assertNotNull(cluster.createCollection(collection, shards, replicas,\n        configName,\n        collectionProperties));\n    \n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, \n        cluster.getSolrClient().getZkStateReader(), false, true, 30);\n   \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e89a32cc825033ebae8bb9e1c6877c2d9d76749e","date":1476790453,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    assertNotNull(cluster.createCollection(collection, shards, replicas,\n        configName,\n        collectionProperties));\n    \n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, \n        cluster.getSolrClient().getZkStateReader(), false, true, 30);\n   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(collection, shards, shards * replicas);\n\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00a778ad8ad6c2c04607538d2f36fee001239eef","date":1576657013,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(collection, shards, shards * replicas);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetDistribTest#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    final Path configDir = Paths.get(TEST_HOME(), \"collection1\", \"conf\");\n\n    String configName = \"solrCloudCollectionConfig\";\n    int nodeCount = 6;\n    configureCluster(nodeCount)\n       .addConfig(configName, configDir)\n       .configure();\n    \n    \n    Map<String, String> collectionProperties = new HashMap<>();\n    collectionProperties.put(\"config\", \"solrconfig-blockjoinfacetcomponent.xml\" );\n    collectionProperties.put(\"schema\", \"schema-blockjoinfacetcomponent.xml\"); \n    \n    // create a collection holding data for the \"to\" side of the JOIN\n    \n    int shards = 3;\n    int replicas = 2 ;\n    CollectionAdminRequest.createCollection(collection, configName, shards, replicas)\n        .setProperties(collectionProperties)\n        .process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(collection, shards, shards * replicas);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da8a02bef7458089240404614139b53c9f875ec7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da83c90417e805f2b355afc2d79f4d2b2ce27469"],"246314af59d76a47fccc31e9494eefee01ec9c00":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","00a778ad8ad6c2c04607538d2f36fee001239eef"],"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["da83c90417e805f2b355afc2d79f4d2b2ce27469"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"da83c90417e805f2b355afc2d79f4d2b2ce27469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da83c90417e805f2b355afc2d79f4d2b2ce27469"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["00a778ad8ad6c2c04607538d2f36fee001239eef"]},"commit2Childs":{"da8a02bef7458089240404614139b53c9f875ec7":[],"246314af59d76a47fccc31e9494eefee01ec9c00":[],"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"da83c90417e805f2b355afc2d79f4d2b2ce27469":["da8a02bef7458089240404614139b53c9f875ec7","e89a32cc825033ebae8bb9e1c6877c2d9d76749e","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["246314af59d76a47fccc31e9494eefee01ec9c00","00a778ad8ad6c2c04607538d2f36fee001239eef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da8a02bef7458089240404614139b53c9f875ec7","da83c90417e805f2b355afc2d79f4d2b2ce27469","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":[],"00a778ad8ad6c2c04607538d2f36fee001239eef":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da8a02bef7458089240404614139b53c9f875ec7","246314af59d76a47fccc31e9494eefee01ec9c00","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}