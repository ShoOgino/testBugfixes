{"path":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForUtil#decompress(IntBuffer,int[],int).mjava","commits":[{"id":"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5","date":1342443326,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForUtil#decompress(IntBuffer,int[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForUtil#decompress(IntBuffer,int[]).mjava","sourceNew":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    int excNum = ((header >> 8) & MASK[8]) + 1;\n    int excFirstPos = ((header >> 16) & MASK[8]) - 1;\n    int excBytes = PER_EXCEPTION_SIZE[(header >> 30) & MASK[2]];\n    int numBits = ((header >> 24) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n\n    patchException(intBuffer,data,excNum,excFirstPos,excBytes);\n  }\n\n","sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static int decompress(IntBuffer intBuffer, int[] data) {\n\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    int header = intBuffer.get();\n    int numInts = (header & MASK[8]);\n    int excNum = ((header >> 8) & MASK[8]) + 1;\n    int excFirstPos = ((header >> 16) & MASK[8]) - 1;\n    int excBytes = PER_EXCEPTION_SIZE[(header >> 30) & MASK[2]];\n    int numBits = ((header >> 24) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n\n    patchException(intBuffer,data,excNum,excFirstPos,excBytes);\n\n    return numInts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PForUtil#decompress(IntBuffer,int[],int).mjava","sourceNew":null,"sourceOld":"  /** Decompress given Integer buffer into int array.\n   *\n   * @param intBuffer   integer buffer to hold compressed data\n   * @param data        int array to hold uncompressed data\n   */\n  public static void decompress(IntBuffer intBuffer, int[] data, int header) {\n    // since this buffer is reused at upper level, rewind first\n    intBuffer.rewind();\n\n    int excNum = ((header >> 8) & MASK[8]) + 1;\n    int excFirstPos = ((header >> 16) & MASK[8]) - 1;\n    int excBytes = PER_EXCEPTION_SIZE[(header >> 30) & MASK[2]];\n    int numBits = ((header >> 24) & MASK[6]);\n\n    decompressCore(intBuffer, data, numBits);\n\n    patchException(intBuffer,data,excNum,excFirstPos,excBytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a91a0a325d8dbf4d5759c5b368c5eae7ec8483b5":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}