{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testPosLengthAtQueryTimeTrueish().mjava","commits":[{"id":"06a4493f0c732d2928d1a4f773f15d19434aa8ba","date":1405856163,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testPosLengthAtQueryTimeTrueish().mjava","pathOld":"/dev/null","sourceNew":"  public void testPosLengthAtQueryTimeTrueish() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // doesn't match:\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"slow wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"fast\", 1, 1),\n        token(\"speedy\", 0, 1),\n        token(\"wi\", 1, 1),\n        token(\"wifi\", 0, 2),\n        token(\"fi\", 1, 1),\n        token(\"network\", 1, 1)\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(4, s.search(q, 1).totalHits);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testPosLengthAtQueryTimeTrueish().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testPosLengthAtQueryTimeTrueish().mjava","sourceNew":"  public void testPosLengthAtQueryTimeTrueish() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // doesn't match:\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"slow wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"fast\", 1, 1),\n        token(\"speedy\", 0, 1),\n        token(\"wi\", 1, 1),\n        token(\"wifi\", 0, 2),\n        token(\"fi\", 1, 1),\n        token(\"network\", 1, 1)\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(4, s.search(q, 1).totalHits.value);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testPosLengthAtQueryTimeTrueish() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"speedy wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wifi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"fast wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // doesn't match:\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"slow wi fi network\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TokenStream ts = new CannedTokenStream(new Token[] {\n        token(\"fast\", 1, 1),\n        token(\"speedy\", 0, 1),\n        token(\"wi\", 1, 1),\n        token(\"wifi\", 0, 2),\n        token(\"fi\", 1, 1),\n        token(\"network\", 1, 1)\n      });\n\n    TermAutomatonQuery q = new TokenStreamToTermAutomatonQuery().toQuery(\"field\", ts);\n    // System.out.println(\"DOT: \" + q.toDot());\n    assertEquals(4, s.search(q, 1).totalHits);\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}