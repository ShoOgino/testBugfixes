{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.AllDocsSegmentDocsEnum#linearScan(int).mjava","commits":[{"id":"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1","date":1324025015,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.AllDocsSegmentDocsEnum#linearScan(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected final int linearScan(int scanTo) throws IOException {\n      final int[] docs = this.docs;\n      final int upTo = count;\n      for (int i = start; i < upTo; i++) {\n        final int d = docs[i];\n        if (scanTo <= d) {\n          start = i;\n          freq = freqs[i];\n          return doc = docs[i];\n        }\n      }\n      return refill();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e2a54c721be6a1ed8a89b32d9bb8fef603133770"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.AllDocsSegmentDocsEnum#linearScan(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.AllDocsSegmentDocsEnum#linearScan(int).mjava","sourceNew":"    @Override\n    protected final int linearScan(int scanTo) throws IOException {\n      final int[] docs = this.docs;\n      final int upTo = count;\n      for (int i = start; i < upTo; i++) {\n        final int d = docs[i];\n        if (scanTo <= d) {\n          start = i;\n          freq = freqs[i];\n          return doc = docs[i];\n        }\n      }\n      return refill();\n    }\n\n","sourceOld":"    @Override\n    protected final int linearScan(int scanTo) throws IOException {\n      final int[] docs = this.docs;\n      final int upTo = count;\n      for (int i = start; i < upTo; i++) {\n        final int d = docs[i];\n        if (scanTo <= d) {\n          start = i;\n          freq = freqs[i];\n          return doc = docs[i];\n        }\n      }\n      return refill();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1"],"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}