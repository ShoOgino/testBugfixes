{"path":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","commits":[{"id":"ee622110ba6021d0390037e77574743c1e55348c","date":1546700916,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/Config#getNode(String,Document,boolean).mjava","sourceNew":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","sourceOld":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89af258b69d07a9ce4bf372af3d302bfbdeab27c","date":1574549879,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","sourceNew":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","sourceOld":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.debug(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/XmlConfigFile#getNode(String,Document,boolean).mjava","sourceNew":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(\"{} missing optional {}\", name, path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(\"{}:{}={}\", name, path, nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","sourceOld":"  public Node getNode(String path, Document doc, boolean errIfMissing) {\n    XPath xpath = xpathFactory.newXPath();\n    String xstr = normalize(path);\n\n    try {\n      NodeList nodes = (NodeList)xpath.evaluate(xstr, doc, \n                                                XPathConstants.NODESET);\n      if (nodes==null || 0 == nodes.getLength() ) {\n        if (errIfMissing) {\n          throw new RuntimeException(name + \" missing \"+path);\n        } else {\n          log.trace(name + \" missing optional \" + path);\n          return null;\n        }\n      }\n      if ( 1 < nodes.getLength() ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n                                 name + \" contains more than one value for config path: \" + path);\n      }\n      Node nd = nodes.item(0);\n      log.trace(name + \":\" + path + \"=\" + nd);\n      return nd;\n\n    } catch (XPathExpressionException e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr + \" for \" + name,e);\n    } catch (SolrException e) {\n      throw(e);\n    } catch (Exception e) {\n      SolrException.log(log,\"Error in xpath\",e);\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error in xpath:\" + xstr+ \" for \" + name,e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee622110ba6021d0390037e77574743c1e55348c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"140be51d03394488536f4aacedace29f9b318347":["89af258b69d07a9ce4bf372af3d302bfbdeab27c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89af258b69d07a9ce4bf372af3d302bfbdeab27c":["ee622110ba6021d0390037e77574743c1e55348c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"ee622110ba6021d0390037e77574743c1e55348c":["89af258b69d07a9ce4bf372af3d302bfbdeab27c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee622110ba6021d0390037e77574743c1e55348c"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"89af258b69d07a9ce4bf372af3d302bfbdeab27c":["140be51d03394488536f4aacedace29f9b318347"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}