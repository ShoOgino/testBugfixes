{"path":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","commits":[{"id":"cec585935ebadb78352a93e4a429d2b89fb2d53e","date":1313269561,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"/dev/null","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.timeUpperBound = 1000;\n    softTracker.docsUpperBound = -1;\n    hardTracker.timeUpperBound = 3000;\n    hardTracker.docsUpperBound = -1;\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertEquals( 1, hardTracker.getCommitCount() );\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.timeUpperBound = 1200;\n    softTracker.docsUpperBound = -1;\n    hardTracker.timeUpperBound = 3000;\n    hardTracker.docsUpperBound = -1;\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    assertEquals(1, hardTracker.getCommitCount());\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.timeUpperBound = 1000;\n    softTracker.docsUpperBound = -1;\n    hardTracker.timeUpperBound = 3000;\n    hardTracker.docsUpperBound = -1;\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertEquals( 1, hardTracker.getCommitCount() );\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","bugFix":["cec585935ebadb78352a93e4a429d2b89fb2d53e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16a110e87d79276dcf4554fb1d02324feb891795","date":1313710986,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":null,"sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.timeUpperBound = 1200;\n    softTracker.docsUpperBound = -1;\n    hardTracker.timeUpperBound = 3000;\n    hardTracker.docsUpperBound = -1;\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    assertEquals(1, hardTracker.getCommitCount());\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c518d12136e15c9de6fa3d2c4bf5add07311a685","date":1313718511,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"/dev/null","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(200);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1000);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    assertEquals(1, hardTracker.getCommitCount());\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e11af7379c3d21f36fb43829f144b6f697f338cf","date":1313720366,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(100);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(500);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    // depending on timing, you might see 1 or 2 hard commits\n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(200);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1000);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check it it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    assertEquals( 2, softTracker.getCommitCount() );\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    assertEquals(1, hardTracker.getCommitCount());\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f39780a18aae7ef039e09985b32e302d079e7f","date":1313764730,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(300);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time - wait twice to ensure latest is picked up\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener trigger = new NewSearcherListener();    \n    core.registerNewSearcherListener(trigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(100);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(500);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    trigger.reset();\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(30000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(trigger.waitForNewSearcher(15000));\n    trigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    // depending on timing, you might see 1 or 2 hard commits\n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=0]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afeb2b7b90d37cafe41dda638d287984fb846243","date":1313966924,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time - wait twice to ensure latest is picked up\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(300);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time - wait twice to ensure latest is picked up\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"136391ac445b3757add243dc46077af598ab3e24","date":1314135902,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time - wait twice to ensure latest is picked up\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3deffd53d0d8371c5019447edff82849fbaf829d","date":1314136705,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(15000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(15000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f85ad8df84c43051b56a42e8ee8dcf0257268c8","date":1314189004,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerCommitCallback(softTrigger);\n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    updater.registerSoftCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23","date":1317007809,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 2 times really fast and make sure id:500\n    // is not visible right away\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<2; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 5 times really fast and make sure it \n    // only commits once\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<5; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b01e327764dff0c4e657a87afb8a11306045b76","date":1320242486,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/AutoCommitTest#testSoftAndHardCommitMaxTime().mjava","sourceNew":null,"sourceOld":"  public void testSoftAndHardCommitMaxTime() throws Exception {\n    SolrCore core = h.getCore();\n    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  \n    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); \n    core.registerNewSearcherListener(softTrigger);\n    core.registerNewSearcherListener(hardTrigger);\n    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();\n    \n    updater.registerSoftCommitCallback(softTrigger);\n    updater.registerCommitCallback(hardTrigger);\n    \n    CommitTracker hardTracker = updater.commitTracker;\n    CommitTracker softTracker = updater.softCommitTracker;\n    \n    // too low of a number can cause a slow host to commit before the test code checks that it\n    // isn't there... causing a failure at \"shouldn't find any\"\n    softTracker.setTimeUpperBound(500);\n    softTracker.setDocsUpperBound(-1);\n    hardTracker.setTimeUpperBound(1200);\n    hardTracker.setDocsUpperBound(-1);\n    // updater.commitCallbacks.add(trigger);\n    \n    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();\n    handler.init( null );\n    \n    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );\n    \n    // Add a single document\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"529\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n\n    handler.handleRequest( req, rsp );\n\n    // Check if it is in the index\n    assertQ(\"shouldn't find any\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n\n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"530\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n      \n    // Now make sure we can find it\n    assertQ(\"should find one\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    // But not this one\n    assertQ(\"should find none\", req(\"id:530\") ,\"//result[@numFound=0]\" );\n    \n    // Delete the document\n    assertU( delI(\"529\") );\n    assertQ(\"deleted, but should still be there\", req(\"id:529\") ,\"//result[@numFound=1]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"550\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();\n    assertTrue(\"expected:>=2 but got \" + totalCommits, totalCommits >= 2);\n    assertQ(\"deleted and time has passed\", req(\"id:529\") ,\"//result[@numFound=0]\" );\n    \n    // now make the call 2 times really fast and make sure id:500\n    // is not visible right away\n    req.setContentStreams( toContentStreams(\n        adoc(\"id\", \"500\" ), null ) );\n    for( int i=0;i<2; i++ ) {\n      handler.handleRequest( req, rsp );\n    }\n    assertQ(\"should not be there yet\", req(\"id:500\") ,\"//result[@numFound=0]\" );\n    \n    // Wait longer than the autocommit time\n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    req.setContentStreams( toContentStreams(\n      adoc(\"id\", \"531\", \"field_t\", \"what's inside?\", \"subject\", \"info\"), null ) );\n    handler.handleRequest( req, rsp );\n    \n    // depending on timing, you might see 2 or 3 soft commits\n    int softCommitCnt = softTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + softCommitCnt, softCommitCnt == 2\n        || softCommitCnt == 3);\n    \n    // depending on timing, you might see 1 or 2 hard commits\n    assertTrue(hardTrigger.waitForNewSearcher(30000));\n    hardTrigger.reset();\n    \n    int hardCommitCnt = hardTracker.getCommitCount();\n    assertTrue(\"commit cnt:\" + hardCommitCnt, hardCommitCnt == 1\n        || hardCommitCnt == 2);\n    \n    assertTrue(softTrigger.waitForNewSearcher(30000));\n    softTrigger.reset();\n    \n    assertQ(\"now it should\", req(\"id:500\") ,\"//result[@numFound=1]\" );\n    assertQ(\"but not this\", req(\"id:531\") ,\"//result[@numFound=1]\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23":["2f85ad8df84c43051b56a42e8ee8dcf0257268c8"],"3deffd53d0d8371c5019447edff82849fbaf829d":["136391ac445b3757add243dc46077af598ab3e24"],"afeb2b7b90d37cafe41dda638d287984fb846243":["51f39780a18aae7ef039e09985b32e302d079e7f"],"51f39780a18aae7ef039e09985b32e302d079e7f":["e11af7379c3d21f36fb43829f144b6f697f338cf"],"cec585935ebadb78352a93e4a429d2b89fb2d53e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2f85ad8df84c43051b56a42e8ee8dcf0257268c8":["3deffd53d0d8371c5019447edff82849fbaf829d"],"e11af7379c3d21f36fb43829f144b6f697f338cf":["c518d12136e15c9de6fa3d2c4bf5add07311a685"],"7b01e327764dff0c4e657a87afb8a11306045b76":["09d02225ad8c7d4b2af4b84d1c965a791b7d4a23"],"136391ac445b3757add243dc46077af598ab3e24":["afeb2b7b90d37cafe41dda638d287984fb846243"],"16a110e87d79276dcf4554fb1d02324feb891795":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c518d12136e15c9de6fa3d2c4bf5add07311a685":["16a110e87d79276dcf4554fb1d02324feb891795"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["cec585935ebadb78352a93e4a429d2b89fb2d53e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b01e327764dff0c4e657a87afb8a11306045b76"]},"commit2Childs":{"09d02225ad8c7d4b2af4b84d1c965a791b7d4a23":["7b01e327764dff0c4e657a87afb8a11306045b76"],"3deffd53d0d8371c5019447edff82849fbaf829d":["2f85ad8df84c43051b56a42e8ee8dcf0257268c8"],"afeb2b7b90d37cafe41dda638d287984fb846243":["136391ac445b3757add243dc46077af598ab3e24"],"51f39780a18aae7ef039e09985b32e302d079e7f":["afeb2b7b90d37cafe41dda638d287984fb846243"],"cec585935ebadb78352a93e4a429d2b89fb2d53e":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"2f85ad8df84c43051b56a42e8ee8dcf0257268c8":["09d02225ad8c7d4b2af4b84d1c965a791b7d4a23"],"e11af7379c3d21f36fb43829f144b6f697f338cf":["51f39780a18aae7ef039e09985b32e302d079e7f"],"7b01e327764dff0c4e657a87afb8a11306045b76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"136391ac445b3757add243dc46077af598ab3e24":["3deffd53d0d8371c5019447edff82849fbaf829d"],"16a110e87d79276dcf4554fb1d02324feb891795":["c518d12136e15c9de6fa3d2c4bf5add07311a685"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cec585935ebadb78352a93e4a429d2b89fb2d53e"],"c518d12136e15c9de6fa3d2c4bf5add07311a685":["e11af7379c3d21f36fb43829f144b6f697f338cf"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["16a110e87d79276dcf4554fb1d02324feb891795"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}