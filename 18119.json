{"path":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readFile(File).mjava","commits":[{"id":"0af909a3f6f8da71d1ed9daef071834bcdba6aa7","date":1248032177,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readFile(File).mjava","pathOld":"contrib/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readFile(File).mjava","sourceNew":"\t/**\n\t * Reads a whole .sgml file.\n\t * @param file The sgml reuters file.\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n\tpublic void readFile(File file) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n\t\tString documentString = readFileAsString(file);\n\t\t\n\t\t// remove \"bad\" entities\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d;\", \"\");\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d\\\\d;\", \"\");\n\t\t\n\t\t// remove doctype declaration\n\t\tdocumentString = documentString.replaceAll(\"<!DOCTYPE lewis SYSTEM \\\"lewis.dtd\\\">\", \"\");\n        \n\t\t// add a document root\n\t\tdocumentString = \"<root>\" + documentString + \"</root>\";\n\t\t\n\t\tDocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse(new ByteArrayInputStream(documentString.getBytes()));\n\t\t\n\t\tNodeList nodeList = (NodeList) xPath.evaluate(\"/root/REUTERS\", doc, XPathConstants.NODESET);\n\t\tSystem.out.println(\"READING FILE: \" + file.getAbsoluteFile());\n\t\tfor (int i=0; i< nodeList.getLength(); i++) {\n\t\t\tSystem.out.print(\" - \" + file.getName() + \"(\" + i + \") \");\n\t\t\treadDocument((Element) nodeList.item(i));\n\t\t}\n\t\t\n\t\tthis.solrServer.commit();\n\t\t\n\t}\n\n","sourceOld":"\t/**\n\t * Reads a whole .sgml file.\n\t * @param file The sgml reuters file.\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n\tpublic void readFile(File file) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n\t\tString documentString = readFileAsString(file);\n\t\t\n\t\t// remove \"bad\" entities\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d;\", \"\");\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d\\\\d;\", \"\");\n\t\t\n\t\t// remove doctype declaration\n\t\tdocumentString = documentString.replaceAll(\"<!DOCTYPE lewis SYSTEM \\\"lewis.dtd\\\">\", \"\");\n        \n\t\t// add a document root\n\t\tdocumentString = \"<root>\" + documentString + \"</root>\";\n\t\t\n\t\tDocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse(new ByteArrayInputStream(documentString.getBytes()));\n\t\t\n\t\tNodeList nodeList = (NodeList) xPath.evaluate(\"/root/REUTERS\", doc, XPathConstants.NODESET);\n\t\tSystem.out.println(\"READING FILE: \" + file.getAbsoluteFile());\n\t\tfor (int i=0; i< nodeList.getLength(); i++) {\n\t\t\tSystem.out.print(\" - \" + file.getName() + \"(\" + i + \") \");\n\t\t\treadDocument((Element) nodeList.item(i));\n\t\t}\n\t\t\n\t\tthis.solrServer.commit();\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26202f1de41706cfc42bac29925e60eb591480c2","date":1255363311,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"client/javascript/example/reuters/importer/java/org/apache/solr/solrjs/ReutersService#readFile(File).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Reads a whole .sgml file.\n\t * @param file The sgml reuters file.\n\t * @throws XPathExpressionException\n\t * @throws IOException\n\t * @throws ParserConfigurationException\n\t * @throws SAXException\n\t * @throws SolrServerException\n\t * @throws ParseException \n\t */\n\tpublic void readFile(File file) throws XPathExpressionException, IOException, ParserConfigurationException, SAXException, SolrServerException, ParseException {\n\t\tString documentString = readFileAsString(file);\n\t\t\n\t\t// remove \"bad\" entities\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d;\", \"\");\n\t\tdocumentString = documentString.replaceAll(\"&#\\\\d\\\\d;\", \"\");\n\t\t\n\t\t// remove doctype declaration\n\t\tdocumentString = documentString.replaceAll(\"<!DOCTYPE lewis SYSTEM \\\"lewis.dtd\\\">\", \"\");\n        \n\t\t// add a document root\n\t\tdocumentString = \"<root>\" + documentString + \"</root>\";\n\t\t\n\t\tDocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n\t\tDocumentBuilder docBuilder = dbfac.newDocumentBuilder();\n\t\tDocument doc = docBuilder.parse(new ByteArrayInputStream(documentString.getBytes()));\n\t\t\n\t\tNodeList nodeList = (NodeList) xPath.evaluate(\"/root/REUTERS\", doc, XPathConstants.NODESET);\n\t\tSystem.out.println(\"READING FILE: \" + file.getAbsoluteFile());\n\t\tfor (int i=0; i< nodeList.getLength(); i++) {\n\t\t\tSystem.out.print(\" - \" + file.getName() + \"(\" + i + \") \");\n\t\t\treadDocument((Element) nodeList.item(i));\n\t\t}\n\t\t\n\t\tthis.solrServer.commit();\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"26202f1de41706cfc42bac29925e60eb591480c2":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0af909a3f6f8da71d1ed9daef071834bcdba6aa7":["26202f1de41706cfc42bac29925e60eb591480c2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0af909a3f6f8da71d1ed9daef071834bcdba6aa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"26202f1de41706cfc42bac29925e60eb591480c2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["26202f1de41706cfc42bac29925e60eb591480c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}