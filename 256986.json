{"path":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","pathOld":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","sourceNew":"  private static void verifyGoLiveArgs(Options opts, ArgumentParser parser) throws ArgumentParserException {\n    if (opts.zkHost == null && opts.solrHomeDir == null) {\n      throw new ArgumentParserException(\"At least one of --zk-host or --solr-home-dir is required\", parser);\n    }\n    if (opts.goLive && opts.zkHost == null && opts.shardUrls == null) {\n      throw new ArgumentParserException(\"--go-live requires that you also pass --shard-url or --zk-host\", parser);\n    }\n    \n    if (opts.zkHost != null && opts.collection == null) {\n      throw new ArgumentParserException(\"--zk-host requires that you also pass --collection\", parser);\n    }\n    \n    if (opts.zkHost != null) {\n      return;\n      // verify structure of ZK directory later, to avoid checking run-time errors during parsing.\n    } else if (opts.shardUrls != null) {\n      if (opts.shardUrls.size() == 0) {\n        throw new ArgumentParserException(\"--shard-url requires at least one URL\", parser);\n      }\n    } else if (opts.shards != null) {\n      if (opts.shards <= 0) {\n        throw new ArgumentParserException(\"--shards must be a positive number: \" + opts.shards, parser);\n      }\n    } else {\n      throw new ArgumentParserException(\"You must specify one of the following (mutually exclusive) arguments: \"\n          + \"--zk-host or --shard-url or --shards\", parser);\n    }\n\n    if (opts.shardUrls != null) {\n      opts.shards = opts.shardUrls.size();\n    }\n    \n    assert opts.shards != null;\n    assert opts.shards > 0;\n  }\n\n","sourceOld":"  private static void verifyGoLiveArgs(Options opts, ArgumentParser parser) throws ArgumentParserException {\n    if (opts.zkHost == null && opts.solrHomeDir == null) {\n      throw new ArgumentParserException(\"At least one of --zk-host or --solr-home-dir is required\", parser);\n    }\n    if (opts.goLive && opts.zkHost == null && opts.shardUrls == null) {\n      throw new ArgumentParserException(\"--go-live requires that you also pass --shard-url or --zk-host\", parser);\n    }\n    \n    if (opts.zkHost != null && opts.collection == null) {\n      throw new ArgumentParserException(\"--zk-host requires that you also pass --collection\", parser);\n    }\n    \n    if (opts.zkHost != null) {\n      return;\n      // verify structure of ZK directory later, to avoid checking run-time errors during parsing.\n    } else if (opts.shardUrls != null) {\n      if (opts.shardUrls.size() == 0) {\n        throw new ArgumentParserException(\"--shard-url requires at least one URL\", parser);\n      }\n    } else if (opts.shards != null) {\n      if (opts.shards <= 0) {\n        throw new ArgumentParserException(\"--shards must be a positive number: \" + opts.shards, parser);\n      }\n    } else {\n      throw new ArgumentParserException(\"You must specify one of the following (mutually exclusive) arguments: \"\n          + \"--zk-host or --shard-url or --shards\", parser);\n    }\n\n    if (opts.shardUrls != null) {\n      opts.shards = opts.shardUrls.size();\n    }\n    \n    assert opts.shards != null;\n    assert opts.shards > 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","pathOld":"/dev/null","sourceNew":"  private static void verifyGoLiveArgs(Options opts, ArgumentParser parser) throws ArgumentParserException {\n    if (opts.zkHost == null && opts.solrHomeDir == null) {\n      throw new ArgumentParserException(\"At least one of --zk-host or --solr-home-dir is required\", parser);\n    }\n    if (opts.goLive && opts.zkHost == null && opts.shardUrls == null) {\n      throw new ArgumentParserException(\"--go-live requires that you also pass --shard-url or --zk-host\", parser);\n    }\n    \n    if (opts.zkHost != null && opts.collection == null) {\n      throw new ArgumentParserException(\"--zk-host requires that you also pass --collection\", parser);\n    }\n    \n    if (opts.zkHost != null) {\n      return;\n      // verify structure of ZK directory later, to avoid checking run-time errors during parsing.\n    } else if (opts.shardUrls != null) {\n      if (opts.shardUrls.size() == 0) {\n        throw new ArgumentParserException(\"--shard-url requires at least one URL\", parser);\n      }\n    } else if (opts.shards != null) {\n      if (opts.shards <= 0) {\n        throw new ArgumentParserException(\"--shards must be a positive number: \" + opts.shards, parser);\n      }\n    } else {\n      throw new ArgumentParserException(\"You must specify one of the following (mutually exclusive) arguments: \"\n          + \"--zk-host or --shard-url or --shards\", parser);\n    }\n\n    if (opts.shardUrls != null) {\n      opts.shards = opts.shardUrls.size();\n    }\n    \n    assert opts.shards != null;\n    assert opts.shards > 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","sourceNew":null,"sourceOld":"  private static void verifyGoLiveArgs(Options opts, ArgumentParser parser) throws ArgumentParserException {\n    if (opts.zkHost == null && opts.solrHomeDir == null) {\n      throw new ArgumentParserException(\"At least one of --zk-host or --solr-home-dir is required\", parser);\n    }\n    if (opts.goLive && opts.zkHost == null && opts.shardUrls == null) {\n      throw new ArgumentParserException(\"--go-live requires that you also pass --shard-url or --zk-host\", parser);\n    }\n    \n    if (opts.zkHost != null && opts.collection == null) {\n      throw new ArgumentParserException(\"--zk-host requires that you also pass --collection\", parser);\n    }\n    \n    if (opts.zkHost != null) {\n      return;\n      // verify structure of ZK directory later, to avoid checking run-time errors during parsing.\n    } else if (opts.shardUrls != null) {\n      if (opts.shardUrls.size() == 0) {\n        throw new ArgumentParserException(\"--shard-url requires at least one URL\", parser);\n      }\n    } else if (opts.shards != null) {\n      if (opts.shards <= 0) {\n        throw new ArgumentParserException(\"--shards must be a positive number: \" + opts.shards, parser);\n      }\n    } else {\n      throw new ArgumentParserException(\"You must specify one of the following (mutually exclusive) arguments: \"\n          + \"--zk-host or --shard-url or --shards\", parser);\n    }\n\n    if (opts.shardUrls != null) {\n      opts.shards = opts.shardUrls.size();\n    }\n    \n    assert opts.shards != null;\n    assert opts.shards > 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/MapReduceIndexerTool#verifyGoLiveArgs(Options,ArgumentParser).mjava","sourceNew":null,"sourceOld":"  private static void verifyGoLiveArgs(Options opts, ArgumentParser parser) throws ArgumentParserException {\n    if (opts.zkHost == null && opts.solrHomeDir == null) {\n      throw new ArgumentParserException(\"At least one of --zk-host or --solr-home-dir is required\", parser);\n    }\n    if (opts.goLive && opts.zkHost == null && opts.shardUrls == null) {\n      throw new ArgumentParserException(\"--go-live requires that you also pass --shard-url or --zk-host\", parser);\n    }\n    \n    if (opts.zkHost != null && opts.collection == null) {\n      throw new ArgumentParserException(\"--zk-host requires that you also pass --collection\", parser);\n    }\n    \n    if (opts.zkHost != null) {\n      return;\n      // verify structure of ZK directory later, to avoid checking run-time errors during parsing.\n    } else if (opts.shardUrls != null) {\n      if (opts.shardUrls.size() == 0) {\n        throw new ArgumentParserException(\"--shard-url requires at least one URL\", parser);\n      }\n    } else if (opts.shards != null) {\n      if (opts.shards <= 0) {\n        throw new ArgumentParserException(\"--shards must be a positive number: \" + opts.shards, parser);\n      }\n    } else {\n      throw new ArgumentParserException(\"You must specify one of the following (mutually exclusive) arguments: \"\n          + \"--zk-host or --shard-url or --shards\", parser);\n    }\n\n    if (opts.shardUrls != null) {\n      opts.shards = opts.shardUrls.size();\n    }\n    \n    assert opts.shards != null;\n    assert opts.shards > 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["12109b652e9210b8d58fca47f6c4a725d058a58e","74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}