{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b8de6920954704c456d12a43f75d7bfdd33c5c6","date":1353433257,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<Map<String, String>>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<Map<String, String>>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List l = new ArrayList();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<Map<String, String>>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(123789L, m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(123789L, m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(123789L, m.get(\"num\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(new Long(123789), m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNumberFormatTransformer#testTransformRow_MalformedInput_Number().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_MalformedInput_Number() {\n    List<Map<String, String>> l = new ArrayList<>();\n    l.add(createMap(\"column\", \"num\",\n            NumberFormatTransformer.FORMAT_STYLE, NumberFormatTransformer.NUMBER));\n    Context c = getContext(null, null, null, Context.FULL_DUMP, l, null);\n    Map<String, Object> m = createMap(\"num\", \"123\" + GROUPING_SEP + GROUPING_SEP + \"789\");\n    new NumberFormatTransformer().transformRow(m, c);\n    assertEquals(123789L, m.get(\"num\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"8b8de6920954704c456d12a43f75d7bfdd33c5c6":["c26f00b574427b55127e869b935845554afde1fa"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["407687e67faf6e1f02a211ca078d8e3eed631027","8b8de6920954704c456d12a43f75d7bfdd33c5c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"8b8de6920954704c456d12a43f75d7bfdd33c5c6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}