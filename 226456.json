{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput).mjava","commits":[{"id":"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29","date":1496918402,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private static void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long offset = input.readLong();\n    input.seek(offset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput,long).mjava","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private static void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long offset = input.readLong();\n    input.seek(offset);\n  }\n\n","sourceOld":"  /** Seek {@code input} to the directory offset. */\n  private void seekDir(IndexInput input, long dirOffset)\n      throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    dirOffset = input.readLong();\n    input.seek(dirOffset);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#seekDir(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  /** Seek {@code input} to the directory offset. */\n  private static void seekDir(IndexInput input) throws IOException {\n    input.seek(input.length() - CodecUtil.footerLength() - 8);\n    long offset = input.readLong();\n    input.seek(offset);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29"],"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28288370235ed02234a64753cdbf0c6ec096304a","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}