{"path":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testStatus().mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testStatus().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStatus() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(\n        params(CommonParams.ACTION, \"status\", CommonParams.NAME, \"solr.jvm\")));\n    assertNotNull(rsp);\n    NamedList<Object> map = (NamedList<Object>)rsp.get(\"metrics\");\n    assertEquals(map.toString(), 1, map.size());\n    map = (NamedList<Object>)map.get(\"solr.jvm\");\n    assertNotNull(map);\n    NamedList<Object> status = (NamedList<Object>)map.get(\"status\");\n    assertNotNull(status);\n    assertEquals(status.toString(), 7, status.size());\n    List<Object> lst = (List<Object>)status.get(\"datasources\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    lst = (List<Object>)status.get(\"archives\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 5, lst.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MetricsHistoryIntegrationTest#testStatus().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"unchecked\"})\n  public void testStatus() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(\n        params(CommonParams.ACTION, \"status\", CommonParams.NAME, \"solr.jvm\")));\n    assertNotNull(rsp);\n    NamedList<Object> map = (NamedList<Object>)rsp.get(\"metrics\");\n    assertEquals(map.toString(), 1, map.size());\n    map = (NamedList<Object>)map.get(\"solr.jvm\");\n    assertNotNull(map);\n    NamedList<Object> status = (NamedList<Object>)map.get(\"status\");\n    assertNotNull(status);\n    assertEquals(status.toString(), 7, status.size());\n    List<Object> lst = (List<Object>)status.get(\"datasources\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    lst = (List<Object>)status.get(\"archives\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 5, lst.size());\n  }\n\n","sourceOld":"  @Test\n  public void testStatus() throws Exception {\n    NamedList<Object> rsp = solrClient.request(createHistoryRequest(\n        params(CommonParams.ACTION, \"status\", CommonParams.NAME, \"solr.jvm\")));\n    assertNotNull(rsp);\n    NamedList<Object> map = (NamedList<Object>)rsp.get(\"metrics\");\n    assertEquals(map.toString(), 1, map.size());\n    map = (NamedList<Object>)map.get(\"solr.jvm\");\n    assertNotNull(map);\n    NamedList<Object> status = (NamedList<Object>)map.get(\"status\");\n    assertNotNull(status);\n    assertEquals(status.toString(), 7, status.size());\n    List<Object> lst = (List<Object>)status.get(\"datasources\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 3, lst.size());\n    lst = (List<Object>)status.get(\"archives\");\n    assertNotNull(lst);\n    assertEquals(lst.toString(), 5, lst.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}