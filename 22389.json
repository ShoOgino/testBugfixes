{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SystemLogListenerTest#pickNodeToStop().mjava","commits":[{"id":"75b91197becbbe8cc6ba02b36109229daac9c2e6","date":1544494002,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SystemLogListenerTest#pickNodeToStop().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Helper method for picking a node that can safely be stoped\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-13050\">SOLR-13050</a>\n   */\n  private JettySolrRunner pickNodeToStop() throws Exception {\n    // first get the nodeName of the overser.\n    // stopping the overseer is not something we want to hassle with in this test\n    final String overseerNodeName = (String) cluster.getSolrClient().request\n      (CollectionAdminRequest.getOverseerStatus()).get(\"leader\");\n\n    // now find a node that is *NOT* the overseer or the leader of a .system collection shard\n    for (Replica r :  getCollectionState(CollectionAdminParams.SYSTEM_COLL).getReplicas()) {\n      if ( ! (r.getBool(\"leader\", false) || r.getNodeName().equals(overseerNodeName) ) ) {\n        return cluster.getReplicaJetty(r);\n      }\n    }\n    fail(\"Couldn't find non-leader, non-overseer, replica of .system collection to kill\");\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SystemLogListenerTest#pickNodeToStop().mjava","sourceNew":null,"sourceOld":"  /** \n   * Helper method for picking a node that can safely be stoped\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-13050\">SOLR-13050</a>\n   */\n  private JettySolrRunner pickNodeToStop() throws Exception {\n    // first get the nodeName of the overser.\n    // stopping the overseer is not something we want to hassle with in this test\n    final String overseerNodeName = (String) cluster.getSolrClient().request\n      (CollectionAdminRequest.getOverseerStatus()).get(\"leader\");\n\n    // now find a node that is *NOT* the overseer or the leader of a .system collection shard\n    for (Replica r :  getCollectionState(CollectionAdminParams.SYSTEM_COLL).getReplicas()) {\n      if ( ! (r.getBool(\"leader\", false) || r.getNodeName().equals(overseerNodeName) ) ) {\n        return cluster.getReplicaJetty(r);\n      }\n    }\n    fail(\"Couldn't find non-leader, non-overseer, replica of .system collection to kill\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["75b91197becbbe8cc6ba02b36109229daac9c2e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"75b91197becbbe8cc6ba02b36109229daac9c2e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["75b91197becbbe8cc6ba02b36109229daac9c2e6"],"75b91197becbbe8cc6ba02b36109229daac9c2e6":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}