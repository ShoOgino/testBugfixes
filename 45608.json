{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b4a63b6b0155323dde6b827e0dc22a43580753","date":1346168671,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af02a5a3ff2c1e52a02c0f07ff02c7197e43e59c","date":1521393811,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        throw e;\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"203e3fcf513c02ee2c07015f2ce277e26dc60907","date":1521404157,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        throw e;\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01c3f2e41ebde00b2e5199c274f7f37775139578","date":1521621356,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown non {@link VirtualMachineError} exceptions.\n   * Even if a {@link VirtualMachineError} is thrown all given closeable are closed.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    VirtualMachineError firstError = null;\n    Throwable firstThrowable = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        firstError = useOrSuppress(firstError, e);\n      } catch (Throwable t) {\n        firstThrowable = useOrSuppress(firstThrowable, t);\n      }\n    }\n    if (firstError != null) {\n      // we ensure that we bubble up any errors. We can't recover from these but need to make sure they are\n      // bubbled up. if a non-VMError is thrown we also add the suppressed exceptions to it.\n      if (firstThrowable != null) {\n        firstError.addSuppressed(firstThrowable);\n      }\n      throw firstError;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        throw e;\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown non {@link VirtualMachineError} exceptions.\n   * Even if a {@link VirtualMachineError} is thrown all given closeable are closed.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    VirtualMachineError firstError = null;\n    Throwable firstThrowable = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        firstError = useOrSuppress(firstError, e);\n      } catch (Throwable t) {\n        firstThrowable = useOrSuppress(firstThrowable, t);\n      }\n    }\n    if (firstError != null) {\n      // we ensure that we bubble up any errors. We can't recover from these but need to make sure they are\n      // bubbled up. if a non-VMError is thrown we also add the suppressed exceptions to it.\n      if (firstThrowable != null) {\n        firstError.addSuppressed(firstThrowable);\n      }\n      throw firstError;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        throw e;\n      } catch (Throwable t) {\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#closeWhileHandlingException(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <code>Closeable</code>s, suppressing all thrown non {@link VirtualMachineError} exceptions.\n   * Even if a {@link VirtualMachineError} is thrown all given closeable are closed.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    VirtualMachineError firstError = null;\n    Throwable firstThrowable = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        firstError = useOrSuppress(firstError, e);\n      } catch (Throwable t) {\n        firstThrowable = useOrSuppress(firstThrowable, t);\n      }\n    }\n    if (firstError != null) {\n      // we ensure that we bubble up any errors. We can't recover from these but need to make sure they are\n      // bubbled up. if a non-VMError is thrown we also add the suppressed exceptions to it.\n      if (firstThrowable != null) {\n        firstError.addSuppressed(firstThrowable);\n      }\n      throw firstError;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown non {@link VirtualMachineError} exceptions.\n   * Even if a {@link VirtualMachineError} is thrown all given closeable are closed.\n   * @see #closeWhileHandlingException(Closeable...)\n   */\n  public static void closeWhileHandlingException(Iterable<? extends Closeable> objects) {\n    VirtualMachineError firstError = null;\n    Throwable firstThrowable = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (VirtualMachineError e) {\n        firstError = useOrSuppress(firstError, e);\n      } catch (Throwable t) {\n        firstThrowable = useOrSuppress(firstThrowable, t);\n      }\n    }\n    if (firstError != null) {\n      // we ensure that we bubble up any errors. We can't recover from these but need to make sure they are\n      // bubbled up. if a non-VMError is thrown we also add the suppressed exceptions to it.\n      if (firstThrowable != null) {\n        firstError.addSuppressed(firstThrowable);\n      }\n      throw firstError;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af02a5a3ff2c1e52a02c0f07ff02c7197e43e59c":["a3b4a63b6b0155323dde6b827e0dc22a43580753"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["203e3fcf513c02ee2c07015f2ce277e26dc60907","01c3f2e41ebde00b2e5199c274f7f37775139578"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"01c3f2e41ebde00b2e5199c274f7f37775139578":["203e3fcf513c02ee2c07015f2ce277e26dc60907"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["a3b4a63b6b0155323dde6b827e0dc22a43580753","af02a5a3ff2c1e52a02c0f07ff02c7197e43e59c"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3b4a63b6b0155323dde6b827e0dc22a43580753"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"af02a5a3ff2c1e52a02c0f07ff02c7197e43e59c":["203e3fcf513c02ee2c07015f2ce277e26dc60907"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01c3f2e41ebde00b2e5199c274f7f37775139578":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["af02a5a3ff2c1e52a02c0f07ff02c7197e43e59c","203e3fcf513c02ee2c07015f2ce277e26dc60907","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a3b4a63b6b0155323dde6b827e0dc22a43580753","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"203e3fcf513c02ee2c07015f2ce277e26dc60907":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","01c3f2e41ebde00b2e5199c274f7f37775139578"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}