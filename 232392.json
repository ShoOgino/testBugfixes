{"path":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","commits":[{"id":"d9d424bd039937b4125152b454b3a32754b06f6c","date":1384391321,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","pathOld":"/dev/null","sourceNew":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<String>();\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","sourceNew":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","sourceOld":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<String>();\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417003906b2e5a3c80420ffe968890cd3da3e8fd","date":1402983907,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","sourceNew":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    if (shardResponse.getException() != null) {\n      namedList.add(\"Exception\", shardResponse.getException().getMessage());\n      return namedList;\n    }\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","sourceOld":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","date":1402998114,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","sourceNew":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    if (shardResponse.getException() != null) {\n      namedList.add(\"Exception\", shardResponse.getException().getMessage());\n      return namedList;\n    }\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","sourceOld":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28cbdd86beec745caa3fa58b97597c296d5ecfe3","date":1403121328,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#getTrackResponse(ShardResponse).mjava","sourceNew":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new SimpleOrderedMap<>();\n    if (shardResponse.getException() != null) {\n      namedList.add(\"Exception\", shardResponse.getException().getMessage());\n      return namedList;\n    }\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","sourceOld":"  private NamedList<String> getTrackResponse(ShardResponse shardResponse) {\n    NamedList<String> namedList = new NamedList<>();\n    if (shardResponse.getException() != null) {\n      namedList.add(\"Exception\", shardResponse.getException().getMessage());\n      return namedList;\n    }\n    NamedList<Object> responseNL = shardResponse.getSolrResponse().getResponse();\n    @SuppressWarnings(\"unchecked\")\n    NamedList<Object> responseHeader = (NamedList<Object>)responseNL.get(\"responseHeader\");\n    if(responseHeader != null) {\n      namedList.add(\"QTime\", responseHeader.get(\"QTime\").toString());\n    }\n    namedList.add(\"ElapsedTime\", String.valueOf(shardResponse.getSolrResponse().getElapsedTime()));\n    namedList.add(\"RequestPurpose\", shardResponse.getShardRequest().params.get(CommonParams.REQUEST_PURPOSE));\n    SolrDocumentList docList = (SolrDocumentList)shardResponse.getSolrResponse().getResponse().get(\"response\");\n    if(docList != null) {\n      namedList.add(\"NumFound\", String.valueOf(docList.getNumFound()));\n    }\n    namedList.add(\"Response\", String.valueOf(responseNL));\n    return namedList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d9d424bd039937b4125152b454b3a32754b06f6c"],"d9d424bd039937b4125152b454b3a32754b06f6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","417003906b2e5a3c80420ffe968890cd3da3e8fd"],"28cbdd86beec745caa3fa58b97597c296d5ecfe3":["417003906b2e5a3c80420ffe968890cd3da3e8fd"],"417003906b2e5a3c80420ffe968890cd3da3e8fd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28cbdd86beec745caa3fa58b97597c296d5ecfe3"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","417003906b2e5a3c80420ffe968890cd3da3e8fd"],"d9d424bd039937b4125152b454b3a32754b06f6c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":[],"28cbdd86beec745caa3fa58b97597c296d5ecfe3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9d424bd039937b4125152b454b3a32754b06f6c"],"417003906b2e5a3c80420ffe968890cd3da3e8fd":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","28cbdd86beec745caa3fa58b97597c296d5ecfe3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}