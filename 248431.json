{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","commits":[{"id":"d281db9007b19360dddcee9ecd7cfcabde1ca54e","date":1045340167,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"\tpublic String getLocalizedDate(int year, int month, int day) {\n\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tcalendar.set(year, month, day);\n\t\treturn df.format(calendar.getTime());\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"105b8c63d8ae43de76f14005b62a5657a4b8d9ce","date":1064896862,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = Calendar.getInstance();\n    calendar.set(year, month, day);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"\tpublic String getLocalizedDate(int year, int month, int day) {\n\t\tDateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tcalendar.set(year, month, day);\n\t\treturn df.format(calendar.getTime());\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b","date":1138567903,"type":5,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int,boolean).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  private String getLocalizedDate(int year, int month, int day, boolean extendLastDate) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = Calendar.getInstance();\n    calendar.set(year, month, day);\n    if (extendLastDate) {\n      calendar.set(Calendar.HOUR_OF_DAY, 23);\n      calendar.set(Calendar.MINUTE, 59);\n      calendar.set(Calendar.SECOND, 59);\n      calendar.set(Calendar.MILLISECOND, 999);\n    }\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = Calendar.getInstance();\n    calendar.set(year, month, day);\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":["d6c356d9e7be4ba949f083ecd3fb65231bc64008"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"64a84446b679daf1e25d901bf647686ade7fc1f0","date":1260811919,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int,boolean).mjava","sourceNew":"  private String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  private String getLocalizedDate(int year, int month, int day, boolean extendLastDate) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    if (extendLastDate) {\n      calendar.set(Calendar.HOUR_OF_DAY, 23);\n      calendar.set(Calendar.MINUTE, 59);\n      calendar.set(Calendar.SECOND, 59);\n      calendar.set(Calendar.MILLISECOND, 999);\n    }\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  private String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  private String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["105b8c63d8ae43de76f14005b62a5657a4b8d9ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"105b8c63d8ae43de76f14005b62a5657a4b8d9ce":["d281db9007b19360dddcee9ecd7cfcabde1ca54e"],"d281db9007b19360dddcee9ecd7cfcabde1ca54e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64a84446b679daf1e25d901bf647686ade7fc1f0"]},"commit2Childs":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["64a84446b679daf1e25d901bf647686ade7fc1f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d281db9007b19360dddcee9ecd7cfcabde1ca54e"],"105b8c63d8ae43de76f14005b62a5657a4b8d9ce":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"d281db9007b19360dddcee9ecd7cfcabde1ca54e":["105b8c63d8ae43de76f14005b62a5657a4b8d9ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}