{"path":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(CharSequence).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(CharSequence).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(CharSequence).mjava","sourceNew":"  private int getHashCode(CharSequence text) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    int len = text.length();\n    if (ignoreCase) {\n      for (int i=0; i<len;) {\n        int codePointAt = charUtils.codePointAt(text, i);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text.charAt(i);\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(CharSequence text) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    int len = text.length();\n    if (ignoreCase) {\n      for (int i=0; i<len;) {\n        int codePointAt = charUtils.codePointAt(text, i);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text.charAt(i);\n      }\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#getHashCode(CharSequence).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#getHashCode(CharSequence).mjava","sourceNew":"  private int getHashCode(CharSequence text) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    int len = text.length();\n    if (ignoreCase) {\n      for (int i=0; i<len;) {\n        int codePointAt = charUtils.codePointAt(text, i);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text.charAt(i);\n      }\n    }\n    return code;\n  }\n\n","sourceOld":"  private int getHashCode(CharSequence text) {\n    if (text == null)\n      throw new NullPointerException();\n    int code = 0;\n    int len = text.length();\n    if (ignoreCase) {\n      for (int i=0; i<len;) {\n        int codePointAt = charUtils.codePointAt(text, i);\n        code = code*31 + Character.toLowerCase(codePointAt);\n        i += Character.charCount(codePointAt);\n      }\n    } else {\n      for (int i=0; i<len; i++) {\n        code = code*31 + text.charAt(i);\n      }\n    }\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}