{"path":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","commits":[{"id":"dc63f17f42c64d6ccc8c361cfcdf074f115f770c","date":1294930751,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,boolean,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, true, false);\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4","date":1295478199,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(searcher.getSimilarity(), context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5e679b9c5f68f1f331de920ae8366af75b44060","date":1295555804,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(searcher.getSimilarity(), context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(getSimilarity(searcher), context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8fda790e002fff32e201cbd0f7bed4c2b333a64","date":1309401082,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/BoostedQuery.BoostedWeight#scorer(AtomicReaderContext,ScorerContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(AtomicReaderContext context, ScorerContext scorerContext) throws IOException {\n      Scorer subQueryScorer = qWeight.scorer(context, ScorerContext.def());\n      if(subQueryScorer == null) {\n        return null;\n      }\n      return new BoostedQuery.CustomScorer(context, this, subQueryScorer, boostVal);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["e5e679b9c5f68f1f331de920ae8366af75b44060"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e5e679b9c5f68f1f331de920ae8366af75b44060"],"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e5e679b9c5f68f1f331de920ae8366af75b44060":["03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["e5e679b9c5f68f1f331de920ae8366af75b44060","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","e5e679b9c5f68f1f331de920ae8366af75b44060"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["e5e679b9c5f68f1f331de920ae8366af75b44060","c8fda790e002fff32e201cbd0f7bed4c2b333a64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8fda790e002fff32e201cbd0f7bed4c2b333a64"]},"commit2Childs":{"c8fda790e002fff32e201cbd0f7bed4c2b333a64":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","dc63f17f42c64d6ccc8c361cfcdf074f115f770c","868da859b43505d9d2a023bfeae6dd0c795f5295"],"03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4":["e5e679b9c5f68f1f331de920ae8366af75b44060"],"e5e679b9c5f68f1f331de920ae8366af75b44060":["c8fda790e002fff32e201cbd0f7bed4c2b333a64","29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["03cb5827cf46528aa8d9b3ef5eaeeccda861b1f4","868da859b43505d9d2a023bfeae6dd0c795f5295"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}