{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","commits":[{"id":"66ad19eb69be5720d673695d38a1f5a0fed70c06","date":1366664507,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","pathOld":"/dev/null","sourceNew":"  boolean iterating() {\n    switch (docID()) {\n    case -1:\n    case NO_MORE_DOCS:\n      return false;\n    default:\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5","date":1429083443,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","sourceNew":"  boolean iterating() {\n    // we cannot assert that state == ITERATING because of CachingScorerWrapper\n    switch (docID()) {\n    case -1:\n    case NO_MORE_DOCS:\n      return false;\n    default:\n      return state != IteratorState.APPROXIMATING; // Matches must be confirmed before calling freq() or score()\n    }\n  }\n\n","sourceOld":"  boolean iterating() {\n    switch (docID()) {\n    case -1:\n    case NO_MORE_DOCS:\n      return false;\n    default:\n      return true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","sourceNew":"  boolean iterating() {\n    // we cannot assert that state == ITERATING because of CachingScorerWrapper\n    switch (docID()) {\n    case -1:\n    case DocIdSetIterator.NO_MORE_DOCS:\n      return false;\n    default:\n      return state != IteratorState.APPROXIMATING; // Matches must be confirmed before calling freq() or score()\n    }\n  }\n\n","sourceOld":"  boolean iterating() {\n    // we cannot assert that state == ITERATING because of CachingScorerWrapper\n    switch (docID()) {\n    case -1:\n    case NO_MORE_DOCS:\n      return false;\n    default:\n      return state != IteratorState.APPROXIMATING; // Matches must be confirmed before calling freq() or score()\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"523cc6563c99a55527ef7993efc5413c6648852d","date":1518704038,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#iterating().mjava","sourceNew":"  boolean iterating() {\n    // we cannot assert that state == ITERATING because of CachingScorerWrapper\n    switch (docID()) {\n    case -1:\n    case DocIdSetIterator.NO_MORE_DOCS:\n      return false;\n    default:\n      return state == IteratorState.ITERATING;\n    }\n  }\n\n","sourceOld":"  boolean iterating() {\n    // we cannot assert that state == ITERATING because of CachingScorerWrapper\n    switch (docID()) {\n    case -1:\n    case DocIdSetIterator.NO_MORE_DOCS:\n      return false;\n    default:\n      return state != IteratorState.APPROXIMATING; // Matches must be confirmed before calling freq() or score()\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5"],"523cc6563c99a55527ef7993efc5413c6648852d":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["523cc6563c99a55527ef7993efc5413c6648852d"]},"commit2Childs":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5"],"ac499dbbdb250b9bf6a4846ff4db7b1cb304f9c5":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["523cc6563c99a55527ef7993efc5413c6648852d"],"523cc6563c99a55527ef7993efc5413c6648852d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}