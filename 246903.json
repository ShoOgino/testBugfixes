{"path":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#FuzzyTermsEnum(Terms,Term,int,int,boolean).mjava","commits":[{"id":"3e99d92de6748e3bbd2dd7b72695cdb952b2d835","date":1579100291,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#FuzzyTermsEnum(Terms,Term,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Constructor for enumeration of all terms from specified <code>reader</code> which share a prefix of\n   * length <code>prefixLength</code> with <code>term</code> and which have at most {@code maxEdits} edits.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first\n   * valid term if such a term exists.\n   *\n   * @param terms Delivers terms.\n   * @param term Pattern term.\n   * @param maxEdits Maximum edit distance.\n   * @param prefixLength the length of the required common prefix\n   * @param transpositions whether transpositions should count as a single edit\n   * @throws IOException if there is a low-level IO error\n   */\n  public FuzzyTermsEnum(Terms terms, Term term, int maxEdits, int prefixLength, boolean transpositions) throws IOException {\n    this(terms, term, stringToUTF32(term.text()), maxEdits, prefixLength, transpositions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6","date":1588847334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#FuzzyTermsEnum(Terms,Term,int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#FuzzyTermsEnum(Terms,Term,int,int,boolean).mjava","sourceNew":"  /**\n   * Constructor for enumeration of all terms from specified <code>reader</code> which share a prefix of\n   * length <code>prefixLength</code> with <code>term</code> and which have at most {@code maxEdits} edits.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first\n   * valid term if such a term exists.\n   *\n   * @param terms Delivers terms.\n   * @param term Pattern term.\n   * @param maxEdits Maximum edit distance.\n   * @param prefixLength the length of the required common prefix\n   * @param transpositions whether transpositions should count as a single edit\n   * @throws IOException if there is a low-level IO error\n   */\n  public FuzzyTermsEnum(Terms terms, Term term, int maxEdits, int prefixLength, boolean transpositions) throws IOException {\n    this(terms, new AttributeSource(), term, () -> new FuzzyAutomatonBuilder(term.text(), maxEdits, prefixLength, transpositions));\n  }\n\n","sourceOld":"  /**\n   * Constructor for enumeration of all terms from specified <code>reader</code> which share a prefix of\n   * length <code>prefixLength</code> with <code>term</code> and which have at most {@code maxEdits} edits.\n   * <p>\n   * After calling the constructor the enumeration is already pointing to the first\n   * valid term if such a term exists.\n   *\n   * @param terms Delivers terms.\n   * @param term Pattern term.\n   * @param maxEdits Maximum edit distance.\n   * @param prefixLength the length of the required common prefix\n   * @param transpositions whether transpositions should count as a single edit\n   * @throws IOException if there is a low-level IO error\n   */\n  public FuzzyTermsEnum(Terms terms, Term term, int maxEdits, int prefixLength, boolean transpositions) throws IOException {\n    this(terms, term, stringToUTF32(term.text()), maxEdits, prefixLength, transpositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e99d92de6748e3bbd2dd7b72695cdb952b2d835":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["3e99d92de6748e3bbd2dd7b72695cdb952b2d835"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"]},"commit2Childs":{"3e99d92de6748e3bbd2dd7b72695cdb952b2d835":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e99d92de6748e3bbd2dd7b72695cdb952b2d835"],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}