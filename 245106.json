{"path":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","sourceNew":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new FuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new FuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new FuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new FuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","sourceNew":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new FuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new FuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new FuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new FuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d374631bb6f5665bd5907a6186a9bb283a315f7d","date":1336345692,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowFuzzyQuery#testTokenLengthOpt().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#testTokenLengthOpt().mjava","sourceNew":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new SlowFuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new SlowFuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new SlowFuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new SlowFuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testTokenLengthOpt() throws IOException {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    addDoc(\"12345678911\", writer);\n    addDoc(\"segment\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    Query query;\n    // term not over 10 chars, so optimization shortcuts\n    query = new FuzzyQuery(new Term(\"field\", \"1234569\"), 0.9f);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n\n    // 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"1234567891\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    // over 10 chars, so no optimization\n    query = new FuzzyQuery(new Term(\"field\", \"12345678911\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n\n    // over 10 chars, no match\n    query = new FuzzyQuery(new Term(\"field\", \"sdfsdfsdfsdf\"), 0.9f);\n    hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d374631bb6f5665bd5907a6186a9bb283a315f7d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d374631bb6f5665bd5907a6186a9bb283a315f7d"],"d374631bb6f5665bd5907a6186a9bb283a315f7d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}