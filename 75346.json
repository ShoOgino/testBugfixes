{"path":"lucene/src/java/org/apache/lucene/document/Field#Field(String,Reader,IndexableFieldType).mjava","commits":[{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,Reader,IndexableFieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,IndexableFieldType,Reader).mjava","sourceNew":"  public Field(String name, Reader reader, IndexableFieldType type) {\n    if (name == null) {\n      throw new NullPointerException(\"name cannot be null\");\n    }\n    if (reader == null) {\n      throw new NullPointerException(\"reader cannot be null\");\n    }\n    if (type.indexed() && !type.tokenized()) {\n      throw new IllegalArgumentException(\"Non-tokenized fields must use String values\");\n    }\n    \n    this.name = name;\n    this.fieldsData = reader;\n    this.type = type;\n  }\n\n","sourceOld":"  public Field(String name, IndexableFieldType type, Reader reader) {\n    if (name == null) {\n      throw new NullPointerException(\"name cannot be null\");\n    }\n    if (reader == null) {\n      throw new NullPointerException(\"reader cannot be null\");\n    }\n    if (type.indexed() && !type.tokenized()) {\n      throw new IllegalArgumentException(\"Non-tokenized fields must use String values\");\n    }\n    \n    this.name = name;\n    this.fieldsData = reader;\n    this.type = type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#Field(String,Reader,FieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#Field(String,Reader,IndexableFieldType).mjava","sourceNew":"  /**\n   * Create field with Reader value.\n   */\n  public Field(String name, Reader reader, FieldType type) {\n    if (name == null) {\n      throw new IllegalArgumentException(\"name cannot be null\");\n    }\n    if (type == null) {\n      throw new IllegalArgumentException(\"type cannot be null\");\n    }\n    if (reader == null) {\n      throw new NullPointerException(\"reader cannot be null\");\n    }\n    if (type.stored()) {\n      throw new IllegalArgumentException(\"fields with a Reader value cannot be stored\");\n    }\n    if (type.indexed() && !type.tokenized()) {\n      throw new IllegalArgumentException(\"non-tokenized fields must use String values\");\n    }\n    \n    this.name = name;\n    this.fieldsData = reader;\n    this.type = type;\n  }\n\n","sourceOld":"  public Field(String name, Reader reader, IndexableFieldType type) {\n    if (name == null) {\n      throw new NullPointerException(\"name cannot be null\");\n    }\n    if (reader == null) {\n      throw new NullPointerException(\"reader cannot be null\");\n    }\n    if (type.indexed() && !type.tokenized()) {\n      throw new IllegalArgumentException(\"Non-tokenized fields must use String values\");\n    }\n    \n    this.name = name;\n    this.fieldsData = reader;\n    this.type = type;\n  }\n\n","bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0f44f887719e97183771e977cfc4bfb485b766"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"fa0f44f887719e97183771e977cfc4bfb485b766":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}