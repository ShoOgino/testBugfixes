{"path":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","commits":[{"id":"a94e45463a0089149b0d148ae5369140e7f54b8c","date":1419231934,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a {@link ShardRequest} to retrieve per-shard stats related to the\n   * current query and the current state of the requester's {@link StatsCache}.\n   *\n   * @param rb contains current request\n   * @return shard request to retrieve stats for terms in the current request,\n   * or null if no additional request is needed (e.g. if the information\n   * in global cache is already sufficient to satisfy this request).\n   */\n  public abstract ShardRequest retrieveStatsRequest(ResponseBuilder rb);\n\n","sourceOld":null,"bugFix":null,"bugIntro":["df72a23fb74bebe914e3f3972063a884327c0436"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","sourceNew":"  /**\n   * Creates a {@link ShardRequest} to retrieve per-shard stats related to the\n   * current query and the current state of the requester's {@link StatsCache}.\n   * <p>This method updates the cache metrics and calls {@link #doRetrieveStatsRequest(ResponseBuilder)}.</p>\n   *\n   * @param rb contains current request\n   * @return shard request to retrieve stats for terms in the current request,\n   * or null if no additional request is needed (e.g. if the information\n   * in global cache is already sufficient to satisfy this request).\n   */\n  public ShardRequest retrieveStatsRequest(ResponseBuilder rb) {\n    statsCacheMetrics.retrieveStats.increment();\n    return doRetrieveStatsRequest(rb);\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link ShardRequest} to retrieve per-shard stats related to the\n   * current query and the current state of the requester's {@link StatsCache}.\n   *\n   * @param rb contains current request\n   * @return shard request to retrieve stats for terms in the current request,\n   * or null if no additional request is needed (e.g. if the information\n   * in global cache is already sufficient to satisfy this request).\n   */\n  public abstract ShardRequest retrieveStatsRequest(ResponseBuilder rb);\n\n","bugFix":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsCache#retrieveStatsRequest(ResponseBuilder).mjava","sourceNew":"  /**\n   * Creates a {@link ShardRequest} to retrieve per-shard stats related to the\n   * current query and the current state of the requester's {@link StatsCache}.\n   * <p>This method updates the cache metrics and calls {@link #doRetrieveStatsRequest(ResponseBuilder)}.</p>\n   *\n   * @param rb contains current request\n   * @return shard request to retrieve stats for terms in the current request,\n   * or null if no additional request is needed (e.g. if the information\n   * in global cache is already sufficient to satisfy this request).\n   */\n  public ShardRequest retrieveStatsRequest(ResponseBuilder rb) {\n    statsCacheMetrics.retrieveStats.increment();\n    return doRetrieveStatsRequest(rb);\n  }\n\n","sourceOld":"  /**\n   * Creates a {@link ShardRequest} to retrieve per-shard stats related to the\n   * current query and the current state of the requester's {@link StatsCache}.\n   *\n   * @param rb contains current request\n   * @return shard request to retrieve stats for terms in the current request,\n   * or null if no additional request is needed (e.g. if the information\n   * in global cache is already sufficient to satisfy this request).\n   */\n  public abstract ShardRequest retrieveStatsRequest(ResponseBuilder rb);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df72a23fb74bebe914e3f3972063a884327c0436":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df72a23fb74bebe914e3f3972063a884327c0436"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a94e45463a0089149b0d148ae5369140e7f54b8c","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"df72a23fb74bebe914e3f3972063a884327c0436":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}