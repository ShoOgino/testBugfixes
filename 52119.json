{"path":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"/dev/null","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.TOKENIZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.TOKENIZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.TOKENIZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.TOKENIZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(Version.LUCENE_CURRENT));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(Version.LUCENE_CURRENT));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      Analyzer analyzer = new WhitespaceAnalyzer();\n      IndexWriter writer = new IndexWriter(db, analyzer, true, \n                                           IndexWriter.MaxFieldLength.LIMITED);\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new RAMDirectory();\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new WhitespaceAnalyzer(Version.LUCENE_CURRENT)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["d04b321158481d3895702b3cbf6821a3083e6c15"],"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"d04b321158481d3895702b3cbf6821a3083e6c15":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}