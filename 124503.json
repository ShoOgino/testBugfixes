{"path":"src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","commits":[{"id":"4d1d1f748be6299a4bb58280fa1697824edc82c6","date":1172182682,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A SolrQueryParser linked to this IndexSchema for field datatype\n   * information, and populated with default options from the\n   * &lt;solrQueryParser&gt; configuration for this IndexSchema.\n   *\n   * @param defaultField if non-null overrides the schema default\n   */\n  public SolrQueryParser getSolrQueryParser(String defaultField) {\n    SolrQueryParser qp = new SolrQueryParser(this,defaultField);\n    String operator = getQueryParserDefaultOperator();\n    qp.setDefaultOperator(\"AND\".equals(operator) ?\n                          QueryParser.Operator.AND : QueryParser.Operator.OR);\n    return qp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbca8d36fa6e78e5f32059dc9c80da83e66470de","date":1249752043,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","sourceNew":"  /**\n   * A SolrQueryParser linked to this IndexSchema for field datatype\n   * information, and populated with default options from the\n   * &lt;solrQueryParser&gt; configuration for this IndexSchema.\n   *\n   * @param defaultField if non-null overrides the schema default\n   * @deprecated\n   */\n  public SolrQueryParser getSolrQueryParser(String defaultField) {\n    SolrQueryParser qp = new SolrQueryParser(this,defaultField);\n    String operator = getQueryParserDefaultOperator();\n    qp.setDefaultOperator(\"AND\".equals(operator) ?\n                          QueryParser.Operator.AND : QueryParser.Operator.OR);\n    return qp;\n  }\n\n","sourceOld":"  /**\n   * A SolrQueryParser linked to this IndexSchema for field datatype\n   * information, and populated with default options from the\n   * &lt;solrQueryParser&gt; configuration for this IndexSchema.\n   *\n   * @param defaultField if non-null overrides the schema default\n   */\n  public SolrQueryParser getSolrQueryParser(String defaultField) {\n    SolrQueryParser qp = new SolrQueryParser(this,defaultField);\n    String operator = getQueryParserDefaultOperator();\n    qp.setDefaultOperator(\"AND\".equals(operator) ?\n                          QueryParser.Operator.AND : QueryParser.Operator.OR);\n    return qp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#getSolrQueryParser(String).mjava","sourceNew":"  /**\n   * A SolrQueryParser linked to this IndexSchema for field datatype\n   * information, and populated with default options from the\n   * &lt;solrQueryParser&gt; configuration for this IndexSchema.\n   *\n   * @param defaultField if non-null overrides the schema default\n   * @deprecated\n   */\n  public SolrQueryParser getSolrQueryParser(String defaultField) {\n    SolrQueryParser qp = new SolrQueryParser(this,defaultField);\n    String operator = getQueryParserDefaultOperator();\n    qp.setDefaultOperator(\"AND\".equals(operator) ?\n                          QueryParser.Operator.AND : QueryParser.Operator.OR);\n    return qp;\n  }\n\n","sourceOld":"  /**\n   * A SolrQueryParser linked to this IndexSchema for field datatype\n   * information, and populated with default options from the\n   * &lt;solrQueryParser&gt; configuration for this IndexSchema.\n   *\n   * @param defaultField if non-null overrides the schema default\n   * @deprecated\n   */\n  public SolrQueryParser getSolrQueryParser(String defaultField) {\n    SolrQueryParser qp = new SolrQueryParser(this,defaultField);\n    String operator = getQueryParserDefaultOperator();\n    qp.setDefaultOperator(\"AND\".equals(operator) ?\n                          QueryParser.Operator.AND : QueryParser.Operator.OR);\n    return qp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbca8d36fa6e78e5f32059dc9c80da83e66470de":["4d1d1f748be6299a4bb58280fa1697824edc82c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cbca8d36fa6e78e5f32059dc9c80da83e66470de"],"4d1d1f748be6299a4bb58280fa1697824edc82c6":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"cbca8d36fa6e78e5f32059dc9c80da83e66470de":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d1d1f748be6299a4bb58280fa1697824edc82c6"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"4d1d1f748be6299a4bb58280fa1697824edc82c6":["cbca8d36fa6e78e5f32059dc9c80da83e66470de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}