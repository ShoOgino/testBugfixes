{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","sourceNew":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(doc, term.field(), payloadsSeen, payloadScore);\n      }\n\n","sourceOld":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(doc, term.field(), payloadsSeen, payloadScore);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4409879b1445c56c3834b823720d47c08c409c5","date":1428086307,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","sourceNew":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(docID(), term.field(), payloadsSeen, payloadScore);\n      }\n\n","sourceOld":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(doc, term.field(), payloadsSeen, payloadScore);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","sourceNew":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(docID(), term.field(), payloadsSeen, payloadScore);\n      }\n\n","sourceOld":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(doc, term.field(), payloadsSeen, payloadScore);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73561ba4c64c1aea2ba4b3873f80b9b2a2946816","date":1438618499,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#getPayloadScore().mjava","sourceNew":null,"sourceOld":"      /**\n       * The score for the payload\n       * \n       * @return The score, as calculated by\n       *         {@link PayloadFunction#docScore(int, String, int, float)}\n       */\n      protected float getPayloadScore() {\n        return function.docScore(docID(), term.field(), payloadsSeen, payloadScore);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["f4409879b1445c56c3834b823720d47c08c409c5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4409879b1445c56c3834b823720d47c08c409c5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f4409879b1445c56c3834b823720d47c08c409c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"]},"commit2Childs":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f4409879b1445c56c3834b823720d47c08c409c5","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f4409879b1445c56c3834b823720d47c08c409c5":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}