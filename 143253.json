{"path":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","commits":[{"id":"bf0aa6856a12eff25ab6d79dec11bea9e4031ca2","date":1505775734,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sometimes we could fetch a field value from either the stored document or docValues.\n   * Such fields have both and are single-valued.\n   * If choosing docValues allows us to avoid accessing the stored document altogether\n   * for all fields to be returned then we do it,\n   * otherwise we prefer the stored value when we have a choice.\n   */\n  void optimize(SolrDocumentFetcher docFetcher) {\n    optimize(docFetcher.getAllSingleDV());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04af4a840c8f501ba34e09e382b8f8ace82aa51e","date":1505847466,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sometimes we could fetch a field value from either the stored document or docValues.\n   * Such fields have both and are single-valued.\n   * If choosing docValues allows us to avoid accessing the stored document altogether\n   * for all fields to be returned then we do it,\n   * otherwise we prefer the stored value when we have a choice.\n   */\n  void optimize(SolrDocumentFetcher docFetcher) {\n    optimize(docFetcher.getAllSingleDV());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79","date":1509089658,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","sourceNew":"  /**\n   * Sometimes we could fetch a field value from either the stored document or docValues.\n   * Such fields have both and are single-valued.\n   * If choosing docValues allows us to avoid accessing the stored document altogether\n   * for all fields to be returned then we do it,\n   * otherwise we prefer the stored value when we have a choice.\n   */\n  void optimize(SolrDocumentFetcher docFetcher) {\n    optimize(docFetcher.getDvsCanSubstituteStored());\n  }\n\n","sourceOld":"  /**\n   * Sometimes we could fetch a field value from either the stored document or docValues.\n   * Such fields have both and are single-valued.\n   * If choosing docValues allows us to avoid accessing the stored document altogether\n   * for all fields to be returned then we do it,\n   * otherwise we prefer the stored value when we have a choice.\n   */\n  void optimize(SolrDocumentFetcher docFetcher) {\n    optimize(docFetcher.getAllSingleDV());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ecd141e96e7a7a65822d7fada5ddc585b21149","date":1534786652,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/RetrieveFieldsOptimizer#optimize(SolrDocumentFetcher).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sometimes we could fetch a field value from either the stored document or docValues.\n   * Such fields have both and are single-valued.\n   * If choosing docValues allows us to avoid accessing the stored document altogether\n   * for all fields to be returned then we do it,\n   * otherwise we prefer the stored value when we have a choice.\n   */\n  void optimize(SolrDocumentFetcher docFetcher) {\n    optimize(docFetcher.getDvsCanSubstituteStored());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["55ac9ae04c11f9e36330ee2448ef214c4fdbfc79"],"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79":["bf0aa6856a12eff25ab6d79dec11bea9e4031ca2"],"04af4a840c8f501ba34e09e382b8f8ace82aa51e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf0aa6856a12eff25ab6d79dec11bea9e4031ca2"],"bf0aa6856a12eff25ab6d79dec11bea9e4031ca2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ecd141e96e7a7a65822d7fada5ddc585b21149"]},"commit2Childs":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55ac9ae04c11f9e36330ee2448ef214c4fdbfc79":["96ecd141e96e7a7a65822d7fada5ddc585b21149"],"04af4a840c8f501ba34e09e382b8f8ace82aa51e":[],"bf0aa6856a12eff25ab6d79dec11bea9e4031ca2":["55ac9ae04c11f9e36330ee2448ef214c4fdbfc79","04af4a840c8f501ba34e09e382b8f8ace82aa51e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04af4a840c8f501ba34e09e382b8f8ace82aa51e","bf0aa6856a12eff25ab6d79dec11bea9e4031ca2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04af4a840c8f501ba34e09e382b8f8ace82aa51e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}