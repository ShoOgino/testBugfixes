{"path":"solr/core/src/java/org/apache/solr/servlet/CheckLoggingConfiguration#check().mjava","commits":[{"id":"be47cd894eae840edc6a5d0832c13ca34dc7feb8","date":1396481059,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/CheckLoggingConfiguration#check().mjava","pathOld":"/dev/null","sourceNew":"  static void check() {\n    try {\n      LoggerFactory.getLogger(CheckLoggingConfiguration.class);\n    } catch (NoClassDefFoundError e) {\n      throw new NoClassDefFoundError(\"Failed to initialize Apache Solr: \"\n          +\"Could not find necessary SLF4j logging jars. If using Jetty, the SLF4j logging jars need to go in \"\n          +\"the jetty lib/ext directory. For other containers, the corresponding directory should be used. \"\n          +\"For more information, see: http://wiki.apache.org/solr/SolrLogging\");\n    }  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/CheckLoggingConfiguration#check().mjava","pathOld":"/dev/null","sourceNew":"  static void check() {\n    try {\n      LoggerFactory.getLogger(CheckLoggingConfiguration.class);\n    } catch (NoClassDefFoundError e) {\n      throw new NoClassDefFoundError(\"Failed to initialize Apache Solr: \"\n          +\"Could not find necessary SLF4j logging jars. If using Jetty, the SLF4j logging jars need to go in \"\n          +\"the jetty lib/ext directory. For other containers, the corresponding directory should be used. \"\n          +\"For more information, see: http://wiki.apache.org/solr/SolrLogging\");\n    }  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/CheckLoggingConfiguration#check().mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/CheckLoggingConfiguration#check().mjava","sourceNew":"  static void check() {\n    try {\n      LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\n    } catch (NoClassDefFoundError e) {\n      throw new NoClassDefFoundError(\"Failed to initialize Apache Solr: \"\n          +\"Could not find necessary SLF4j logging jars. If using Jetty, the SLF4j logging jars need to go in \"\n          +\"the jetty lib/ext directory. For other containers, the corresponding directory should be used. \"\n          +\"For more information, see: http://wiki.apache.org/solr/SolrLogging\");\n    }  \n  }\n\n","sourceOld":"  static void check() {\n    try {\n      LoggerFactory.getLogger(CheckLoggingConfiguration.class);\n    } catch (NoClassDefFoundError e) {\n      throw new NoClassDefFoundError(\"Failed to initialize Apache Solr: \"\n          +\"Could not find necessary SLF4j logging jars. If using Jetty, the SLF4j logging jars need to go in \"\n          +\"the jetty lib/ext directory. For other containers, the corresponding directory should be used. \"\n          +\"For more information, see: http://wiki.apache.org/solr/SolrLogging\");\n    }  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","be47cd894eae840edc6a5d0832c13ca34dc7feb8"],"be47cd894eae840edc6a5d0832c13ca34dc7feb8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["be47cd894eae840edc6a5d0832c13ca34dc7feb8"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"be47cd894eae840edc6a5d0832c13ca34dc7feb8":["5eb2511ababf862ea11e10761c70ee560cd84510","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","be47cd894eae840edc6a5d0832c13ca34dc7feb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}