{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerTest#createTriggerProps(List[String],long,double,double).mjava","commits":[{"id":"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a","date":1524514741,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerTest#createTriggerProps(List[String],long,double,double).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerTest#createTriggerProps(long,double).mjava","sourceNew":"  private Map<String, Object> createTriggerProps(List<String> collections, long waitForSeconds, double aboveRate, double belowRate) {\n    Map<String, Object> props = new HashMap<>();\n    props.put(\"aboveRate\", aboveRate);\n    props.put(\"belowRate\", belowRate);\n    props.put(\"event\", \"searchRate\");\n    props.put(\"waitFor\", waitForSeconds);\n    props.put(\"enabled\", true);\n    if (collections != null && !collections.isEmpty()) {\n      props.put(\"collections\", String.join(\",\", collections));\n    }\n    List<Map<String, String>> actions = new ArrayList<>(3);\n    Map<String, String> map = new HashMap<>(2);\n    map.put(\"name\", \"compute_plan\");\n    map.put(\"class\", \"solr.ComputePlanAction\");\n    actions.add(map);\n    map = new HashMap<>(2);\n    map.put(\"name\", \"execute_plan\");\n    map.put(\"class\", \"solr.ExecutePlanAction\");\n    actions.add(map);\n    props.put(\"actions\", actions);\n    return props;\n  }\n\n","sourceOld":"  private Map<String, Object> createTriggerProps(long waitForSeconds, double rate) {\n    Map<String, Object> props = new HashMap<>();\n    props.put(\"rate\", rate);\n    props.put(\"event\", \"searchRate\");\n    props.put(\"waitFor\", waitForSeconds);\n    props.put(\"enabled\", true);\n    List<Map<String, String>> actions = new ArrayList<>(3);\n    Map<String, String> map = new HashMap<>(2);\n    map.put(\"name\", \"compute_plan\");\n    map.put(\"class\", \"solr.ComputePlanAction\");\n    actions.add(map);\n    map = new HashMap<>(2);\n    map.put(\"name\", \"execute_plan\");\n    map.put(\"class\", \"solr.ExecutePlanAction\");\n    actions.add(map);\n    props.put(\"actions\", actions);\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerTest#createTriggerProps(List[String],long,double,double).mjava","sourceNew":null,"sourceOld":"  private Map<String, Object> createTriggerProps(List<String> collections, long waitForSeconds, double aboveRate, double belowRate) {\n    Map<String, Object> props = new HashMap<>();\n    props.put(\"aboveRate\", aboveRate);\n    props.put(\"belowRate\", belowRate);\n    props.put(\"event\", \"searchRate\");\n    props.put(\"waitFor\", waitForSeconds);\n    props.put(\"enabled\", true);\n    if (collections != null && !collections.isEmpty()) {\n      props.put(\"collections\", String.join(\",\", collections));\n    }\n    List<Map<String, String>> actions = new ArrayList<>(3);\n    Map<String, String> map = new HashMap<>(2);\n    map.put(\"name\", \"compute_plan\");\n    map.put(\"class\", \"solr.ComputePlanAction\");\n    actions.add(map);\n    map = new HashMap<>(2);\n    map.put(\"name\", \"execute_plan\");\n    map.put(\"class\", \"solr.ExecutePlanAction\");\n    actions.add(map);\n    props.put(\"actions\", actions);\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}