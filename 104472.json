{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) \n  {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for( SolrCoreAware aware : arr) {\n        aware.inform( core );\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    this.dataDir = core.getDataDir();\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fc1087854af39c9b439f47d913fd3ac1d85ac5c","date":1599523122,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    this.coreName = core.getName();\n    this.config = core.getSolrConfig();\n    this.coreId = core.uniqueId;\n    this.coreContainer = core.getCoreContainer();\n    if(getSchemaLoader() != null) core.getPackageListeners().addListener(schemaLoader);\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"938fe8fd4d30ae70161827366f67c2382985e446","date":1600050178,"type":3,"author":"noblepaul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    this.coreName = core.getName();\n    this.config = core.getSolrConfig();\n    this.coreId = core.uniqueId;\n    this.coreContainer = core.getCoreContainer();\n    if(getSchemaLoader() != null) core.getPackageListeners().addListener(schemaLoader);\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e451e492cce54699988e2ce0aea55e3ff170cb0","date":1600305561,"type":3,"author":"noblepaul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#inform(SolrCore).mjava","sourceNew":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    this.coreName = core.getName();\n    this.config = core.getSolrConfig();\n    this.coreId = core.uniqueId;\n    this.coreContainer = core.getCoreContainer();\n    if(getSchemaLoader() != null) core.getPackageListeners().addListener(schemaLoader);\n\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","sourceOld":"  /**\n   * Tell all {@link SolrCoreAware} instances about the SolrCore\n   */\n  public void inform(SolrCore core) {\n    // make a copy to avoid potential deadlock of a callback calling newInstance and trying to\n    // add something to waitingForCore.\n    SolrCoreAware[] arr;\n\n    while (waitingForCore.size() > 0) {\n      synchronized (waitingForCore) {\n        arr = waitingForCore.toArray(new SolrCoreAware[waitingForCore.size()]);\n        waitingForCore.clear();\n      }\n\n      for (SolrCoreAware aware : arr) {\n        aware.inform(core);\n      }\n    }\n\n    // this is the last method to be called in SolrCore before the latch is released.\n    live = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1fc1087854af39c9b439f47d913fd3ac1d85ac5c":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"938fe8fd4d30ae70161827366f67c2382985e446":["1fc1087854af39c9b439f47d913fd3ac1d85ac5c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e451e492cce54699988e2ce0aea55e3ff170cb0":["938fe8fd4d30ae70161827366f67c2382985e446"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e451e492cce54699988e2ce0aea55e3ff170cb0"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["1fc1087854af39c9b439f47d913fd3ac1d85ac5c"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"1fc1087854af39c9b439f47d913fd3ac1d85ac5c":["938fe8fd4d30ae70161827366f67c2382985e446"],"938fe8fd4d30ae70161827366f67c2382985e446":["0e451e492cce54699988e2ce0aea55e3ff170cb0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0e451e492cce54699988e2ce0aea55e3ff170cb0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}