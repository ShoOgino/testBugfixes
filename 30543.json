{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","sourceNew":"  protected void decompose(final Token token) {\n    // In any case we give the original token back\n    tokens.add((Token) token.clone());\n\n    // Only words longer than minWordSize get processed\n    if (token.termLength() < this.minWordSize) {\n      return;\n    }\n    \n    decomposeInternal(token);\n  }\n\n","sourceOld":"  protected void decompose(final Token token) {\n    // In any case we give the original token back\n    tokens.add((Token) token.clone());\n\n    // Only words longer than minWordSize get processed\n    if (token.termLength() < this.minWordSize) {\n      return;\n    }\n    \n    decomposeInternal(token);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","sourceNew":"  protected void decompose(final Token token) {\n    // In any case we give the original token back\n    tokens.add((Token) token.clone());\n\n    // Only words longer than minWordSize get processed\n    if (token.length() < this.minWordSize) {\n      return;\n    }\n    \n    decomposeInternal(token);\n  }\n\n","sourceOld":"  protected void decompose(final Token token) {\n    // In any case we give the original token back\n    tokens.add((Token) token.clone());\n\n    // Only words longer than minWordSize get processed\n    if (token.termLength() < this.minWordSize) {\n      return;\n    }\n    \n    decomposeInternal(token);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e15bea9339982eec538668b67ae252b28e0003e","date":1319539476,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#decompose(Token).mjava","sourceNew":null,"sourceOld":"  protected void decompose(final Token token) {\n    // In any case we give the original token back\n    tokens.add((Token) token.clone());\n\n    // Only words longer than minWordSize get processed\n    if (token.length() < this.minWordSize) {\n      return;\n    }\n    \n    decomposeInternal(token);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e15bea9339982eec538668b67ae252b28e0003e":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e15bea9339982eec538668b67ae252b28e0003e"]},"commit2Childs":{"1e15bea9339982eec538668b67ae252b28e0003e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["1e15bea9339982eec538668b67ae252b28e0003e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}