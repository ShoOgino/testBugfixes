{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","commits":[{"id":"564a248c486a685e967252bbbd8d62b705bc85ba","date":1218304384,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateHandler,SolrResourceLoader,IndexSchema).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.log(Level.SEVERE, \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n      public Class loadClass(String name) throws ClassNotFoundException {\n        return loader.findClass(name);\n      }\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateHandler updater,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(updater, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          Document document = DocumentBuilder.toDocument(\n                  ((SolrDocumentWrapper) d).doc, schema);\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<Document>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.log(Level.SEVERE, \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n      public Class loadClass(String name) throws ClassNotFoundException {\n        return loader.findClass(name);\n      }\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d22c66b0638c82521891318fc352042c5b86e03","date":1219993248,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.log(Level.SEVERE, \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.log(Level.SEVERE, \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n      public Class loadClass(String name) throws ClassNotFoundException {\n        return loader.findClass(name);\n      }\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.log(Level.SEVERE, \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"157728c1f42b384dfc049157cc95adc767da3415","date":1224572739,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,IndexSchema).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final IndexSchema schema) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrDoc d) {\n        try {\n          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + d, e);\n          return false;\n        }\n      }\n\n      public void log(int event, String name, Object row) {\n        if (debugLogger == null) {\n          debugLogger = new DebugLogger();\n        }\n        debugLogger.log(event, name, row);\n      }\n\n\n\n      public SolrDoc getSolrDocInstance() {\n        return new SolrDocumentWrapper();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["00e13feee5c0e49640da959c282367763b8bdbde"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"564a248c486a685e967252bbbd8d62b705bc85ba":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"8d22c66b0638c82521891318fc352042c5b86e03":["564a248c486a685e967252bbbd8d62b705bc85ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"157728c1f42b384dfc049157cc95adc767da3415":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["8d22c66b0638c82521891318fc352042c5b86e03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"564a248c486a685e967252bbbd8d62b705bc85ba":["8d22c66b0638c82521891318fc352042c5b86e03"],"8d22c66b0638c82521891318fc352042c5b86e03":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["564a248c486a685e967252bbbd8d62b705bc85ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"157728c1f42b384dfc049157cc95adc767da3415":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["157728c1f42b384dfc049157cc95adc767da3415"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["157728c1f42b384dfc049157cc95adc767da3415","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}