{"path":"src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","commits":[{"id":"0452863ee588101738d341e6e97eb87eb010052a","date":1152814944,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Treats parameter value as a boolean.  The string 'false' is false; \n   * any other non-empty string is true.\n   */\n  public static boolean getBooleanParam(SolrQueryRequest req,\n                                       String param, boolean def) {        \n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return def;\n    }\n    return !\"false\".equals(v.trim());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0907819f524a744c3377371e616839271317ac6","date":1157570948,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","sourceNew":"  /**\n   * Treats parameter value as a boolean.  The string 'false' is false; \n   * any other non-empty string is true.\n   * @deprecated use SolrParam.getBool(String,boolean)\n   */\n  public static boolean getBooleanParam(SolrQueryRequest req,\n                                       String param, boolean def) {        \n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return def;\n    }\n    return !\"false\".equals(v.trim());\n  }\n\n","sourceOld":"  /**\n   * Treats parameter value as a boolean.  The string 'false' is false; \n   * any other non-empty string is true.\n   */\n  public static boolean getBooleanParam(SolrQueryRequest req,\n                                       String param, boolean def) {        \n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return def;\n    }\n    return !\"false\".equals(v.trim());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getBooleanParam(SolrQueryRequest,String,boolean).mjava","sourceNew":"  /**\n   * Treats parameter value as a boolean.  The string 'false' is false; \n   * any other non-empty string is true.\n   * @deprecated use SolrParam.getBool(String,boolean)\n   */\n  public static boolean getBooleanParam(SolrQueryRequest req,\n                                       String param, boolean def) {        \n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return def;\n    }\n    return !\"false\".equals(v.trim());\n  }\n\n","sourceOld":"  /**\n   * Treats parameter value as a boolean.  The string 'false' is false; \n   * any other non-empty string is true.\n   * @deprecated use SolrParam.getBool(String,boolean)\n   */\n  public static boolean getBooleanParam(SolrQueryRequest req,\n                                       String param, boolean def) {        \n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return def;\n    }\n    return !\"false\".equals(v.trim());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0452863ee588101738d341e6e97eb87eb010052a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c0907819f524a744c3377371e616839271317ac6"],"c0907819f524a744c3377371e616839271317ac6":["0452863ee588101738d341e6e97eb87eb010052a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0452863ee588101738d341e6e97eb87eb010052a":["c0907819f524a744c3377371e616839271317ac6"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0452863ee588101738d341e6e97eb87eb010052a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c0907819f524a744c3377371e616839271317ac6":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}