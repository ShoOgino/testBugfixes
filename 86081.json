{"path":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"/dev/null","sourceNew":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":null,"sourceOld":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","sourceOld":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"/dev/null","sourceNew":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","date":1269092670,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","sourceOld":"  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75e2de761fb1ae7720c92bb34603727f0ab187a8","date":1287098906,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3d502d76e3744c551eb42e061044585eea3f5eb","date":1287100242,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["4a1d67dfa126cb83a8dfeea520dbc2fae9ba823c","4a1d67dfa126cb83a8dfeea520dbc2fae9ba823c","4a1d67dfa126cb83a8dfeea520dbc2fae9ba823c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    SolrCore core = h.getCore();\n    SearchComponent speller = core.getSearchComponent(\"spellcheck\");\n    assertTrue(\"speller is null and it shouldn't be\", speller != null);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(CommonParams.QT, \"spellCheckCompRH\");\n    params.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    params.add(CommonParams.Q, \"documemt\");\n    params.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    params.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\n    SolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    NamedList values = rsp.getValues();\n    NamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n    NamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    String collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document\", collation);\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemt lowerfilt:broen^4\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document lowerfilt:brown^4\", collation);\n\n    params.remove(CommonParams.Q);\n    params.add(CommonParams.Q, \"documemtsss broens\");\n    handler = core.getRequestHandler(\"spellCheckCompRH\");\n    rsp = new SolrQueryResponse();\n    rsp.add(\"responseHeader\", new SimpleOrderedMap());\n    handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n    values = rsp.getValues();\n    spellCheck = (NamedList) values.get(\"spellcheck\");\n    suggestions = (NamedList) spellCheck.get(\"suggestions\");\n    collation = (String) suggestions.get(\"collation\");\n    assertEquals(\"document brown\",collation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollate().mjava","sourceNew":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testCollate() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", SpellCheckComponent.SPELLCHECK_BUILD, \"true\", \"q\",\"documemt\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemt lowerfilt:broen^4\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document lowerfilt:brown^4'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"documemtsss broens\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='document brown'\"\n    );\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",rh, SpellCheckComponent.COMPONENT_NAME, \"true\", \"q\",\"pixma-a-b-c-d-e-f-g\", SpellCheckComponent.SPELLCHECK_COLLATE, \"true\")\n       ,\"/spellcheck/suggestions/collation=='pixmaa'\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75e2de761fb1ae7720c92bb34603727f0ab187a8":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c3d502d76e3744c551eb42e061044585eea3f5eb","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","c3d502d76e3744c551eb42e061044585eea3f5eb"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c3d502d76e3744c551eb42e061044585eea3f5eb":["75e2de761fb1ae7720c92bb34603727f0ab187a8"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c3d502d76e3744c551eb42e061044585eea3f5eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c3d502d76e3744c551eb42e061044585eea3f5eb"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","c3d502d76e3744c551eb42e061044585eea3f5eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"75e2de761fb1ae7720c92bb34603727f0ab187a8":["c3d502d76e3744c551eb42e061044585eea3f5eb"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"c3d502d76e3744c551eb42e061044585eea3f5eb":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["75e2de761fb1ae7720c92bb34603727f0ab187a8","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}