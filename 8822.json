{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","commits":[{"id":"1b1713aa2c66e65f3f024e9c3c4876dfed130ceb","date":1417043528,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(\"name\"),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Name of the configuration for this core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"config\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3d1db6f36874f1979916ccb702329fbb09602af8","22440a249a0bc8ef779d5a60720725614a9460d4","ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d1db6f36874f1979916ccb702329fbb09602af8","date":1421105614,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(\"name\"),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(\"name\"),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Name of the configuration for this core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"config\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":["1b1713aa2c66e65f3f024e9c3c4876dfed130ceb"],"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(\"name\"),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(\"name\"),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22440a249a0bc8ef779d5a60720725614a9460d4","date":1432375174,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is http://localhost:8983/solr\")\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":["1b1713aa2c66e65f3f024e9c3c4876dfed130ceb"],"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    @Override\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCoreTool#getOptions().mjava","sourceNew":"    public Option[] getOptions() {\n      return new Option[] {\n          Option.builder(\"solrUrl\")\n              .argName(\"URL\")\n              .hasArg()\n              .required(false)\n              .desc(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .build(),\n          Option.builder(NAME)\n              .argName(\"NAME\")\n              .hasArg()\n              .required(true)\n              .desc(\"Name of the core to create.\")\n              .build(),\n          Option.builder(\"confdir\")\n              .argName(\"CONFIG\")\n              .hasArg()\n              .required(false)\n              .desc(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .build(),\n          Option.builder(\"configsetsDir\")\n              .argName(\"DIR\")\n              .hasArg()\n              .required(true)\n              .desc(\"Path to configsets directory on the local system.\")\n              .build(),\n          Option.builder(\"verbose\")\n              .required(false)\n              .desc(\"Enable more verbose command output.\")\n              .build()\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[] {\n          OptionBuilder\n              .withArgName(\"URL\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Base Solr URL, default is \" + DEFAULT_SOLR_URL)\n              .create(\"solrUrl\"),\n          OptionBuilder\n              .withArgName(\"NAME\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Name of the core to create.\")\n              .create(NAME),\n          OptionBuilder\n              .withArgName(\"CONFIG\")\n              .hasArg()\n              .isRequired(false)\n              .withDescription(\"Configuration directory to copy when creating the new core; default is \"+DEFAULT_CONFIG_SET)\n              .create(\"confdir\"),\n          OptionBuilder\n              .withArgName(\"DIR\")\n              .hasArg()\n              .isRequired(true)\n              .withDescription(\"Path to configsets directory on the local system.\")\n              .create(\"configsetsDir\"),\n              OptionBuilder\n              .isRequired(false)\n              .withDescription(\"Enable more verbose command output.\")\n              .create(\"verbose\")\n      };\n    }\n\n","bugFix":["3d1db6f36874f1979916ccb702329fbb09602af8","22440a249a0bc8ef779d5a60720725614a9460d4","1b1713aa2c66e65f3f024e9c3c4876dfed130ceb","1390137e395d2f07f9ba5b8c43d293befe84d563","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b79a5db147a1c6f95d1625ddbc3561ef56955225":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"4ca20be81c9284c840498143264e583ccbb8525a":["22440a249a0bc8ef779d5a60720725614a9460d4"],"3d1db6f36874f1979916ccb702329fbb09602af8":["1b1713aa2c66e65f3f024e9c3c4876dfed130ceb"],"22440a249a0bc8ef779d5a60720725614a9460d4":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["4ca20be81c9284c840498143264e583ccbb8525a","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["3d1db6f36874f1979916ccb702329fbb09602af8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["3d1db6f36874f1979916ccb702329fbb09602af8","1390137e395d2f07f9ba5b8c43d293befe84d563"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["4ca20be81c9284c840498143264e583ccbb8525a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"1b1713aa2c66e65f3f024e9c3c4876dfed130ceb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ee8fbffa595c312bc0437f2c9bb6376a29c1b427","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4ca20be81c9284c840498143264e583ccbb8525a":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"3d1db6f36874f1979916ccb702329fbb09602af8":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"22440a249a0bc8ef779d5a60720725614a9460d4":["4ca20be81c9284c840498143264e583ccbb8525a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"1390137e395d2f07f9ba5b8c43d293befe84d563":["22440a249a0bc8ef779d5a60720725614a9460d4","d2638f781be724518ff6c2263d14a48cf6e68017"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b1713aa2c66e65f3f024e9c3c4876dfed130ceb"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["b79a5db147a1c6f95d1625ddbc3561ef56955225","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b1713aa2c66e65f3f024e9c3c4876dfed130ceb":["3d1db6f36874f1979916ccb702329fbb09602af8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}