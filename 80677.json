{"path":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","commits":[{"id":"df06aa21e6f41b678afd8f30568ebadd781be717","date":1578089543,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we want to ensure there is tlog replay on the leader after we restart it,\n    // so in addition to not committing the docs we add during network partition\n    // we also want to ensure that our leader doesn't do a \"Commit on close\"\n    DirectUpdateHandler2.commitOnClose = false; \n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we want to ensure there is tlog replay on the leader after we restart it,\n    // so in addition to not committing the docs we add during network partition\n    // we also want to ensure that our leader doesn't do a \"Commit on close\"\n    DirectUpdateHandler2.commitOnClose = false; \n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e18458cbca975852db0911f1a7f9a0a2fcd493f1","date":1578786485,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    DirectUpdateHandler2.commitOnClose = TEST_VALUE_FOR_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    // we want to ensure there is tlog replay on the leader after we restart it,\n    // so in addition to not committing the docs we add during network partition\n    // we also want to ensure that our leader doesn't do a \"Commit on close\"\n    DirectUpdateHandler2.commitOnClose = false; \n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","date":1578901035,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    DirectUpdateHandler2.commitOnClose = TEST_VALUE_FOR_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    // we want to ensure there is tlog replay on the leader after we restart it,\n    // so in addition to not committing the docs we add during network partition\n    // we also want to ensure that our leader doesn't do a \"Commit on close\"\n    DirectUpdateHandler2.commitOnClose = false; \n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0ad05ae2af8aa028b1a6099a8222fad0bc8c1","date":1579200426,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    TestInjection.skipIndexWriterCommitOnClose = TEST_VALUE_FOR_SKIP_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    DirectUpdateHandler2.commitOnClose = TEST_VALUE_FOR_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplayVsRecovery#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    TestInjection.skipIndexWriterCommitOnClose = TEST_VALUE_FOR_SKIP_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      if (log.isInfoEnabled()) {\n        log.info(\"Adding proxy for URL: {}. Proxy: {}\", jetty.getBaseUrl(), proxy.getUrl());\n      }\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    TestInjection.skipIndexWriterCommitOnClose = TEST_VALUE_FOR_SKIP_COMMIT_ON_CLOSE;\n    \n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(2)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    NODE0 = cluster.getJettySolrRunner(0);\n    NODE1 = cluster.getJettySolrRunner(1);\n      \n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","e18458cbca975852db0911f1a7f9a0a2fcd493f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e18458cbca975852db0911f1a7f9a0a2fcd493f1":["df06aa21e6f41b678afd8f30568ebadd781be717"],"b6a0ad05ae2af8aa028b1a6099a8222fad0bc8c1":["e18458cbca975852db0911f1a7f9a0a2fcd493f1"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["b6a0ad05ae2af8aa028b1a6099a8222fad0bc8c1"],"df06aa21e6f41b678afd8f30568ebadd781be717":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","df06aa21e6f41b678afd8f30568ebadd781be717"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df06aa21e6f41b678afd8f30568ebadd781be717","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"e18458cbca975852db0911f1a7f9a0a2fcd493f1":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","b6a0ad05ae2af8aa028b1a6099a8222fad0bc8c1"],"b6a0ad05ae2af8aa028b1a6099a8222fad0bc8c1":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac"],"df06aa21e6f41b678afd8f30568ebadd781be717":["e18458cbca975852db0911f1a7f9a0a2fcd493f1","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["94f2d4492fe7f2ad392dfb81b309ee9afa8a32ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}