{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaNode#newCopyJob(String,Map[String,FileMetaData],Map[String,FileMetaData],boolean,CopyJob.OnceDone).mjava","commits":[{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaNode#newCopyJob(String,Map[String,FileMetaData],Map[String,FileMetaData],boolean,CopyJob.OnceDone).mjava","pathOld":"/dev/null","sourceNew":"  /** Start a background copying job, to copy the specified files from the current primary node.  If files is null then the latest copy\n   *  state should be copied.  If prevJob is not null, then the new copy job is replacing it and should 1) cancel the previous one, and\n   *  2) optionally salvage e.g. partially copied and, shared with the new copy job, files. */\n  protected abstract CopyJob newCopyJob(String reason, Map<String,FileMetaData> files, Map<String,FileMetaData> prevFiles,\n                                        boolean highPriority, CopyJob.OnceDone onceDone) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/nrt/ReplicaNode#newCopyJob(String,Map[String,FileMetaData],Map[String,FileMetaData],boolean,CopyJob.OnceDone).mjava","pathOld":"/dev/null","sourceNew":"  /** Start a background copying job, to copy the specified files from the current primary node.  If files is null then the latest copy\n   *  state should be copied.  If prevJob is not null, then the new copy job is replacing it and should 1) cancel the previous one, and\n   *  2) optionally salvage e.g. partially copied and, shared with the new copy job, files. */\n  protected abstract CopyJob newCopyJob(String reason, Map<String,FileMetaData> files, Map<String,FileMetaData> prevFiles,\n                                        boolean highPriority, CopyJob.OnceDone onceDone) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}