{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor#postProcessNode(QueryNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor#postProcessNode(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/AllowLeadingWildcardProcessor#postProcessNode(QueryNode).mjava","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode) {\n      WildcardQueryNode wildcardNode = (WildcardQueryNode) node;\n\n      if (wildcardNode.getText().length() > 0) {\n        \n        // Validate if the wildcard was escaped\n        if (UnescapedCharSequence.wasEscaped(wildcardNode.getText(), 0))\n          return node;\n        \n        switch (wildcardNode.getText().charAt(0)) {    \n          case '*':\n          case '?':\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.LEADING_WILDCARD_NOT_ALLOWED, node\n                    .toQueryString(new EscapeQuerySyntaxImpl())));    \n        }\n      }\n\n    }\n\n    return node;\n\n  }\n\n","sourceOld":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof WildcardQueryNode) {\n      WildcardQueryNode wildcardNode = (WildcardQueryNode) node;\n\n      if (wildcardNode.getText().length() > 0) {\n        \n        // Validate if the wildcard was escaped\n        if (UnescapedCharSequence.wasEscaped(wildcardNode.getText(), 0))\n          return node;\n        \n        switch (wildcardNode.getText().charAt(0)) {    \n          case '*':\n          case '?':\n            throw new QueryNodeException(new MessageImpl(\n                QueryParserMessages.LEADING_WILDCARD_NOT_ALLOWED, node\n                    .toQueryString(new EscapeQuerySyntaxImpl())));    \n        }\n      }\n\n    }\n\n    return node;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}