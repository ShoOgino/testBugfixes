{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59.999Z\", \"string_sd\", \"abc\" + s));\n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(LegacyFieldFacetExtrasTest.class, fileName))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59.999Z\", \"string_sd\", \"abc\" + s));\n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n    setResponse(h.query(request(fileToStringArr(LegacyFieldFacetExtrasTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59.999Z\", \"string_sd\", \"abc\" + s));\n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(LegacyFieldFacetExtrasTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f,\n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59.999Z\", \"string_sd\", \"abc\" + s));\n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n\n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n\n    assertU(commit());\n    setResponse(h.query(request(fileToStringArr(LegacyFieldFacetExtrasTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-analytics.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n\n    //INT\n    intLongTestStart = new ArrayList<>();\n    intFloatTestStart = new ArrayList<>();\n    intDoubleTestStart = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int s = j%STRING;\n      assertU(adoc(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59.999Z\", \"string_sd\", \"abc\" + s));\n      //Long\n      if (j-LONG<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intLongTestStart.add(list1);\n      } else {\n        intLongTestStart.get((int)l).add(i);\n      }\n      //String\n      if (j-FLOAT<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intFloatTestStart.add(list1);\n      } else {\n        intFloatTestStart.get((int)f).add(i);\n      }\n      //String\n      if (j-DOUBLE<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intDoubleTestStart.add(list1);\n      } else {\n        intDoubleTestStart.get((int)d).add(i);\n      }\n      //String\n      if (j-STRING<0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        list1.add(i);\n        intStringTestStart.add(list1);\n      } else {\n        intStringTestStart.get(s).add(i);\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(LegacyFieldFacetExtrasTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}