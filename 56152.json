{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#reInit().mjava","commits":[{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#reInit().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#reInit().mjava","sourceNew":"  private void reInit() throws Exception {\n    if (stateManager != null) {\n      stateManager.close();\n    }\n    if (simulated) {\n      stateManager = new SimDistribStateManager(root);\n    } else {\n      if (solrZkClient != null) {\n        solrZkClient.close();\n      }\n      solrZkClient = new SolrZkClient(zkTestServer.getZkHost(), 30000);\n      stateManager = new ZkDistribStateManager(solrZkClient);\n    }\n    log.info(\"Using \" + stateManager.getClass().getName());\n  }\n\n","sourceOld":"  private void reInit() throws Exception {\n    if (stateManager != null) {\n      stateManager.close();\n    }\n    if (simulated) {\n      stateManager = new SimDistribStateManager(root);\n    } else {\n      if (solrZkClient != null) {\n        solrZkClient.close();\n      }\n      solrZkClient = new SolrZkClient(zkTestServer.getZkHost(), 30000);\n      stateManager = new ZkDistribStateManager(solrZkClient);\n    }\n    log.info(\"Using \" + stateManager.getClass().getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#reInit().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#reInit().mjava","sourceNew":"  private void reInit() throws Exception {\n    if (stateManager != null) {\n      stateManager.close();\n    }\n    if (simulated) {\n      stateManager = new SimDistribStateManager(root);\n    } else {\n      if (solrZkClient != null) {\n        solrZkClient.close();\n      }\n      solrZkClient = new SolrZkClient(zkTestServer.getZkHost(), 30000);\n      stateManager = new ZkDistribStateManager(solrZkClient);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Using {}\", stateManager.getClass().getName());\n    }\n  }\n\n","sourceOld":"  private void reInit() throws Exception {\n    if (stateManager != null) {\n      stateManager.close();\n    }\n    if (simulated) {\n      stateManager = new SimDistribStateManager(root);\n    } else {\n      if (solrZkClient != null) {\n        solrZkClient.close();\n      }\n      solrZkClient = new SolrZkClient(zkTestServer.getZkHost(), 30000);\n      stateManager = new ZkDistribStateManager(solrZkClient);\n    }\n    log.info(\"Using \" + stateManager.getClass().getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#reInit().mjava","sourceNew":null,"sourceOld":"  private void reInit() throws Exception {\n    if (stateManager != null) {\n      stateManager.close();\n    }\n    if (simulated) {\n      stateManager = new SimDistribStateManager(root);\n    } else {\n      if (solrZkClient != null) {\n        solrZkClient.close();\n      }\n      solrZkClient = new SolrZkClient(zkTestServer.getZkHost(), 30000);\n      stateManager = new ZkDistribStateManager(solrZkClient);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Using {}\", stateManager.getClass().getName());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}