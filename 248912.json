{"path":"lucene/core/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderUtil.Slice[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderUtil.Slice[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    this.fields = fields;\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    this.fields = fields;\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderSlice[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFieldsEnum#MultiFieldsEnum(MultiFields,FieldsEnum[],ReaderUtil.Slice[]).mjava","sourceNew":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderSlice[] subSlices) throws IOException {\n    this.fields = fields;\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","sourceOld":"  /** The subs array must be newly initialized FieldsEnum\n   *  (ie, {@link FieldsEnum#next} has not been called. */\n  public MultiFieldsEnum(MultiFields fields, FieldsEnum[] subs, ReaderUtil.Slice[] subSlices) throws IOException {\n    this.fields = fields;\n    queue = new FieldMergeQueue(subs.length);\n    top = new FieldsEnumWithSlice[subs.length];\n    List<FieldsEnumWithSlice> enumWithSlices = new ArrayList<FieldsEnumWithSlice>();\n\n    // Init q\n    for(int i=0;i<subs.length;i++) {\n      assert subs[i] != null;\n      final String field = subs[i].next();\n      if (field != null) {\n        // this FieldsEnum has at least one field\n        final FieldsEnumWithSlice sub = new FieldsEnumWithSlice(subs[i], subSlices[i], i);\n        enumWithSlices.add(sub);\n        sub.current = field;\n        queue.add(sub);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"]},"commit2Childs":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}