{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testSlop().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testSlop().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testSlop().mjava","sourceNew":"  public void testSlop() throws Exception {\n    assertQueryEquals(\"\\\"term germ\\\"~2\", null, \"\\\"term germ\\\"~2\");\n    assertQueryEquals(\"\\\"term germ\\\"~2 flork\", null, \"\\\"term germ\\\"~2 flork\");\n    assertQueryEquals(\"\\\"term\\\"~2\", null, \"term\");\n    assertQueryEquals(\"\\\" \\\"~2 germ\", null, \"germ\");\n    assertQueryEquals(\"\\\"term germ\\\"~2^2\", null, \"\\\"term germ\\\"~2^2.0\");\n  }\n\n","sourceOld":"  public void testSlop() throws Exception {\n    assertQueryEquals(\"\\\"term germ\\\"~2\", null, \"\\\"term germ\\\"~2\");\n    assertQueryEquals(\"\\\"term germ\\\"~2 flork\", null, \"\\\"term germ\\\"~2 flork\");\n    assertQueryEquals(\"\\\"term\\\"~2\", null, \"term\");\n    assertQueryEquals(\"\\\" \\\"~2 germ\", null, \"germ\");\n    assertQueryEquals(\"\\\"term germ\\\"~2^2\", null, \"\\\"term germ\\\"~2^2.0\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0cdf628dda21ad509f09608c835dc27541d1ca3","date":1444665868,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testSlop().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testSlop().mjava","sourceNew":"  public void testSlop() throws Exception {\n    assertQueryEquals(\"\\\"term germ\\\"~2\", null, \"\\\"term germ\\\"~2\");\n    assertQueryEquals(\"\\\"term germ\\\"~2 flork\", null, \"\\\"term germ\\\"~2 flork\");\n    assertQueryEquals(\"\\\"term\\\"~2\", null, \"term\");\n    assertQueryEquals(\"\\\" \\\"~2 germ\", null, \"germ\");\n    assertQueryEquals(\"\\\"term germ\\\"~2^2\", null, \"(\\\"term germ\\\"~2)^2.0\");\n  }\n\n","sourceOld":"  public void testSlop() throws Exception {\n    assertQueryEquals(\"\\\"term germ\\\"~2\", null, \"\\\"term germ\\\"~2\");\n    assertQueryEquals(\"\\\"term germ\\\"~2 flork\", null, \"\\\"term germ\\\"~2 flork\");\n    assertQueryEquals(\"\\\"term\\\"~2\", null, \"term\");\n    assertQueryEquals(\"\\\" \\\"~2 germ\", null, \"germ\");\n    assertQueryEquals(\"\\\"term germ\\\"~2^2\", null, \"\\\"term germ\\\"~2^2.0\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0cdf628dda21ad509f09608c835dc27541d1ca3"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b0cdf628dda21ad509f09608c835dc27541d1ca3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b0cdf628dda21ad509f09608c835dc27541d1ca3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}