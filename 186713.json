{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode31(IntBuffer,int[]).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode31(IntBuffer,int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/PackedIntsDecompress#decode31(IntBuffer,int[]).mjava","sourceNew":"  public static void decode31(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 31;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      int intValue15 = compressedBuffer.get();\n      int intValue16 = compressedBuffer.get();\n      int intValue17 = compressedBuffer.get();\n      int intValue18 = compressedBuffer.get();\n      int intValue19 = compressedBuffer.get();\n      int intValue20 = compressedBuffer.get();\n      int intValue21 = compressedBuffer.get();\n      int intValue22 = compressedBuffer.get();\n      int intValue23 = compressedBuffer.get();\n      int intValue24 = compressedBuffer.get();\n      int intValue25 = compressedBuffer.get();\n      int intValue26 = compressedBuffer.get();\n      int intValue27 = compressedBuffer.get();\n      int intValue28 = compressedBuffer.get();\n      int intValue29 = compressedBuffer.get();\n      int intValue30 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = ((intValue0 >>> 31) | (intValue1 << 1)) & mask;\n      output[2 + outputOffset] = ((intValue1 >>> 30) | (intValue2 << 2)) & mask;\n      output[3 + outputOffset] = ((intValue2 >>> 29) | (intValue3 << 3)) & mask;\n      output[4 + outputOffset] = ((intValue3 >>> 28) | (intValue4 << 4)) & mask;\n      output[5 + outputOffset] = ((intValue4 >>> 27) | (intValue5 << 5)) & mask;\n      output[6 + outputOffset] = ((intValue5 >>> 26) | (intValue6 << 6)) & mask;\n      output[7 + outputOffset] = ((intValue6 >>> 25) | (intValue7 << 7)) & mask;\n      output[8 + outputOffset] = ((intValue7 >>> 24) | (intValue8 << 8)) & mask;\n      output[9 + outputOffset] = ((intValue8 >>> 23) | (intValue9 << 9)) & mask;\n      output[10 + outputOffset] = ((intValue9 >>> 22) | (intValue10 << 10)) & mask;\n      output[11 + outputOffset] = ((intValue10 >>> 21) | (intValue11 << 11)) & mask;\n      output[12 + outputOffset] = ((intValue11 >>> 20) | (intValue12 << 12)) & mask;\n      output[13 + outputOffset] = ((intValue12 >>> 19) | (intValue13 << 13)) & mask;\n      output[14 + outputOffset] = ((intValue13 >>> 18) | (intValue14 << 14)) & mask;\n      output[15 + outputOffset] = ((intValue14 >>> 17) | (intValue15 << 15)) & mask;\n      output[16 + outputOffset] = ((intValue15 >>> 16) | (intValue16 << 16)) & mask;\n      output[17 + outputOffset] = ((intValue16 >>> 15) | (intValue17 << 17)) & mask;\n      output[18 + outputOffset] = ((intValue17 >>> 14) | (intValue18 << 18)) & mask;\n      output[19 + outputOffset] = ((intValue18 >>> 13) | (intValue19 << 19)) & mask;\n      output[20 + outputOffset] = ((intValue19 >>> 12) | (intValue20 << 20)) & mask;\n      output[21 + outputOffset] = ((intValue20 >>> 11) | (intValue21 << 21)) & mask;\n      output[22 + outputOffset] = ((intValue21 >>> 10) | (intValue22 << 22)) & mask;\n      output[23 + outputOffset] = ((intValue22 >>> 9) | (intValue23 << 23)) & mask;\n      output[24 + outputOffset] = ((intValue23 >>> 8) | (intValue24 << 24)) & mask;\n      output[25 + outputOffset] = ((intValue24 >>> 7) | (intValue25 << 25)) & mask;\n      output[26 + outputOffset] = ((intValue25 >>> 6) | (intValue26 << 26)) & mask;\n      output[27 + outputOffset] = ((intValue26 >>> 5) | (intValue27 << 27)) & mask;\n      output[28 + outputOffset] = ((intValue27 >>> 4) | (intValue28 << 28)) & mask;\n      output[29 + outputOffset] = ((intValue28 >>> 3) | (intValue29 << 29)) & mask;\n      output[30 + outputOffset] = ((intValue29 >>> 2) | (intValue30 << 30)) & mask;\n      output[31 + outputOffset] = intValue30 >>> 1;\n      outputOffset += 32;\n    }\n  }\n\n","sourceOld":"  public static void decode31(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 31;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      int intValue15 = compressedBuffer.get();\n      int intValue16 = compressedBuffer.get();\n      int intValue17 = compressedBuffer.get();\n      int intValue18 = compressedBuffer.get();\n      int intValue19 = compressedBuffer.get();\n      int intValue20 = compressedBuffer.get();\n      int intValue21 = compressedBuffer.get();\n      int intValue22 = compressedBuffer.get();\n      int intValue23 = compressedBuffer.get();\n      int intValue24 = compressedBuffer.get();\n      int intValue25 = compressedBuffer.get();\n      int intValue26 = compressedBuffer.get();\n      int intValue27 = compressedBuffer.get();\n      int intValue28 = compressedBuffer.get();\n      int intValue29 = compressedBuffer.get();\n      int intValue30 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = ((intValue0 >>> 31) | (intValue1 << 1)) & mask;\n      output[2 + outputOffset] = ((intValue1 >>> 30) | (intValue2 << 2)) & mask;\n      output[3 + outputOffset] = ((intValue2 >>> 29) | (intValue3 << 3)) & mask;\n      output[4 + outputOffset] = ((intValue3 >>> 28) | (intValue4 << 4)) & mask;\n      output[5 + outputOffset] = ((intValue4 >>> 27) | (intValue5 << 5)) & mask;\n      output[6 + outputOffset] = ((intValue5 >>> 26) | (intValue6 << 6)) & mask;\n      output[7 + outputOffset] = ((intValue6 >>> 25) | (intValue7 << 7)) & mask;\n      output[8 + outputOffset] = ((intValue7 >>> 24) | (intValue8 << 8)) & mask;\n      output[9 + outputOffset] = ((intValue8 >>> 23) | (intValue9 << 9)) & mask;\n      output[10 + outputOffset] = ((intValue9 >>> 22) | (intValue10 << 10)) & mask;\n      output[11 + outputOffset] = ((intValue10 >>> 21) | (intValue11 << 11)) & mask;\n      output[12 + outputOffset] = ((intValue11 >>> 20) | (intValue12 << 12)) & mask;\n      output[13 + outputOffset] = ((intValue12 >>> 19) | (intValue13 << 13)) & mask;\n      output[14 + outputOffset] = ((intValue13 >>> 18) | (intValue14 << 14)) & mask;\n      output[15 + outputOffset] = ((intValue14 >>> 17) | (intValue15 << 15)) & mask;\n      output[16 + outputOffset] = ((intValue15 >>> 16) | (intValue16 << 16)) & mask;\n      output[17 + outputOffset] = ((intValue16 >>> 15) | (intValue17 << 17)) & mask;\n      output[18 + outputOffset] = ((intValue17 >>> 14) | (intValue18 << 18)) & mask;\n      output[19 + outputOffset] = ((intValue18 >>> 13) | (intValue19 << 19)) & mask;\n      output[20 + outputOffset] = ((intValue19 >>> 12) | (intValue20 << 20)) & mask;\n      output[21 + outputOffset] = ((intValue20 >>> 11) | (intValue21 << 21)) & mask;\n      output[22 + outputOffset] = ((intValue21 >>> 10) | (intValue22 << 22)) & mask;\n      output[23 + outputOffset] = ((intValue22 >>> 9) | (intValue23 << 23)) & mask;\n      output[24 + outputOffset] = ((intValue23 >>> 8) | (intValue24 << 24)) & mask;\n      output[25 + outputOffset] = ((intValue24 >>> 7) | (intValue25 << 25)) & mask;\n      output[26 + outputOffset] = ((intValue25 >>> 6) | (intValue26 << 26)) & mask;\n      output[27 + outputOffset] = ((intValue26 >>> 5) | (intValue27 << 27)) & mask;\n      output[28 + outputOffset] = ((intValue27 >>> 4) | (intValue28 << 28)) & mask;\n      output[29 + outputOffset] = ((intValue28 >>> 3) | (intValue29 << 29)) & mask;\n      output[30 + outputOffset] = ((intValue29 >>> 2) | (intValue30 << 30)) & mask;\n      output[31 + outputOffset] = intValue30 >>> 1;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/PackedIntsDecompress#decode31(IntBuffer,int[]).mjava","sourceNew":null,"sourceOld":"  public static void decode31(final IntBuffer compressedBuffer, final int[] output) {\n    final int numFrameBits = 31;\n    final int mask = (int) ((1L<<numFrameBits) - 1);\n    int outputOffset = 0;\n    for(int step=0;step<4;step++) {\n      int intValue0 = compressedBuffer.get();\n      int intValue1 = compressedBuffer.get();\n      int intValue2 = compressedBuffer.get();\n      int intValue3 = compressedBuffer.get();\n      int intValue4 = compressedBuffer.get();\n      int intValue5 = compressedBuffer.get();\n      int intValue6 = compressedBuffer.get();\n      int intValue7 = compressedBuffer.get();\n      int intValue8 = compressedBuffer.get();\n      int intValue9 = compressedBuffer.get();\n      int intValue10 = compressedBuffer.get();\n      int intValue11 = compressedBuffer.get();\n      int intValue12 = compressedBuffer.get();\n      int intValue13 = compressedBuffer.get();\n      int intValue14 = compressedBuffer.get();\n      int intValue15 = compressedBuffer.get();\n      int intValue16 = compressedBuffer.get();\n      int intValue17 = compressedBuffer.get();\n      int intValue18 = compressedBuffer.get();\n      int intValue19 = compressedBuffer.get();\n      int intValue20 = compressedBuffer.get();\n      int intValue21 = compressedBuffer.get();\n      int intValue22 = compressedBuffer.get();\n      int intValue23 = compressedBuffer.get();\n      int intValue24 = compressedBuffer.get();\n      int intValue25 = compressedBuffer.get();\n      int intValue26 = compressedBuffer.get();\n      int intValue27 = compressedBuffer.get();\n      int intValue28 = compressedBuffer.get();\n      int intValue29 = compressedBuffer.get();\n      int intValue30 = compressedBuffer.get();\n      output[0 + outputOffset] = intValue0 & mask;\n      output[1 + outputOffset] = ((intValue0 >>> 31) | (intValue1 << 1)) & mask;\n      output[2 + outputOffset] = ((intValue1 >>> 30) | (intValue2 << 2)) & mask;\n      output[3 + outputOffset] = ((intValue2 >>> 29) | (intValue3 << 3)) & mask;\n      output[4 + outputOffset] = ((intValue3 >>> 28) | (intValue4 << 4)) & mask;\n      output[5 + outputOffset] = ((intValue4 >>> 27) | (intValue5 << 5)) & mask;\n      output[6 + outputOffset] = ((intValue5 >>> 26) | (intValue6 << 6)) & mask;\n      output[7 + outputOffset] = ((intValue6 >>> 25) | (intValue7 << 7)) & mask;\n      output[8 + outputOffset] = ((intValue7 >>> 24) | (intValue8 << 8)) & mask;\n      output[9 + outputOffset] = ((intValue8 >>> 23) | (intValue9 << 9)) & mask;\n      output[10 + outputOffset] = ((intValue9 >>> 22) | (intValue10 << 10)) & mask;\n      output[11 + outputOffset] = ((intValue10 >>> 21) | (intValue11 << 11)) & mask;\n      output[12 + outputOffset] = ((intValue11 >>> 20) | (intValue12 << 12)) & mask;\n      output[13 + outputOffset] = ((intValue12 >>> 19) | (intValue13 << 13)) & mask;\n      output[14 + outputOffset] = ((intValue13 >>> 18) | (intValue14 << 14)) & mask;\n      output[15 + outputOffset] = ((intValue14 >>> 17) | (intValue15 << 15)) & mask;\n      output[16 + outputOffset] = ((intValue15 >>> 16) | (intValue16 << 16)) & mask;\n      output[17 + outputOffset] = ((intValue16 >>> 15) | (intValue17 << 17)) & mask;\n      output[18 + outputOffset] = ((intValue17 >>> 14) | (intValue18 << 18)) & mask;\n      output[19 + outputOffset] = ((intValue18 >>> 13) | (intValue19 << 19)) & mask;\n      output[20 + outputOffset] = ((intValue19 >>> 12) | (intValue20 << 20)) & mask;\n      output[21 + outputOffset] = ((intValue20 >>> 11) | (intValue21 << 21)) & mask;\n      output[22 + outputOffset] = ((intValue21 >>> 10) | (intValue22 << 22)) & mask;\n      output[23 + outputOffset] = ((intValue22 >>> 9) | (intValue23 << 23)) & mask;\n      output[24 + outputOffset] = ((intValue23 >>> 8) | (intValue24 << 24)) & mask;\n      output[25 + outputOffset] = ((intValue24 >>> 7) | (intValue25 << 25)) & mask;\n      output[26 + outputOffset] = ((intValue25 >>> 6) | (intValue26 << 26)) & mask;\n      output[27 + outputOffset] = ((intValue26 >>> 5) | (intValue27 << 27)) & mask;\n      output[28 + outputOffset] = ((intValue27 >>> 4) | (intValue28 << 28)) & mask;\n      output[29 + outputOffset] = ((intValue28 >>> 3) | (intValue29 << 29)) & mask;\n      output[30 + outputOffset] = ((intValue29 >>> 2) | (intValue30 << 30)) & mask;\n      output[31 + outputOffset] = intValue30 >>> 1;\n      outputOffset += 32;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}