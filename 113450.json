{"path":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"212912761d471e5bfe06cf8027bad27e60a37695","date":1335188643,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":["b5a7546047ccde828684837fc8c2f6db49454355"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/select?qt=dismax&amp;wt=xml&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/select?qt=dismax&amp;wt=xml&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/select?qt=dismax&amp;wt=xml&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&amp;wt=json&amp;q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add&gt;&lt;doc&gt;&lt;field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n\n    return request(path, params, body);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","ac1e7fa558287a811ea07634d815ee7b1c541284"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","ac1e7fa558287a811ea07634d815ee7b1c541284"],"212912761d471e5bfe06cf8027bad27e60a37695":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["212912761d471e5bfe06cf8027bad27e60a37695"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["212912761d471e5bfe06cf8027bad27e60a37695"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"212912761d471e5bfe06cf8027bad27e60a37695":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}