{"path":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#copy(FileSystem,FileStatus,FileSystem,Path,boolean,boolean,Configuration).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#copy(FileSystem,FileStatus,FileSystem,Path,boolean,boolean,Configuration).mjava","pathOld":"/dev/null","sourceNew":"  /** Copy files between FileSystems. */\n  public static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             boolean overwrite,\n                             Configuration conf) throws IOException {\n    Path src = srcStatus.getPath();\n    dst = checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] = srcFS.listStatus(src);\n      for (int i = 0; i < contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n            new Path(dst, contents[i].getPath().getName()),\n            deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in=null;\n      OutputStream out = null;\n      try {\n        in = srcFS.open(src);\n        out = dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#copy(FileSystem,FileStatus,FileSystem,Path,boolean,boolean,Configuration).mjava","pathOld":"/dev/null","sourceNew":"  /** Copy files between FileSystems. */\n  public static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             boolean overwrite,\n                             Configuration conf) throws IOException {\n    Path src = srcStatus.getPath();\n    dst = checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] = srcFS.listStatus(src);\n      for (int i = 0; i < contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n            new Path(dst, contents[i].getPath().getName()),\n            deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in=null;\n      OutputStream out = null;\n      try {\n        in = srcFS.open(src);\n        out = dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}