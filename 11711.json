{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","commits":[{"id":"5ad80176d91a6f70fe93880e43dfd697dc4e63ed","date":1400176913,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","sourceNew":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","sourceOld":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","sourceNew":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","sourceOld":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29","date":1496918402,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","sourceNew":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    int numBytes = in.readVInt();\n    if (numBytes < 0) {\n      throw new CorruptIndexException(\"invalid bytes length: \" + numBytes, in);\n    }\n    \n    BytesRef bytes = new BytesRef();\n    bytes.length = numBytes;\n    bytes.bytes = new byte[numBytes];\n    in.readBytes(bytes.bytes, 0, numBytes);\n\n    return bytes;\n  }\n\n","sourceOld":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","sourceNew":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    int numBytes = in.readVInt();\n    if (numBytes < 0) {\n      throw new CorruptIndexException(\"invalid bytes length: \" + numBytes, in);\n    }\n    \n    BytesRef bytes = new BytesRef();\n    bytes.length = numBytes;\n    bytes.bytes = new byte[numBytes];\n    in.readBytes(bytes.bytes, 0, numBytes);\n\n    return bytes;\n  }\n\n","sourceOld":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsReader#readBytesRef(IndexInput).mjava","sourceNew":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    int numBytes = in.readVInt();\n    if (numBytes < 0) {\n      throw new CorruptIndexException(\"invalid bytes length: \" + numBytes, in);\n    }\n    \n    BytesRef bytes = new BytesRef();\n    bytes.length = numBytes;\n    bytes.bytes = new byte[numBytes];\n    in.readBytes(bytes.bytes, 0, numBytes);\n\n    return bytes;\n  }\n\n","sourceOld":"  private static BytesRef readBytesRef(IndexInput in) throws IOException {\n    BytesRef bytes = new BytesRef();\n    bytes.length = in.readVInt();\n    bytes.bytes = new byte[bytes.length];\n    in.readBytes(bytes.bytes, 0, bytes.length);\n    return bytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["4d637064d608752565d4f9f41b2497dfdfdde50e","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29"],"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["4d637064d608752565d4f9f41b2497dfdfdde50e","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["28288370235ed02234a64753cdbf0c6ec096304a","a8a04f59ee63f5c8b6c0486e823ed24346ddaa29","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"5ad80176d91a6f70fe93880e43dfd697dc4e63ed":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d637064d608752565d4f9f41b2497dfdfdde50e","5ad80176d91a6f70fe93880e43dfd697dc4e63ed"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8a04f59ee63f5c8b6c0486e823ed24346ddaa29":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}