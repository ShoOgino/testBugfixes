{"path":"lucene/core/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#loadPriorSnapshots(Directory).mjava","commits":[{"id":"8a207624ce3e468bca1819861084438d936e3b1c","date":1367514967,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#loadPriorSnapshots(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#readSnapshotsInfo(Directory).mjava","sourceNew":"  /**\n   * Reads the snapshots information from the given {@link Directory}. This\n   * method can be used if the snapshots information is needed, however you\n   * cannot instantiate the deletion policy (because e.g., some other process\n   * keeps a lock on the snapshots directory).\n   */\n  private void loadPriorSnapshots(Directory dir) throws IOException {\n    IndexReader r = DirectoryReader.open(dir);\n    try {\n      int numDocs = r.numDocs();\n      // index is allowed to have exactly one document or 0.\n      if (numDocs == 1) {\n        StoredDocument doc = r.document(r.maxDoc() - 1);\n        if (doc.getField(SNAPSHOTS_GENS) == null) {\n          throw new IllegalStateException(\"directory is not a valid snapshots store!\");\n        }\n        for (StorableField f : doc) {\n          if (!f.name().equals(SNAPSHOTS_GENS)) {\n            refCounts.put(Long.parseLong(f.name()), Integer.parseInt(f.stringValue()));\n          }\n        }\n      } else if (numDocs != 0) {\n        throw new IllegalStateException(\n            \"should be at most 1 document in the snapshots directory: \" + numDocs);\n      }\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the snapshots information from the given {@link Directory}. This\n   * method can be used if the snapshots information is needed, however you\n   * cannot instantiate the deletion policy (because e.g., some other process\n   * keeps a lock on the snapshots directory).\n   */\n  public static Map<String, String> readSnapshotsInfo(Directory dir) throws IOException {\n    IndexReader r = DirectoryReader.open(dir);\n    Map<String, String> snapshots = new HashMap<String, String>();\n    try {\n      int numDocs = r.numDocs();\n      // index is allowed to have exactly one document or 0.\n      if (numDocs == 1) {\n        StoredDocument doc = r.document(r.maxDoc() - 1);\n        if (doc.getField(SNAPSHOTS_ID) == null) {\n          throw new IllegalStateException(\"directory is not a valid snapshots store!\");\n        }\n        for (StorableField f : doc) {\n          if (!f.name().equals(SNAPSHOTS_ID))\n            snapshots.put(f.name(), f.stringValue());\n        }\n      } else if (numDocs != 0) {\n        throw new IllegalStateException(\n            \"should be at most 1 document in the snapshots directory: \" + numDocs);\n      }\n    } finally {\n      r.close();\n    }\n    return snapshots;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dce99db8590cdd065839ae4e6b228b66eeee8f38","date":1367579599,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/PersistentSnapshotDeletionPolicy#loadPriorSnapshots(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reads the snapshots information from the given {@link Directory}. This\n   * method can be used if the snapshots information is needed, however you\n   * cannot instantiate the deletion policy (because e.g., some other process\n   * keeps a lock on the snapshots directory).\n   */\n  private void loadPriorSnapshots(Directory dir) throws IOException {\n    IndexReader r = DirectoryReader.open(dir);\n    try {\n      int numDocs = r.numDocs();\n      // index is allowed to have exactly one document or 0.\n      if (numDocs == 1) {\n        StoredDocument doc = r.document(r.maxDoc() - 1);\n        if (doc.getField(SNAPSHOTS_GENS) == null) {\n          throw new IllegalStateException(\"directory is not a valid snapshots store!\");\n        }\n        for (StorableField f : doc) {\n          if (!f.name().equals(SNAPSHOTS_GENS)) {\n            refCounts.put(Long.parseLong(f.name()), Integer.parseInt(f.stringValue()));\n          }\n        }\n      } else if (numDocs != 0) {\n        throw new IllegalStateException(\n            \"should be at most 1 document in the snapshots directory: \" + numDocs);\n      }\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dce99db8590cdd065839ae4e6b228b66eeee8f38":["8a207624ce3e468bca1819861084438d936e3b1c"],"8a207624ce3e468bca1819861084438d936e3b1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dce99db8590cdd065839ae4e6b228b66eeee8f38"]},"commit2Childs":{"dce99db8590cdd065839ae4e6b228b66eeee8f38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a207624ce3e468bca1819861084438d936e3b1c":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a207624ce3e468bca1819861084438d936e3b1c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}