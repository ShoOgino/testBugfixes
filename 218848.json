{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","commits":[{"id":"b5b786e8a2ab6d8bb552c5bac69728c7d2983266","date":1453255950,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"/dev/null","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec77e67e448734229255f16b8e0b1b4402f23095","date":1453748031,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5097637ef592ed17c3125d5982c87b6629fcda6","date":1453823732,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"207c4c6d956f2478acc8b16d31636c5efaf4125a","date":1453918907,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39fd399a800c79eff2beaad702c9b6190d499fd","date":1453997311,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(4, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34960db40f081388a12ae7131547fb03236705fd","date":1461892880,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"915201312eef398482b3dffe8a297e1809f3b29a","date":1468722990,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccf12c30236c236d7608326ff9e82536164630bb","date":1477603043,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSetMetadata(ResultSet).mjava","sourceNew":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"a_f\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","sourceOld":"  private void checkResultSetMetadata(ResultSet rs) throws Exception {\n    ResultSetMetaData resultSetMetaData = rs.getMetaData();\n\n    assertNotNull(resultSetMetaData);\n\n    assertEquals(5, resultSetMetaData.getColumnCount());\n\n    assertEquals(\"id\", resultSetMetaData.getColumnName(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnName(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnName(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnName(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnName(5));\n\n    assertEquals(\"id\", resultSetMetaData.getColumnLabel(1));\n    assertEquals(\"a_i\", resultSetMetaData.getColumnLabel(2));\n    assertEquals(\"a_s\", resultSetMetaData.getColumnLabel(3));\n    assertEquals(\"my_float_col\", resultSetMetaData.getColumnLabel(4));\n    assertEquals(\"testnull_i\", resultSetMetaData.getColumnLabel(5));\n\n    assertEquals(\"id\".length(), resultSetMetaData.getColumnDisplaySize(1));\n    assertEquals(\"a_i\".length(), resultSetMetaData.getColumnDisplaySize(2));\n    assertEquals(\"a_s\".length(), resultSetMetaData.getColumnDisplaySize(3));\n    assertEquals(\"my_float_col\".length(), resultSetMetaData.getColumnDisplaySize(4));\n    assertEquals(\"testnull_i\".length(), resultSetMetaData.getColumnDisplaySize(5));\n\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(1));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(2));\n    assertEquals(\"String\", resultSetMetaData.getColumnTypeName(3));\n    assertEquals(\"Double\", resultSetMetaData.getColumnTypeName(4));\n    assertEquals(\"Long\", resultSetMetaData.getColumnTypeName(5));\n\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(1));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(2));\n    assertEquals(Types.VARCHAR, resultSetMetaData.getColumnType(3));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(4));\n    assertEquals(Types.DOUBLE, resultSetMetaData.getColumnType(5));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34960db40f081388a12ae7131547fb03236705fd":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"d5097637ef592ed17c3125d5982c87b6629fcda6":["ec77e67e448734229255f16b8e0b1b4402f23095"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["b5b786e8a2ab6d8bb552c5bac69728c7d2983266","8d15e34266d75e4e8b95da046cd0afc812367b38"],"915201312eef398482b3dffe8a297e1809f3b29a":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"ec77e67e448734229255f16b8e0b1b4402f23095":["b5b786e8a2ab6d8bb552c5bac69728c7d2983266"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["34960db40f081388a12ae7131547fb03236705fd","915201312eef398482b3dffe8a297e1809f3b29a"],"207c4c6d956f2478acc8b16d31636c5efaf4125a":["d5097637ef592ed17c3125d5982c87b6629fcda6"],"b5b786e8a2ab6d8bb552c5bac69728c7d2983266":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["207c4c6d956f2478acc8b16d31636c5efaf4125a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ccf12c30236c236d7608326ff9e82536164630bb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["207c4c6d956f2478acc8b16d31636c5efaf4125a","c39fd399a800c79eff2beaad702c9b6190d499fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["915201312eef398482b3dffe8a297e1809f3b29a"]},"commit2Childs":{"34960db40f081388a12ae7131547fb03236705fd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d5097637ef592ed17c3125d5982c87b6629fcda6":["207c4c6d956f2478acc8b16d31636c5efaf4125a"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"915201312eef398482b3dffe8a297e1809f3b29a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec77e67e448734229255f16b8e0b1b4402f23095":["d5097637ef592ed17c3125d5982c87b6629fcda6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ccf12c30236c236d7608326ff9e82536164630bb"],"b5b786e8a2ab6d8bb552c5bac69728c7d2983266":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","ec77e67e448734229255f16b8e0b1b4402f23095"],"207c4c6d956f2478acc8b16d31636c5efaf4125a":["c39fd399a800c79eff2beaad702c9b6190d499fd","8d15e34266d75e4e8b95da046cd0afc812367b38"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5b786e8a2ab6d8bb552c5bac69728c7d2983266"],"ccf12c30236c236d7608326ff9e82536164630bb":[],"8d15e34266d75e4e8b95da046cd0afc812367b38":["34960db40f081388a12ae7131547fb03236705fd","1e6acbaae7af722f17204ceccf0f7db5753eccf3","915201312eef398482b3dffe8a297e1809f3b29a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","ccf12c30236c236d7608326ff9e82536164630bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}