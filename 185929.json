{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#incrementToken().mjava","commits":[{"id":"967b81abdda07e0975b376eff34820e8adb6270d","date":1272916926,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/ASCIIFoldingFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.buffer();\n      final int length = termAtt.length();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          termAtt.copyBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.buffer();\n      final int length = termAtt.length();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          termAtt.copyBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#incrementToken().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.buffer();\n      final int length = termAtt.length();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          termAtt.copyBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.buffer();\n      final int length = termAtt.length();\n\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i = 0 ; i < length ; ++i) {\n        final char c = buffer[i];\n        if (c >= '\\u0080')\n        {\n          foldToASCII(buffer, length);\n          termAtt.copyBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["967b81abdda07e0975b376eff34820e8adb6270d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"967b81abdda07e0975b376eff34820e8adb6270d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["967b81abdda07e0975b376eff34820e8adb6270d"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"967b81abdda07e0975b376eff34820e8adb6270d":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}