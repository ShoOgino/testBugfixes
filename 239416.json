{"path":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advance(int target) {\n    if (target < docID) {\n      throw new IllegalArgumentException(\"cannot advance backwards: docID=\" + docID + \" target=\" + target);\n    }\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advance(int target) {\n    if (target < docID) {\n      throw new IllegalArgumentException(\"cannot advance backwards: docID=\" + docID + \" target=\" + target);\n    }\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d217880fb207e1a26143863d06cf461c7cabeec","date":1475691535,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","sourceNew":"  @Override\n  public int advance(int target) {\n    assert target >= docID: \"target=\" + target + \" docID=\" + docID;\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","sourceOld":"  @Override\n  public int advance(int target) {\n    if (target < docID) {\n      throw new IllegalArgumentException(\"cannot advance backwards: docID=\" + docID + \" target=\" + target);\n    }\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advance(int target) {\n    assert target >= docID: \"target=\" + target + \" docID=\" + docID;\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"701377879d61cf6e2de072d11c76089338c0c3b2","date":1542374674,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/LegacyNumericDocValuesWrapper#advance(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LegacyNumericDocValuesWrapper#advance(int).mjava","sourceNew":"  @Override\n  public int advance(int target) {\n    assert target >= docID: \"target=\" + target + \" docID=\" + docID;\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","sourceOld":"  @Override\n  public int advance(int target) {\n    assert target >= docID: \"target=\" + target + \" docID=\" + docID;\n    if (target == NO_MORE_DOCS) {\n      this.docID = NO_MORE_DOCS;\n    } else {\n      this.docID = target-1;\n      nextDoc();\n    }\n    return docID;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d217880fb207e1a26143863d06cf461c7cabeec":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"701377879d61cf6e2de072d11c76089338c0c3b2":["5d217880fb207e1a26143863d06cf461c7cabeec"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d217880fb207e1a26143863d06cf461c7cabeec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701377879d61cf6e2de072d11c76089338c0c3b2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5d217880fb207e1a26143863d06cf461c7cabeec"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"5d217880fb207e1a26143863d06cf461c7cabeec":["701377879d61cf6e2de072d11c76089338c0c3b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"701377879d61cf6e2de072d11c76089338c0c3b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}