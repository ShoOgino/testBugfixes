{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6e339fe2e96467edfc4bf0aa5654e4da37e2d1b","date":1459439641,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", 50.7345267, -97.5303555));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", 50.7345267, -97.5303555));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits.value);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", 50.7345267, -97.5303555));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    PlanetModel planetModel = randomPlanetModel();\n    doc.add(new Geo3DPoint(\"field\", planetModel, 50.7345267, -97.5303555));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(planetModel, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits.value);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPoint(\"field\", 50.7345267, -97.5303555));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(Geo3DPoint.newShapeQuery(\"field\",\n                                                      GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits.value);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6e339fe2e96467edfc4bf0aa5654e4da37e2d1b":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["c6e339fe2e96467edfc4bf0aa5654e4da37e2d1b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"c6e339fe2e96467edfc4bf0aa5654e4da37e2d1b":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e444678504caf66a8060b1d514383aa4feac0c":["c6e339fe2e96467edfc4bf0aa5654e4da37e2d1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}