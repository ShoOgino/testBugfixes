{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","commits":[{"id":"97bcd657104d24ce5e89db102939e68a6784bdda","date":1509417991,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStream(UpdateRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7","date":1509526582,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStreams(SolrRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          OutputStreamWriter writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n          updateRequest.writeXML(writer);\n          writer.flush();\n        }\n\n        @Override\n        public String getContentType() {\n          return ClientUtils.TEXT_XML;\n        }\n      };\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStream(UpdateRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33138637f13378b80c31543ed4d8c44c00269c1d","date":1509606571,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStreams(SolrRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          OutputStreamWriter writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n          updateRequest.writeXML(writer);\n          writer.flush();\n        }\n\n        @Override\n        public String getContentType() {\n          return ClientUtils.TEXT_XML;\n        }\n      };\n    }\n    return req.getContentWriter(ClientUtils.TEXT_XML);\n  }\n\n","sourceOld":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStreams(SolrRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          OutputStreamWriter writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n          updateRequest.writeXML(writer);\n          writer.flush();\n        }\n\n        @Override\n        public String getContentType() {\n          return ClientUtils.TEXT_XML;\n        }\n      };\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/RequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStreams(SolrRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(@SuppressWarnings({\"rawtypes\"})SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          OutputStreamWriter writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n          updateRequest.writeXML(writer);\n          writer.flush();\n        }\n\n        @Override\n        public String getContentType() {\n          return ClientUtils.TEXT_XML;\n        }\n      };\n    }\n    return req.getContentWriter(ClientUtils.TEXT_XML);\n  }\n\n","sourceOld":"  /**\n   * Use this to do a push writing instead of pull. If this method returns null\n   * {@link org.apache.solr.client.solrj.request.RequestWriter#getContentStreams(SolrRequest)} is\n   * invoked to do a pull write.\n   */\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          OutputStreamWriter writer = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n          updateRequest.writeXML(writer);\n          writer.flush();\n        }\n\n        @Override\n        public String getContentType() {\n          return ClientUtils.TEXT_XML;\n        }\n      };\n    }\n    return req.getContentWriter(ClientUtils.TEXT_XML);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["33138637f13378b80c31543ed4d8c44c00269c1d"],"97bcd657104d24ce5e89db102939e68a6784bdda":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7":["97bcd657104d24ce5e89db102939e68a6784bdda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"33138637f13378b80c31543ed4d8c44c00269c1d":["7f9ab9cbda608d22a023db8b8ab48348e5f19bd7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97bcd657104d24ce5e89db102939e68a6784bdda"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97bcd657104d24ce5e89db102939e68a6784bdda":["7f9ab9cbda608d22a023db8b8ab48348e5f19bd7"],"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7":["33138637f13378b80c31543ed4d8c44c00269c1d"],"33138637f13378b80c31543ed4d8c44c00269c1d":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}