{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","pathOld":"/dev/null","sourceNew":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = (Float) weightBySpanQuery.get(sq);\n    if (w != null)\n      w = new Float(w.floatValue() + weight);\n    else\n      w = new Float(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","sourceNew":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = (Float) weightBySpanQuery.get(sq);\n    if (w != null)\n      w = Float.valueOf(w.floatValue() + weight);\n    else\n      w = Float.valueOf(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","sourceOld":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = (Float) weightBySpanQuery.get(sq);\n    if (w != null)\n      w = new Float(w.floatValue() + weight);\n    else\n      w = new Float(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","sourceNew":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = weightBySpanQuery.get(sq);\n    if (w != null)\n      w = Float.valueOf(w.floatValue() + weight);\n    else\n      w = Float.valueOf(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","sourceOld":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = (Float) weightBySpanQuery.get(sq);\n    if (w != null)\n      w = Float.valueOf(w.floatValue() + weight);\n    else\n      w = Float.valueOf(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SpanNearClauseFactory#addSpanQueryWeighted(SpanQuery,float).mjava","sourceNew":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = weightBySpanQuery.get(sq);\n    if (w != null)\n      w = Float.valueOf(w.floatValue() + weight);\n    else\n      w = Float.valueOf(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","sourceOld":"  protected void addSpanQueryWeighted(SpanQuery sq, float weight) {\n    Float w = weightBySpanQuery.get(sq);\n    if (w != null)\n      w = Float.valueOf(w.floatValue() + weight);\n    else\n      w = Float.valueOf(weight);\n    weightBySpanQuery.put(sq, w); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["6bcde5e3f23911110baa101ed062b544162825b5"],"6bcde5e3f23911110baa101ed062b544162825b5":["d04b321158481d3895702b3cbf6821a3083e6c15"],"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["60cdc0e643184821eb066795a8791cd82559f46e"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6bcde5e3f23911110baa101ed062b544162825b5":["60cdc0e643184821eb066795a8791cd82559f46e"],"d04b321158481d3895702b3cbf6821a3083e6c15":["6bcde5e3f23911110baa101ed062b544162825b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}