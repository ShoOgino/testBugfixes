{"path":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0d06946f61921459f43309f86ed621ebe67eebe","date":1294182697,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7f1e9c48dcf5351850e841f712bf65196dcf74","date":1306914955,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":["74b183d06c98e975319fefb0a1bc672b66be868e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37ff5956d30d0c66110ac0c84d8e32d46b67eff1","date":1306967829,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c715a0f99152be7566591f323c6c5a25725a1bcb","date":1307118449,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":null,"sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":null,"sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":null,"sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = MultiNorms.norms(r, \"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (IllegalStateException e) {\n\t  // expected\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = MultiNorms.norms(r, \"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","b0d06946f61921459f43309f86ed621ebe67eebe"],"b0d06946f61921459f43309f86ed621ebe67eebe":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["0e7f1e9c48dcf5351850e841f712bf65196dcf74","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"37ff5956d30d0c66110ac0c84d8e32d46b67eff1":["b0d06946f61921459f43309f86ed621ebe67eebe","0e7f1e9c48dcf5351850e841f712bf65196dcf74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c715a0f99152be7566591f323c6c5a25725a1bcb":["70ad682703b8585f5d0a637efec044d57ec05efb","0e7f1e9c48dcf5351850e841f712bf65196dcf74"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["0e7f1e9c48dcf5351850e841f712bf65196dcf74","4122a26e1fd0457a340616673a3d3aada370f713"],"0e7f1e9c48dcf5351850e841f712bf65196dcf74":["b0d06946f61921459f43309f86ed621ebe67eebe"],"4122a26e1fd0457a340616673a3d3aada370f713":["0e7f1e9c48dcf5351850e841f712bf65196dcf74"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","b0d06946f61921459f43309f86ed621ebe67eebe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["c715a0f99152be7566591f323c6c5a25725a1bcb"],"b0d06946f61921459f43309f86ed621ebe67eebe":["70ad682703b8585f5d0a637efec044d57ec05efb","37ff5956d30d0c66110ac0c84d8e32d46b67eff1","0e7f1e9c48dcf5351850e841f712bf65196dcf74","868da859b43505d9d2a023bfeae6dd0c795f5295"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"37ff5956d30d0c66110ac0c84d8e32d46b67eff1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c715a0f99152be7566591f323c6c5a25725a1bcb":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e7f1e9c48dcf5351850e841f712bf65196dcf74":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","37ff5956d30d0c66110ac0c84d8e32d46b67eff1","c715a0f99152be7566591f323c6c5a25725a1bcb","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","b0d06946f61921459f43309f86ed621ebe67eebe","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","37ff5956d30d0c66110ac0c84d8e32d46b67eff1","c715a0f99152be7566591f323c6c5a25725a1bcb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}