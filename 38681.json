{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abd55340ba9df8b62edcd692b34e46cf0614a52e","date":1311341057,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0b96ebf39aa5127497a01b3456891ab9a50957ce","date":1334631103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\://www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":["560eb5b313b37946d4f94aa72f3303de59147c88"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a71200003867bc085f5db6a2dfd536a07be5f8b","date":1346401894,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      fail(\"Should throw SolrException\");\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      fail(\"Should throw SolrException\");\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      assertTrue(false);\n\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertNotNull(\"handler is null and it shouldn't be\", handler);\n\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      expectThrows(SolrException.class, () -> {\n        loadLocal(\"extraction/simple.html\",\n            \"literal.id\", \"simple2\",\n            \"lowernames\", \"true\",\n            \"captureAttr\", \"true\",\n            //\"fmap.content_type\", \"abcxyz\",\n            \"commit\", \"true\"  // test immediate commit\n        );\n      });\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      fail(\"Should throw SolrException\");\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertNotNull(\"handler is null and it shouldn't be\", handler);\n\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      expectThrows(SolrException.class, () -> {\n        loadLocal(\"extraction/simple.html\",\n            \"literal.id\", \"simple2\",\n            \"lowernames\", \"true\",\n            \"captureAttr\", \"true\",\n            //\"fmap.content_type\", \"abcxyz\",\n            \"commit\", \"true\"  // test immediate commit\n        );\n      });\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      fail(\"Should throw SolrException\");\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testDefaultField().mjava","sourceNew":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertNotNull(\"handler is null and it shouldn't be\", handler);\n\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      expectThrows(SolrException.class, () -> {\n        loadLocal(\"extraction/simple.html\",\n            \"literal.id\", \"simple2\",\n            \"lowernames\", \"true\",\n            \"captureAttr\", \"true\",\n            //\"fmap.content_type\", \"abcxyz\",\n            \"commit\", \"true\"  // test immediate commit\n        );\n      });\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultField() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    try {\n      ignoreException(\"unknown field 'a'\");\n      ignoreException(\"unknown field 'meta'\");  // TODO: should this exception be happening?\n      loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"lowernames\", \"true\",\n        \"captureAttr\", \"true\",\n        //\"fmap.content_type\", \"abcxyz\",\n        \"commit\", \"true\"  // test immediate commit\n      );\n      fail(\"Should throw SolrException\");\n    } catch (SolrException e) {\n      //do nothing\n    } finally {\n      resetExceptionIgnores();\n    }\n    \n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"id:simple2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"defaultExtr:http\\\\:\\\\/\\\\/www.apache.org\"), \"//*[@numFound='1']\");\n\n    //Test when both uprefix and default are specified.\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      ExtractingParams.DEFAULT_FIELD, \"defaultExtr\",//test that unmapped fields go to the text field when no uprefix is specified\n            ExtractingParams.UNKNOWN_FIELD_PREFIX, \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      //\"fmap.content_type\", \"abcxyz\",\n      \"commit\", \"true\"  // test immediate commit\n    );\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":["0b96ebf39aa5127497a01b3456891ab9a50957ce","6a71200003867bc085f5db6a2dfd536a07be5f8b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b96ebf39aa5127497a01b3456891ab9a50957ce":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["6a71200003867bc085f5db6a2dfd536a07be5f8b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["6a71200003867bc085f5db6a2dfd536a07be5f8b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"6a71200003867bc085f5db6a2dfd536a07be5f8b":["0b96ebf39aa5127497a01b3456891ab9a50957ce"],"f8061ddd97f3352007d927dae445884a6f3d857b":["6a71200003867bc085f5db6a2dfd536a07be5f8b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"0b96ebf39aa5127497a01b3456891ab9a50957ce":["d0d1f90e969803cc84174589b5e4a39b7935fecd","6a71200003867bc085f5db6a2dfd536a07be5f8b"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"6a71200003867bc085f5db6a2dfd536a07be5f8b":["d0d1f90e969803cc84174589b5e4a39b7935fecd","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["0b96ebf39aa5127497a01b3456891ab9a50957ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d0d1f90e969803cc84174589b5e4a39b7935fecd","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}