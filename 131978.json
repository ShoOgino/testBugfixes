{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","commits":[{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    IOUtils.close(docOut, posOut, payOut);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":6,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsWriter#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // TODO: add a finish() at least to PushBase? DV too...?\n    boolean success = false;\n    try {\n      if (docOut != null) {\n        CodecUtil.writeFooter(docOut);\n      }\n      if (posOut != null) {\n        CodecUtil.writeFooter(posOut);\n      }\n      if (payOut != null) {\n        CodecUtil.writeFooter(payOut);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(docOut, posOut, payOut);\n      } else {\n        IOUtils.closeWhileHandlingException(docOut, posOut, payOut);\n      }\n      docOut = posOut = payOut = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"99eb4a732d1a908f4636ace52928876136bf1896":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["1f3b037cd083286b2af89f96e768f85dcd8072d6","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}