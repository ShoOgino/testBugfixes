{"path":"solr/contrib/analysis-extras/src/test/java/org/apache/solr/analysis/TestICUCollationKeyFilterFactory#testSecondaryStrength().mjava","commits":[{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/java/org/apache/solr/analysis/TestICUCollationKeyFilterFactory#testSecondaryStrength().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUCollationKeyFilterFactory#testSecondaryStrength().mjava","sourceNew":"  /*\n   * Test secondary strength, for english case is not significant.\n   */\n  public void testSecondaryStrength() throws IOException {\n    String upperCase = \"TESTING\";\n    String lowerCase = \"testing\";\n    ICUCollationKeyFilterFactory factory = new ICUCollationKeyFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"locale\", \"en\");\n    args.put(\"strength\", \"secondary\");\n    args.put(\"decomposition\", \"no\");\n    factory.init(args);\n    factory.inform(new StringMockSolrResourceLoader(\"\"));\n    TokenStream tsUpper = factory.create(\n        new KeywordTokenizer(new StringReader(upperCase)));\n    TokenStream tsLower = factory.create(\n        new KeywordTokenizer(new StringReader(lowerCase)));\n    assertCollatesToSame(tsUpper, tsLower);\n  }\n\n","sourceOld":"  /*\n   * Test secondary strength, for english case is not significant.\n   */\n  public void testSecondaryStrength() throws IOException {\n    String upperCase = \"TESTING\";\n    String lowerCase = \"testing\";\n    ICUCollationKeyFilterFactory factory = new ICUCollationKeyFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"locale\", \"en\");\n    args.put(\"strength\", \"secondary\");\n    args.put(\"decomposition\", \"no\");\n    factory.init(args);\n    factory.inform(new StringMockSolrResourceLoader(\"\"));\n    TokenStream tsUpper = factory.create(\n        new KeywordTokenizer(new StringReader(upperCase)));\n    TokenStream tsLower = factory.create(\n        new KeywordTokenizer(new StringReader(lowerCase)));\n    assertCollatesToSame(tsUpper, tsLower);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUCollationKeyFilterFactory#testSecondaryStrength().mjava","pathOld":"solr/contrib/analysis-extras/src/test/java/org/apache/solr/analysis/TestICUCollationKeyFilterFactory#testSecondaryStrength().mjava","sourceNew":"  /*\n   * Test secondary strength, for english case is not significant.\n   */\n  public void testSecondaryStrength() throws IOException {\n    String upperCase = \"TESTING\";\n    String lowerCase = \"testing\";\n    ICUCollationKeyFilterFactory factory = new ICUCollationKeyFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"locale\", \"en\");\n    args.put(\"strength\", \"secondary\");\n    args.put(\"decomposition\", \"no\");\n    factory.init(args);\n    factory.inform(new StringMockSolrResourceLoader(\"\"));\n    TokenStream tsUpper = factory.create(\n        new KeywordTokenizer(new StringReader(upperCase)));\n    TokenStream tsLower = factory.create(\n        new KeywordTokenizer(new StringReader(lowerCase)));\n    assertCollatesToSame(tsUpper, tsLower);\n  }\n\n","sourceOld":"  /*\n   * Test secondary strength, for english case is not significant.\n   */\n  public void testSecondaryStrength() throws IOException {\n    String upperCase = \"TESTING\";\n    String lowerCase = \"testing\";\n    ICUCollationKeyFilterFactory factory = new ICUCollationKeyFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"locale\", \"en\");\n    args.put(\"strength\", \"secondary\");\n    args.put(\"decomposition\", \"no\");\n    factory.init(args);\n    factory.inform(new StringMockSolrResourceLoader(\"\"));\n    TokenStream tsUpper = factory.create(\n        new KeywordTokenizer(new StringReader(upperCase)));\n    TokenStream tsLower = factory.create(\n        new KeywordTokenizer(new StringReader(lowerCase)));\n    assertCollatesToSame(tsUpper, tsLower);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}