{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#updateFeed(ServerBaseFeed,String).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#updateFeed(ServerBaseFeed,String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#updateFeed(ServerBaseFeed,String).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#updateFeed(org.apache.lucene.gdata.data.ServerBaseFeed,\n     *      java.lang.String)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void updateFeed(ServerBaseFeed feed, String accountname)\n            throws StorageException {\n        if (feed == null)\n            throw new StorageException(\"Can not update feed -- is null\");\n        if (feed.getId() == null)\n            throw new StorageException(\"Can not update feed -- id is null\");\n        if(feed.getServiceType() == null)\n            throw new StorageException(\"Can not update feed -- service type is null\");\n        if(accountname == null)\n            throw new StorageException(\"Account name is null\");\n        GDataAccount account = getAccount(accountname);\n        Query query = this.container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(feed.getId());\n        ObjectSet<ServerBaseFeed> set=  query.execute();\n        if (set.size() > 1)\n            throw new StorageException(\"Query for feed id \" + feed.getId()\n                    + \" returns more than one result\");\n        if (set.size() < 1)\n            throw new StorageException(\"can not find feed for given feed id -- \"\n                + feed.getId());\n        ServerBaseFeed result = set.next();\n        refreshPersistentObject(result);\n        BaseFeed oldFeed = result.getFeed();\n        result.setAccount(account);\n        result.setFeed(feed.getFeed());\n        try {\n            this.container.delete(oldFeed);\n            this.container.set(result);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occurred on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        \n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#updateFeed(org.apache.lucene.gdata.data.ServerBaseFeed,\n     *      java.lang.String)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void updateFeed(ServerBaseFeed feed, String accountname)\n            throws StorageException {\n        if (feed == null)\n            throw new StorageException(\"Can not update feed -- is null\");\n        if (feed.getId() == null)\n            throw new StorageException(\"Can not update feed -- id is null\");\n        if(feed.getServiceType() == null)\n            throw new StorageException(\"Can not update feed -- service type is null\");\n        if(accountname == null)\n            throw new StorageException(\"Account name is null\");\n        GDataAccount account = getAccount(accountname);\n        Query query = this.container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(feed.getId());\n        ObjectSet<ServerBaseFeed> set=  query.execute();\n        if (set.size() > 1)\n            throw new StorageException(\"Query for feed id \" + feed.getId()\n                    + \" returns more than one result\");\n        if (set.size() < 1)\n            throw new StorageException(\"can not find feed for given feed id -- \"\n                + feed.getId());\n        ServerBaseFeed result = set.next();\n        refreshPersistentObject(result);\n        BaseFeed oldFeed = result.getFeed();\n        result.setAccount(account);\n        result.setFeed(feed.getFeed());\n        try {\n            this.container.delete(oldFeed);\n            this.container.set(result);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occurred on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#updateFeed(ServerBaseFeed,String).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/db4o/DB4oStorage#updateFeed(ServerBaseFeed,String).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#updateFeed(org.apache.lucene.gdata.data.ServerBaseFeed,\n     *      java.lang.String)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void updateFeed(ServerBaseFeed feed, String accountname)\n            throws StorageException {\n        if (feed == null)\n            throw new StorageException(\"Can not update feed -- is null\");\n        if (feed.getId() == null)\n            throw new StorageException(\"Can not update feed -- id is null\");\n        if(feed.getServiceType() == null)\n            throw new StorageException(\"Can not update feed -- service type is null\");\n        if(accountname == null)\n            throw new StorageException(\"Account name is null\");\n        GDataAccount account = getAccount(accountname);\n        Query query = this.container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(feed.getId());\n        ObjectSet<ServerBaseFeed> set=  query.execute();\n        if (set.size() > 1)\n            throw new StorageException(\"Query for feed id \" + feed.getId()\n                    + \" returns more than one result\");\n        if (set.size() < 1)\n            throw new StorageException(\"can not find feed for given feed id -- \"\n                + feed.getId());\n        ServerBaseFeed result = set.next();\n        refreshPersistentObject(result);\n        BaseFeed oldFeed = result.getFeed();\n        result.setAccount(account);\n        result.setFeed(feed.getFeed());\n        try {\n            this.container.delete(oldFeed);\n            this.container.set(result);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occurred on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        \n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.storage.Storage#updateFeed(org.apache.lucene.gdata.data.ServerBaseFeed,\n     *      java.lang.String)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void updateFeed(ServerBaseFeed feed, String accountname)\n            throws StorageException {\n        if (feed == null)\n            throw new StorageException(\"Can not update feed -- is null\");\n        if (feed.getId() == null)\n            throw new StorageException(\"Can not update feed -- id is null\");\n        if(feed.getServiceType() == null)\n            throw new StorageException(\"Can not update feed -- service type is null\");\n        if(accountname == null)\n            throw new StorageException(\"Account name is null\");\n        GDataAccount account = getAccount(accountname);\n        Query query = this.container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(feed.getId());\n        ObjectSet<ServerBaseFeed> set=  query.execute();\n        if (set.size() > 1)\n            throw new StorageException(\"Query for feed id \" + feed.getId()\n                    + \" returns more than one result\");\n        if (set.size() < 1)\n            throw new StorageException(\"can not find feed for given feed id -- \"\n                + feed.getId());\n        ServerBaseFeed result = set.next();\n        refreshPersistentObject(result);\n        BaseFeed oldFeed = result.getFeed();\n        result.setAccount(account);\n        result.setFeed(feed.getFeed());\n        try {\n            this.container.delete(oldFeed);\n            this.container.set(result);\n            this.container.commit();\n        } catch (Exception e) {\n            LOG\n                    .error(\"Error occurred on persisting changes -- rollback changes\");\n            this.container.rollback();\n            throw new StorageException(\"Can not persist changes -- \"\n                    + e.getMessage(), e);\n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}