{"path":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    sb.append('_');\n    sb.append(commit.getVersion());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n    if (dir instanceof MetricsDirectoryFactory.MetricsDirectory) { // unwrap\n      dir = ((MetricsDirectoryFactory.MetricsDirectory) dir).getDelegate();\n    }\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n    if (dir instanceof MetricsDirectoryFactory.MetricsDirectory) { // unwrap\n      dir = ((MetricsDirectoryFactory.MetricsDirectory) dir).getDelegate();\n    }\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e037d4cc589a2acd147ea27ffc29b19d595be53f","date":1488209547,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrDeletionPolicy#getId(IndexCommit).mjava","sourceNew":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","sourceOld":"  private String getId(IndexCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    Directory dir = commit.getDirectory();\n    if (dir instanceof MetricsDirectoryFactory.MetricsDirectory) { // unwrap\n      dir = ((MetricsDirectoryFactory.MetricsDirectory) dir).getDelegate();\n    }\n\n    // For anything persistent, make something that will\n    // be the same, regardless of the Directory instance.\n    if (dir instanceof FSDirectory) {\n      FSDirectory fsd = (FSDirectory) dir;\n      File fdir = fsd.getDirectory().toFile();\n      sb.append(fdir.getPath());\n    } else {\n      sb.append(dir);\n    }\n\n    sb.append('/');\n    sb.append(commit.getGeneration());\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["c26f00b574427b55127e869b935845554afde1fa","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e037d4cc589a2acd147ea27ffc29b19d595be53f"],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["f4abec28b874149a7223e32cc7a01704c27790de","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","f4abec28b874149a7223e32cc7a01704c27790de"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"c26f00b574427b55127e869b935845554afde1fa":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["e037d4cc589a2acd147ea27ffc29b19d595be53f","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"f4abec28b874149a7223e32cc7a01704c27790de":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e037d4cc589a2acd147ea27ffc29b19d595be53f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}