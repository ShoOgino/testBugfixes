{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","commits":[{"id":"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","date":1571856490,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, i);\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9315b5a287025982c4a35e4acd9247a8535b4cdf","date":1575566832,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, String.valueOf(i));\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, i);\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","date":1575629849,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, String.valueOf(i));\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, i);\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e35f2dde06b35aa9904949a3a93fabd090371077","date":1587906921,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after {} iterations.\", i);\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, String.valueOf(i));\n        log.info(\"   * iter {} :\", i + 1); // logOK\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          if (log.isInfoEnabled()) {\n            log.info(\"     - {}\\t{})\", op.getClass().getSimpleName(), op.params);\n          }\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after {} iterations.\", i);\n            return;\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, String.valueOf(i));\n        log.info(\"   * iter \" + (i + 1) + \":\");\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          log.info(\"     - \" + op.getClass().getSimpleName() + \"\\t\" + op.params.toString());\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after \" + i + \" iterations.\");\n            return;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoopOp#execute(SimScenario).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      iterations = Integer.parseInt(params.get(\"iterations\", \"10\"));\n      for (int i = 0; i < iterations; i++) {\n        if (scenario.abortLoop) {\n          log.info(\"        -- abortLoop requested, aborting after {} iterations.\", i);\n          return;\n        }\n        scenario.context.put(LOOP_ITER_PROP, String.valueOf(i));\n        log.info(\"   * iter {} :\", i + 1); // logOK\n        for (SimOp op : ops) {\n          op.prepareCurrentParams(scenario);\n          if (log.isInfoEnabled()) {\n            log.info(\"     - {}\\t{})\", op.getClass().getSimpleName(), op.params);\n          }\n          op.execute(scenario);\n          if (scenario.abortLoop) {\n            log.info(\"        -- abortLoop requested, aborting after {} iterations.\", i);\n            return;\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9315b5a287025982c4a35e4acd9247a8535b4cdf":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"3f504512a03d978990cbff30db0522b354e846db":["e35f2dde06b35aa9904949a3a93fabd090371077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","9315b5a287025982c4a35e4acd9247a8535b4cdf"],"e35f2dde06b35aa9904949a3a93fabd090371077":["9315b5a287025982c4a35e4acd9247a8535b4cdf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9315b5a287025982c4a35e4acd9247a8535b4cdf":["2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","e35f2dde06b35aa9904949a3a93fabd090371077"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5":[],"e35f2dde06b35aa9904949a3a93fabd090371077":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["9315b5a287025982c4a35e4acd9247a8535b4cdf","2c173aec5dba4a880e26706e8ca1ec9e67b74ed5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}