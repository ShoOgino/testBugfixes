{"path":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","commits":[{"id":"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca","date":1295834280,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0caa667d4d07122cb9a0b193fba0f478680d982e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"/dev/null","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0caa667d4d07122cb9a0b193fba0f478680d982e","date":1300755686,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","bugFix":["bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, runtimeParameters.get(attributeName));\n          log.info(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/ae/OverridingParamsAEProvider#getAE().mjava","sourceNew":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","sourceOld":"  public synchronized AnalysisEngine getAE() throws ResourceInitializationException {\n    try {\n      if (cachedAE == null) {\n        // get Resource Specifier from XML file\n        URL url = this.getClass().getResource(aeFilePath);\n        XMLInputSource in = new XMLInputSource(url);\n\n        // get AE description\n        AnalysisEngineDescription desc = UIMAFramework.getXMLParser()\n                .parseAnalysisEngineDescription(in);\n\n        /* iterate over each AE (to set runtime parameters) */\n        for (String attributeName : runtimeParameters.keySet()) {\n          Object val = getRuntimeValue(desc, attributeName);\n          desc.getAnalysisEngineMetaData().getConfigurationParameterSettings().setParameterValue(\n                  attributeName, val);\n          if (log.isDebugEnabled())\n            log.debug(new StringBuilder(\"setting \").append(attributeName).append(\" : \").append(\n                  runtimeParameters.get(attributeName)).toString());\n        }\n        // create AE here\n        cachedAE = UIMAFramework.produceAnalysisEngine(desc);\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" created from descriptor \").append(aeFilePath).toString());\n      } else {\n        cachedAE.reconfigure();\n        if (log.isDebugEnabled())\n          log.debug(new StringBuilder(\"AE \").append(cachedAE.getAnalysisEngineMetaData().getName())\n                  .append(\" at path \").append(aeFilePath).append(\" reconfigured \").toString());\n      }\n    } catch (Exception e) {\n      cachedAE = null;\n      throw new ResourceInitializationException(e);\n    }\n    return cachedAE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0caa667d4d07122cb9a0b193fba0f478680d982e":["bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","0caa667d4d07122cb9a0b193fba0f478680d982e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["0caa667d4d07122cb9a0b193fba0f478680d982e","0caa667d4d07122cb9a0b193fba0f478680d982e"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","0caa667d4d07122cb9a0b193fba0f478680d982e"],"c26f00b574427b55127e869b935845554afde1fa":["0caa667d4d07122cb9a0b193fba0f478680d982e","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"]},"commit2Childs":{"0caa667d4d07122cb9a0b193fba0f478680d982e":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d619839baa8ce5503e496b94a9e42ad6f079293f","c26f00b574427b55127e869b935845554afde1fa"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca":["0caa667d4d07122cb9a0b193fba0f478680d982e","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}