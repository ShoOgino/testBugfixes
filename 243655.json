{"path":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readString().mjava","sourceNew":"  /** Reads a string.\n   * @see OutputStream#writeString(String)\n   */\n  public String readString() throws IOException {\n    int length = readVInt();\n    if (chars == null || length > chars.length)\n      chars = new char[length];\n    readChars(chars, 0, length);\n    return new String(chars, 0, length);\n  }\n\n","sourceOld":"  /** Reads a string.\n   * @see OutputStream#writeString(String)\n   */\n  public final String readString() throws IOException {\n    int length = readVInt();\n    if (chars == null || length > chars.length)\n      chars = new char[length];\n    readChars(chars, 0, length);\n    return new String(chars, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","sourceNew":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    int length = readVInt();\n    if (chars == null || length > chars.length)\n      chars = new char[length];\n    readChars(chars, 0, length);\n    return new String(chars, 0, length);\n  }\n\n","sourceOld":"  /** Reads a string.\n   * @see OutputStream#writeString(String)\n   */\n  public String readString() throws IOException {\n    int length = readVInt();\n    if (chars == null || length > chars.length)\n      chars = new char[length];\n    readChars(chars, 0, length);\n    return new String(chars, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","sourceNew":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    if (preUTF8Strings)\n      return readModifiedUTF8String();\n    int length = readVInt();\n    if (bytes == null || length > bytes.length)\n      bytes = new byte[(int) (length*1.25)];\n    readBytes(bytes, 0, length);\n    return new String(bytes, 0, length, \"UTF-8\");\n  }\n\n","sourceOld":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    int length = readVInt();\n    if (chars == null || length > chars.length)\n      chars = new char[length];\n    readChars(chars, 0, length);\n    return new String(chars, 0, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a43a81875fea76763cb9f1ff5a41f2c5b79a6585","date":1264678816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","sourceNew":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    if (preUTF8Strings)\n      return readModifiedUTF8String();\n    int length = readVInt();\n    if (bytes == null || length > bytes.length) {\n      bytes = new byte[ArrayUtil.oversize(length, 1)];\n    }\n    readBytes(bytes, 0, length);\n    return new String(bytes, 0, length, \"UTF-8\");\n  }\n\n","sourceOld":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    if (preUTF8Strings)\n      return readModifiedUTF8String();\n    int length = readVInt();\n    if (bytes == null || length > bytes.length)\n      bytes = new byte[(int) (length*1.25)];\n    readBytes(bytes, 0, length);\n    return new String(bytes, 0, length, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexInput#readString().mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readString().mjava","sourceNew":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    if (preUTF8Strings)\n      return readModifiedUTF8String();\n    int length = readVInt();\n    if (bytes == null || length > bytes.length) {\n      bytes = new byte[ArrayUtil.oversize(length, 1)];\n    }\n    readBytes(bytes, 0, length);\n    return new String(bytes, 0, length, \"UTF-8\");\n  }\n\n","sourceOld":"  /** Reads a string.\n   * @see IndexOutput#writeString(String)\n   */\n  public String readString() throws IOException {\n    if (preUTF8Strings)\n      return readModifiedUTF8String();\n    int length = readVInt();\n    if (bytes == null || length > bytes.length) {\n      bytes = new byte[ArrayUtil.oversize(length, 1)];\n    }\n    readBytes(bytes, 0, length);\n    return new String(bytes, 0, length, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["a43a81875fea76763cb9f1ff5a41f2c5b79a6585"],"a43a81875fea76763cb9f1ff5a41f2c5b79a6585":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}