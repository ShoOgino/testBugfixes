{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get(boolean).mjava","commits":[{"id":"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413","date":1519539873,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get(boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public synchronized DocCollection get(boolean allowCached) {\n      gets.incrementAndGet();\n      if (!allowCached || lastUpdateTime < 0 || System.nanoTime() - lastUpdateTime > LAZY_CACHE_TIME) {\n        boolean shouldFetch = true;\n        if (cachedDocCollection != null) {\n          Stat exists = null;\n          try {\n            exists = zkClient.exists(getCollectionPath(collName), null, true);\n          } catch (Exception e) {}\n          if (exists != null && exists.getVersion() == cachedDocCollection.getZNodeVersion()) {\n            shouldFetch = false;\n          }\n        }\n        if (shouldFetch) {\n          cachedDocCollection = getCollectionLive(ZkStateReader.this, collName);\n          lastUpdateTime = System.nanoTime();\n        }\n      }\n      return cachedDocCollection;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get(boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get(boolean).mjava","sourceNew":"    @Override\n    public synchronized DocCollection get(boolean allowCached) {\n      gets.incrementAndGet();\n      if (!allowCached || lastUpdateTime < 0 || System.nanoTime() - lastUpdateTime > LAZY_CACHE_TIME) {\n        boolean shouldFetch = true;\n        if (cachedDocCollection != null) {\n          Stat exists = null;\n          try {\n            exists = zkClient.exists(getCollectionPath(collName), null, true);\n          } catch (Exception e) {\n          }\n          if (exists != null && exists.getVersion() == cachedDocCollection.getZNodeVersion()) {\n            shouldFetch = false;\n          }\n        }\n        if (shouldFetch) {\n          cachedDocCollection = getCollectionLive(ZkStateReader.this, collName);\n          lastUpdateTime = System.nanoTime();\n        }\n      }\n      return cachedDocCollection;\n    }\n\n","sourceOld":"    @Override\n    public synchronized DocCollection get(boolean allowCached) {\n      gets.incrementAndGet();\n      if (!allowCached || lastUpdateTime < 0 || System.nanoTime() - lastUpdateTime > LAZY_CACHE_TIME) {\n        boolean shouldFetch = true;\n        if (cachedDocCollection != null) {\n          Stat exists = null;\n          try {\n            exists = zkClient.exists(getCollectionPath(collName), null, true);\n          } catch (Exception e) {}\n          if (exists != null && exists.getVersion() == cachedDocCollection.getZNodeVersion()) {\n            shouldFetch = false;\n          }\n        }\n        if (shouldFetch) {\n          cachedDocCollection = getCollectionLive(ZkStateReader.this, collName);\n          lastUpdateTime = System.nanoTime();\n        }\n      }\n      return cachedDocCollection;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2668c99990e4c94a78bac005aa682b7c5986d23a":["c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413"],"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}