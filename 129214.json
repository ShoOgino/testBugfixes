{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ByteBuffersDataOutput(int,int,IntFunction[ByteBuffer],Consumer[ByteBuffer]).mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#ByteBuffersDataOutput(int,int,IntFunction[ByteBuffer],Consumer[ByteBuffer]).mjava","pathOld":"/dev/null","sourceNew":"  public ByteBuffersDataOutput(int minBitsPerBlock, \n                               int maxBitsPerBlock,\n                               IntFunction<ByteBuffer> blockAllocate,\n                               Consumer<ByteBuffer> blockReuse) {\n    if (minBitsPerBlock < 10 ||\n        minBitsPerBlock > maxBitsPerBlock ||\n        maxBitsPerBlock > 31) {\n      throw new IllegalArgumentException(String.format(Locale.ROOT,\n          \"Invalid arguments: %s %s\",\n          minBitsPerBlock,\n          maxBitsPerBlock));\n    }\n    this.maxBitsPerBlock = maxBitsPerBlock;\n    this.blockBits = minBitsPerBlock;\n    this.blockAllocate = Objects.requireNonNull(blockAllocate, \"Block allocator must not be null.\");\n    this.blockReuse = Objects.requireNonNull(blockReuse, \"Block reuse must not be null.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fad01f81cc24b33263ccec7dbff3fb907702f91e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}