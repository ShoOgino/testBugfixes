{"path":"solr/core/src/test/org/apache/solr/handler/admin/StatsReloadRaceTest#requestMbeans().mjava","commits":[{"id":"4855785495f66ec5566394edd10f25ec5489869c","date":1482383918,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/StatsReloadRaceTest#requestMbeans().mjava","pathOld":"/dev/null","sourceNew":"  private void requestMbeans() throws Exception {\n    String stats = h.query(req(\n        CommonParams.QT, \"/admin/mbeans\",\n        \"stats\", \"true\"));\n\n    NamedList<NamedList<Object>> actualStats = SolrInfoMBeanHandler.fromXML(stats).get(\"CORE\");\n    \n    for (Map.Entry<String, NamedList<Object>> tuple : actualStats) {\n      if (tuple.getKey().contains(\"earcher\")) { // catches \"searcher\" and \"Searcher@345345 blah\"\n        NamedList<Object> searcherStats = tuple.getValue();\n        @SuppressWarnings(\"unchecked\")\n        NamedList<Object> statsList = (NamedList<Object>)searcherStats.get(\"stats\");\n        assertEquals(\"expect to have exactly one indexVersion at \"+statsList, 1, statsList.getAll(\"indexVersion\").size());\n        assertTrue(statsList.get(\"indexVersion\") instanceof Long); \n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/StatsReloadRaceTest#requestMbeans().mjava","pathOld":"/dev/null","sourceNew":"  private void requestMbeans() throws Exception {\n    String stats = h.query(req(\n        CommonParams.QT, \"/admin/mbeans\",\n        \"stats\", \"true\"));\n\n    NamedList<NamedList<Object>> actualStats = SolrInfoMBeanHandler.fromXML(stats).get(\"CORE\");\n    \n    for (Map.Entry<String, NamedList<Object>> tuple : actualStats) {\n      if (tuple.getKey().contains(\"earcher\")) { // catches \"searcher\" and \"Searcher@345345 blah\"\n        NamedList<Object> searcherStats = tuple.getValue();\n        @SuppressWarnings(\"unchecked\")\n        NamedList<Object> statsList = (NamedList<Object>)searcherStats.get(\"stats\");\n        assertEquals(\"expect to have exactly one indexVersion at \"+statsList, 1, statsList.getAll(\"indexVersion\").size());\n        assertTrue(statsList.get(\"indexVersion\") instanceof Long); \n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/StatsReloadRaceTest#requestMbeans().mjava","sourceNew":null,"sourceOld":"  private void requestMbeans() throws Exception {\n    String stats = h.query(req(\n        CommonParams.QT, \"/admin/mbeans\",\n        \"stats\", \"true\"));\n\n    NamedList<NamedList<Object>> actualStats = SolrInfoMBeanHandler.fromXML(stats).get(\"CORE\");\n    \n    for (Map.Entry<String, NamedList<Object>> tuple : actualStats) {\n      if (tuple.getKey().contains(\"earcher\")) { // catches \"searcher\" and \"Searcher@345345 blah\"\n        NamedList<Object> searcherStats = tuple.getValue();\n        @SuppressWarnings(\"unchecked\")\n        NamedList<Object> statsList = (NamedList<Object>)searcherStats.get(\"stats\");\n        assertEquals(\"expect to have exactly one indexVersion at \"+statsList, 1, statsList.getAll(\"indexVersion\").size());\n        assertTrue(statsList.get(\"indexVersion\") instanceof Long); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/StatsReloadRaceTest#requestMbeans().mjava","sourceNew":null,"sourceOld":"  private void requestMbeans() throws Exception {\n    String stats = h.query(req(\n        CommonParams.QT, \"/admin/mbeans\",\n        \"stats\", \"true\"));\n\n    NamedList<NamedList<Object>> actualStats = SolrInfoMBeanHandler.fromXML(stats).get(\"CORE\");\n    \n    for (Map.Entry<String, NamedList<Object>> tuple : actualStats) {\n      if (tuple.getKey().contains(\"earcher\")) { // catches \"searcher\" and \"Searcher@345345 blah\"\n        NamedList<Object> searcherStats = tuple.getValue();\n        @SuppressWarnings(\"unchecked\")\n        NamedList<Object> statsList = (NamedList<Object>)searcherStats.get(\"stats\");\n        assertEquals(\"expect to have exactly one indexVersion at \"+statsList, 1, statsList.getAll(\"indexVersion\").size());\n        assertTrue(statsList.get(\"indexVersion\") instanceof Long); \n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["4855785495f66ec5566394edd10f25ec5489869c"],"4855785495f66ec5566394edd10f25ec5489869c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["4855785495f66ec5566394edd10f25ec5489869c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4855785495f66ec5566394edd10f25ec5489869c"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"4855785495f66ec5566394edd10f25ec5489869c":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4855785495f66ec5566394edd10f25ec5489869c","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}