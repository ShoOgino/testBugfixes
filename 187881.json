{"path":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","commits":[{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues sortedSetDV = in.getSortedSetDocValues(field);\n    if (sortedSetDV == null) {\n      return null;\n    } else {\n      return new SortingSortedSetDocValues(sortedSetDV, docMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = ArrayUtil.copyOfSubArray(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = ArrayUtil.copyOfSubArray(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = ArrayUtil.copyOfSubArray(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = Arrays.copyOfRange(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","date":1599130480,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues oldDocValues = in.getSortedSetDocValues(field);\n    if (oldDocValues == null) {\n      return null;\n    }\n\n    long[][] ords;\n    synchronized (cachedSortedSetDVs) {\n      ords = cachedSortedSetDVs.get(field);\n      if (ords == null) {\n        ords = new long[maxDoc()][];\n        int docID;\n        while ((docID = oldDocValues.nextDoc()) != NO_MORE_DOCS) {\n          int newDocID = docMap.oldToNew(docID);\n          long[] docOrds = new long[1];\n          int upto = 0;\n          while (true) {\n            long ord = oldDocValues.nextOrd();\n            if (ord == NO_MORE_ORDS) {\n              break;\n            }\n            if (upto == docOrds.length) {\n              docOrds = ArrayUtil.grow(docOrds);\n            }\n            docOrds[upto++] = ord;\n          }\n          ords[newDocID] = ArrayUtil.copyOfSubArray(docOrds, 0, upto);\n        }\n        cachedSortedSetDVs.put(field, ords);\n      }\n    }\n\n    return new SortingSortedSetDocValues(oldDocValues, ords);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d33e731a93d4b57e662ff094f64f94a745422d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d470c8182e92b264680e34081b75e70a9f2b3c89","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"b70042a8a492f7054d480ccdd2be9796510d4327":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","9798d0818e7a880546802b509792d3f3d57babd2"],"9798d0818e7a880546802b509792d3f3d57babd2":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["9798d0818e7a880546802b509792d3f3d57babd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}