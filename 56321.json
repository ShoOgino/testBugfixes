{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050ba1ba249733cac50c2612418b7179591d2df9","date":1374633633,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cbc4730743fac2e69e7d622848778d3ad9f2151","date":1502282443,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ffe681f212e5073c69955b4ad22946794c84940","date":1560182863,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target);\n      b.append(\" label=0x\").append(Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx).append(\" of \").append(numArcs).append(\")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\" + target);\n      b.append(\" label=0x\" + Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54204c8a3ca26aeafd273139fc29baf70d0f6786","date":1564170395,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target());\n      b.append(\" label=0x\").append(Integer.toHexString(label()));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output());\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput());\n      }\n      if (bytesPerArc() != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx()).append(\" of \").append(numArcs()).append(\")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target);\n      b.append(\" label=0x\").append(Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx).append(\" of \").append(numArcs).append(\")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target());\n      b.append(\" label=0x\").append(Integer.toHexString(label()));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output());\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput());\n      }\n      if (bytesPerArc() != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx()).append(\" of \").append(numArcs()).append(\")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target);\n      b.append(\" label=0x\").append(Integer.toHexString(label));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx).append(\" of \").append(numArcs).append(\")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06086b5bd0f0d57858f0675becc58edf1f6b7c11","date":1586421397,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target());\n      b.append(\" label=0x\").append(Integer.toHexString(label()));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output());\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput());\n      }\n      if (bytesPerArc() != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx()).append(\" of \").append(numArcs()).append(\")\")\n            .append(\"(\").append(nodeFlags() == ARCS_FOR_DIRECT_ADDRESSING ? \"da\" : \"bs\").append(\")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\" target=\").append(target());\n      b.append(\" label=0x\").append(Integer.toHexString(label()));\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_STOP_NODE)) {\n        b.append(\" stop\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\").append(output());\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\").append(nextFinalOutput());\n      }\n      if (bytesPerArc() != 0) {\n        b.append(\" arcArray(idx=\").append(arcIdx()).append(\" of \").append(numArcs()).append(\")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":["54204c8a3ca26aeafd273139fc29baf70d0f6786"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["2ffe681f212e5073c69955b4ad22946794c84940"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["2f948dd442d23baa6cbb28daf77c8db78b351329","9cbc4730743fac2e69e7d622848778d3ad9f2151"],"2ffe681f212e5073c69955b4ad22946794c84940":["9cbc4730743fac2e69e7d622848778d3ad9f2151"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["54204c8a3ca26aeafd273139fc29baf70d0f6786"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9cbc4730743fac2e69e7d622848778d3ad9f2151":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["2f948dd442d23baa6cbb28daf77c8db78b351329","9cbc4730743fac2e69e7d622848778d3ad9f2151"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","050ba1ba249733cac50c2612418b7179591d2df9"],"f8061ddd97f3352007d927dae445884a6f3d857b":["2ffe681f212e5073c69955b4ad22946794c84940","54204c8a3ca26aeafd273139fc29baf70d0f6786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"050ba1ba249733cac50c2612418b7179591d2df9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"54204c8a3ca26aeafd273139fc29baf70d0f6786":["06086b5bd0f0d57858f0675becc58edf1f6b7c11","f8061ddd97f3352007d927dae445884a6f3d857b"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"2ffe681f212e5073c69955b4ad22946794c84940":["54204c8a3ca26aeafd273139fc29baf70d0f6786","f8061ddd97f3352007d927dae445884a6f3d857b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2f948dd442d23baa6cbb28daf77c8db78b351329","050ba1ba249733cac50c2612418b7179591d2df9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cbc4730743fac2e69e7d622848778d3ad9f2151":["58884af1f68e9d61c217c753fbd6266d86a63b14","2ffe681f212e5073c69955b4ad22946794c84940","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"2f948dd442d23baa6cbb28daf77c8db78b351329":["58884af1f68e9d61c217c753fbd6266d86a63b14","9cbc4730743fac2e69e7d622848778d3ad9f2151","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"050ba1ba249733cac50c2612418b7179591d2df9":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}