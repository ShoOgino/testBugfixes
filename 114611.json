{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","pathOld":"/dev/null","sourceNew":"  private NamedList getConfigSetProperties(String path) throws IOException {\n    byte [] oldPropsData = null;\n    try {\n     oldPropsData = zkStateReader.getZkClient().getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      log.info(\"no existing ConfigSet properties found\");\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error reading old properties\",\n          SolrZkClient.checkInterrupted(e));\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e29778bfb04e9115636606cb8f74e23ecba15c7b","date":1536084166,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","sourceNew":"  private NamedList getConfigSetProperties(String path) throws IOException {\n    byte[] oldPropsData = null;\n    try {\n      oldPropsData = zkStateReader.getZkClient().getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      log.info(\"no existing ConfigSet properties found\");\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error reading old properties\",\n          SolrZkClient.checkInterrupted(e));\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private NamedList getConfigSetProperties(String path) throws IOException {\n    byte [] oldPropsData = null;\n    try {\n     oldPropsData = zkStateReader.getZkClient().getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      log.info(\"no existing ConfigSet properties found\");\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error reading old properties\",\n          SolrZkClient.checkInterrupted(e));\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerConfigSetMessageHandler#getConfigSetProperties(String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  private NamedList getConfigSetProperties(String path) throws IOException {\n    byte[] oldPropsData = null;\n    try {\n      oldPropsData = zkStateReader.getZkClient().getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      log.info(\"no existing ConfigSet properties found\");\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error reading old properties\",\n          SolrZkClient.checkInterrupted(e));\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private NamedList getConfigSetProperties(String path) throws IOException {\n    byte[] oldPropsData = null;\n    try {\n      oldPropsData = zkStateReader.getZkClient().getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      log.info(\"no existing ConfigSet properties found\");\n    } catch (KeeperException | InterruptedException e) {\n      throw new IOException(\"Error reading old properties\",\n          SolrZkClient.checkInterrupted(e));\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}