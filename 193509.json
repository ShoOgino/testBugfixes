{"path":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","commits":[{"id":"455aeff4fef915340c5b19d71d5e147034e83093","date":1210099270,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"/dev/null","sourceNew":"  public final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingOutput != null) {\n      try {\n        pendingOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingOutput = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0ba9135468ec4b027cb08a206cba13633a410e8c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae5e4fc9fa92e2ee7a5606c11dd854d923c59cc5","date":1242273429,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  public final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  public final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingOutput != null) {\n      try {\n        pendingOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f33fc116e28d7704378c9dd333711753bd0c9706","date":1248010179,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  public final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                             \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f33fc116e28d7704378c9dd333711753bd0c9706":["ae5e4fc9fa92e2ee7a5606c11dd854d923c59cc5"],"ae5e4fc9fa92e2ee7a5606c11dd854d923c59cc5":["455aeff4fef915340c5b19d71d5e147034e83093"],"455aeff4fef915340c5b19d71d5e147034e83093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f33fc116e28d7704378c9dd333711753bd0c9706"]},"commit2Childs":{"f33fc116e28d7704378c9dd333711753bd0c9706":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ae5e4fc9fa92e2ee7a5606c11dd854d923c59cc5":["f33fc116e28d7704378c9dd333711753bd0c9706"],"455aeff4fef915340c5b19d71d5e147034e83093":["ae5e4fc9fa92e2ee7a5606c11dd854d923c59cc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["455aeff4fef915340c5b19d71d5e147034e83093"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}