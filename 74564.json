{"path":"src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","commits":[{"id":"203bc84a5a9461a17a2a8e136f872bf4657aaee4","date":1176138824,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","pathOld":"/dev/null","sourceNew":"  private static void search(Query query, Filter filter, int hitNumber, String typeValue) throws Exception {\n    Searchable[] searchables = { getRemote() };\n    Searcher searcher = new MultiSearcher(searchables);\n    Hits result = searcher.search(query,filter);\n    assertEquals(1, result.length());\n    Document document = result.doc(hitNumber);\n    assertTrue(\"document is null and it shouldn't be\", document != null);\n    assertEquals(typeValue, document.get(\"type\"));\n    assertTrue(\"document.getFields() Size: \" + document.getFields().size() + \" is not: \" + 3, document.getFields().size() == 3);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["084b18e2b1c84d66746d1a94b6668766d357c2d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","sourceNew":"  private static void search(Query query, Filter filter, int hitNumber, String typeValue) throws Exception {\n    Searchable[] searchables = { getRemote() };\n    Searcher searcher = new MultiSearcher(searchables);\n    ScoreDoc[] result = searcher.search(query,filter, 1000).scoreDocs;\n    assertEquals(1, result.length);\n    Document document = searcher.doc(result[hitNumber].doc);\n    assertTrue(\"document is null and it shouldn't be\", document != null);\n    assertEquals(typeValue, document.get(\"type\"));\n    assertTrue(\"document.getFields() Size: \" + document.getFields().size() + \" is not: \" + 3, document.getFields().size() == 3);\n  }\n\n","sourceOld":"  private static void search(Query query, Filter filter, int hitNumber, String typeValue) throws Exception {\n    Searchable[] searchables = { getRemote() };\n    Searcher searcher = new MultiSearcher(searchables);\n    Hits result = searcher.search(query,filter);\n    assertEquals(1, result.length());\n    Document document = result.doc(hitNumber);\n    assertTrue(\"document is null and it shouldn't be\", document != null);\n    assertEquals(typeValue, document.get(\"type\"));\n    assertTrue(\"document.getFields() Size: \" + document.getFields().size() + \" is not: \" + 3, document.getFields().size() == 3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02","date":1244977984,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter#search(Query,Filter,int,String).mjava","sourceNew":"  private static void search(Query query, Filter filter, int hitNumber, String typeValue) throws Exception {\n    Searchable[] searchables = { getRemote() };\n    Searcher searcher = new MultiSearcher(searchables);\n    ScoreDoc[] result = searcher.search(query,filter, 1000).scoreDocs;\n    assertEquals(1, result.length);\n    Document document = searcher.doc(result[hitNumber].doc);\n    assertTrue(\"document is null and it shouldn't be\", document != null);\n    assertEquals(typeValue, document.get(\"type\"));\n    assertTrue(\"document.getFields() Size: \" + document.getFields().size() + \" is not: \" + 3, document.getFields().size() == 3);\n  }\n\n","sourceOld":"  private static void search(Query query, Filter filter, int hitNumber, String typeValue) throws Exception {\n    Searchable[] searchables = { getRemote() };\n    Searcher searcher = new MultiSearcher(searchables);\n    ScoreDoc[] result = searcher.search(query,filter, 1000).scoreDocs;\n    assertEquals(1, result.length);\n    Document document = searcher.doc(result[hitNumber].doc);\n    assertTrue(\"document is null and it shouldn't be\", document != null);\n    assertEquals(typeValue, document.get(\"type\"));\n    assertTrue(\"document.getFields() Size: \" + document.getFields().size() + \" is not: \" + 3, document.getFields().size() == 3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["203bc84a5a9461a17a2a8e136f872bf4657aaee4"],"203bc84a5a9461a17a2a8e136f872bf4657aaee4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"]},"commit2Childs":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["203bc84a5a9461a17a2a8e136f872bf4657aaee4"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"203bc84a5a9461a17a2a8e136f872bf4657aaee4":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}