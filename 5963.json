{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/GDataIndexer#commit(boolean).mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/GDataIndexer#commit(boolean).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * This method commits all changes to the index and closes all open\n     * resources (e.g. IndexWriter and IndexReader). This method notifies all\n     * registered Commit listeners if invoked.\n     * \n     * @param optimize -\n     *            <code>true</code> if the index should be optimized on this\n     *            commit\n     * @throws IOException -\n     *             if an IOException occurs\n     */\n    protected synchronized void commit(boolean optimize) throws IOException {\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Commit called with optimize = \" + optimize);\n\n        int changes = this.docsAdded.intValue() + this.docsDeleted.intValue()\n                + this.docsUpdated.intValue();\n        /*\n         * don't call listeners to prevent unnecessary close / open of searchers\n         */\n        if (changes == 0)\n            return;\n        this.committed.incrementAndGet();\n        if(optimize)\n            this.optimized.incrementAndGet();\n        doDeltete();\n        if (optimize) {\n            closeSearcher();\n            openWriter();\n            this.writer.optimize();\n        }\n        closeSearcher();\n        closeWriter();\n        this.docsAdded.set(0);\n        this.docsDeleted.set(0);\n        this.docsUpdated.set(0);\n        notifyCommitListeners(this.serviceConfiguration.getName());\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/GDataIndexer#commit(boolean).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/search/index/GDataIndexer#commit(boolean).mjava","sourceNew":"    /**\n     * This method commits all changes to the index and closes all open\n     * resources (e.g. IndexWriter and IndexReader). This method notifies all\n     * registered Commit listeners if invoked.\n     * \n     * @param optimize -\n     *            <code>true</code> if the index should be optimized on this\n     *            commit\n     * @throws IOException -\n     *             if an IOException occurs\n     */\n    protected synchronized void commit(boolean optimize) throws IOException {\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Commit called with optimize = \" + optimize);\n\n        int changes = this.docsAdded.intValue() + this.docsDeleted.intValue()\n                + this.docsUpdated.intValue();\n        /*\n         * don't call listeners to prevent unnecessary close / open of searchers\n         */\n        if (changes == 0)\n            return;\n        this.committed.incrementAndGet();\n        if(optimize)\n            this.optimized.incrementAndGet();\n        doDeltete();\n        if (optimize) {\n            closeSearcher();\n            openWriter();\n            this.writer.optimize();\n        }\n        closeSearcher();\n        closeWriter();\n        this.docsAdded.set(0);\n        this.docsDeleted.set(0);\n        this.docsUpdated.set(0);\n        notifyCommitListeners(this.serviceConfiguration.getName());\n\n    }\n\n","sourceOld":"    /**\n     * This method commits all changes to the index and closes all open\n     * resources (e.g. IndexWriter and IndexReader). This method notifies all\n     * registered Commit listeners if invoked.\n     * \n     * @param optimize -\n     *            <code>true</code> if the index should be optimized on this\n     *            commit\n     * @throws IOException -\n     *             if an IOException occurs\n     */\n    protected synchronized void commit(boolean optimize) throws IOException {\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Commit called with optimize = \" + optimize);\n\n        int changes = this.docsAdded.intValue() + this.docsDeleted.intValue()\n                + this.docsUpdated.intValue();\n        /*\n         * don't call listeners to prevent unnecessary close / open of searchers\n         */\n        if (changes == 0)\n            return;\n        this.committed.incrementAndGet();\n        if(optimize)\n            this.optimized.incrementAndGet();\n        doDeltete();\n        if (optimize) {\n            closeSearcher();\n            openWriter();\n            this.writer.optimize();\n        }\n        closeSearcher();\n        closeWriter();\n        this.docsAdded.set(0);\n        this.docsDeleted.set(0);\n        this.docsUpdated.set(0);\n        notifyCommitListeners(this.serviceConfiguration.getName());\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}