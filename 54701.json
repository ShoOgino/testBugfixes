{"path":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","commits":[{"id":"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","date":1269379515,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"/dev/null","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriter.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriter.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterRAMAllocator.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterRAMAllocator.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriter.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriter.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterRAMAllocator.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterRAMAllocator.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriter.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriter.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriter.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriter.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriter.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriter.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["6c18273ea5b3974d2f30117f46f1ae416c28f727","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}