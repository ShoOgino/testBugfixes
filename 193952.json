{"path":"solr/core/src/java/org/apache/solr/handler/admin/AdminHandlersProxy#callRemoteNode(String,String,SolrParams,ZkController).mjava","commits":[{"id":"750239682d222924398443d581163940f48d68fc","date":1533297311,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/AdminHandlersProxy#callRemoteNode(String,String,SolrParams,ZkController).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Makes a remote request and returns a future and the solr client. The caller is responsible for closing the client \n   */\n  public static Pair<Future<NamedList<Object>>, SolrClient> callRemoteNode(String nodeName, String endpoint, \n                                                                           SolrParams params, ZkController zkController) \n      throws IOException, SolrServerException {\n    log.debug(\"Proxying {} request to node {}\", endpoint, nodeName);\n    URL baseUrl = new URL(zkController.zkStateReader.getBaseUrlForNodeName(nodeName));\n    HttpSolrClient solr = new HttpSolrClient.Builder(baseUrl.toString()).build();\n    SolrRequest proxyReq = new GenericSolrRequest(SolrRequest.METHOD.GET, endpoint, params);\n    HttpSolrClient.HttpUriRequestResponse proxyResp = solr.httpUriRequest(proxyReq);\n    return new Pair<>(proxyResp.future, solr);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/AdminHandlersProxy#callRemoteNode(String,String,SolrParams,ZkController).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/AdminHandlersProxy#callRemoteNode(String,String,SolrParams,ZkController).mjava","sourceNew":"  /**\n   * Makes a remote request and returns a future and the solr client. The caller is responsible for closing the client \n   */\n  public static Pair<Future<NamedList<Object>>, SolrClient> callRemoteNode(String nodeName, String endpoint, \n                                                                           SolrParams params, ZkController zkController) \n      throws IOException, SolrServerException {\n    log.debug(\"Proxying {} request to node {}\", endpoint, nodeName);\n    URL baseUrl = new URL(zkController.zkStateReader.getBaseUrlForNodeName(nodeName));\n    HttpSolrClient solr = new HttpSolrClient.Builder(baseUrl.toString()).build();\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest proxyReq = new GenericSolrRequest(SolrRequest.METHOD.GET, endpoint, params);\n    HttpSolrClient.HttpUriRequestResponse proxyResp = solr.httpUriRequest(proxyReq);\n    return new Pair<>(proxyResp.future, solr);\n  }\n\n","sourceOld":"  /**\n   * Makes a remote request and returns a future and the solr client. The caller is responsible for closing the client \n   */\n  public static Pair<Future<NamedList<Object>>, SolrClient> callRemoteNode(String nodeName, String endpoint, \n                                                                           SolrParams params, ZkController zkController) \n      throws IOException, SolrServerException {\n    log.debug(\"Proxying {} request to node {}\", endpoint, nodeName);\n    URL baseUrl = new URL(zkController.zkStateReader.getBaseUrlForNodeName(nodeName));\n    HttpSolrClient solr = new HttpSolrClient.Builder(baseUrl.toString()).build();\n    SolrRequest proxyReq = new GenericSolrRequest(SolrRequest.METHOD.GET, endpoint, params);\n    HttpSolrClient.HttpUriRequestResponse proxyResp = solr.httpUriRequest(proxyReq);\n    return new Pair<>(proxyResp.future, solr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba055e19afc289adcb5bedaf68513793a7254012":["750239682d222924398443d581163940f48d68fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"750239682d222924398443d581163940f48d68fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["750239682d222924398443d581163940f48d68fc"],"750239682d222924398443d581163940f48d68fc":["ba055e19afc289adcb5bedaf68513793a7254012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}