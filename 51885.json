{"path":"lucene/backwards/src/java/org/apache/lucene/store/DataInput#readVLong().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/DataInput#readVLong().mjava","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/IndexInput#readVLong().mjava","sourceNew":"  /** Reads a long stored in variable-length format.  Reads between one and\n   * nine bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported. */\n  public long readVLong() throws IOException {\n    byte b = readByte();\n    long i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7FL) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads a long stored in variable-length format.  Reads between one and\n   * nine bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported. */\n  public long readVLong() throws IOException {\n    byte b = readByte();\n    long i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7FL) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/DataInput#readVLong().mjava","sourceNew":null,"sourceOld":"  /** Reads a long stored in variable-length format.  Reads between one and\n   * nine bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported. */\n  public long readVLong() throws IOException {\n    byte b = readByte();\n    long i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7FL) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}