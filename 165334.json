{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","commits":[{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The number of documents to batch together before sending to Solr.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The number of documents to batch together before sending to Solr.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"344a100f67df4c854fe98dcf130fa93bda8da335","date":1512167102,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","sourceNew":"    /**\n     * The number of documents to batch together before sending to Solr. If not set, this defaults to 10.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","sourceOld":"    /**\n     * The number of documents to batch together before sending to Solr.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"670400747be2d99524159f3806d449ecfb0c2389","date":1512293281,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","sourceNew":"    /**\n     * The number of documents to batch together before sending to Solr. If not set, this defaults to 10.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","sourceOld":"    /**\n     * The number of documents to batch together before sending to Solr.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df934da420f386003cad786a9d3c03dff248156c","date":1519325797,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#withQueueSize(int).mjava","sourceNew":"    /**\n     * The maximum number of requests buffered by the SolrClient's internal queue before being processed by background threads.\n     *\n     * This value should be carefully paired with the number of queue-consumer threads.  A queue with a maximum size\n     * set too high may require more memory.  A queue with a maximum size set too low may suffer decreased throughput\n     * as {@link ConcurrentUpdateSolrClient#request(SolrRequest)} calls block waiting to add requests to the queue.\n     *\n     * If not set, this defaults to 10.\n     *\n     * @see #withThreadCount(int)\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","sourceOld":"    /**\n     * The number of documents to batch together before sending to Solr. If not set, this defaults to 10.\n     */\n    public Builder withQueueSize(int queueSize) {\n      if (queueSize <= 0) {\n        throw new IllegalArgumentException(\"queueSize must be a positive integer.\");\n      }\n      this.queueSize = queueSize;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df934da420f386003cad786a9d3c03dff248156c":["670400747be2d99524159f3806d449ecfb0c2389"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"670400747be2d99524159f3806d449ecfb0c2389":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","344a100f67df4c854fe98dcf130fa93bda8da335"],"344a100f67df4c854fe98dcf130fa93bda8da335":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df934da420f386003cad786a9d3c03dff248156c"]},"commit2Childs":{"df934da420f386003cad786a9d3c03dff248156c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"670400747be2d99524159f3806d449ecfb0c2389":["df934da420f386003cad786a9d3c03dff248156c"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["670400747be2d99524159f3806d449ecfb0c2389","344a100f67df4c854fe98dcf130fa93bda8da335"],"344a100f67df4c854fe98dcf130fa93bda8da335":["670400747be2d99524159f3806d449ecfb0c2389"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}