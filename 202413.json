{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","commits":[{"id":"50e7972fe4865715af8951d4ba15555e3426fc5d","date":1115024647,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"/dev/null","sourceNew":"\t\tpublic byte[] norms(String fieldName) {\n\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName);\n\t\t\tInfo info = getInfo(fieldName);\n\t\t\tint numTokens = info != null ? info.numTokens : 0;\n\t\t\tbyte norm = Similarity.encodeNorm(getSimilarity().lengthNorm(fieldName, numTokens));\n\t\t\treturn new byte[] {norm};\n\t\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5387d122ee492aae61d13db6f64f9e46f1f3add8","date":1115146918,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"                public byte[] norms(String fieldName) {\n                  byte[] norms = cachedNorms;\n                  Similarity sim = getSimilarity();\n                  if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n                    Info info = getInfo(fieldName);\n                    int numTokens = info != null ? info.numTokens : 0;\n                    float n = sim.lengthNorm(fieldName, numTokens);\n                    byte norm = Similarity.encodeNorm(n);\n                    norms = new byte[] {norm};\n\t\t    \n                    cachedNorms = norms;\n                    cachedFieldName = fieldName;\n                    cachedSimilarity = sim;\n                    if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n                  }\n                  return norms;\n                }\n\n","sourceOld":"\t\tpublic byte[] norms(String fieldName) {\n\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName);\n\t\t\tInfo info = getInfo(fieldName);\n\t\t\tint numTokens = info != null ? info.numTokens : 0;\n\t\t\tbyte norm = Similarity.encodeNorm(getSimilarity().lengthNorm(fieldName, numTokens));\n\t\t\treturn new byte[] {norm};\n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f14489323057ef6de92ba5ea2d0cfe6e34755f","date":1120167605,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"\t\tpublic byte[] norms(String fieldName) {\r\n\t\t\tbyte[] norms = cachedNorms;\r\n\t\t\tSimilarity sim = getSimilarity();\r\n\t\t\tif (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\r\n\t\t\t\tInfo info = getInfo(fieldName);\r\n\t\t\t\tint numTokens = info != null ? info.numTokens : 0;\r\n\t\t\t\tfloat n = sim.lengthNorm(fieldName, numTokens);\r\n\t\t\t\tbyte norm = Similarity.encodeNorm(n);\r\n\t\t\t\tnorms = new byte[] {norm};\r\n\t\t\t\t\r\n\t\t\t\tcachedNorms = norms;\r\n\t\t\t\tcachedFieldName = fieldName;\r\n\t\t\t\tcachedSimilarity = sim;\r\n\t\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\r\n\t\t\t}\r\n\t\t\treturn norms;\r\n\t\t}\r\n\n","sourceOld":"                public byte[] norms(String fieldName) {\n                  byte[] norms = cachedNorms;\n                  Similarity sim = getSimilarity();\n                  if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n                    Info info = getInfo(fieldName);\n                    int numTokens = info != null ? info.numTokens : 0;\n                    float n = sim.lengthNorm(fieldName, numTokens);\n                    byte norm = Similarity.encodeNorm(n);\n                    norms = new byte[] {norm};\n\t\t    \n                    cachedNorms = norms;\n                    cachedFieldName = fieldName;\n                    cachedSimilarity = sim;\n                    if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n                  }\n                  return norms;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35dd40ede4dd66fa47506858c4a073d295c5a76e","date":1133587328,"type":4,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":null,"sourceOld":"\t\tpublic byte[] norms(String fieldName) {\r\n\t\t\tbyte[] norms = cachedNorms;\r\n\t\t\tSimilarity sim = getSimilarity();\r\n\t\t\tif (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\r\n\t\t\t\tInfo info = getInfo(fieldName);\r\n\t\t\t\tint numTokens = info != null ? info.numTokens : 0;\r\n\t\t\t\tfloat n = sim.lengthNorm(fieldName, numTokens);\r\n\t\t\t\tbyte norm = Similarity.encodeNorm(n);\r\n\t\t\t\tnorms = new byte[] {norm};\r\n\t\t\t\t\r\n\t\t\t\tcachedNorms = norms;\r\n\t\t\t\tcachedFieldName = fieldName;\r\n\t\t\t\tcachedSimilarity = sim;\r\n\t\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\r\n\t\t\t}\r\n\t\t\treturn norms;\r\n\t\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a93e1e4a21be8ebb98e53e6933412a363931faa1","date":1133587471,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"/dev/null","sourceNew":"\t\tpublic byte[] norms(String fieldName) {\n\t\t\tbyte[] norms = cachedNorms;\n\t\t\tSimilarity sim = getSimilarity();\n\t\t\tif (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n\t\t\t\tInfo info = getInfo(fieldName);\n\t\t\t\tint numTokens = info != null ? info.numTokens : 0;\n\t\t\t\tfloat n = sim.lengthNorm(fieldName, numTokens);\n\t\t\t\tbyte norm = Similarity.encodeNorm(n);\n\t\t\t\tnorms = new byte[] {norm};\n\t\t\t\t\n\t\t\t\tcachedNorms = norms;\n\t\t\t\tcachedFieldName = fieldName;\n\t\t\t\tcachedSimilarity = sim;\n\t\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n\t\t\t}\n\t\t\treturn norms;\n\t\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"\t\tpublic byte[] norms(String fieldName) {\n\t\t\tbyte[] norms = cachedNorms;\n\t\t\tSimilarity sim = getSimilarity();\n\t\t\tif (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n\t\t\t\tInfo info = getInfo(fieldName);\n\t\t\t\tint numTokens = info != null ? info.numTokens : 0;\n\t\t\t\tfloat n = sim.lengthNorm(fieldName, numTokens);\n\t\t\t\tbyte norm = Similarity.encodeNorm(n);\n\t\t\t\tnorms = new byte[] {norm};\n\t\t\t\t\n\t\t\t\tcachedNorms = norms;\n\t\t\t\tcachedFieldName = fieldName;\n\t\t\t\tcachedSimilarity = sim;\n\t\t\t\tif (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n\t\t\t}\n\t\t\treturn norms;\n\t\t}\n\n","bugFix":null,"bugIntro":["72b952811367f6e21added5f7306dc6bf2aa1e9c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a2dfe27dcd813920f9df8dbd28079c6e6b9e93e","date":1159427430,"type":3,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)\t\t\t\t\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3152c5a8024c769c20b6eeec4fcb04097d750874","date":1163744279,"type":3,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)                \n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)\t\t\t\t\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"145c78dcf66ec62de7b0152032895ff7095c21f3","date":1164176882,"type":3,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)                \n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)                \n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d41ab32fc87982eab82a896cee390971b5c08fd2","date":1225735438,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        float n = sim.lengthNorm(fieldName, numTokens);\n        float boost = info != null ? info.getBoost() : 1.0f; \n        n = n * boost; // see DocumentWriter.writeNorms(String segment)                \n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    @Override\n    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0eb5b0b5b98c777dad412afbfb347d2c0889327","date":1259094367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    @Override\n    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = sim.encodeNormValue(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    @Override\n    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = Similarity.encodeNorm(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader#norms(String).mjava","sourceNew":"    @Override\n    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = sim.encodeNormValue(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","sourceOld":"    @Override\n    public byte[] norms(String fieldName) {\n      byte[] norms = cachedNorms;\n      Similarity sim = getSimilarity();\n      if (fieldName != cachedFieldName || sim != cachedSimilarity) { // not cached?\n        Info info = getInfo(fieldName);\n        int numTokens = info != null ? info.numTokens : 0;\n        int numOverlapTokens = info != null ? info.numOverlapTokens : 0;\n        float boost = info != null ? info.getBoost() : 1.0f; \n        FieldInvertState invertState = new FieldInvertState(0, numTokens, numOverlapTokens, 0, boost);\n        float n = sim.computeNorm(fieldName, invertState);\n        byte norm = sim.encodeNormValue(n);\n        norms = new byte[] {norm};\n        \n        // cache it for future reuse\n        cachedNorms = norms;\n        cachedFieldName = fieldName;\n        cachedSimilarity = sim;\n        if (DEBUG) System.err.println(\"MemoryIndexReader.norms: \" + fieldName + \":\" + n + \":\" + norm + \":\" + numTokens);\n      }\n      return norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"35dd40ede4dd66fa47506858c4a073d295c5a76e":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["5387d122ee492aae61d13db6f64f9e46f1f3add8"],"145c78dcf66ec62de7b0152032895ff7095c21f3":["3152c5a8024c769c20b6eeec4fcb04097d750874"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["a93e1e4a21be8ebb98e53e6933412a363931faa1"],"5387d122ee492aae61d13db6f64f9e46f1f3add8":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["d41ab32fc87982eab82a896cee390971b5c08fd2"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"3152c5a8024c769c20b6eeec4fcb04097d750874":["3a2dfe27dcd813920f9df8dbd28079c6e6b9e93e"],"a93e1e4a21be8ebb98e53e6933412a363931faa1":["35dd40ede4dd66fa47506858c4a073d295c5a76e"],"d41ab32fc87982eab82a896cee390971b5c08fd2":["145c78dcf66ec62de7b0152032895ff7095c21f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"50e7972fe4865715af8951d4ba15555e3426fc5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a2dfe27dcd813920f9df8dbd28079c6e6b9e93e":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"]},"commit2Childs":{"35dd40ede4dd66fa47506858c4a073d295c5a76e":["a93e1e4a21be8ebb98e53e6933412a363931faa1"],"c8f14489323057ef6de92ba5ea2d0cfe6e34755f":["35dd40ede4dd66fa47506858c4a073d295c5a76e"],"145c78dcf66ec62de7b0152032895ff7095c21f3":["d41ab32fc87982eab82a896cee390971b5c08fd2"],"5387d122ee492aae61d13db6f64f9e46f1f3add8":["c8f14489323057ef6de92ba5ea2d0cfe6e34755f"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["3a2dfe27dcd813920f9df8dbd28079c6e6b9e93e"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["b0eb5b0b5b98c777dad412afbfb347d2c0889327"],"3152c5a8024c769c20b6eeec4fcb04097d750874":["145c78dcf66ec62de7b0152032895ff7095c21f3"],"b0eb5b0b5b98c777dad412afbfb347d2c0889327":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a93e1e4a21be8ebb98e53e6933412a363931faa1":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"d41ab32fc87982eab82a896cee390971b5c08fd2":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["5387d122ee492aae61d13db6f64f9e46f1f3add8"],"3a2dfe27dcd813920f9df8dbd28079c6e6b9e93e":["3152c5a8024c769c20b6eeec4fcb04097d750874"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}