{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 15\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 15\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a76608e7f735dce831f49f9b0c6bc13f10adc5a6","date":1427421698,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 16\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 15\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 16\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 15\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bdac0dff04219451c7511d62225080a93a0181ea","date":1451212020,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 17\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 16\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":["c72f74fee61b05f6d94932ae11ec3fbf97243b9f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c72f74fee61b05f6d94932ae11ec3fbf97243b9f","date":1492549327,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 18\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 17\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","bugFix":["bdac0dff04219451c7511d62225080a93a0181ea"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 18\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 17\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e","date":1541777404,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldResource#testGetField().mjava","sourceNew":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 19\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='uninvertible'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetField() throws Exception {\n    assertQ(\"/schema/fields/test_postv?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='field']) = 1\",\n            \"count(/response/lst[@name='field']/*) = 18\",\n            \"/response/lst[@name='field']/str[@name='name'] = 'test_postv'\",\n            \"/response/lst[@name='field']/str[@name='type'] = 'text'\",\n            \"/response/lst[@name='field']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termVectors'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPositions'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='termPayloads'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitNorms'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitTermFreqAndPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='required'] = 'false'\",\n            \"/response/lst[@name='field']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='field']/bool[@name='useDocValuesAsStored'] = 'true'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["bdac0dff04219451c7511d62225080a93a0181ea"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c72f74fee61b05f6d94932ae11ec3fbf97243b9f":["bdac0dff04219451c7511d62225080a93a0181ea"],"a76608e7f735dce831f49f9b0c6bc13f10adc5a6":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bdac0dff04219451c7511d62225080a93a0181ea":["a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["c72f74fee61b05f6d94932ae11ec3fbf97243b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"a76608e7f735dce831f49f9b0c6bc13f10adc5a6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","bdac0dff04219451c7511d62225080a93a0181ea"],"c72f74fee61b05f6d94932ae11ec3fbf97243b9f":["0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"bdac0dff04219451c7511d62225080a93a0181ea":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","c72f74fee61b05f6d94932ae11ec3fbf97243b9f"],"0d0da5c396448d1d4e5ffbd66baa3df981d3dd5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}