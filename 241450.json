{"path":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#beforeClass().mjava","commits":[{"id":"3ef059c3aff15abd4c4963ba0e8beee74f96da3a","date":1269090680,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"0\", \"lowerfilt\", \"a\", \"standardfilt\", \"a\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"1\", \"lowerfilt\", \"a\", \"standardfilt\", \"aa\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"2\", \"lowerfilt\", \"aa\", \"standardfilt\", \"aaa\", \"foo_i\",\"2\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"3\", \"lowerfilt\", \"aaa\", \"standardfilt\", \"abbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"4\", \"lowerfilt\", \"ab\", \"standardfilt\", \"b\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"5\", \"lowerfilt\", \"abb\", \"standardfilt\", \"bb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"6\", \"lowerfilt\", \"abc\", \"standardfilt\", \"bbbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"7\", \"lowerfilt\", \"b\", \"standardfilt\", \"c\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"8\", \"lowerfilt\", \"baa\", \"standardfilt\", \"cccc\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"9\", \"lowerfilt\", \"bbb\", \"standardfilt\", \"ccccc\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"10\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"11\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"12\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"13\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"14\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"15\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"16\", \"standardfilt\", \"d\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"17\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"18\", \"standardfilt\", \"spider\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"19\", \"standardfilt\", \"shark\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"20\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"21\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"22\", \"standardfilt\", \"shark\")));\n    \n    assertNull(h.validateUpdate(commit()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb65c51348af9263e432c5a93cd98be0ca68ec3a","bb65c51348af9263e432c5a93cd98be0ca68ec3a","bb65c51348af9263e432c5a93cd98be0ca68ec3a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b52974ba6a0658264b11d7c9b0035d57e5b8ab7","date":1269519249,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#beforeTest().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermsComponentTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeTest() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema12.xml\");\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"0\", \"lowerfilt\", \"a\", \"standardfilt\", \"a\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"1\", \"lowerfilt\", \"a\", \"standardfilt\", \"aa\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"2\", \"lowerfilt\", \"aa\", \"standardfilt\", \"aaa\", \"foo_i\",\"2\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"3\", \"lowerfilt\", \"aaa\", \"standardfilt\", \"abbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"4\", \"lowerfilt\", \"ab\", \"standardfilt\", \"b\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"5\", \"lowerfilt\", \"abb\", \"standardfilt\", \"bb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"6\", \"lowerfilt\", \"abc\", \"standardfilt\", \"bbbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"7\", \"lowerfilt\", \"b\", \"standardfilt\", \"c\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"8\", \"lowerfilt\", \"baa\", \"standardfilt\", \"cccc\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"9\", \"lowerfilt\", \"bbb\", \"standardfilt\", \"ccccc\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"10\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"11\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"12\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"13\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"14\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"15\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"16\", \"standardfilt\", \"d\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"17\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"18\", \"standardfilt\", \"spider\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"19\", \"standardfilt\", \"shark\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"20\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"21\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"22\", \"standardfilt\", \"shark\")));\n    \n    assertNull(h.validateUpdate(commit()));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig.xml\",\"schema.xml\");\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"0\", \"lowerfilt\", \"a\", \"standardfilt\", \"a\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"1\", \"lowerfilt\", \"a\", \"standardfilt\", \"aa\", \"foo_i\",\"1\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"2\", \"lowerfilt\", \"aa\", \"standardfilt\", \"aaa\", \"foo_i\",\"2\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"3\", \"lowerfilt\", \"aaa\", \"standardfilt\", \"abbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"4\", \"lowerfilt\", \"ab\", \"standardfilt\", \"b\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"5\", \"lowerfilt\", \"abb\", \"standardfilt\", \"bb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"6\", \"lowerfilt\", \"abc\", \"standardfilt\", \"bbbb\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"7\", \"lowerfilt\", \"b\", \"standardfilt\", \"c\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"8\", \"lowerfilt\", \"baa\", \"standardfilt\", \"cccc\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"9\", \"lowerfilt\", \"bbb\", \"standardfilt\", \"ccccc\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"10\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"11\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"12\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"13\", \"standardfilt\", \"ddddd\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"14\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"15\", \"standardfilt\", \"d\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"16\", \"standardfilt\", \"d\")));\n\n    assertNull(h.validateUpdate(adoc(\"id\", \"17\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"18\", \"standardfilt\", \"spider\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"19\", \"standardfilt\", \"shark\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"20\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"21\", \"standardfilt\", \"snake\")));\n    assertNull(h.validateUpdate(adoc(\"id\", \"22\", \"standardfilt\", \"shark\")));\n    \n    assertNull(h.validateUpdate(commit()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7b52974ba6a0658264b11d7c9b0035d57e5b8ab7":["3ef059c3aff15abd4c4963ba0e8beee74f96da3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3ef059c3aff15abd4c4963ba0e8beee74f96da3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b52974ba6a0658264b11d7c9b0035d57e5b8ab7"]},"commit2Childs":{"7b52974ba6a0658264b11d7c9b0035d57e5b8ab7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ef059c3aff15abd4c4963ba0e8beee74f96da3a"],"3ef059c3aff15abd4c4963ba0e8beee74f96da3a":["7b52974ba6a0658264b11d7c9b0035d57e5b8ab7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}