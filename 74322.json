{"path":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","commits":[{"id":"b73e9c1914a76cfa16576e9d7165e286cc35c36e","date":1593099382,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected long calculateLiveMemoryUsage() {\n      if (count.getAndIncrement() >= 4) {\n        return Long.MAX_VALUE;\n      }\n\n      return 5; // Random number guaranteed to not trip the circuit breaker\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c24f8f07a3e4a885c0e19286d51575df197a611b","date":1593281672,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","sourceNew":null,"sourceOld":"    @Override\n    protected long calculateLiveMemoryUsage() {\n      if (count.getAndIncrement() >= 4) {\n        return Long.MAX_VALUE;\n      }\n\n      return 5; // Random number guaranteed to not trip the circuit breaker\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef8e4fae9bcd156a117f5758819aeabdae3e963","date":1593674028,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected long calculateLiveMemoryUsage() {\n      if (count.getAndIncrement() >= 4) {\n        return Long.MAX_VALUE;\n      }\n\n      return 5; // Random number guaranteed to not trip the circuit breaker\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a18e054d7e71da5abc99ebbd3b6eb77c1797765","date":1594632779,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/TestCircuitBreaker.BuildingUpMemoryPressureCircuitBreaker#calculateLiveMemoryUsage().mjava","sourceNew":"    @Override\n    protected long calculateLiveMemoryUsage() {\n      int localCount = count.getAndIncrement();\n\n      if (localCount >= 4) {\n        //TODO: To be removed\n        if (log.isInfoEnabled()) {\n          String logMessage = \"Blocking query from BuildingUpMemoryPressureCircuitBreaker for count \" + localCount;\n          log.info(logMessage);\n        }\n        return Long.MAX_VALUE;\n      }\n\n      //TODO: To be removed\n      if (log.isInfoEnabled()) {\n        String logMessage = \"BuildingUpMemoryPressureCircuitBreaker: Returning unblocking value for count \" + localCount;\n        log.info(logMessage);\n      }\n      return Long.MIN_VALUE; // Random number guaranteed to not trip the circuit breaker\n    }\n\n","sourceOld":"    @Override\n    protected long calculateLiveMemoryUsage() {\n      if (count.getAndIncrement() >= 4) {\n        return Long.MAX_VALUE;\n      }\n\n      return 5; // Random number guaranteed to not trip the circuit breaker\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"9a18e054d7e71da5abc99ebbd3b6eb77c1797765":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a18e054d7e71da5abc99ebbd3b6eb77c1797765"]},"commit2Childs":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"],"9a18e054d7e71da5abc99ebbd3b6eb77c1797765":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["9a18e054d7e71da5abc99ebbd3b6eb77c1797765"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}