{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dce0162f680ae9ea07387decc3394eeca618116","date":1319634735,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/udate/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":["0bdcfb7ac18ce2bf2cfad84f4509ef2950e695a2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#updateJ(String,SolrParams).mjava","sourceNew":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new UpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","sourceOld":"  /** Send JSON update commands */\n  public static String updateJ(String json, SolrParams args) throws Exception {\n    SolrCore core = h.getCore();\n    if (args == null) {\n      args = params(\"wt\",\"json\",\"indent\",\"true\");\n    } else {\n      ModifiableSolrParams newArgs = new ModifiableSolrParams(args);\n      if (newArgs.get(\"wt\") == null) newArgs.set(\"wt\",\"json\");\n      if (newArgs.get(\"indent\") == null) newArgs.set(\"indent\",\"true\");\n      args = newArgs;\n    }\n    DirectSolrConnection connection = new DirectSolrConnection(core);\n    SolrRequestHandler handler = core.getRequestHandler(\"/update/json\");\n    if (handler == null) {\n      handler = new JsonUpdateRequestHandler();\n      handler.init(null);\n    }\n    return connection.request(handler, args, json);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","19275ba31e621f6da1b83bf13af75233876fd3d4"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["2dce0162f680ae9ea07387decc3394eeca618116","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["2dce0162f680ae9ea07387decc3394eeca618116","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["2dce0162f680ae9ea07387decc3394eeca618116"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2dce0162f680ae9ea07387decc3394eeca618116":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["2dce0162f680ae9ea07387decc3394eeca618116"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2dce0162f680ae9ea07387decc3394eeca618116":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}