{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","commits":[{"id":"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4","date":1414017220,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","pathOld":"/dev/null","sourceNew":"    synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      DocValuesType currentDVType = docValuesType.get(name);\n      if (dvType != null && currentDVType != null && dvType != currentDVType) {\n        throw new IllegalArgumentException(\"cannot change DocValues type from \" + currentDVType + \" to \" + dvType + \" for field \\\"\" + name + \"\\\"\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","sourceNew":"    synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      DocValuesType currentDVType = docValuesType.get(name);\n      if (dvType != DocValuesType.NO && currentDVType != null && currentDVType != DocValuesType.NO && dvType != currentDVType) {\n        throw new IllegalArgumentException(\"cannot change DocValues type from \" + currentDVType + \" to \" + dvType + \" for field \\\"\" + name + \"\\\"\");\n      }\n    }\n\n","sourceOld":"    synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      DocValuesType currentDVType = docValuesType.get(name);\n      if (dvType != null && currentDVType != null && dvType != currentDVType) {\n        throw new IllegalArgumentException(\"cannot change DocValues type from \" + currentDVType + \" to \" + dvType + \" for field \\\"\" + name + \"\\\"\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistent(Integer,String,DocValuesType).mjava","sourceNew":"    synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      DocValuesType currentDVType = docValuesType.get(name);\n      if (dvType != DocValuesType.NONE && currentDVType != null && currentDVType != DocValuesType.NONE && dvType != currentDVType) {\n        throw new IllegalArgumentException(\"cannot change DocValues type from \" + currentDVType + \" to \" + dvType + \" for field \\\"\" + name + \"\\\"\");\n      }\n    }\n\n","sourceOld":"    synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      DocValuesType currentDVType = docValuesType.get(name);\n      if (dvType != DocValuesType.NO && currentDVType != null && currentDVType != DocValuesType.NO && dvType != currentDVType) {\n        throw new IllegalArgumentException(\"cannot change DocValues type from \" + currentDVType + \" to \" + dvType + \" for field \\\"\" + name + \"\\\"\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2bb2842e561df4e8e9ad89010605fc86ac265465":["9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95ce1375367b92d411a06175eab3915fe93c6bc"]},"commit2Childs":{"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}