{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","commits":[{"id":"ff942eedf4644036a8679a9420db95d832a185b0","date":1349021329,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4ce24aa081e44190692bbebc8aead342ad7060e8","4ce24aa081e44190692bbebc8aead342ad7060e8","4ce24aa081e44190692bbebc8aead342ad7060e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf8086c7e11dc41303ef1b8050bd355ddfaee76d","date":1350007219,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene41/TestBlockPostingsFormat2#tearDown().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/block/TestBlockPostingsFormat2#tearDown().mjava","sourceNew":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    iw.close();\n    _TestUtil.checkIndex(dir); // for some extra coverage, checkIndex before we forceMerge\n    iwc.setOpenMode(OpenMode.APPEND);\n    IndexWriter iw = new IndexWriter(dir, iwc);\n    iw.forceMerge(1);\n    iw.close();\n    dir.close(); // just force a checkindex for now\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["ff942eedf4644036a8679a9420db95d832a185b0","cf8086c7e11dc41303ef1b8050bd355ddfaee76d"],"ff942eedf4644036a8679a9420db95d832a185b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["ff942eedf4644036a8679a9420db95d832a185b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["ff942eedf4644036a8679a9420db95d832a185b0","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"]},"commit2Childs":{"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff942eedf4644036a8679a9420db95d832a185b0":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","cf8086c7e11dc41303ef1b8050bd355ddfaee76d","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"cf8086c7e11dc41303ef1b8050bd355ddfaee76d":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff942eedf4644036a8679a9420db95d832a185b0"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}