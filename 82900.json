{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abb939fb41b2fe4f89fd518f3da288c0213341d","date":1435657417,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#shouldExpand(Builder[T],UnCompiledNode[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(Builder<T> builder, UnCompiledNode<T> node) {\n    return builder.allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return allowArrayArcs &&\n      ((node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n       node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1abb939fb41b2fe4f89fd518f3da288c0213341d"]},"commit2Childs":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1abb939fb41b2fe4f89fd518f3da288c0213341d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}