{"path":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#assertUlogDir(String...).mjava","commits":[{"id":"e748d9ee3a1515b2ea3903d067f1f39fffdd083f","date":1467898648,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#assertUlogDir(String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After failover, ulogDir should not be changed.\n   */\n  private void assertUlogDir(String... collections) {\n    for (String collection : collections) {\n      Collection<Slice> slices = cloudClient.getZkStateReader().getClusterState().getCollection(collection).getSlices();\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          Map<String, Object> properties = replica.getProperties();\n          String coreName = replica.getCoreName();\n          String curUlogDir = (String) properties.get(CoreDescriptor.CORE_ULOGDIR);\n          String prevUlogDir = collectionUlogDirMap.get(coreName);\n          if (curUlogDir != null) {\n            if (prevUlogDir == null) {\n              collectionUlogDirMap.put(coreName, curUlogDir);\n            } else {\n              assertEquals(prevUlogDir, curUlogDir);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#assertUlogDir(String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After failover, ulogDir should not be changed.\n   */\n  private void assertUlogDir(String... collections) {\n    for (String collection : collections) {\n      Collection<Slice> slices = cloudClient.getZkStateReader().getClusterState().getCollection(collection).getSlices();\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          Map<String, Object> properties = replica.getProperties();\n          String coreName = replica.getCoreName();\n          String curUlogDir = (String) properties.get(CoreDescriptor.CORE_ULOGDIR);\n          String prevUlogDir = collectionUlogDirMap.get(coreName);\n          if (curUlogDir != null) {\n            if (prevUlogDir == null) {\n              collectionUlogDirMap.put(coreName, curUlogDir);\n            } else {\n              assertEquals(prevUlogDir, curUlogDir);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e748d9ee3a1515b2ea3903d067f1f39fffdd083f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e748d9ee3a1515b2ea3903d067f1f39fffdd083f"],"e748d9ee3a1515b2ea3903d067f1f39fffdd083f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e748d9ee3a1515b2ea3903d067f1f39fffdd083f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e748d9ee3a1515b2ea3903d067f1f39fffdd083f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}