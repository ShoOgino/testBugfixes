{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","sourceNew":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","pathOld":"/dev/null","sourceNew":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","sourceNew":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","sourceNew":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","b89678825b68eccaf09e6ab71675fc0b0af1e099","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}