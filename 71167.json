{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","commits":[{"id":"64c28cab7f05e1abe39fb5632d97864b5b4e5b2b","date":1245434532,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  private void assertAnalyzesTo(Analyzer a, String input, String[] output) throws Exception {\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n    final Token reusableToken = new Token();\n    for (int i=0; i<output.length; i++) {\n      Token nextToken = ts.next(reusableToken);\n      assertNotNull(nextToken);\n      assertEquals(nextToken.term(), output[i]);\n    }\n    assertNull(ts.next(reusableToken));\n    ts.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"  private void assertAnalyzesTo(Analyzer a, String input, String[] output) throws Exception {\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n    final Token reusableToken = new Token();\n    for (int i=0; i<output.length; i++) {\n      Token nextToken = ts.next(reusableToken);\n      assertNotNull(nextToken);\n      assertEquals(nextToken.term(), output[i]);\n    }\n    assertNull(ts.next(reusableToken));\n    ts.close();\n  }\n\n","sourceOld":"  private void assertAnalyzesTo(Analyzer a, String input, String[] output) throws Exception {\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n    final Token reusableToken = new Token();\n    for (int i=0; i<output.length; i++) {\n      Token nextToken = ts.next(reusableToken);\n      assertNotNull(nextToken);\n      assertEquals(nextToken.term(), output[i]);\n    }\n    assertNull(ts.next(reusableToken));\n    ts.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["64c28cab7f05e1abe39fb5632d97864b5b4e5b2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"64c28cab7f05e1abe39fb5632d97864b5b4e5b2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["64c28cab7f05e1abe39fb5632d97864b5b4e5b2b"],"64c28cab7f05e1abe39fb5632d97864b5b4e5b2b":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}