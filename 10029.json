{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#createIndexWriterConfig(OpenMode).mjava","commits":[{"id":"9faeb5fb9565674fd02b39d8fc365311961f1938","date":1322463944,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#createIndexWriterConfig(OpenMode).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the {@link IndexWriterConfig} that would be used for opening the internal index writer.\n   * <br>Extensions can configure the {@link IndexWriter} as they see fit,\n   * including setting a {@link org.apache.lucene.index.MergeScheduler merge-scheduler}, or\n   * {@link org.apache.lucene.index.IndexDeletionPolicy deletion-policy}, different RAM size\n   * etc.<br>\n   * <br><b>NOTE:</b> internal docids of the configured index must not be altered.\n   * For that, categories are never deleted from the taxonomy index.\n   * In addition, merge policy in effect must not merge none adjacent segments.\n   * \n   * @see #openIndexWriter(Directory, IndexWriterConfig)\n   * \n   * @param openMode see {@link OpenMode}\n   */\n  protected IndexWriterConfig createIndexWriterConfig(OpenMode openMode) {\n    // Make sure we use a MergePolicy which always merges adjacent segments and thus\n    // keeps the doc IDs ordered as well (this is crucial for the taxonomy index).\n    return new IndexWriterConfig(Version.LUCENE_40,\n        new KeywordAnalyzer()).setOpenMode(openMode).setMergePolicy(\n        new LogByteSizeMergePolicy());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["548ff344959e717dd71ef5eb652cf5904835c4b3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#createIndexWriterConfig(OpenMode).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#createIndexWriterConfig(OpenMode).mjava","sourceNew":"  /**\n   * Create the {@link IndexWriterConfig} that would be used for opening the internal index writer.\n   * <br>Extensions can configure the {@link IndexWriter} as they see fit,\n   * including setting a {@link org.apache.lucene.index.MergeScheduler merge-scheduler}, or\n   * {@link org.apache.lucene.index.IndexDeletionPolicy deletion-policy}, different RAM size\n   * etc.<br>\n   * <br><b>NOTE:</b> internal docids of the configured index must not be altered.\n   * For that, categories are never deleted from the taxonomy index.\n   * In addition, merge policy in effect must not merge none adjacent segments.\n   * \n   * @see #openIndexWriter(Directory, IndexWriterConfig)\n   * \n   * @param openMode see {@link OpenMode}\n   */\n  protected IndexWriterConfig createIndexWriterConfig(OpenMode openMode) {\n    // Make sure we use a MergePolicy which always merges adjacent segments and thus\n    // keeps the doc IDs ordered as well (this is crucial for the taxonomy index).\n    return new IndexWriterConfig(Version.LUCENE_40,\n        new KeywordAnalyzer()).setOpenMode(openMode).setMergePolicy(\n        new LogByteSizeMergePolicy());\n  }\n\n","sourceOld":"  /**\n   * Create the {@link IndexWriterConfig} that would be used for opening the internal index writer.\n   * <br>Extensions can configure the {@link IndexWriter} as they see fit,\n   * including setting a {@link org.apache.lucene.index.MergeScheduler merge-scheduler}, or\n   * {@link org.apache.lucene.index.IndexDeletionPolicy deletion-policy}, different RAM size\n   * etc.<br>\n   * <br><b>NOTE:</b> internal docids of the configured index must not be altered.\n   * For that, categories are never deleted from the taxonomy index.\n   * In addition, merge policy in effect must not merge none adjacent segments.\n   * \n   * @see #openIndexWriter(Directory, IndexWriterConfig)\n   * \n   * @param openMode see {@link OpenMode}\n   */\n  protected IndexWriterConfig createIndexWriterConfig(OpenMode openMode) {\n    // Make sure we use a MergePolicy which always merges adjacent segments and thus\n    // keeps the doc IDs ordered as well (this is crucial for the taxonomy index).\n    return new IndexWriterConfig(Version.LUCENE_40,\n        new KeywordAnalyzer()).setOpenMode(openMode).setMergePolicy(\n        new LogByteSizeMergePolicy());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9faeb5fb9565674fd02b39d8fc365311961f1938"],"9faeb5fb9565674fd02b39d8fc365311961f1938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9faeb5fb9565674fd02b39d8fc365311961f1938":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9faeb5fb9565674fd02b39d8fc365311961f1938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}