{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.MockSynonymFilter#incrementToken().mjava","commits":[{"id":"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345","date":1465936684,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.MockSynonymFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter.MockSynonymFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (bufferedState != null) {\n        restoreState(bufferedState);\n        posIncAtt.setPositionIncrement(0);\n        termAtt.setEmpty().append(\"hte\");\n        bufferedState = null;\n        return true;\n      } else if (input.incrementToken()) {\n        if (termAtt.toString().equals(\"the\")) {\n          bufferedState = captureState();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (bufferedState != null) {\n        restoreState(bufferedState);\n        posIncAtt.setPositionIncrement(0);\n        termAtt.setEmpty().append(\"hte\");\n        bufferedState = null;\n        return true;\n      } else if (input.incrementToken()) {\n        if (termAtt.toString().equals(\"the\")) {\n          bufferedState = captureState();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"138a352a6d4e54824d0275bc7aa1b784e78c81fe","date":1467756222,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.MockSynonymFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (bufferedState != null) {\n        restoreState(bufferedState);\n        posIncAtt.setPositionIncrement(0);\n        termAtt.setEmpty().append(\"hte\");\n        bufferedState = null;\n        return true;\n      } else if (input.incrementToken()) {\n        if (termAtt.toString().equals(\"the\")) {\n          bufferedState = captureState();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["138a352a6d4e54824d0275bc7aa1b784e78c81fe"]},"commit2Childs":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b266fe0ac2172d4ad87cff12bd9bf9f8c8247345"],"b266fe0ac2172d4ad87cff12bd9bf9f8c8247345":["138a352a6d4e54824d0275bc7aa1b784e78c81fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}