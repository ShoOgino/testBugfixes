{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","sourceNew":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.close();\n  }\n\n","sourceOld":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","sourceNew":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.shutdown();\n  }\n\n","sourceOld":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#createIndex(Random,Directory,String,boolean).mjava","sourceNew":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.close();\n  }\n\n","sourceOld":"  public static void createIndex(Random random, Directory dir1, String indexName,\n      boolean multiSegment) throws IOException {\n    IndexWriter w = new IndexWriter(dir1, LuceneTestCase.newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(new LogDocMergePolicy()));\n    for (int i = 0; i < 100; i++) {\n      w.addDocument(DocHelper.createDocument(i, indexName, 4));\n    }\n    if (!multiSegment) {\n      w.forceMerge(1);\n    }\n    w.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}