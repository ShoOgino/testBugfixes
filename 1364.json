{"path":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"/dev/null","sourceNew":"  public static List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)SolrConfig.config.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)Config.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)Config.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  public static List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)SolrConfig.config.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)Config.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)solrConfig.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)Config.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3285fbbfb9f17917f2faf03ce802f68f78dcf65f","date":1190472501,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n          String className = DOMUtil.getAttr(node,\"class\");\n          SolrEventListener listener = (SolrEventListener)solrConfig.newInstance(className);\n          listener.init(DOMUtil.childNodesToNamedList(node));\n          lst.add(listener);\n          log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info( \"[\"+name+\"] Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info( \"[\"+name+\"] Added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info(\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info(\"added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b46f0ccfb6b63c307ea901d48482630e3689042c","date":1198805331,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info( logid+\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info( logid+\"Added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info( \"[\"+name+\"] Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info( \"[\"+name+\"] Added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b338a77d735377ad6a2b02379ce3000377ff8631","date":1244447757,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/core/SolrCore#parseListener(String).mjava","sourceNew":null,"sourceOld":"  public List<SolrEventListener> parseListener(String path) {\n    List<SolrEventListener> lst = new ArrayList<SolrEventListener>();\n    log.info( logid+\"Searching for listeners: \" +path);\n    NodeList nodes = (NodeList)solrConfig.evaluate(path, XPathConstants.NODESET);\n    if (nodes!=null) {\n      for (int i=0; i<nodes.getLength(); i++) {\n        Node node = nodes.item(i);\n        String className = DOMUtil.getAttr(node,\"class\");\n        SolrEventListener listener = createEventListener(className);\n        listener.init(DOMUtil.childNodesToNamedList(node));\n        lst.add(listener);\n        log.info( logid+\"Added SolrEventListener: \" + listener);\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["3285fbbfb9f17917f2faf03ce802f68f78dcf65f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b46f0ccfb6b63c307ea901d48482630e3689042c":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["6d6338c87060be5f66757a94945975f3bbd377a9"],"b338a77d735377ad6a2b02379ce3000377ff8631":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"3285fbbfb9f17917f2faf03ce802f68f78dcf65f":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["6d6338c87060be5f66757a94945975f3bbd377a9"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["b46f0ccfb6b63c307ea901d48482630e3689042c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b46f0ccfb6b63c307ea901d48482630e3689042c":["b338a77d735377ad6a2b02379ce3000377ff8631"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["3285fbbfb9f17917f2faf03ce802f68f78dcf65f"],"3285fbbfb9f17917f2faf03ce802f68f78dcf65f":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"b338a77d735377ad6a2b02379ce3000377ff8631":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b338a77d735377ad6a2b02379ce3000377ff8631","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}