{"path":"solr/core/src/java/org/apache/solr/util/circuitbreaker/MemoryCircuitBreaker#getCurrentMemoryThreshold().mjava","commits":[{"id":"b73e9c1914a76cfa16576e9d7165e286cc35c36e","date":1593099382,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/circuitbreaker/MemoryCircuitBreaker#getCurrentMemoryThreshold().mjava","pathOld":"/dev/null","sourceNew":"  private long getCurrentMemoryThreshold() {\n    int thresholdValueInPercentage = solrCore.getSolrConfig().memoryCircuitBreakerThreshold;\n    double thresholdInFraction = thresholdValueInPercentage / (double) 100;\n    long actualLimit = (long) (currentMaxHeap * thresholdInFraction);\n\n    if (actualLimit <= 0) {\n      throw new IllegalStateException(\"Memory limit cannot be less than or equal to zero\");\n    }\n\n    return actualLimit;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c24f8f07a3e4a885c0e19286d51575df197a611b","date":1593281672,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/circuitbreaker/MemoryCircuitBreaker#getCurrentMemoryThreshold().mjava","sourceNew":null,"sourceOld":"  private long getCurrentMemoryThreshold() {\n    int thresholdValueInPercentage = solrCore.getSolrConfig().memoryCircuitBreakerThreshold;\n    double thresholdInFraction = thresholdValueInPercentage / (double) 100;\n    long actualLimit = (long) (currentMaxHeap * thresholdInFraction);\n\n    if (actualLimit <= 0) {\n      throw new IllegalStateException(\"Memory limit cannot be less than or equal to zero\");\n    }\n\n    return actualLimit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef8e4fae9bcd156a117f5758819aeabdae3e963","date":1593674028,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/circuitbreaker/MemoryCircuitBreaker#getCurrentMemoryThreshold().mjava","pathOld":"/dev/null","sourceNew":"  private long getCurrentMemoryThreshold() {\n    return heapMemoryThreshold;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"]},"commit2Childs":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["8ef8e4fae9bcd156a117f5758819aeabdae3e963"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"8ef8e4fae9bcd156a117f5758819aeabdae3e963":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}