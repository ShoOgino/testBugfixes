{"path":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","commits":[{"id":"bceb02c33032dd9bbf107cd06d0b74e5db4f110a","date":1357909746,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public final void decode(BytesRef buf, IntsRef values) {\n    values.offset = values.length = 0; // must do that because we cannot grow() them otherwise\n    \n    // some decoders may use the buffer's offset as a position index, so save\n    // current offset.\n    int bufOffset = buf.offset;\n    \n    reset();\n    doDecode(buf, values, buf.offset + buf.length);\n    assert values.offset == 0 : \"offset should not have been modified by the decoder.\";\n    \n    // fix offset\n    buf.offset = bufOffset;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public final void decode(BytesRef buf, IntsRef values) {\n    values.offset = values.length = 0; // must do that because we cannot grow() them otherwise\n    \n    // some decoders may use the buffer's offset as a position index, so save\n    // current offset.\n    int bufOffset = buf.offset;\n    \n    reset();\n    doDecode(buf, values, buf.offset + buf.length);\n    assert values.offset == 0 : \"offset should not have been modified by the decoder.\";\n    \n    // fix offset\n    buf.offset = bufOffset;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad883775f8b169218a8da5ffeb7ae26459443936","date":1358342713,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","sourceNew":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public abstract void decode(BytesRef buf, IntsRef values);\n\n","sourceOld":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public final void decode(BytesRef buf, IntsRef values) {\n    values.offset = values.length = 0; // must do that because we cannot grow() them otherwise\n    \n    // some decoders may use the buffer's offset as a position index, so save\n    // current offset.\n    int bufOffset = buf.offset;\n    \n    reset();\n    doDecode(buf, values, buf.offset + buf.length);\n    assert values.offset == 0 : \"offset should not have been modified by the decoder.\";\n    \n    // fix offset\n    buf.offset = bufOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","sourceNew":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public abstract void decode(BytesRef buf, IntsRef values);\n\n","sourceOld":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public final void decode(BytesRef buf, IntsRef values) {\n    values.offset = values.length = 0; // must do that because we cannot grow() them otherwise\n    \n    // some decoders may use the buffer's offset as a position index, so save\n    // current offset.\n    int bufOffset = buf.offset;\n    \n    reset();\n    doDecode(buf, values, buf.offset + buf.length);\n    assert values.offset == 0 : \"offset should not have been modified by the decoder.\";\n    \n    // fix offset\n    buf.offset = bufOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/encoding/IntDecoder#decode(BytesRef,IntsRef).mjava","sourceNew":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public abstract void decode(BytesRef buf, IntsRef values);\n\n","sourceOld":"  /**\n   * Decodes the values from the buffer into the given {@link IntsRef}. Note\n   * that {@code values.offset} and {@code values.length} are set to 0.\n   */\n  public abstract void decode(BytesRef buf, IntsRef values);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["ad883775f8b169218a8da5ffeb7ae26459443936"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["4e6354dd7c71fe122926fc53d7d29f715b1283db","ad883775f8b169218a8da5ffeb7ae26459443936"],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bceb02c33032dd9bbf107cd06d0b74e5db4f110a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"],"ad883775f8b169218a8da5ffeb7ae26459443936":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"bceb02c33032dd9bbf107cd06d0b74e5db4f110a":["4e6354dd7c71fe122926fc53d7d29f715b1283db","ad883775f8b169218a8da5ffeb7ae26459443936"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bceb02c33032dd9bbf107cd06d0b74e5db4f110a","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"ad883775f8b169218a8da5ffeb7ae26459443936":["607428da722dcb3e86bbd11c63de8986e6275c36","c4015cd39dff8d4dec562d909f9766debac53aa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}