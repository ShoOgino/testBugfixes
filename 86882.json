{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","sourceNew":"  protected List<Document> getDocuments(Iterator<SpatialTestData> sampleData) {\n    List<Document> documents = new ArrayList<>();\n    while (sampleData.hasNext()) {\n      SpatialTestData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = data.shape;\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)//just for diagnostics\n          document.add(new StoredField(strategy.getFieldName(), shape.toString()));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(Iterator<SpatialTestData> sampleData) {\n    List<Document> documents = new ArrayList<>();\n    while (sampleData.hasNext()) {\n      SpatialTestData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = data.shape;\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)//just for diagnostics\n          document.add(new StoredField(strategy.getFieldName(), shape.toString()));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","sourceNew":"  protected List<Document> getDocuments(Iterator<SpatialTestData> sampleData) {\n    List<Document> documents = new ArrayList<>();\n    while (sampleData.hasNext()) {\n      SpatialTestData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = data.shape;\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)//just for diagnostics\n          document.add(new StoredField(strategy.getFieldName(), shape.toString()));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(Iterator<SpatialTestData> sampleData) {\n    List<Document> documents = new ArrayList<>();\n    while (sampleData.hasNext()) {\n      SpatialTestData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = data.shape;\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)//just for diagnostics\n          document.add(new StoredField(strategy.getFieldName(), shape.toString()));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}