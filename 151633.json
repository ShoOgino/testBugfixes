{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":null,"sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}