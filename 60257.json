{"path":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like i need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception of field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fbdd7b4f937ad415349159b57272901047d49af4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"52bc3124a8d6a8eda16d43834db32eb20af3a056","date":1176682139,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like i need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception of field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d9d0a51c3327de369ec765bf55295b7b33641a3","date":1207691330,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbdd7b4f937ad415349159b57272901047d49af4","date":1242391451,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    prefixQuery.setConstantScoreRewrite(true);\n    return prefixQuery;\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    return new ConstantScorePrefixQuery(t);\n  }\n\n","bugFix":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c20f931a6f10b153366015604398a5eb7a4d17fa","date":1249615266,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    prefixQuery.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    return prefixQuery;\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    prefixQuery.setConstantScoreRewrite(true);\n    return prefixQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1facc74fa57831ffe3e76f17bc7dfe7bd2bef4c2","date":1256051637,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    return prefixQuery;\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    prefixQuery.setRewriteMethod(MultiTermQuery.CONSTANT_SCORE_FILTER_REWRITE);\n    return prefixQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","pathOld":"src/java/org/apache/solr/search/SolrQueryParser#getPrefixQuery(String,String).mjava","sourceNew":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    return prefixQuery;\n  }\n\n","sourceOld":"  protected Query getPrefixQuery(String field, String termStr) throws ParseException {\n    checkNullField(field);\n    if (getLowercaseExpandedTerms()) {\n      termStr = termStr.toLowerCase();\n    }\n\n    // TODO: toInternal() won't necessarily work on partial\n    // values, so it looks like we need a getPrefix() function\n    // on fieldtype?  Or at the minimum, a method on fieldType\n    // that can tell me if I should lowercase or not...\n    // Schema could tell if lowercase filter is in the chain,\n    // but a more sure way would be to run something through\n    // the first time and check if it got lowercased.\n\n    // TODO: throw exception if field type doesn't support prefixes?\n    // (sortable numeric types don't do prefixes, but can do range queries)\n    Term t = new Term(field, termStr);\n    PrefixQuery prefixQuery = new PrefixQuery(t);\n    return prefixQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d9d0a51c3327de369ec765bf55295b7b33641a3":["52bc3124a8d6a8eda16d43834db32eb20af3a056"],"c20f931a6f10b153366015604398a5eb7a4d17fa":["fbdd7b4f937ad415349159b57272901047d49af4"],"fbdd7b4f937ad415349159b57272901047d49af4":["9d9d0a51c3327de369ec765bf55295b7b33641a3"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1facc74fa57831ffe3e76f17bc7dfe7bd2bef4c2"],"52bc3124a8d6a8eda16d43834db32eb20af3a056":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"1facc74fa57831ffe3e76f17bc7dfe7bd2bef4c2":["c20f931a6f10b153366015604398a5eb7a4d17fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9d9d0a51c3327de369ec765bf55295b7b33641a3":["fbdd7b4f937ad415349159b57272901047d49af4"],"c20f931a6f10b153366015604398a5eb7a4d17fa":["1facc74fa57831ffe3e76f17bc7dfe7bd2bef4c2"],"fbdd7b4f937ad415349159b57272901047d49af4":["c20f931a6f10b153366015604398a5eb7a4d17fa"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["52bc3124a8d6a8eda16d43834db32eb20af3a056"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52bc3124a8d6a8eda16d43834db32eb20af3a056":["9d9d0a51c3327de369ec765bf55295b7b33641a3"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1facc74fa57831ffe3e76f17bc7dfe7bd2bef4c2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}