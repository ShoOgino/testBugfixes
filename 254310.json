{"path":"solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory#testMultipleExtracts().mjava","commits":[{"id":"afc5b4b2446e392448f36ae4f5a164540f2ccb65","date":1513355058,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory#testMultipleExtracts().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleExtracts() throws Exception {\n    // test example from the javadocs\n    SolrInputDocument doc = processAdd(\"multiple-extract\",\n        doc(f(\"id\", \"1\"),\n            f(\"text\", \"From Flashman. To Panman.\"),\n            f(\"title\", \"It's Captain Flashman.\", \"Privately, Flashman.\"),\n            f(\"subtitle\", \"Ineluctably, Flashman.\"),\n            f(\"corrolary_txt\", \"Forsooth thou bringeth Flashman.\"),\n            f(\"notes_txt\", \"Yes Flashman.\"),\n            f(\"summary\", \"Many aspire to be Flashman.\"),\n            f(\"descs\", \"Courage, Flashman.\", \"Ain't he Flashman.\"),\n            f(\"descriptions\", \"Flashman. Flashman. Flashman.\")));\n\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"people_s\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"titular_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_desc_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_description_people\"));\n    assertEquals(\"Flashman\", doc.getFieldValue(\"summary_person_s\")); // {EntityType} field name interpolation\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5dd459dd6133a495a55874c7c2fda19048ac3207"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5dd459dd6133a495a55874c7c2fda19048ac3207","date":1532332726,"type":3,"author":"koji","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory#testMultipleExtracts().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory#testMultipleExtracts().mjava","sourceNew":"  public void testMultipleExtracts() throws Exception {\n    // test example from the javadocs\n    SolrInputDocument doc = processAdd(\"multiple-extract\",\n        doc(f(\"id\", \"1\"),\n            f(\"text\", \"From Flashman. To Panman.\"),\n            f(\"title\", \"It's Captain Flashman.\", \"Privately, Flashman.\"),\n            f(\"subtitle\", \"Ineluctably, Flashman.\"),\n            f(\"corrolary_txt\", \"Forsooth thou bringeth Flashman.\"),\n            f(\"notes_txt\", \"Yes Flashman.\"),\n            f(\"summary\", \"Many aspire to be Flashman in London.\"),\n            f(\"descs\", \"Courage, Flashman.\", \"Ain't he Flashman.\"),\n            f(\"descriptions\", \"Flashman. Flashman. Flashman.\")));\n\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"people_s\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"titular_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_desc_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_description_people\"));\n    assertEquals(\"Flashman\", doc.getFieldValue(\"summary_person_s\")); // {EntityType} field name interpolation\n    assertEquals(\"London\", doc.getFieldValue(\"summary_location_s\")); // {EntityType} field name interpolation\n  }\n\n","sourceOld":"  public void testMultipleExtracts() throws Exception {\n    // test example from the javadocs\n    SolrInputDocument doc = processAdd(\"multiple-extract\",\n        doc(f(\"id\", \"1\"),\n            f(\"text\", \"From Flashman. To Panman.\"),\n            f(\"title\", \"It's Captain Flashman.\", \"Privately, Flashman.\"),\n            f(\"subtitle\", \"Ineluctably, Flashman.\"),\n            f(\"corrolary_txt\", \"Forsooth thou bringeth Flashman.\"),\n            f(\"notes_txt\", \"Yes Flashman.\"),\n            f(\"summary\", \"Many aspire to be Flashman.\"),\n            f(\"descs\", \"Courage, Flashman.\", \"Ain't he Flashman.\"),\n            f(\"descriptions\", \"Flashman. Flashman. Flashman.\")));\n\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"people_s\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"titular_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_desc_people\"));\n    assertEquals(Arrays.asList(\"Flashman\", \"Flashman\", \"Flashman\"), doc.getFieldValues(\"key_description_people\"));\n    assertEquals(\"Flashman\", doc.getFieldValue(\"summary_person_s\")); // {EntityType} field name interpolation\n  }\n\n","bugFix":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5dd459dd6133a495a55874c7c2fda19048ac3207":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5dd459dd6133a495a55874c7c2fda19048ac3207"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"5dd459dd6133a495a55874c7c2fda19048ac3207":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["5dd459dd6133a495a55874c7c2fda19048ac3207"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}