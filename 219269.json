{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/processors/OriginalQueryNodeProcessorPipeline#OriginalQueryNodeProcessorPipeline(QueryConfigHandler).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/processors/OriginalQueryNodeProcessorPipeline#OriginalQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"/dev/null","sourceNew":"  public OriginalQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    addProcessor(new MultiFieldQueryNodeProcessor());\n    addProcessor(new FuzzyQueryNodeProcessor());\n    addProcessor(new MatchAllDocsQueryNodeProcessor());\n    addProcessor(new LowercaseExpandedTermsQueryNodeProcessor());\n    addProcessor(new ParametricRangeQueryNodeProcessor());\n    addProcessor(new AllowLeadingWildcardProcessor());\n    addProcessor(new PrefixWildcardQueryNodeProcessor());\n    addProcessor(new AnalyzerQueryNodeProcessor());\n    addProcessor(new PhraseSlopQueryNodeProcessor());\n    addProcessor(new GroupQueryNodeProcessor());\n    addProcessor(new NoChildOptimizationQueryNodeProcessor());\n    addProcessor(new RemoveDeletedQueryNodesProcessor());\n    addProcessor(new RemoveEmptyNonLeafQueryNodeProcessor());\n    addProcessor(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    addProcessor(new DefaultPhraseSlopQueryNodeProcessor());\n    addProcessor(new BoostQueryNodeProcessor());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/processors/OriginalQueryNodeProcessorPipeline#OriginalQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    addProcessor(new MultiFieldQueryNodeProcessor());\n    addProcessor(new FuzzyQueryNodeProcessor());\n    addProcessor(new MatchAllDocsQueryNodeProcessor());\n    addProcessor(new LowercaseExpandedTermsQueryNodeProcessor());\n    addProcessor(new ParametricRangeQueryNodeProcessor());\n    addProcessor(new AllowLeadingWildcardProcessor());\n    addProcessor(new PrefixWildcardQueryNodeProcessor());\n    addProcessor(new AnalyzerQueryNodeProcessor());\n    addProcessor(new PhraseSlopQueryNodeProcessor());\n    addProcessor(new GroupQueryNodeProcessor());\n    addProcessor(new NoChildOptimizationQueryNodeProcessor());\n    addProcessor(new RemoveDeletedQueryNodesProcessor());\n    addProcessor(new RemoveEmptyNonLeafQueryNodeProcessor());\n    addProcessor(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    addProcessor(new DefaultPhraseSlopQueryNodeProcessor());\n    addProcessor(new BoostQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  public OriginalQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    addProcessor(new MultiFieldQueryNodeProcessor());\n    addProcessor(new FuzzyQueryNodeProcessor());\n    addProcessor(new MatchAllDocsQueryNodeProcessor());\n    addProcessor(new LowercaseExpandedTermsQueryNodeProcessor());\n    addProcessor(new ParametricRangeQueryNodeProcessor());\n    addProcessor(new AllowLeadingWildcardProcessor());\n    addProcessor(new PrefixWildcardQueryNodeProcessor());\n    addProcessor(new AnalyzerQueryNodeProcessor());\n    addProcessor(new PhraseSlopQueryNodeProcessor());\n    addProcessor(new GroupQueryNodeProcessor());\n    addProcessor(new NoChildOptimizationQueryNodeProcessor());\n    addProcessor(new RemoveDeletedQueryNodesProcessor());\n    addProcessor(new RemoveEmptyNonLeafQueryNodeProcessor());\n    addProcessor(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    addProcessor(new DefaultPhraseSlopQueryNodeProcessor());\n    addProcessor(new BoostQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}