{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","commits":[{"id":"3b03236193219d5533fd4b859a4602267c9c79c0","date":1372359820,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test bootstrap_conf\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test bootstrap_conf\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dee259562bdd34641f66e8583cbcc05018283f72","date":1376670617,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test bootstrap_conf\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test bootstrap_conf\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test bootstrap_conf\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(StandardCharsets.UTF_8));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(StandardCharsets.UTF_8));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(\"UTF-8\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7592992adbfd800a366615c7fc506ae10aeef39","date":1419446642,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testPut().mjava","sourceNew":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(StandardCharsets.UTF_8));\n\n    // test re-put to existing\n    data = \"my data deux\";\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(StandardCharsets.UTF_8));\n  }\n\n","sourceOld":"  @Test\n  public void testPut() throws Exception {\n    // test put\n    String data = \"my data\";\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"put\", \"/data.txt\", data};\n    ZkCLI.main(args);\n\n    zkClient.getData(\"/data.txt\", null, null, true);\n\n    assertArrayEquals(zkClient.getData(\"/data.txt\", null, null, true), data.getBytes(StandardCharsets.UTF_8));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["dee259562bdd34641f66e8583cbcc05018283f72","9d3d365762604952e436b51980101dfc84cc1b3e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b03236193219d5533fd4b859a4602267c9c79c0"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","dee259562bdd34641f66e8583cbcc05018283f72"],"31d4861802ca404d78ca1d15f4550eec415b9199":["3b03236193219d5533fd4b859a4602267c9c79c0","dee259562bdd34641f66e8583cbcc05018283f72"],"9d3d365762604952e436b51980101dfc84cc1b3e":["dee259562bdd34641f66e8583cbcc05018283f72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dee259562bdd34641f66e8583cbcc05018283f72":["3b03236193219d5533fd4b859a4602267c9c79c0"],"e7592992adbfd800a366615c7fc506ae10aeef39":["9d3d365762604952e436b51980101dfc84cc1b3e"],"3b03236193219d5533fd4b859a4602267c9c79c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7592992adbfd800a366615c7fc506ae10aeef39"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","e7592992adbfd800a366615c7fc506ae10aeef39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","3b03236193219d5533fd4b859a4602267c9c79c0"],"dee259562bdd34641f66e8583cbcc05018283f72":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","9d3d365762604952e436b51980101dfc84cc1b3e"],"e7592992adbfd800a366615c7fc506ae10aeef39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b03236193219d5533fd4b859a4602267c9c79c0":["37a0f60745e53927c4c876cfe5b5a58170f0646c","31d4861802ca404d78ca1d15f4550eec415b9199","dee259562bdd34641f66e8583cbcc05018283f72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}