{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree().mjava","commits":[{"id":"ec67ff97c3c57929891e4aa3bfba1094ef497d68","date":1379085761,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree(String).mjava","sourceNew":"  private Tree getAntlrComputedExpressionTree() throws ParseException {\n    CharStream input = new ANTLRStringStream(sourceText);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","sourceOld":"  private static Tree getAntlrComputedExpressionTree(String expression) throws ParseException {\n    CharStream input = new ANTLRStringStream(expression);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree().mjava","pathOld":"/dev/null","sourceNew":"  private Tree getAntlrComputedExpressionTree() throws ParseException {\n    CharStream input = new ANTLRStringStream(sourceText);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptCompiler#getAntlrComputedExpressionTree().mjava","sourceNew":null,"sourceOld":"  private Tree getAntlrComputedExpressionTree() throws ParseException {\n    CharStream input = new ANTLRStringStream(sourceText);\n    JavascriptLexer lexer = new JavascriptLexer(input);\n    CommonTokenStream tokens = new CommonTokenStream(lexer);\n    JavascriptParser parser = new JavascriptParser(tokens);\n\n    try {\n      return parser.expression().tree;\n\n    } catch (RecognitionException exception) {\n      throw new IllegalArgumentException(exception);\n    } catch (RuntimeException exception) {\n      if (exception.getCause() instanceof ParseException) {\n        throw (ParseException)exception.getCause();\n      }\n      throw exception;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ec67ff97c3c57929891e4aa3bfba1094ef497d68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ec67ff97c3c57929891e4aa3bfba1094ef497d68"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec67ff97c3c57929891e4aa3bfba1094ef497d68","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"ec67ff97c3c57929891e4aa3bfba1094ef497d68":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["d23d4828afa583ebf35b4a541763af6206133458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}