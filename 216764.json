{"path":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","commits":[{"id":"e34a66231ee53fe909c5f7c0e71131fcb5246d89","date":1226598668,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"/dev/null","sourceNew":"  /** load the CSV input */\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws IOException {\n    errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (skipLines>0) {\n        if (!(reader instanceof BufferedReader)) {\n          reader = new BufferedReader(reader);\n        }\n        BufferedReader r = (BufferedReader)reader;\n        for (int i=0; i<skipLines; i++) {\n          r.readLine();\n        }\n      }\n\n      CSVParser parser = new CSVParser(reader, strategy);\n\n      // parse the fieldnames from the header of the file\n      if (fieldnames==null) {\n        fieldnames = parser.getLine();\n        if (fieldnames==null) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Expected fieldnames in CSV input\");\n        }\n        prepareFields();\n      }\n\n      // read the rest of the CSV file\n      for(;;) {\n        int line = parser.getLineNumber();  // for error reporting in MT mode\n        String[] vals = parser.getLine();\n        if (vals==null) break;\n\n        if (vals.length != fields.length) {\n          input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n        }\n\n        addDoc(line,vals);\n      }\n    } finally{\n      if (reader != null) {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["908c8e2c79736122e37d47d73a053999c24bac65","908c8e2c79736122e37d47d73a053999c24bac65","908c8e2c79736122e37d47d73a053999c24bac65"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  /** load the CSV input */\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws IOException {\n    errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (skipLines>0) {\n        if (!(reader instanceof BufferedReader)) {\n          reader = new BufferedReader(reader);\n        }\n        BufferedReader r = (BufferedReader)reader;\n        for (int i=0; i<skipLines; i++) {\n          r.readLine();\n        }\n      }\n\n      CSVParser parser = new CSVParser(reader, strategy);\n\n      // parse the fieldnames from the header of the file\n      if (fieldnames==null) {\n        fieldnames = parser.getLine();\n        if (fieldnames==null) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Expected fieldnames in CSV input\");\n        }\n        prepareFields();\n      }\n\n      // read the rest of the CSV file\n      for(;;) {\n        int line = parser.getLineNumber();  // for error reporting in MT mode\n        String[] vals = parser.getLine();\n        if (vals==null) break;\n\n        if (vals.length != fields.length) {\n          input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n        }\n\n        addDoc(line,vals);\n      }\n    } finally{\n      if (reader != null) {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n  }\n\n","sourceOld":"  /** load the CSV input */\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws IOException {\n    errHeader = \"CSVLoader: input=\" + stream.getSourceInfo();\n    Reader reader = null;\n    try {\n      reader = stream.getReader();\n      if (skipLines>0) {\n        if (!(reader instanceof BufferedReader)) {\n          reader = new BufferedReader(reader);\n        }\n        BufferedReader r = (BufferedReader)reader;\n        for (int i=0; i<skipLines; i++) {\n          r.readLine();\n        }\n      }\n\n      CSVParser parser = new CSVParser(reader, strategy);\n\n      // parse the fieldnames from the header of the file\n      if (fieldnames==null) {\n        fieldnames = parser.getLine();\n        if (fieldnames==null) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Expected fieldnames in CSV input\");\n        }\n        prepareFields();\n      }\n\n      // read the rest of the CSV file\n      for(;;) {\n        int line = parser.getLineNumber();  // for error reporting in MT mode\n        String[] vals = parser.getLine();\n        if (vals==null) break;\n\n        if (vals.length != fields.length) {\n          input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n        }\n\n        addDoc(line,vals);\n      }\n    } finally{\n      if (reader != null) {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}