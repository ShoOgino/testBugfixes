{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggesterTest#sortReplicasValidateLeadersMultipleLeadersComeLast().mjava","commits":[{"id":"36f0252ed8dcb14c7a9129860ae8d13028d74365","date":1567769793,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggesterTest#sortReplicasValidateLeadersMultipleLeadersComeLast().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void sortReplicasValidateLeadersMultipleLeadersComeLast() {\n    List<Pair<ReplicaInfo, Row>> validReplicas = new ArrayList<Pair<ReplicaInfo, Row>>() {\n      {\n        add(PAIR_THREE);\n        add(PAIR_ONE);\n        add(PAIR_FOUR);\n        add(PAIR_TWO);\n      }\n    };\n    if (random().nextBoolean()) {\n      Collections.shuffle(validReplicas, random());\n    }\n    validReplicas.sort(leaderLast);\n\n    assertFalse(isReplicaLeader(validReplicas, 0));\n    assertFalse(isReplicaLeader(validReplicas, 1));\n    assertTrue(isReplicaLeader(validReplicas, 2));\n    assertTrue(isReplicaLeader(validReplicas, 3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggesterTest#sortReplicasValidateLeadersMultipleLeadersComeLast().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggesterTest#sortReplicasValidateLeadersMultipleLeadersComeLast().mjava","sourceNew":"  @Test\n  public void sortReplicasValidateLeadersMultipleLeadersComeLast() {\n    List<Pair<Replica, Row>> validReplicas = new ArrayList<Pair<Replica, Row>>() {\n      {\n        add(PAIR_THREE);\n        add(PAIR_ONE);\n        add(PAIR_FOUR);\n        add(PAIR_TWO);\n      }\n    };\n    if (random().nextBoolean()) {\n      Collections.shuffle(validReplicas, random());\n    }\n    validReplicas.sort(leaderLast);\n\n    assertFalse(isReplicaLeader(validReplicas, 0));\n    assertFalse(isReplicaLeader(validReplicas, 1));\n    assertTrue(isReplicaLeader(validReplicas, 2));\n    assertTrue(isReplicaLeader(validReplicas, 3));\n  }\n\n","sourceOld":"  @Test\n  public void sortReplicasValidateLeadersMultipleLeadersComeLast() {\n    List<Pair<ReplicaInfo, Row>> validReplicas = new ArrayList<Pair<ReplicaInfo, Row>>() {\n      {\n        add(PAIR_THREE);\n        add(PAIR_ONE);\n        add(PAIR_FOUR);\n        add(PAIR_TWO);\n      }\n    };\n    if (random().nextBoolean()) {\n      Collections.shuffle(validReplicas, random());\n    }\n    validReplicas.sort(leaderLast);\n\n    assertFalse(isReplicaLeader(validReplicas, 0));\n    assertFalse(isReplicaLeader(validReplicas, 1));\n    assertTrue(isReplicaLeader(validReplicas, 2));\n    assertTrue(isReplicaLeader(validReplicas, 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggesterTest#sortReplicasValidateLeadersMultipleLeadersComeLast().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void sortReplicasValidateLeadersMultipleLeadersComeLast() {\n    List<Pair<Replica, Row>> validReplicas = new ArrayList<Pair<Replica, Row>>() {\n      {\n        add(PAIR_THREE);\n        add(PAIR_ONE);\n        add(PAIR_FOUR);\n        add(PAIR_TWO);\n      }\n    };\n    if (random().nextBoolean()) {\n      Collections.shuffle(validReplicas, random());\n    }\n    validReplicas.sort(leaderLast);\n\n    assertFalse(isReplicaLeader(validReplicas, 0));\n    assertFalse(isReplicaLeader(validReplicas, 1));\n    assertTrue(isReplicaLeader(validReplicas, 2));\n    assertTrue(isReplicaLeader(validReplicas, 3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["36f0252ed8dcb14c7a9129860ae8d13028d74365"],"3f504512a03d978990cbff30db0522b354e846db":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36f0252ed8dcb14c7a9129860ae8d13028d74365":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f0252ed8dcb14c7a9129860ae8d13028d74365"],"36f0252ed8dcb14c7a9129860ae8d13028d74365":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}