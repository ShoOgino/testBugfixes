{"path":"src/java/org/apache/lucene/search/TermScorer#TermScorer(QueryWeight,TermDocs,Similarity,byte[]).mjava","commits":[{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TermScorer#TermScorer(QueryWeight,TermDocs,Similarity,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(QueryWeight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/TermScorer#TermScorer(QueryWeight,TermDocs,Similarity,byte[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   * \n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param similarity\n   *          The </code>Similarity</code> implementation to be used for score\n   *          computations.\n   * @param norms\n   *          The field norms of the document fields for the <code>Term</code>.\n   */\n  TermScorer(QueryWeight weight, TermDocs td, Similarity similarity,\n             byte[] norms) {\n    super(similarity);\n    this.weight = weight;\n    this.termDocs = td;\n    this.norms = norms;\n    this.weightValue = weight.getValue();\n\n    for (int i = 0; i < SCORE_CACHE_SIZE; i++)\n      scoreCache[i] = getSimilarity().tf(i) * weightValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}