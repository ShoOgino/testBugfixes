{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","commits":[{"id":"91e8768e9769f9e5175b1d99dcd27600bc9d4374","date":1342373687,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,TrecContentSource).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param trecSrc the {@link TrecContentSource} used to parse dates.   \n   * @return Parsed doc data.\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, TrecContentSource trecSrc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","91e8768e9769f9e5175b1d99dcd27600bc9d4374","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}