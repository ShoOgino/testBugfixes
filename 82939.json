{"path":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","commits":[{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"/dev/null","sourceNew":"  public void copyTo(AttributeImpl target) {\n    Token to = (Token) target;\n    to.reinit(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"881f3cbef4fe1d74529367acf824c7394e2dd11c","date":1248894847,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  public void copyTo(AttributeImpl target) {\n    Token to = (Token) target;\n    to.reinit(this);\n    // reinit shares the payload, so clone it:\n    if (payload !=null) {\n      to.payload = (Payload) payload.clone();\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    Token to = (Token) target;\n    to.reinit(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31141e8d8b7422f85e58a0745bdaed5fa8b4b0b3","date":1250944809,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    Token to = (Token) target;\n    to.reinit(this);\n    // reinit shares the payload, so clone it:\n    if (payload !=null) {\n      to.payload = (Payload) payload.clone();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4612146837d0cce6a0e8baf72a2cd5ec7547b5e","date":1251068760,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    // remove the following optimization in 3.0 when old TokenStream API removed:\n    } else if (target instanceof TokenWrapper) {\n      ((TokenWrapper) target).delegate = (Token) this.clone();\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439b0fe2f799d1c722151e88e32bdefad8d34ebe","date":1255282509,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    // remove the following optimization in 3.0 when old TokenStream API removed:\n    } else if (target instanceof TokenWrapper) {\n      ((TokenWrapper) target).delegate = (Token) this.clone();\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      initTermBuffer();\n      ((TermAttribute) target).setTermBuffer(termBuffer, 0, termLength);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#copyTo(AttributeImpl).mjava","sourceNew":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void copyTo(AttributeImpl target) {\n    if (target instanceof Token) {\n      final Token to = (Token) target;\n      to.reinit(this);\n      // reinit shares the payload, so clone it:\n      if (payload !=null) {\n        to.payload = (Payload) payload.clone();\n      }\n    } else {\n      super.copyTo(target);\n      ((OffsetAttribute) target).setOffset(startOffset, endOffset);\n      ((PositionIncrementAttribute) target).setPositionIncrement(positionIncrement);\n      ((PayloadAttribute) target).setPayload((payload == null) ? null : (Payload) payload.clone());\n      ((FlagsAttribute) target).setFlags(flags);\n      ((TypeAttribute) target).setType(type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"31141e8d8b7422f85e58a0745bdaed5fa8b4b0b3":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"881f3cbef4fe1d74529367acf824c7394e2dd11c":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"8a9e385641d717e641408d8fbbc62be8fc766357":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["8a9e385641d717e641408d8fbbc62be8fc766357"],"f4612146837d0cce6a0e8baf72a2cd5ec7547b5e":["31141e8d8b7422f85e58a0745bdaed5fa8b4b0b3"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["f4612146837d0cce6a0e8baf72a2cd5ec7547b5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"31141e8d8b7422f85e58a0745bdaed5fa8b4b0b3":["f4612146837d0cce6a0e8baf72a2cd5ec7547b5e"],"881f3cbef4fe1d74529367acf824c7394e2dd11c":["31141e8d8b7422f85e58a0745bdaed5fa8b4b0b3"],"8a9e385641d717e641408d8fbbc62be8fc766357":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f4612146837d0cce6a0e8baf72a2cd5ec7547b5e":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["8a9e385641d717e641408d8fbbc62be8fc766357"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}