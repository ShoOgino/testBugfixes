{"path":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(CharBuffer).mjava","commits":[{"id":"14f9435cf56ea1dc1185ffc60bcc94728ff9bf03","date":1237412151,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(CharBuffer).mjava","pathOld":"/dev/null","sourceNew":"  public String charArrayDump(CharBuffer charBuf) {\n    StringBuffer buf = new StringBuffer();\n    int numBytes = charBuf.limit() - charBuf.arrayOffset();\n    char[] charArray = charBuf.array();\n    for (int charNum = 0 ; charNum < numBytes ; ++charNum) {\n      String hex = Integer.toHexString((int)charArray[charNum]);\n      for (int digit = 0 ; digit < 4 - hex.length() ; ++digit) {\n        buf.append('0');\n      }\n      buf.append(hex.toUpperCase());\n      if (charNum < numBytes - 1) {\n        buf.append(' ');\n      }\n    }\n    return buf.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(CharBuffer).mjava","pathOld":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(CharBuffer).mjava","sourceNew":"  public String charArrayDump(CharBuffer charBuf) {\n    StringBuilder buf = new StringBuilder();\n    int numBytes = charBuf.limit() - charBuf.arrayOffset();\n    char[] charArray = charBuf.array();\n    for (int charNum = 0 ; charNum < numBytes ; ++charNum) {\n      String hex = Integer.toHexString((int)charArray[charNum]);\n      for (int digit = 0 ; digit < 4 - hex.length() ; ++digit) {\n        buf.append('0');\n      }\n      buf.append(hex.toUpperCase());\n      if (charNum < numBytes - 1) {\n        buf.append(' ');\n      }\n    }\n    return buf.toString();\n  }\n\n","sourceOld":"  public String charArrayDump(CharBuffer charBuf) {\n    StringBuffer buf = new StringBuffer();\n    int numBytes = charBuf.limit() - charBuf.arrayOffset();\n    char[] charArray = charBuf.array();\n    for (int charNum = 0 ; charNum < numBytes ; ++charNum) {\n      String hex = Integer.toHexString((int)charArray[charNum]);\n      for (int digit = 0 ; digit < 4 - hex.length() ; ++digit) {\n        buf.append('0');\n      }\n      buf.append(hex.toUpperCase());\n      if (charNum < numBytes - 1) {\n        buf.append(' ');\n      }\n    }\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb6255bc49ccd64debd0b43ca8d2f835df0faa07","date":1262510560,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(char[],int).mjava","pathOld":"src/test/org/apache/lucene/util/TestIndexableBinaryStringTools#charArrayDump(CharBuffer).mjava","sourceNew":"  public String charArrayDump(char[] charArray, int numBytes) {\n    StringBuilder buf = new StringBuilder();\n    for (int charNum = 0 ; charNum < numBytes ; ++charNum) {\n      String hex = Integer.toHexString((int)charArray[charNum]);\n      for (int digit = 0 ; digit < 4 - hex.length() ; ++digit) {\n        buf.append('0');\n      }\n      buf.append(hex.toUpperCase());\n      if (charNum < numBytes - 1) {\n        buf.append(' ');\n      }\n    }\n    return buf.toString();\n  }\n\n","sourceOld":"  public String charArrayDump(CharBuffer charBuf) {\n    StringBuilder buf = new StringBuilder();\n    int numBytes = charBuf.limit() - charBuf.arrayOffset();\n    char[] charArray = charBuf.array();\n    for (int charNum = 0 ; charNum < numBytes ; ++charNum) {\n      String hex = Integer.toHexString((int)charArray[charNum]);\n      for (int digit = 0 ; digit < 4 - hex.length() ; ++digit) {\n        buf.append('0');\n      }\n      buf.append(hex.toUpperCase());\n      if (charNum < numBytes - 1) {\n        buf.append(' ');\n      }\n    }\n    return buf.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb6255bc49ccd64debd0b43ca8d2f835df0faa07":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"14f9435cf56ea1dc1185ffc60bcc94728ff9bf03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["14f9435cf56ea1dc1185ffc60bcc94728ff9bf03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb6255bc49ccd64debd0b43ca8d2f835df0faa07"]},"commit2Childs":{"fb6255bc49ccd64debd0b43ca8d2f835df0faa07":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"14f9435cf56ea1dc1185ffc60bcc94728ff9bf03":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["14f9435cf56ea1dc1185ffc60bcc94728ff9bf03"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["fb6255bc49ccd64debd0b43ca8d2f835df0faa07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}