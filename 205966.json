{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"/dev/null","sourceNew":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"175da89dff77515cdda7604b3c6cf6de96d4ac23","date":1143444217,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tfilterFactory.addBuilder(\"BooleanFilter\",new BooleanFilterBuilder(filterFactory));\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef08ad6a64004e00b4e02dbe0a553dac1c528bd8","date":1191365806,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tfilterFactory.addBuilder(\"BooleanFilter\",new BooleanFilterBuilder(filterFactory));\r\n\t\tfilterFactory.addBuilder(\"DuplicateFilter\",new DuplicateFilterBuilder());\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tfilterFactory.addBuilder(\"BooleanFilter\",new BooleanFilterBuilder(filterFactory));\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82632e9d88b0fa1aa99de5b6dbba336eaca33fae","date":1203287578,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\t/**\r\n\t * Construct an XML parser that uses a single instance QueryParser for handling \r\n\t * UserQuery tags - all parse operations are synchronised on this parser\r\n\t * @param analyzer\r\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\r\n\t */\r\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tthis(null,analyzer, parser);\r\n\t}\r\n\n","sourceOld":"\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tsuper(analyzer, parser);\r\n\t\tfilterFactory.addBuilder(\"TermsFilter\",new TermsFilterBuilder(analyzer));\r\n\t\tfilterFactory.addBuilder(\"BooleanFilter\",new BooleanFilterBuilder(filterFactory));\r\n\t\tfilterFactory.addBuilder(\"DuplicateFilter\",new DuplicateFilterBuilder());\r\n\t\tString fields[]={\"contents\"};\r\n\t\tqueryFactory.addBuilder(\"LikeThisQuery\",new LikeThisQueryBuilder(analyzer,fields));\r\n\t\tqueryFactory.addBuilder(\"BoostingQuery\", new BoostingQueryBuilder(queryFactory));\r\n\t\tqueryFactory.addBuilder(\"FuzzyLikeThisQuery\", new FuzzyLikeThisQueryBuilder(analyzer));\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\t/**\n\t * Construct an XML parser that uses a single instance QueryParser for handling \n\t * UserQuery tags - all parse operations are synchronised on this parser\n\t * @param analyzer\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\n\t */\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis(null,analyzer, parser);\n\t}\n\n","sourceOld":"\t/**\r\n\t * Construct an XML parser that uses a single instance QueryParser for handling \r\n\t * UserQuery tags - all parse operations are synchronised on this parser\r\n\t * @param analyzer\r\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\r\n\t */\r\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\r\n\t{\r\n\t\tthis(null,analyzer, parser);\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\t/**\n\t * Construct an XML parser that uses a single instance QueryParser for handling \n\t * UserQuery tags - all parse operations are synchronized on this parser\n\t * @param analyzer\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\n\t */\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis(null,analyzer, parser);\n\t}\n\n","sourceOld":"\t/**\n\t * Construct an XML parser that uses a single instance QueryParser for handling \n\t * UserQuery tags - all parse operations are synchronised on this parser\n\t * @param analyzer\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\n\t */\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis(null,analyzer, parser);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CorePlusExtensionsParser#CorePlusExtensionsParser(Analyzer,QueryParser).mjava","sourceNew":"\t/**\n\t * Construct an XML parser that uses a single instance QueryParser for handling \n\t * UserQuery tags - all parse operations are synchronized on this parser\n\t * @param analyzer\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\n\t */\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis(null,analyzer, parser);\n\t}\n\n","sourceOld":"\t/**\n\t * Construct an XML parser that uses a single instance QueryParser for handling \n\t * UserQuery tags - all parse operations are synchronized on this parser\n\t * @param analyzer\n\t * @param parser A QueryParser which will be synchronized on during parse calls.\n\t */\n\tpublic CorePlusExtensionsParser(Analyzer analyzer, QueryParser parser)\n\t{\n\t\tthis(null,analyzer, parser);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["ef08ad6a64004e00b4e02dbe0a553dac1c528bd8"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"175da89dff77515cdda7604b3c6cf6de96d4ac23":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"ef08ad6a64004e00b4e02dbe0a553dac1c528bd8":["175da89dff77515cdda7604b3c6cf6de96d4ac23"]},"commit2Childs":{"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"175da89dff77515cdda7604b3c6cf6de96d4ac23":["ef08ad6a64004e00b4e02dbe0a553dac1c528bd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["175da89dff77515cdda7604b3c6cf6de96d4ac23"],"ef08ad6a64004e00b4e02dbe0a553dac1c528bd8":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}