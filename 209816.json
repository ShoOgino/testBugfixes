{"path":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","commits":[{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(TEMP_DIR, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName() + \"-core-reload\");\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(TEMP_DIR, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(dataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(TEMP_DIR, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName() + \"-core-reload\");\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(dataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(\"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\");\n    container.register(core, false);\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf","date":1416997673,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/get\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/get\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(loader, ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /get handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /get handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(ConfigSolr.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.toPath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.getAbsolutePath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.toPath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.toPath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /get handler defined\n    SolrCore core = container.create(new CoreDescriptor(container, \"core1\", testDirectory + \"/core\", \"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /get handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9799ebcab48102552d92f7807965a91fb6e116f7","date":1564676118,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    Path testDirectory = createTempDir(\"core-reload\");\n    File configSetsDir = new File(testDirectory.toFile(), \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.toPath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","a626ec4d1c92e59fe390724d6220081047b03ce7","2d4e985daefcb892b529223b478c47985fc3c483"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    Path testDirectory = createTempDir(\"core-reload\");\n    File configSetsDir = new File(testDirectory.toFile(), \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    File testDirectory = new File(initCoreDataDir, \"core-reload\");\n    testDirectory.mkdirs();\n    File configSetsDir = new File(testDirectory, \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory.toPath());\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestConfigSets#testConfigSetOnCoreReload().mjava","sourceNew":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    Path testDirectory = createTempDir(\"core-reload\");\n    File configSetsDir = new File(testDirectory.toFile(), \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(testDirectory, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSetOnCoreReload() throws IOException {\n    Path testDirectory = createTempDir(\"core-reload\");\n    File configSetsDir = new File(testDirectory.toFile(), \"configsets\");\n\n    FileUtils.copyDirectory(getFile(\"solr/configsets\"), configSetsDir);\n\n    String csd = configSetsDir.getAbsolutePath();\n    System.setProperty(\"configsets\", csd);\n\n    SolrResourceLoader loader = new SolrResourceLoader(testDirectory);\n    CoreContainer container = new CoreContainer(SolrXmlConfig.fromString(loader, solrxml));\n    container.load();\n\n    // We initially don't have a /dump handler defined\n    SolrCore core = container.create(\"core1\", ImmutableMap.of(\"configSet\", \"configset-2\"));\n    assertThat(\"No /dump handler should be defined in the initial configuration\",\n        core.getRequestHandler(\"/dump\"), is(nullValue()));\n\n    // Now copy in a config with a /dump handler and reload\n    FileUtils.copyFile(getFile(\"solr/collection1/conf/solrconfig-withgethandler.xml\"),\n        new File(new File(configSetsDir, \"configset-2/conf\"), \"solrconfig.xml\"));\n    container.reload(\"core1\");\n\n    core = container.getCore(\"core1\");\n    assertThat(\"A /dump handler should be defined in the reloaded configuration\",\n        core.getRequestHandler(\"/dump\"), is(notNullValue()));\n    core.close();\n\n    container.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"d0d579490a72f2e6297eaa648940611234c57cf1":["2d4e985daefcb892b529223b478c47985fc3c483"],"f8061ddd97f3352007d927dae445884a6f3d857b":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","9799ebcab48102552d92f7807965a91fb6e116f7"],"e15199583d3635cb940942caed05132dd6c4c7c6":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["9799ebcab48102552d92f7807965a91fb6e116f7"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["e15199583d3635cb940942caed05132dd6c4c7c6"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2d4e985daefcb892b529223b478c47985fc3c483"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["85032ab568b3f50eabd577aaa994ba197db93758"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9799ebcab48102552d92f7807965a91fb6e116f7":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"2d4e985daefcb892b529223b478c47985fc3c483":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85032ab568b3f50eabd577aaa994ba197db93758":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["85032ab568b3f50eabd577aaa994ba197db93758"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a626ec4d1c92e59fe390724d6220081047b03ce7"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["f8061ddd97f3352007d927dae445884a6f3d857b","9799ebcab48102552d92f7807965a91fb6e116f7"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"e56881a4ebc3438313e3c008a7124ba0f8ecc7bf":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d4e985daefcb892b529223b478c47985fc3c483"],"9799ebcab48102552d92f7807965a91fb6e116f7":["f8061ddd97f3352007d927dae445884a6f3d857b","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"2d4e985daefcb892b529223b478c47985fc3c483":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"85032ab568b3f50eabd577aaa994ba197db93758":["e56881a4ebc3438313e3c008a7124ba0f8ecc7bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}