{"path":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        return new RegExp(regexp, RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"810a795efcabe031acf5c03c6924d366cbdb36dd","date":1280174569,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        // NOTE: we parse-tostring-parse again, because we are\n        // really abusing RegExp.toString() here (its just for debugging)\n        return new RegExp(new RegExp(regexp, RegExp.NONE).toString(), RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        return new RegExp(regexp, RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        // NOTE: we parse-tostring-parse again, because we are\n        // really abusing RegExp.toString() here (its just for debugging)\n        return new RegExp(new RegExp(regexp, RegExp.NONE).toString(), RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        return new RegExp(regexp, RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41916511eb7a0aa94cb9b000074ea466e14296b7","date":1288064272,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        // NOTE: we parse-tostring-parse again, because we are\n        // really abusing RegExp.toString() here (its just for debugging)\n        return new RegExp(new RegExp(regexp, RegExp.NONE).toString(), RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        // NOTE: we parse-tostring-parse again, because we are\n        // really abusing RegExp.toString() here (its just for debugging)\n        return new RegExp(new RegExp(regexp, RegExp.NONE).toString(), RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static RegExp randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        // NOTE: we parse-tostring-parse again, because we are\n        // really abusing RegExp.toString() here (its just for debugging)\n        return new RegExp(new RegExp(regexp, RegExp.NONE).toString(), RegExp.NONE);\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexp(Random).mjava","sourceNew":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","sourceOld":"  /** Returns random string, including full unicode range. */\n  public static String randomRegexp(Random r) {\n    while (true) {\n      String regexp = randomRegexpString(r);\n      // we will also generate some undefined unicode queries\n      if (!UnicodeUtil.validUTF16String(regexp))\n        continue;\n      try {\n        new RegExp(regexp, RegExp.NONE);\n        return regexp;\n      } catch (Exception e) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","810a795efcabe031acf5c03c6924d366cbdb36dd"],"41916511eb7a0aa94cb9b000074ea466e14296b7":["810a795efcabe031acf5c03c6924d366cbdb36dd"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["b12d3e81e0f95a4527b5703953c503f71120ffcc","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["810a795efcabe031acf5c03c6924d366cbdb36dd","41916511eb7a0aa94cb9b000074ea466e14296b7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","41916511eb7a0aa94cb9b000074ea466e14296b7"],"810a795efcabe031acf5c03c6924d366cbdb36dd":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["41916511eb7a0aa94cb9b000074ea466e14296b7"]},"commit2Childs":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"41916511eb7a0aa94cb9b000074ea466e14296b7":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["3242a09f703274d3b9283f2064a1a33064b53a1b","810a795efcabe031acf5c03c6924d366cbdb36dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"810a795efcabe031acf5c03c6924d366cbdb36dd":["3242a09f703274d3b9283f2064a1a33064b53a1b","41916511eb7a0aa94cb9b000074ea466e14296b7","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}