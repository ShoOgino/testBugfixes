{"path":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","commits":[{"id":"a05818166782d252a03edc21cda3f0f186170b70","date":1284576100,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"/dev/null","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"/dev/null","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","pathOld":"solr/src/java/org/apache/solr/search/TermOrdValComparator_SML[MissingStringLastComparatorSource]#createComparator(IndexReader,TermOrdValComparator_SML).mjava","sourceNew":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","sourceOld":"  public static FieldComparator createComparator(IndexReader reader, TermOrdValComparator_SML parent) throws IOException {\n    parent.termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, parent.field);\n    final PackedInts.Reader docToOrd = parent.termsIndex.getDocToOrd();\n    PerSegmentComparator perSegComp;\n\n    if (docToOrd instanceof Direct8) {\n      perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct16) {\n      perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), parent);\n    } else if (docToOrd instanceof Direct32) {\n      perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), parent);\n    } else {\n      perSegComp = new AnyOrdComparator(docToOrd, parent);\n    }\n\n    if (perSegComp.bottomSlot != -1) {\n      perSegComp.setBottom(perSegComp.bottomSlot);\n    }\n\n    parent.current = perSegComp;\n    return perSegComp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a05818166782d252a03edc21cda3f0f186170b70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a05818166782d252a03edc21cda3f0f186170b70"],"c26f00b574427b55127e869b935845554afde1fa":["a05818166782d252a03edc21cda3f0f186170b70","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a05818166782d252a03edc21cda3f0f186170b70"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a05818166782d252a03edc21cda3f0f186170b70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a05818166782d252a03edc21cda3f0f186170b70":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a05818166782d252a03edc21cda3f0f186170b70","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}