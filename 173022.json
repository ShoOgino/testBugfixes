{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","commits":[{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","pathOld":"/dev/null","sourceNew":"  // used only by random access methods to handle reads across boundaries\n  private void setPos(long pos, int bi) throws IOException {\n    try {\n      final ByteBuffer b = buffers[bi];\n      b.position((int) (pos & chunkSizeMask));\n      this.curBufIndex = bi;\n      this.curBuf = b;\n    } catch (ArrayIndexOutOfBoundsException aioobe) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (IllegalArgumentException iae) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (NullPointerException npe) {\n      throw new AlreadyClosedException(\"Already closed: \" + this);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6","date":1421884114,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","sourceNew":"  // used only by random access methods to handle reads across boundaries\n  private void setPos(long pos, int bi) throws IOException {\n    try {\n      final ByteBuffer b = buffers[bi];\n      b.position((int) (pos & chunkSizeMask));\n      this.curBufIndex = bi;\n      this.curBuf = b;\n    } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException aioobe) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (NullPointerException npe) {\n      throw new AlreadyClosedException(\"Already closed: \" + this);\n    }\n  }\n\n","sourceOld":"  // used only by random access methods to handle reads across boundaries\n  private void setPos(long pos, int bi) throws IOException {\n    try {\n      final ByteBuffer b = buffers[bi];\n      b.position((int) (pos & chunkSizeMask));\n      this.curBufIndex = bi;\n      this.curBuf = b;\n    } catch (ArrayIndexOutOfBoundsException aioobe) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (IllegalArgumentException iae) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (NullPointerException npe) {\n      throw new AlreadyClosedException(\"Already closed: \" + this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#setPos(long,int).mjava","sourceNew":"  // used only by random access methods to handle reads across boundaries\n  private void setPos(long pos, int bi) throws IOException {\n    try {\n      final ByteBuffer b = buffers[bi];\n      b.position((int) (pos & chunkSizeMask));\n      this.curBufIndex = bi;\n      setCurBuf(b);\n    } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException aioobe) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (NullPointerException npe) {\n      throw new AlreadyClosedException(\"Already closed: \" + this);\n    }\n  }\n\n","sourceOld":"  // used only by random access methods to handle reads across boundaries\n  private void setPos(long pos, int bi) throws IOException {\n    try {\n      final ByteBuffer b = buffers[bi];\n      b.position((int) (pos & chunkSizeMask));\n      this.curBufIndex = bi;\n      this.curBuf = b;\n    } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException aioobe) {\n      throw new EOFException(\"seek past EOF: \" + this);\n    } catch (NullPointerException npe) {\n      throw new AlreadyClosedException(\"Already closed: \" + this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5891bd634d5ddbf7c48cff0f4818c682ca42a4a6":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["5891bd634d5ddbf7c48cff0f4818c682ca42a4a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}