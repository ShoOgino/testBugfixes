{"path":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f367dfb9086b92a13c77e2d31112c715cd4502c","date":1290190924,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92442af786151ee55bc283eb472f629e3c7b52b","date":1301070252,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.add(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,IndexOptions).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#addIndexed(IndexReader,FieldInfos,Collection[String],boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, IndexOptions indexOptions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, indexOptions, null);\n    }\n  }\n\n","sourceOld":"  private static void addIndexed(IndexReader reader, FieldInfos fInfos,\n      Collection<String> names, boolean storeTermVectors,\n      boolean storePositionWithTermVector, boolean storeOffsetWithTermVector,\n      boolean storePayloads, boolean omitTFAndPositions)\n      throws IOException {\n    for (String field : names) {\n      fInfos.addOrUpdate(field, true, storeTermVectors,\n          storePositionWithTermVector, storeOffsetWithTermVector, !reader\n              .hasNorms(field), storePayloads, omitTFAndPositions, null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["e92442af786151ee55bc283eb472f629e3c7b52b","2e8d7ba2175f47e280231533f7d3016249cea88b"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","7f367dfb9086b92a13c77e2d31112c715cd4502c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","7f367dfb9086b92a13c77e2d31112c715cd4502c"],"7f367dfb9086b92a13c77e2d31112c715cd4502c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e92442af786151ee55bc283eb472f629e3c7b52b":["7f367dfb9086b92a13c77e2d31112c715cd4502c"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["e92442af786151ee55bc283eb472f629e3c7b52b","d619839baa8ce5503e496b94a9e42ad6f079293f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e92442af786151ee55bc283eb472f629e3c7b52b"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","e92442af786151ee55bc283eb472f629e3c7b52b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","7f367dfb9086b92a13c77e2d31112c715cd4502c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"7f367dfb9086b92a13c77e2d31112c715cd4502c":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e92442af786151ee55bc283eb472f629e3c7b52b","3bb13258feba31ab676502787ab2e1779f129b7a"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"e92442af786151ee55bc283eb472f629e3c7b52b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","7f367dfb9086b92a13c77e2d31112c715cd4502c","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}