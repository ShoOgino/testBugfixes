{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17bb09a766d49e4c0bb1049cebc1cf10236004f7","date":1463076873,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(1, Calendar.ZONE_OFFSET - 1);//we're not allowed to add zone offset\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd","date":1495828828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    if (randomBoolean()) {\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    } else {\n      //Test the format that existed <= Lucene 5.0\n      strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\") {\n        @Override\n        protected CellToBytesRefIterator newCellToBytesRefIterator() {\n          return new CellToBytesRefIterator50();\n        }\n      };\n    }\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/DateNRStrategyTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = new DateRangePrefixTree(DateRangePrefixTree.DEFAULT_CAL);\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    tree = DateRangePrefixTree.INSTANCE;\n    strategy = new NumberRangePrefixTreeStrategy(tree, \"dateRange\");\n    ((NumberRangePrefixTreeStrategy)strategy).setPointsOnly(randomInt() % 5 == 0);\n    Calendar tmpCal = tree.newCal();\n    int randomCalWindowField = randomIntBetween(Calendar.YEAR, Calendar.MILLISECOND);\n    tmpCal.add(randomCalWindowField, 2_000);\n    randomCalWindowMs = Math.max(2000L, tmpCal.getTimeInMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0ad30c6a479e764150a3316e57263319775f1df2":["af2638813028b254a88b418ebeafb541afb49653","17bb09a766d49e4c0bb1049cebc1cf10236004f7"],"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"17bb09a766d49e4c0bb1049cebc1cf10236004f7":["af2638813028b254a88b418ebeafb541afb49653"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af2638813028b254a88b418ebeafb541afb49653","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["af2638813028b254a88b418ebeafb541afb49653","0ad30c6a479e764150a3316e57263319775f1df2"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["d470c8182e92b264680e34081b75e70a9f2b3c89","1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["d470c8182e92b264680e34081b75e70a9f2b3c89","1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["0ad30c6a479e764150a3316e57263319775f1df2","17bb09a766d49e4c0bb1049cebc1cf10236004f7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"17bb09a766d49e4c0bb1049cebc1cf10236004f7":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["1b0c7ccb2caa10aef8767ac9eabaddd3cca383fd","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}