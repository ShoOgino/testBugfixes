{"path":"src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List,List).mjava","commits":[{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List,List).mjava","pathOld":"/dev/null","sourceNew":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List optionalScorers, List prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Iterator si = optionalScorers.iterator(); si.hasNext();) {\n        Scorer scorer = (Scorer) si.next();\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Iterator si = prohibitedScorers.iterator(); si.hasNext();) {\n        Scorer scorer = (Scorer) si.next();\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc","date":1255773182,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer]).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List,List).mjava","sourceNew":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List optionalScorers, List prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Iterator si = optionalScorers.iterator(); si.hasNext();) {\n        Scorer scorer = (Scorer) si.next();\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Iterator si = prohibitedScorers.iterator(); si.hasNext();) {\n        Scorer scorer = (Scorer) si.next();\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30a558487f2298c2c19ceca9103c1b6865d64708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"]},"commit2Childs":{"30a558487f2298c2c19ceca9103c1b6865d64708":["b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30a558487f2298c2c19ceca9103c1b6865d64708"],"b4e40ecf6eb9bff831572fe33a2758f9ef1e0dcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}