{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doFacetExclude(String,String,String,String...).mjava","commits":[{"id":"5a19f08b39212024938a7d0daa611ed2918ac233","date":1486652106,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doFacetExclude(String,String,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void doFacetExclude(String f, String g, String termSuffix, String... params) {\n    String indent=\"on\";\n    String pre = \"//lst[@name='\"+f+\"']\";\n\n    final SolrQueryRequest req = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n    );\n\n    assertQ(\"test facet.exclude\",\n        req\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=10]\"\n        ,pre+\"/int[1][@name='BBB'][.='3']\"\n        ,pre+\"/int[2][@name='CCC'][.='3']\"\n        ,pre+\"/int[3][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[4][@name='BB'][.='2']\"\n        ,pre+\"/int[5][@name='BB\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[6][@name='CC'][.='2']\"\n        ,pre+\"/int[7][@name='CC\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[8][@name='AAA'][.='1']\"\n        ,pre+\"/int[9][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[10][@name='B\"+termSuffix+\"'][.='1']\"\n    );\n\n    final SolrQueryRequest groupReq = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n        ,\"group\",\"true\"\n        ,\"group.field\",g\n        ,\"group.facet\",\"true\"\n    );\n\n    assertQ(\"test facet.exclude for grouped facets\",\n        groupReq\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=10]\"\n        ,pre+\"/int[1][@name='CCC'][.='3']\"\n        ,pre+\"/int[2][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[3][@name='BBB'][.='2']\"\n        ,pre+\"/int[4][@name='AAA'][.='1']\"\n        ,pre+\"/int[5][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[6][@name='B\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[7][@name='BB'][.='1']\"\n        ,pre+\"/int[8][@name='BB\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[9][@name='CC'][.='1']\"\n        ,pre+\"/int[10][@name='CC\"+termSuffix+\"'][.='1']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7679cc7d5b465ec8936979698cedf5fdbd71c95c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7679cc7d5b465ec8936979698cedf5fdbd71c95c","date":1566227764,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doFacetExclude(String,String,String,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#doFacetExclude(String,String,String,String...).mjava","sourceNew":"  private void doFacetExclude(String f, String g, String termSuffix, String... params) {\n    String indent=\"on\";\n    String pre = \"//lst[@name='\"+f+\"']\";\n\n    final SolrQueryRequest req = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n    );\n\n    assertQ(\"test facet.exclude\",\n        req\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=10]\"\n        ,pre+\"/int[1][@name='BBB'][.='3']\"\n        ,pre+\"/int[2][@name='CCC'][.='3']\"\n        ,pre+\"/int[3][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[4][@name='BB'][.='2']\"\n        ,pre+\"/int[5][@name='BB\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[6][@name='CC'][.='2']\"\n        ,pre+\"/int[7][@name='CC\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[8][@name='AAA'][.='1']\"\n        ,pre+\"/int[9][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[10][@name='B\"+termSuffix+\"'][.='1']\"\n    );\n\n    final SolrQueryRequest groupReq = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n        ,\"group\",\"true\"\n        ,\"group.field\",g\n        ,\"group.facet\",\"true\"\n        ,\"facet.missing\",\"true\"\n    );\n\n    assertQ(\"test facet.exclude for grouped facets\",\n        groupReq\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=11]\"\n        ,pre+\"/int[1][@name='CCC'][.='3']\"\n        ,pre+\"/int[2][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[3][@name='BBB'][.='2']\"\n        ,pre+\"/int[4][@name='AAA'][.='1']\"\n        ,pre+\"/int[5][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[6][@name='B\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[7][@name='BB'][.='1']\"\n        ,pre+\"/int[8][@name='BB\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[9][@name='CC'][.='1']\"\n        ,pre+\"/int[10][@name='CC\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[11][.='1']\"\n    );\n\n    ModifiableSolrParams modifiableSolrParams = new ModifiableSolrParams(groupReq.getParams());\n    modifiableSolrParams.set(\"facet.limit\", \"0\");\n    groupReq.setParams(modifiableSolrParams);\n\n    assertQ(\"test facet.exclude for grouped facets with facet.limit=0, facet.missing=true\",\n        groupReq\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=1]\"\n        ,pre+\"/int[.='1']\"\n    );\n  }\n\n","sourceOld":"  private void doFacetExclude(String f, String g, String termSuffix, String... params) {\n    String indent=\"on\";\n    String pre = \"//lst[@name='\"+f+\"']\";\n\n    final SolrQueryRequest req = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n    );\n\n    assertQ(\"test facet.exclude\",\n        req\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=10]\"\n        ,pre+\"/int[1][@name='BBB'][.='3']\"\n        ,pre+\"/int[2][@name='CCC'][.='3']\"\n        ,pre+\"/int[3][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[4][@name='BB'][.='2']\"\n        ,pre+\"/int[5][@name='BB\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[6][@name='CC'][.='2']\"\n        ,pre+\"/int[7][@name='CC\"+termSuffix+\"'][.='2']\"\n        ,pre+\"/int[8][@name='AAA'][.='1']\"\n        ,pre+\"/int[9][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[10][@name='B\"+termSuffix+\"'][.='1']\"\n    );\n\n    final SolrQueryRequest groupReq = req(params, \"q\", \"id:[* TO *]\"\n        ,\"indent\",indent\n        ,\"facet\",\"true\"\n        ,\"facet.field\", f\n        ,\"facet.mincount\",\"0\"\n        ,\"facet.offset\",\"0\"\n        ,\"facet.limit\",\"100\"\n        ,\"facet.sort\",\"count\"\n        ,\"facet.excludeTerms\",\"B,BBB\"+termSuffix\n        ,\"group\",\"true\"\n        ,\"group.field\",g\n        ,\"group.facet\",\"true\"\n    );\n\n    assertQ(\"test facet.exclude for grouped facets\",\n        groupReq\n        ,\"*[count(//lst[@name='facet_fields']/lst/int)=10]\"\n        ,pre+\"/int[1][@name='CCC'][.='3']\"\n        ,pre+\"/int[2][@name='CCC\"+termSuffix+\"'][.='3']\"\n        ,pre+\"/int[3][@name='BBB'][.='2']\"\n        ,pre+\"/int[4][@name='AAA'][.='1']\"\n        ,pre+\"/int[5][@name='AAA\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[6][@name='B\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[7][@name='BB'][.='1']\"\n        ,pre+\"/int[8][@name='BB\"+termSuffix+\"'][.='1']\"\n        ,pre+\"/int[9][@name='CC'][.='1']\"\n        ,pre+\"/int[10][@name='CC\"+termSuffix+\"'][.='1']\"\n    );\n  }\n\n","bugFix":["5a19f08b39212024938a7d0daa611ed2918ac233"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7679cc7d5b465ec8936979698cedf5fdbd71c95c":["5a19f08b39212024938a7d0daa611ed2918ac233"],"5a19f08b39212024938a7d0daa611ed2918ac233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7679cc7d5b465ec8936979698cedf5fdbd71c95c"]},"commit2Childs":{"7679cc7d5b465ec8936979698cedf5fdbd71c95c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a19f08b39212024938a7d0daa611ed2918ac233":["7679cc7d5b465ec8936979698cedf5fdbd71c95c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a19f08b39212024938a7d0daa611ed2918ac233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}