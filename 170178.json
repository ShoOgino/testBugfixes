{"path":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","commits":[{"id":"0c3c76aa202009a206735eb7501d52a87ccaba79","date":1354660681,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#testLongMatchs().mjava","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomInts.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","sourceOld":"  public void testLongMatchs() throws IOException {\n    // match length > 16\n    final byte[] decompressed = new byte[RandomInts.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","pathOld":"/dev/null","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomInts.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6448f67be45147de82a85cd903fec34e8930da75","date":1477041277,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","sourceOld":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomInts.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","sourceOld":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomInts.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/compress/LZ4TestCase#testLongMatchs().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestLZ4CompressionMode#testLongMatchs().mjava","sourceNew":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] data = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < data.length; ++i) {\n      data[i] = (byte) i;\n    }\n    doTest(data, newHashTable());\n  }\n\n","sourceOld":"  public void testLongMatchs() throws IOException {\n    // match length >= 20\n    final byte[] decompressed = new byte[RandomNumbers.randomIntBetween(random(), 300, 1024)];\n    for (int i = 0; i < decompressed.length; ++i) {\n      decompressed[i] = (byte) i;\n    }\n    test(decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6448f67be45147de82a85cd903fec34e8930da75":["0c3c76aa202009a206735eb7501d52a87ccaba79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["0c3c76aa202009a206735eb7501d52a87ccaba79","6448f67be45147de82a85cd903fec34e8930da75"],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c3c76aa202009a206735eb7501d52a87ccaba79"],"9407318969e8504257b4c5764c65755a043e5404":["6448f67be45147de82a85cd903fec34e8930da75"],"0c3c76aa202009a206735eb7501d52a87ccaba79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"6448f67be45147de82a85cd903fec34e8930da75":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","9407318969e8504257b4c5764c65755a043e5404"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","0c3c76aa202009a206735eb7501d52a87ccaba79"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c3c76aa202009a206735eb7501d52a87ccaba79":["6448f67be45147de82a85cd903fec34e8930da75","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}