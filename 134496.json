{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seek(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seek(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seek(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seek(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n\n      //System.out.println(\"seek to text=\" + text.utf8ToString());\n      final BytesRefFSTEnum.InputOutput<PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>>> result = fstEnum.seekCeil(text);\n      if (result == null) {\n        //System.out.println(\"  end\");\n        return SeekStatus.END;\n      } else {\n        //System.out.println(\"  got text=\" + term.utf8ToString());\n        PairOutputs.Pair<Long,PairOutputs.Pair<Long,Long>> pair1 = result.output;\n        PairOutputs.Pair<Long,Long> pair2 = pair1.output2;\n        docsStart = pair1.output1;\n        docFreq = pair2.output1.intValue();\n        totalTermFreq = pair2.output2;\n\n        if (result.input.equals(text)) {\n          //System.out.println(\"  match docsStart=\" + docsStart);\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not match docsStart=\" + docsStart);\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd9cc9d77712aba3662f24632df7539ab75e3667"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fd9cc9d77712aba3662f24632df7539ab75e3667"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd9cc9d77712aba3662f24632df7539ab75e3667"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2553b00f699380c64959ccb27991289aae87be2e","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"fd9cc9d77712aba3662f24632df7539ab75e3667":["2553b00f699380c64959ccb27991289aae87be2e","a0ae5e3ed1232483b7b8a014f175a5fe43595982","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}