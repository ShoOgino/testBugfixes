{"path":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","commits":[{"id":"786d9c8e83bf53721b9f883a9a85aa365020430f","date":1401933927,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Shape parseShape(String str) {\n    try {\n      return tree.parseShape(str);\n    } catch (ParseException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Couldn't parse date because: \"+ e.getMessage(), e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb53c8e9da2afe33252ee698dda412264252cfa7","date":1418531581,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","sourceNew":"  @Override\n  protected NRShape parseShape(String str) {\n    try {\n      return tree.parseShape(str);\n    } catch (ParseException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Couldn't parse date because: \"+ e.getMessage(), e);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Shape parseShape(String str) {\n    try {\n      return tree.parseShape(str);\n    } catch (ParseException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Couldn't parse date because: \"+ e.getMessage(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03298305b51c91a6b0221a7b134ba26578934d39","date":1418532926,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","sourceNew":"  @Override\n  protected NRShape parseShape(String str) {\n    if (str.contains(\" TO \")) {\n      //TODO parsing range syntax doesn't support DateMath on either side or exclusive/inclusive\n      try {\n        return tree.parseShape(str);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Couldn't parse date because: \"+ e.getMessage(), e);\n      }\n    } else {\n      return tree.toShape(parseCalendar(str));\n    }\n  }\n\n","sourceOld":"  @Override\n  protected NRShape parseShape(String str) {\n    try {\n      return tree.parseShape(str);\n    } catch (ParseException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Couldn't parse date because: \"+ e.getMessage(), e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03d8df7e95735d8cda6a255c42e0997c699bb176","date":1458157920,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DateRangeField#parseShape(String).mjava","sourceNew":"  @Override\n  public NRShape parseShape(String str) {\n    if (str.contains(\" TO \")) {\n      //TODO parsing range syntax doesn't support DateMath on either side or exclusive/inclusive\n      try {\n        return tree.parseShape(str);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Couldn't parse date because: \"+ e.getMessage(), e);\n      }\n    } else {\n      return tree.toShape(parseCalendar(str));\n    }\n  }\n\n","sourceOld":"  @Override\n  protected NRShape parseShape(String str) {\n    if (str.contains(\" TO \")) {\n      //TODO parsing range syntax doesn't support DateMath on either side or exclusive/inclusive\n      try {\n        return tree.parseShape(str);\n      } catch (ParseException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Couldn't parse date because: \"+ e.getMessage(), e);\n      }\n    } else {\n      return tree.toShape(parseCalendar(str));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03298305b51c91a6b0221a7b134ba26578934d39":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03d8df7e95735d8cda6a255c42e0997c699bb176":["03298305b51c91a6b0221a7b134ba26578934d39"],"786d9c8e83bf53721b9f883a9a85aa365020430f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["786d9c8e83bf53721b9f883a9a85aa365020430f"]},"commit2Childs":{"03298305b51c91a6b0221a7b134ba26578934d39":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["786d9c8e83bf53721b9f883a9a85aa365020430f"],"03d8df7e95735d8cda6a255c42e0997c699bb176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"786d9c8e83bf53721b9f883a9a85aa365020430f":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["03298305b51c91a6b0221a7b134ba26578934d39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}