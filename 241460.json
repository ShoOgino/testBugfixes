{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","sourceNew":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","sourceOld":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936e62fbacf493107c977e945b4211c43a957400","date":1460681198,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","sourceNew":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n    \n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","sourceOld":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","sourceNew":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","sourceOld":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n    \n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","sourceNew":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","sourceOld":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n    \n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInGeo3DShapeQuery#PointInGeo3DShapeQuery(String,GeoShape).mjava","sourceNew":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n  }\n\n","sourceOld":"  /** The lats/lons must be clockwise or counter-clockwise. */\n  public PointInGeo3DShapeQuery(String field, GeoShape shape) {\n    this.field = field;\n    this.shape = shape;\n    this.shapeBounds = new XYZBounds();\n    shape.getBounds(shapeBounds);\n\n    if (shape instanceof BasePlanetObject) {\n      BasePlanetObject planetObject = (BasePlanetObject) shape;\n      if (planetObject.getPlanetModel().equals(PlanetModel.WGS84) == false) {\n        throw new IllegalArgumentException(\"this qurey requires PlanetModel.WGS84, but got: \" + planetObject.getPlanetModel());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"936e62fbacf493107c977e945b4211c43a957400":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["936e62fbacf493107c977e945b4211c43a957400"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["0e7bc21595222ae4f75509300fbb7726691f387f"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["936e62fbacf493107c977e945b4211c43a957400","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"936e62fbacf493107c977e945b4211c43a957400":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"0e7bc21595222ae4f75509300fbb7726691f387f":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e444678504caf66a8060b1d514383aa4feac0c":["936e62fbacf493107c977e945b4211c43a957400"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}