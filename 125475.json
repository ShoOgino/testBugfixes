{"path":"src/java/org/apache/lucene/index/CompoundFileReader#CompoundFileReader(Directory,String,int).mjava","commits":[{"id":"f6dba7919de4ff4ed6ff17f90619203772722f08","date":1180451647,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CompoundFileReader#CompoundFileReader(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"  public CompoundFileReader(Directory dir, String name, int readBufferSize)\n    throws IOException\n    {\n        directory = dir;\n        fileName = name;\n        this.readBufferSize = readBufferSize;\n\n        boolean success = false;\n\n        try {\n            stream = dir.openInput(name, readBufferSize);\n\n            // read the directory and init files\n            int count = stream.readVInt();\n            FileEntry entry = null;\n            for (int i=0; i<count; i++) {\n                long offset = stream.readLong();\n                String id = stream.readString();\n\n                if (entry != null) {\n                    // set length of the previous entry\n                    entry.length = offset - entry.offset;\n                }\n\n                entry = new FileEntry();\n                entry.offset = offset;\n                entries.put(id, entry);\n            }\n\n            // set the length of the final entry\n            if (entry != null) {\n                entry.length = stream.length() - entry.offset;\n            }\n\n            success = true;\n\n        } finally {\n            if (! success && (stream != null)) {\n                try {\n                    stream.close();\n                } catch (IOException e) { }\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#CompoundFileReader(Directory,String,int).mjava","pathOld":"src/java/org/apache/lucene/index/CompoundFileReader#CompoundFileReader(Directory,String,int).mjava","sourceNew":"  public CompoundFileReader(Directory dir, String name, int readBufferSize)\n    throws IOException\n    {\n        directory = dir;\n        fileName = name;\n        this.readBufferSize = readBufferSize;\n\n        boolean success = false;\n\n        try {\n            stream = dir.openInput(name, readBufferSize);\n\n            // read the directory and init files\n            int count = stream.readVInt();\n            FileEntry entry = null;\n            for (int i=0; i<count; i++) {\n                long offset = stream.readLong();\n                String id = stream.readString();\n\n                if (entry != null) {\n                    // set length of the previous entry\n                    entry.length = offset - entry.offset;\n                }\n\n                entry = new FileEntry();\n                entry.offset = offset;\n                entries.put(id, entry);\n            }\n\n            // set the length of the final entry\n            if (entry != null) {\n                entry.length = stream.length() - entry.offset;\n            }\n\n            success = true;\n\n        } finally {\n            if (! success && (stream != null)) {\n                try {\n                    stream.close();\n                } catch (IOException e) { }\n            }\n        }\n    }\n\n","sourceOld":"  public CompoundFileReader(Directory dir, String name, int readBufferSize)\n    throws IOException\n    {\n        directory = dir;\n        fileName = name;\n        this.readBufferSize = readBufferSize;\n\n        boolean success = false;\n\n        try {\n            stream = dir.openInput(name, readBufferSize);\n\n            // read the directory and init files\n            int count = stream.readVInt();\n            FileEntry entry = null;\n            for (int i=0; i<count; i++) {\n                long offset = stream.readLong();\n                String id = stream.readString();\n\n                if (entry != null) {\n                    // set length of the previous entry\n                    entry.length = offset - entry.offset;\n                }\n\n                entry = new FileEntry();\n                entry.offset = offset;\n                entries.put(id, entry);\n            }\n\n            // set the length of the final entry\n            if (entry != null) {\n                entry.length = stream.length() - entry.offset;\n            }\n\n            success = true;\n\n        } finally {\n            if (! success && (stream != null)) {\n                try {\n                    stream.close();\n                } catch (IOException e) { }\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6dba7919de4ff4ed6ff17f90619203772722f08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f6dba7919de4ff4ed6ff17f90619203772722f08"]},"commit2Childs":{"f6dba7919de4ff4ed6ff17f90619203772722f08":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6dba7919de4ff4ed6ff17f90619203772722f08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}