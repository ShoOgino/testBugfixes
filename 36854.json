{"path":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0f2476332da483dc2ea1fdd80b5968380653166","date":1316180489,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\",\n        \"fobar\"), 1, ir, SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(1, similar.length);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n\n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(2);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 2, ir,\n        SuggestMode.SUGGEST_ALWAYS);\n    assertEquals(2, similar.length);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(1, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir, true);\n    assertEquals(0, similar.length);\n    \n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\",\n        \"fobar\"), 1, ir, SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(1, similar.length);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n\n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(2);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 2, ir,\n        SuggestMode.SUGGEST_ALWAYS);\n    assertEquals(2, similar.length);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, \n        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\",\n        \"fobar\"), 1, ir, SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(1, similar.length);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n\n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(2);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 2, ir,\n        SuggestMode.SUGGEST_ALWAYS);\n    assertEquals(2, similar.length);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestDirectSpellChecker#testOptions().mjava","sourceNew":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\",\n        \"fobar\"), 1, ir, SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(1, similar.length);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n\n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(2);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 2, ir,\n        SuggestMode.SUGGEST_ALWAYS);\n    assertEquals(2, similar.length);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testOptions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, \n        new MockAnalyzer(random(), MockTokenizer.SIMPLE, true));\n\n    Document doc = new Document();\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"foobaz\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    doc.add(newField(\"text\", \"fobar\", TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n   \n    IndexReader ir = writer.getReader();\n    \n    DirectSpellChecker spellChecker = new DirectSpellChecker();\n    spellChecker.setMaxQueryFrequency(0F);\n    SuggestWord[] similar = spellChecker.suggestSimilar(new Term(\"text\",\n        \"fobar\"), 1, ir, SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinQueryLength(5);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foba\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setAccuracy(0.9F);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"foobazzz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(0);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(1, similar.length);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n\n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMinPrefix(1);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"roobaz\"), 1, ir,\n        SuggestMode.SUGGEST_MORE_POPULAR);\n    assertEquals(0, similar.length);\n    \n    spellChecker = new DirectSpellChecker(); // reset defaults\n    spellChecker.setMaxEdits(2);\n    similar = spellChecker.suggestSimilar(new Term(\"text\", \"fobar\"), 2, ir,\n        SuggestMode.SUGGEST_ALWAYS);\n    assertEquals(2, similar.length);\n\n    ir.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b0f2476332da483dc2ea1fdd80b5968380653166":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b0f2476332da483dc2ea1fdd80b5968380653166"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["e230a61047bc041516c811baa08a7174d6f8322a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b0f2476332da483dc2ea1fdd80b5968380653166":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","1509f151d7692d84fae414b2b799ac06ba60fcb4","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["b0f2476332da483dc2ea1fdd80b5968380653166"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}