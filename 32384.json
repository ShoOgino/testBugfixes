{"path":"solr/core/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","pathOld":"solr/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/XMLLoader#load(SolrQueryRequest,SolrQueryResponse,ContentStream).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n    errHeader = \"XMLLoader: \" + stream.getSourceInfo();\n    InputStream is = null;\n    XMLStreamReader parser = null;\n    try {\n      is = stream.getStream();\n      final String charset = ContentStreamBase.getCharsetFromContentType(stream.getContentType());\n      if (XmlUpdateRequestHandler.log.isTraceEnabled()) {\n        final byte[] body = IOUtils.toByteArray(is);\n        // TODO: The charset may be wrong, as the real charset is later\n        // determined by the XML parser, the content-type is only used as a hint!\n        XmlUpdateRequestHandler.log.trace(\"body\", new String(body, (charset == null) ?\n          ContentStreamBase.DEFAULT_CHARSET : charset));\n        IOUtils.closeQuietly(is);\n        is = new ByteArrayInputStream(body);\n      }\n      parser = (charset == null) ?\n        inputFactory.createXMLStreamReader(is) : inputFactory.createXMLStreamReader(is, charset);\n      this.processUpdate(req, processor, parser);\n    } catch (XMLStreamException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e.getMessage(), e);\n    } finally {\n      if (parser != null) parser.close();\n      IOUtils.closeQuietly(is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042e4d934397657ba04c82b46cc5665076bc5c58":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["042e4d934397657ba04c82b46cc5665076bc5c58"]},"commit2Childs":{"042e4d934397657ba04c82b46cc5665076bc5c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["042e4d934397657ba04c82b46cc5665076bc5c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}