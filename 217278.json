{"path":"lucene/src/java/org/apache/lucene/search/FieldCache#getBytes(AtomicIndexReader,String,ByteParser,boolean).mjava","commits":[{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getBytes(AtomicIndexReader,String,ByteParser,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getBytes(IndexReader,String,ByteParser,boolean).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none is found,\n   * reads the terms in <code>field</code> as bytes and returns an array of\n   * size <code>reader.maxDoc()</code> of the value each document has in the\n   * given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the bytes.\n   * @param parser  Computes byte for string values.\n   * @param setDocsWithField  If true then {@link #getDocsWithField} will\n   *        also be computed and stored in the FieldCache.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public byte[] getBytes (AtomicIndexReader reader, String field, ByteParser parser, boolean setDocsWithField)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none is found,\n   * reads the terms in <code>field</code> as bytes and returns an array of\n   * size <code>reader.maxDoc()</code> of the value each document has in the\n   * given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the bytes.\n   * @param parser  Computes byte for string values.\n   * @param setDocsWithField  If true then {@link #getDocsWithField} will\n   *        also be computed and stored in the FieldCache.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public byte[] getBytes (IndexReader reader, String field, ByteParser parser, boolean setDocsWithField)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getBytes(AtomicReader,String,ByteParser,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getBytes(AtomicIndexReader,String,ByteParser,boolean).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none is found,\n   * reads the terms in <code>field</code> as bytes and returns an array of\n   * size <code>reader.maxDoc()</code> of the value each document has in the\n   * given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the bytes.\n   * @param parser  Computes byte for string values.\n   * @param setDocsWithField  If true then {@link #getDocsWithField} will\n   *        also be computed and stored in the FieldCache.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public byte[] getBytes (AtomicReader reader, String field, ByteParser parser, boolean setDocsWithField)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none is found,\n   * reads the terms in <code>field</code> as bytes and returns an array of\n   * size <code>reader.maxDoc()</code> of the value each document has in the\n   * given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the bytes.\n   * @param parser  Computes byte for string values.\n   * @param setDocsWithField  If true then {@link #getDocsWithField} will\n   *        also be computed and stored in the FieldCache.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public byte[] getBytes (AtomicIndexReader reader, String field, ByteParser parser, boolean setDocsWithField)\n  throws IOException;\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da6d5ac19a80d65b1e864251f155d30960353b7e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["da6d5ac19a80d65b1e864251f155d30960353b7e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}