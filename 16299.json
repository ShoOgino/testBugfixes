{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","commits":[{"id":"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","date":1470238980,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String collectionName,\n                    String zkHost,\n                    Map params,\n                    String name,\n                    String feature,\n                    TupleStream termsStream,\n                    List<Double> weights,\n                    String outcome,\n                    int positiveLabel,\n                    double threshold,\n                    int maxIterations,\n                    int iteration) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = params;\n    this.name = name;\n    this.field = feature;\n    this.termsStream = termsStream;\n    this.outcome = outcome;\n    this.positiveLabel = positiveLabel;\n    this.threshold = threshold;\n    this.weights = weights;\n    this.maxIterations = maxIterations;\n    this.iteration = iteration;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String collectionName,\n                    String zkHost,\n                    Map params,\n                    String name,\n                    String feature,\n                    TupleStream termsStream,\n                    List<Double> weights,\n                    String outcome,\n                    int positiveLabel,\n                    double threshold,\n                    int maxIterations,\n                    int iteration) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = params;\n    this.name = name;\n    this.field = feature;\n    this.termsStream = termsStream;\n    this.outcome = outcome;\n    this.positiveLabel = positiveLabel;\n    this.threshold = threshold;\n    this.weights = weights;\n    this.maxIterations = maxIterations;\n    this.iteration = iteration;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String collectionName,\n                    String zkHost,\n                    Map params,\n                    String name,\n                    String feature,\n                    TupleStream termsStream,\n                    List<Double> weights,\n                    String outcome,\n                    int positiveLabel,\n                    double threshold,\n                    int maxIterations,\n                    int iteration) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = params;\n    this.name = name;\n    this.field = feature;\n    this.termsStream = termsStream;\n    this.outcome = outcome;\n    this.positiveLabel = positiveLabel;\n    this.threshold = threshold;\n    this.weights = weights;\n    this.maxIterations = maxIterations;\n    this.iteration = iteration;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","date":1591744896,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#init(String,String,Map,String,String,TupleStream,List[Double],String,int,double,int,int).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private void init(String collectionName,\n                    String zkHost,\n                    @SuppressWarnings({\"rawtypes\"})Map params,\n                    String name,\n                    String feature,\n                    TupleStream termsStream,\n                    List<Double> weights,\n                    String outcome,\n                    int positiveLabel,\n                    double threshold,\n                    int maxIterations,\n                    int iteration) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = params;\n    this.name = name;\n    this.field = feature;\n    this.termsStream = termsStream;\n    this.outcome = outcome;\n    this.positiveLabel = positiveLabel;\n    this.threshold = threshold;\n    this.weights = weights;\n    this.maxIterations = maxIterations;\n    this.iteration = iteration;\n  }\n\n","sourceOld":"  private void init(String collectionName,\n                    String zkHost,\n                    Map params,\n                    String name,\n                    String feature,\n                    TupleStream termsStream,\n                    List<Double> weights,\n                    String outcome,\n                    int positiveLabel,\n                    double threshold,\n                    int maxIterations,\n                    int iteration) throws IOException {\n    this.zkHost = zkHost;\n    this.collection = collectionName;\n    this.params = params;\n    this.name = name;\n    this.field = feature;\n    this.termsStream = termsStream;\n    this.outcome = outcome;\n    this.positiveLabel = positiveLabel;\n    this.threshold = threshold;\n    this.weights = weights;\n    this.maxIterations = maxIterations;\n    this.iteration = iteration;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"]},"commit2Childs":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}