{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","commits":[{"id":"cbd8af67010775ee4b53c58597a30bbe480707ee","date":1455837524,"type":0,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid collection: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af1d911cebbfb7726a0e0aab6dc222df6297930c","date":1455840238,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid core: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","sourceOld":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid collection: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06043fcf612d2cd93636c22cd062e0641406b417","date":1455841699,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid core: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a839eb6696740aa302262e32e6f45b5e70b47bff","date":1457028247,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n            coreName));\n      }\n      this.core = coreName;\n    }\n\n","sourceOld":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid core: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n            coreName));\n      }\n      this.core = coreName;\n    }\n\n","sourceOld":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(\"Invalid core: \" + coreName\n            + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n      }\n      this.core = coreName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daed6b66edd950a7f2af9857df64b09acf3deacc","date":1457527865,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#setCoreName(String).mjava","sourceNew":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      this.core = SolrIdentifierValidator.validateCoreName(coreName);\n    }\n\n","sourceOld":"    /**\n     * Provide the name of the core to be created.\n     * \n     * Core names must consist entirely of periods, underscores and alphanumerics.  Other characters are not allowed.\n     * \n     * @throws IllegalArgumentException if the core name contains invalid characters.\n     */\n    @Override\n    public void setCoreName(String coreName) {\n      if (!SolrIdentifierValidator.validateCoreName(coreName)) {\n        throw new IllegalArgumentException(SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n            coreName));\n      }\n      this.core = coreName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a839eb6696740aa302262e32e6f45b5e70b47bff":["06043fcf612d2cd93636c22cd062e0641406b417"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"daed6b66edd950a7f2af9857df64b09acf3deacc":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["06043fcf612d2cd93636c22cd062e0641406b417","a839eb6696740aa302262e32e6f45b5e70b47bff"],"06043fcf612d2cd93636c22cd062e0641406b417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af1d911cebbfb7726a0e0aab6dc222df6297930c"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["daed6b66edd950a7f2af9857df64b09acf3deacc"],"af1d911cebbfb7726a0e0aab6dc222df6297930c":["cbd8af67010775ee4b53c58597a30bbe480707ee"]},"commit2Childs":{"a839eb6696740aa302262e32e6f45b5e70b47bff":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06043fcf612d2cd93636c22cd062e0641406b417","cbd8af67010775ee4b53c58597a30bbe480707ee"],"daed6b66edd950a7f2af9857df64b09acf3deacc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["daed6b66edd950a7f2af9857df64b09acf3deacc"],"06043fcf612d2cd93636c22cd062e0641406b417":["a839eb6696740aa302262e32e6f45b5e70b47bff","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["af1d911cebbfb7726a0e0aab6dc222df6297930c"],"af1d911cebbfb7726a0e0aab6dc222df6297930c":["06043fcf612d2cd93636c22cd062e0641406b417"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}