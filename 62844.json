{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext]).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Creates an array of leaf slices each holding a subset of the given leaves.\n   * Each {@link LeafSlice} is executed in a single thread. By default there\n   * will be one {@link LeafSlice} per leaf ({@link org.apache.lucene.index.LeafReaderContext}).\n   */\n  protected LeafSlice[] slices(List<LeafReaderContext> leaves) {\n    LeafSlice[] slices = new LeafSlice[leaves.size()];\n    for (int i = 0; i < slices.length; i++) {\n      slices[i] = new LeafSlice(leaves.get(i));\n    }\n    return slices;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4","date":1558462722,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#slices(List[LeafReaderContext]).mjava","sourceNew":"  /**\n   * Expert: Creates an array of leaf slices each holding a subset of the given leaves.\n   * Each {@link LeafSlice} is executed in a single thread. By default, segments with more than\n   * MAX_DOCS_PER_SLICE will get their own thread\n   */\n  protected LeafSlice[] slices(List<LeafReaderContext> leaves) {\n    return slices(leaves, MAX_DOCS_PER_SLICE, MAX_SEGMENTS_PER_SLICE);\n  }\n\n","sourceOld":"  /**\n   * Expert: Creates an array of leaf slices each holding a subset of the given leaves.\n   * Each {@link LeafSlice} is executed in a single thread. By default there\n   * will be one {@link LeafSlice} per leaf ({@link org.apache.lucene.index.LeafReaderContext}).\n   */\n  protected LeafSlice[] slices(List<LeafReaderContext> leaves) {\n    LeafSlice[] slices = new LeafSlice[leaves.size()];\n    for (int i = 0; i < slices.length; i++) {\n      slices[i] = new LeafSlice(leaves.get(i));\n    }\n    return slices;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb1ea7c2a1a6c0b29808a5562d417545dd5529e4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cb1ea7c2a1a6c0b29808a5562d417545dd5529e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cb1ea7c2a1a6c0b29808a5562d417545dd5529e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}