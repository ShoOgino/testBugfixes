{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/ConditionTest#testEqualsInvertible().mjava","commits":[{"id":"2c5f856021866192557915a3e16f548a60c29bae","date":1582037264,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/ConditionTest#testEqualsInvertible().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEqualsInvertible() {\n    assertEqualsInvertible(\"equals should be invertible (names are equal)\",\n        new Condition(\"node\", null, null, null, null),\n        new Condition(\"node\", null, null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (names aren't equal)\",\n        new Condition(\"node\", null, null, null, null),\n        new Condition(\"host\", null, null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (values are equal)\",\n        new Condition(\"node\", \"localhost\", null, null, null),\n        new Condition(\"node\", \"localhost\", null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (values aren't equal)\",\n        new Condition(\"node\", \"localhost\", null, null, null),\n        new Condition(\"node\", \"lucene.apache.org\", null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (operands are equal)\",\n        new Condition(\"node\", null, Operand.EQUAL, null, null),\n        new Condition(\"node\", null, Operand.EQUAL, null, null));\n    assertEqualsInvertible(\"equals should be invertible (operands aren't equal)\",\n        new Condition(\"node\", null, Operand.EQUAL, null, null),\n        new Condition(\"node\", null, Operand.NOT_EQUAL, null, null));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/ConditionTest#testEqualsInvertible().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEqualsInvertible() {\n    assertEqualsInvertible(\"equals should be invertible (names are equal)\",\n        new Condition(\"node\", null, null, null, null),\n        new Condition(\"node\", null, null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (names aren't equal)\",\n        new Condition(\"node\", null, null, null, null),\n        new Condition(\"host\", null, null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (values are equal)\",\n        new Condition(\"node\", \"localhost\", null, null, null),\n        new Condition(\"node\", \"localhost\", null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (values aren't equal)\",\n        new Condition(\"node\", \"localhost\", null, null, null),\n        new Condition(\"node\", \"lucene.apache.org\", null, null, null));\n    assertEqualsInvertible(\"equals should be invertible (operands are equal)\",\n        new Condition(\"node\", null, Operand.EQUAL, null, null),\n        new Condition(\"node\", null, Operand.EQUAL, null, null));\n    assertEqualsInvertible(\"equals should be invertible (operands aren't equal)\",\n        new Condition(\"node\", null, Operand.EQUAL, null, null),\n        new Condition(\"node\", null, Operand.NOT_EQUAL, null, null));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c5f856021866192557915a3e16f548a60c29bae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["2c5f856021866192557915a3e16f548a60c29bae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"2c5f856021866192557915a3e16f548a60c29bae":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c5f856021866192557915a3e16f548a60c29bae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}