{"path":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","pathOld":"/dev/null","sourceNew":"  // Convert an external value (from XML update command or from query string)\n  // into the internal format.\n  // - used in delete when a Term needs to be created.\n  // - used by the default getTokenizer() and createField()\n  public String toInternal(String val) {\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f80211c8197bb79dae092b6ea66a4a839be2add","date":1149580420,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","sourceNew":"  /**\n   * Convert an external value (from XML update command or from query string)\n   * into the internal format.\n   * @see #toExternal\n   */\n  public String toInternal(String val) {\n    // - used in delete when a Term needs to be created.\n    // - used by the default getTokenizer() and createField()\n    return val;\n  }\n\n","sourceOld":"  // Convert an external value (from XML update command or from query string)\n  // into the internal format.\n  // - used in delete when a Term needs to be created.\n  // - used by the default getTokenizer() and createField()\n  public String toInternal(String val) {\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c","date":1249333745,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","sourceNew":"  /**\n   * Convert an external value (from XML update command or from query string)\n   * into the internal format for both storing and indexing (which can be modified by any analyzers).\n   * @see #toExternal\n   */\n  public String toInternal(String val) {\n    // - used in delete when a Term needs to be created.\n    // - used by the default getTokenizer() and createField()\n    return val;\n  }\n\n","sourceOld":"  /**\n   * Convert an external value (from XML update command or from query string)\n   * into the internal format.\n   * @see #toExternal\n   */\n  public String toInternal(String val) {\n    // - used in delete when a Term needs to be created.\n    // - used by the default getTokenizer() and createField()\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType#toInternal(String).mjava","sourceNew":"  /**\n   * Convert an external value (from XML update command or from query string)\n   * into the internal format for both storing and indexing (which can be modified by any analyzers).\n   * @see #toExternal\n   */\n  public String toInternal(String val) {\n    // - used in delete when a Term needs to be created.\n    // - used by the default getTokenizer() and createField()\n    return val;\n  }\n\n","sourceOld":"  /**\n   * Convert an external value (from XML update command or from query string)\n   * into the internal format for both storing and indexing (which can be modified by any analyzers).\n   * @see #toExternal\n   */\n  public String toInternal(String val) {\n    // - used in delete when a Term needs to be created.\n    // - used by the default getTokenizer() and createField()\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":["2f80211c8197bb79dae092b6ea66a4a839be2add"],"ad94625fb8d088209f46650c8097196fec67f00c":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c"],"2f80211c8197bb79dae092b6ea66a4a839be2add":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["2f80211c8197bb79dae092b6ea66a4a839be2add"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"2f80211c8197bb79dae092b6ea66a4a839be2add":["dbc0ca7104fa6f1d7cc24b05ed50b39ddb7cfa8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}