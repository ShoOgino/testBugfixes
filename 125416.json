{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","commits":[{"id":"37efbd78d0e524f5adef66f50e9d435283012a15","date":1474745518,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void checkOrthogonal(int childDoc, int parentDoc) {\n      if (childDoc==parentDoc) {\n        throw new IllegalStateException(\"Child query must not match same docs with parent filter. \"\n             + \"Combine them as must clauses (+) to find a problem doc. \"\n             + \"docId=\" + nextChildDoc + \", \" + childScorer.getClass());\n        \n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void checkOrthogonal(int childDoc, int parentDoc) {\n      if (childDoc==parentDoc) {\n        throw new IllegalStateException(\"Child query must not match same docs with parent filter. \"\n             + \"Combine them as must clauses (+) to find a problem doc. \"\n             + \"docId=\" + nextChildDoc + \", \" + childScorer.getClass());\n        \n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void checkOrthogonal(int childDoc, int parentDoc) {\n      if (childDoc==parentDoc) {\n        throw new IllegalStateException(\"Child query must not match same docs with parent filter. \"\n             + \"Combine them as must clauses (+) to find a problem doc. \"\n             + \"docId=\" + nextChildDoc + \", \" + childScorer.getClass());\n        \n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","date":1485769582,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","sourceNew":null,"sourceOld":"    private void checkOrthogonal(int childDoc, int parentDoc) {\n      if (childDoc==parentDoc) {\n        throw new IllegalStateException(\"Child query must not match same docs with parent filter. \"\n             + \"Combine them as must clauses (+) to find a problem doc. \"\n             + \"docId=\" + nextChildDoc + \", \" + childScorer.getClass());\n        \n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.BlockJoinScorer#checkOrthogonal(int,int).mjava","sourceNew":null,"sourceOld":"    private void checkOrthogonal(int childDoc, int parentDoc) {\n      if (childDoc==parentDoc) {\n        throw new IllegalStateException(\"Child query must not match same docs with parent filter. \"\n             + \"Combine them as must clauses (+) to find a problem doc. \"\n             + \"docId=\" + nextChildDoc + \", \" + childScorer.getClass());\n        \n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","37efbd78d0e524f5adef66f50e9d435283012a15"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"37efbd78d0e524f5adef66f50e9d435283012a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","37efbd78d0e524f5adef66f50e9d435283012a15","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"ef7f129c81e71e8f69a5893aaf8b569bb7fe9b4c":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37efbd78d0e524f5adef66f50e9d435283012a15":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}