{"path":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","commits":[{"id":"9724f10f3fa18adbeba8d1cbfda62676dae942a3","date":1354829537,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cf3ec148ecb3b9b587d858b55ab51ebcd91cb5d","date":1354833412,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","sourceNew":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n\n    Collection<Slice> slices = router.getSearchSlices(id, null, coll);\nif (slices.size() != 1) { // nocommit\n  slices = router.getSearchSlices(id, null, coll);\n}\n\n    assertEquals(1, slices.size());\n    target = slices.iterator().next();\n    assertEquals(expectedShard, target.getName());\n  }\n\n","sourceOld":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efbb3c5866bbe8c721e168284de10dff9a4fa1d9","date":1354833540,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","sourceNew":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n\n    Collection<Slice> slices = router.getSearchSlices(id, null, coll);\n\n    assertEquals(1, slices.size());\n    target = slices.iterator().next();\n    assertEquals(expectedShard, target.getName());\n  }\n\n","sourceOld":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n\n    Collection<Slice> slices = router.getSearchSlices(id, null, coll);\nif (slices.size() != 1) { // nocommit\n  slices = router.getSearchSlices(id, null, coll);\n}\n\n    assertEquals(1, slices.size());\n    target = slices.iterator().next();\n    assertEquals(expectedShard, target.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a750dc301414dae3a75a82357bab6acb70979c7e","date":1354891654,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","sourceNew":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    doIndex(coll, id, expectedShard);\n    doQuery(coll, id, expectedShard);\n  }\n\n","sourceOld":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    DocRouter router = coll.getRouter();\n    Slice target = router.getTargetSlice(id, null, null, coll);\n    assertEquals(expectedShard, target.getName());\n\n    Collection<Slice> slices = router.getSearchSlices(id, null, coll);\n\n    assertEquals(1, slices.size());\n    target = slices.iterator().next();\n    assertEquals(expectedShard, target.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestHashPartitioner#doId(DocCollection,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public void doId(DocCollection coll, String id, String expectedShard) {\n    doIndex(coll, id, expectedShard);\n    doQuery(coll, id, expectedShard);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8cf3ec148ecb3b9b587d858b55ab51ebcd91cb5d":["9724f10f3fa18adbeba8d1cbfda62676dae942a3"],"a750dc301414dae3a75a82357bab6acb70979c7e":["efbb3c5866bbe8c721e168284de10dff9a4fa1d9"],"efbb3c5866bbe8c721e168284de10dff9a4fa1d9":["8cf3ec148ecb3b9b587d858b55ab51ebcd91cb5d"],"9724f10f3fa18adbeba8d1cbfda62676dae942a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a750dc301414dae3a75a82357bab6acb70979c7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a750dc301414dae3a75a82357bab6acb70979c7e"]},"commit2Childs":{"8cf3ec148ecb3b9b587d858b55ab51ebcd91cb5d":["efbb3c5866bbe8c721e168284de10dff9a4fa1d9"],"a750dc301414dae3a75a82357bab6acb70979c7e":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efbb3c5866bbe8c721e168284de10dff9a4fa1d9":["a750dc301414dae3a75a82357bab6acb70979c7e"],"9724f10f3fa18adbeba8d1cbfda62676dae942a3":["8cf3ec148ecb3b9b587d858b55ab51ebcd91cb5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9724f10f3fa18adbeba8d1cbfda62676dae942a3","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}