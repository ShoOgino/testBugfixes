{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","commits":[{"id":"890d9da8d20886190a080e375f93341a779474e4","date":1549505353,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStatFacetExpanded() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-expanded[]\n    final  Map<String, Object> expandedStatFacet = new HashMap<>();\n    expandedStatFacet.put(\"type\", \"func\");\n    expandedStatFacet.put(\"func\", \"avg(div($numer,$denom))\");\n    expandedStatFacet.put(\"numer\", \"mul(popularity,3.0)\");\n    expandedStatFacet.put(\"denom\", \"price\");\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFilter(\"price:[1.0 TO *]\")\n        .withFilter(\"popularity:[0 TO 10]\")\n        .withFacet(\"avg_value\", expandedStatFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-expanded[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(13, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(0.108, (double) topLevelFacetingData.getStatFacetValue(\"avg_value\"), 0.1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["040d6388aba0e320fdd8c82cf685799e39ac30d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"040d6388aba0e320fdd8c82cf685799e39ac30d4","date":1569652735,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","sourceNew":"  @Test\n  public void testStatFacetExpanded() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-expanded[]\n    final  Map<String, Object> expandedStatFacet = new HashMap<>();\n    expandedStatFacet.put(\"type\", \"func\");\n    expandedStatFacet.put(\"func\", \"avg(div($numer,$denom))\");\n    expandedStatFacet.put(\"numer\", \"mul(popularity,3.0)\");\n    expandedStatFacet.put(\"denom\", \"price\");\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFilter(\"price:[1.0 TO *]\")\n        .withFilter(\"popularity:[0 TO 10]\")\n        .withFacet(\"avg_value\", expandedStatFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-expanded[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(13, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(0.108, (double) topLevelFacetingData.getStatValue(\"avg_value\"), 0.1);\n  }\n\n","sourceOld":"  @Test\n  public void testStatFacetExpanded() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-expanded[]\n    final  Map<String, Object> expandedStatFacet = new HashMap<>();\n    expandedStatFacet.put(\"type\", \"func\");\n    expandedStatFacet.put(\"func\", \"avg(div($numer,$denom))\");\n    expandedStatFacet.put(\"numer\", \"mul(popularity,3.0)\");\n    expandedStatFacet.put(\"denom\", \"price\");\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFilter(\"price:[1.0 TO *]\")\n        .withFilter(\"popularity:[0 TO 10]\")\n        .withFacet(\"avg_value\", expandedStatFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-expanded[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(13, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(0.108, (double) topLevelFacetingData.getStatFacetValue(\"avg_value\"), 0.1);\n  }\n\n","bugFix":["890d9da8d20886190a080e375f93341a779474e4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b9f74021389e2b32ee750fa5a24281c87951ec3","date":1569845983,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacetExpanded().mjava","sourceNew":"  @Test\n  public void testStatFacetExpanded() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-expanded[]\n    final  Map<String, Object> expandedStatFacet = new HashMap<>();\n    expandedStatFacet.put(\"type\", \"func\");\n    expandedStatFacet.put(\"func\", \"avg(div($numer,$denom))\");\n    expandedStatFacet.put(\"numer\", \"mul(popularity,3.0)\");\n    expandedStatFacet.put(\"denom\", \"price\");\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFilter(\"price:[1.0 TO *]\")\n        .withFilter(\"popularity:[0 TO 10]\")\n        .withFacet(\"avg_value\", expandedStatFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-expanded[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(13, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(0.108, (double) topLevelFacetingData.getStatValue(\"avg_value\"), 0.1);\n  }\n\n","sourceOld":"  @Test\n  public void testStatFacetExpanded() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-expanded[]\n    final  Map<String, Object> expandedStatFacet = new HashMap<>();\n    expandedStatFacet.put(\"type\", \"func\");\n    expandedStatFacet.put(\"func\", \"avg(div($numer,$denom))\");\n    expandedStatFacet.put(\"numer\", \"mul(popularity,3.0)\");\n    expandedStatFacet.put(\"denom\", \"price\");\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFilter(\"price:[1.0 TO *]\")\n        .withFilter(\"popularity:[0 TO 10]\")\n        .withFacet(\"avg_value\", expandedStatFacet);\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-expanded[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(13, queryResponse.getResults().getNumFound());\n    assertEquals(10, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(0.108, (double) topLevelFacetingData.getStatFacetValue(\"avg_value\"), 0.1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"890d9da8d20886190a080e375f93341a779474e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["890d9da8d20886190a080e375f93341a779474e4","040d6388aba0e320fdd8c82cf685799e39ac30d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["040d6388aba0e320fdd8c82cf685799e39ac30d4"],"040d6388aba0e320fdd8c82cf685799e39ac30d4":["890d9da8d20886190a080e375f93341a779474e4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["890d9da8d20886190a080e375f93341a779474e4"],"890d9da8d20886190a080e375f93341a779474e4":["4b9f74021389e2b32ee750fa5a24281c87951ec3","040d6388aba0e320fdd8c82cf685799e39ac30d4"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":[],"040d6388aba0e320fdd8c82cf685799e39ac30d4":["4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}