{"path":"lucene/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testRandom().mjava","commits":[{"id":"52bf390445fec2fc909f2bc6bd8597a64d8524e8","date":1317242201,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandom() throws Exception {\n    final Directory d = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, d);\n    w.w.getConfig().setMaxBufferedDocs(17);\n    final int numDocs = atLeast(100);\n    final Set<String> aDocs = new HashSet<String>();\n    for(int i=0;i<numDocs;i++) {\n      final Document doc = new Document();\n      final String v;\n      if (random.nextInt(5) == 4) {\n        v = \"a\";\n        aDocs.add(\"\"+i);\n      } else {\n        v = \"b\";\n      }\n      final Field f = newField(\"field\", v, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      doc.add(newField(\"id\", \"\"+i, StringField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n\n    final int numDelDocs = atLeast(10);\n    for(int i=0;i<numDelDocs;i++) {\n      final String delID = \"\"+random.nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", delID));\n      aDocs.remove(delID);\n    }\n\n    final IndexReader r = w.getReader();\n    w.close();\n    final TopDocs hits = new IndexSearcher(r).search(new MatchAllDocsQuery(),\n                                                     new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"a\"))),\n                                                     numDocs);\n    assertEquals(aDocs.size(), hits.totalHits);\n    for(ScoreDoc sd: hits.scoreDocs) {\n      assertTrue(aDocs.contains(r.document(sd.doc).get(\"id\")));\n    }\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testRandom().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testRandom().mjava","sourceNew":"  public void testRandom() throws Exception {\n    final Directory d = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, d);\n    w.w.getConfig().setMaxBufferedDocs(17);\n    final int numDocs = atLeast(100);\n    final Set<String> aDocs = new HashSet<String>();\n    for(int i=0;i<numDocs;i++) {\n      final Document doc = new Document();\n      final String v;\n      if (random.nextInt(5) == 4) {\n        v = \"a\";\n        aDocs.add(\"\"+i);\n      } else {\n        v = \"b\";\n      }\n      final Field f = newField(\"field\", v, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      doc.add(newField(\"id\", \"\"+i, StringField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n\n    final int numDelDocs = atLeast(10);\n    for(int i=0;i<numDelDocs;i++) {\n      final String delID = \"\"+random.nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", delID));\n      aDocs.remove(delID);\n    }\n\n    final IndexReader r = w.getReader();\n    w.close();\n    final TopDocs hits = new IndexSearcher(r).search(new MatchAllDocsQuery(),\n                                                     new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"a\"))),\n                                                     numDocs);\n    assertEquals(aDocs.size(), hits.totalHits);\n    for(ScoreDoc sd: hits.scoreDocs) {\n      assertTrue(aDocs.contains(r.document(sd.doc).get(\"id\")));\n    }\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testRandom() throws Exception {\n    final Directory d = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, d);\n    w.w.getConfig().setMaxBufferedDocs(17);\n    final int numDocs = atLeast(100);\n    final Set<String> aDocs = new HashSet<String>();\n    for(int i=0;i<numDocs;i++) {\n      final Document doc = new Document();\n      final String v;\n      if (random.nextInt(5) == 4) {\n        v = \"a\";\n        aDocs.add(\"\"+i);\n      } else {\n        v = \"b\";\n      }\n      final Field f = newField(\"field\", v, StringField.TYPE_UNSTORED);\n      doc.add(f);\n      doc.add(newField(\"id\", \"\"+i, StringField.TYPE_STORED));\n      w.addDocument(doc);\n    }\n\n    final int numDelDocs = atLeast(10);\n    for(int i=0;i<numDelDocs;i++) {\n      final String delID = \"\"+random.nextInt(numDocs);\n      w.deleteDocuments(new Term(\"id\", delID));\n      aDocs.remove(delID);\n    }\n\n    final IndexReader r = w.getReader();\n    w.close();\n    final TopDocs hits = new IndexSearcher(r).search(new MatchAllDocsQuery(),\n                                                     new QueryWrapperFilter(new TermQuery(new Term(\"field\", \"a\"))),\n                                                     numDocs);\n    assertEquals(aDocs.size(), hits.totalHits);\n    for(ScoreDoc sd: hits.scoreDocs) {\n      assertTrue(aDocs.contains(r.document(sd.doc).get(\"id\")));\n    }\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["52bf390445fec2fc909f2bc6bd8597a64d8524e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52bf390445fec2fc909f2bc6bd8597a64d8524e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52bf390445fec2fc909f2bc6bd8597a64d8524e8"],"52bf390445fec2fc909f2bc6bd8597a64d8524e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}