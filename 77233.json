{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/TestTestFramework#testQueries().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/TestTestFramework#testQueries().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/TestTestFramework#testQueries().mjava","sourceNew":"  @Test\n  public void testQueries() throws IOException {\n    String name = StrategyTestCase.QTEST_Cities_Intersects_BBox;\n\n    InputStream in = getClass().getClassLoader().getResourceAsStream(name);\n    SpatialContext ctx = SpatialContext.GEO;\n    Iterator<SpatialTestQuery> iter = SpatialTestQuery.getTestQueries(\n        new SpatialArgsParser(), ctx, name, in );//closes the InputStream\n    List<SpatialTestQuery> tests = new ArrayList<>();\n    while( iter.hasNext() ) {\n      tests.add( iter.next() );\n    }\n    Assert.assertEquals( 3, tests.size() );\n\n    SpatialTestQuery sf = tests.get(0);\n    // assert\n    assertEquals( 1, sf.ids.size() );\n    Assert.assertTrue( sf.ids.get(0).equals( \"G5391959\" ) );\n    Assert.assertTrue( sf.args.getShape() instanceof Rectangle);\n    assertEquals(SpatialOperation.Intersects, sf.args.getOperation());\n  }\n\n","sourceOld":"  @Test\n  public void testQueries() throws IOException {\n    String name = StrategyTestCase.QTEST_Cities_Intersects_BBox;\n\n    InputStream in = getClass().getClassLoader().getResourceAsStream(name);\n    SpatialContext ctx = SpatialContext.GEO;\n    Iterator<SpatialTestQuery> iter = SpatialTestQuery.getTestQueries(\n        new SpatialArgsParser(), ctx, name, in );//closes the InputStream\n    List<SpatialTestQuery> tests = new ArrayList<>();\n    while( iter.hasNext() ) {\n      tests.add( iter.next() );\n    }\n    Assert.assertEquals( 3, tests.size() );\n\n    SpatialTestQuery sf = tests.get(0);\n    // assert\n    Assert.assertEquals( 1, sf.ids.size() );\n    Assert.assertTrue( sf.ids.get(0).equals( \"G5391959\" ) );\n    Assert.assertTrue( sf.args.getShape() instanceof Rectangle);\n    Assert.assertEquals(SpatialOperation.Intersects, sf.args.getOperation());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/TestTestFramework#testQueries().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/TestTestFramework#testQueries().mjava","sourceNew":"  @Test\n  public void testQueries() throws IOException {\n    String name = StrategyTestCase.QTEST_Cities_Intersects_BBox;\n\n    InputStream in = getClass().getClassLoader().getResourceAsStream(name);\n    SpatialContext ctx = SpatialContext.GEO;\n    Iterator<SpatialTestQuery> iter = SpatialTestQuery.getTestQueries(\n        new SpatialArgsParser(), ctx, name, in );//closes the InputStream\n    List<SpatialTestQuery> tests = new ArrayList<>();\n    while( iter.hasNext() ) {\n      tests.add( iter.next() );\n    }\n    Assert.assertEquals( 3, tests.size() );\n\n    SpatialTestQuery sf = tests.get(0);\n    // assert\n    assertEquals( 1, sf.ids.size() );\n    Assert.assertTrue( sf.ids.get(0).equals( \"G5391959\" ) );\n    Assert.assertTrue( sf.args.getShape() instanceof Rectangle);\n    assertEquals(SpatialOperation.Intersects, sf.args.getOperation());\n  }\n\n","sourceOld":"  @Test\n  public void testQueries() throws IOException {\n    String name = StrategyTestCase.QTEST_Cities_Intersects_BBox;\n\n    InputStream in = getClass().getClassLoader().getResourceAsStream(name);\n    SpatialContext ctx = SpatialContext.GEO;\n    Iterator<SpatialTestQuery> iter = SpatialTestQuery.getTestQueries(\n        new SpatialArgsParser(), ctx, name, in );//closes the InputStream\n    List<SpatialTestQuery> tests = new ArrayList<>();\n    while( iter.hasNext() ) {\n      tests.add( iter.next() );\n    }\n    Assert.assertEquals( 3, tests.size() );\n\n    SpatialTestQuery sf = tests.get(0);\n    // assert\n    Assert.assertEquals( 1, sf.ids.size() );\n    Assert.assertTrue( sf.ids.get(0).equals( \"G5391959\" ) );\n    Assert.assertTrue( sf.args.getShape() instanceof Rectangle);\n    Assert.assertEquals(SpatialOperation.Intersects, sf.args.getOperation());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}