{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","commits":[{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount,\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdfd4a8fd5df3958475e4dde3633adb237373a27","date":1412166431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb77022ef17ff655c519a3f6ecd393747ac88bcf","date":1578579386,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality()));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06ab276a5660cb79daae8c5ede063531c700a03a","date":1578587874,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality()));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08a5168e06e037794c0aba7f94f76ff3c09704d2","date":1579264785,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality()));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cdfd4a8fd5df3958475e4dde3633adb237373a27":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"9bb9a29a5e71a90295f175df8919802993142c9a":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52","cdfd4a8fd5df3958475e4dde3633adb237373a27"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["9bb9a29a5e71a90295f175df8919802993142c9a"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["06ab276a5660cb79daae8c5ede063531c700a03a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"06ab276a5660cb79daae8c5ede063531c700a03a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"]},"commit2Childs":{"cdfd4a8fd5df3958475e4dde3633adb237373a27":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["cdfd4a8fd5df3958475e4dde3633adb237373a27","9bb9a29a5e71a90295f175df8919802993142c9a"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["06ab276a5660cb79daae8c5ede063531c700a03a"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06ab276a5660cb79daae8c5ede063531c700a03a":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}