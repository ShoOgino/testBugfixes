{"path":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"/dev/null","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"/dev/null","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"/dev/null","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f03b3b8bfd9e87b0f27c7d1661070077b70da24","date":1301412791,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(random, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs#simpleRandomString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs#simpleRandomString(Random).mjava","sourceNew":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String simpleRandomString(Random r) {\n    final int end = r.nextInt(10);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      buffer[i] = (char) _TestUtil.nextInt(r, 97, 102);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["7f03b3b8bfd9e87b0f27c7d1661070077b70da24"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["7f03b3b8bfd9e87b0f27c7d1661070077b70da24","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7f03b3b8bfd9e87b0f27c7d1661070077b70da24"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7f03b3b8bfd9e87b0f27c7d1661070077b70da24":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"45669a651c970812a680841b97a77cce06af559f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","7f03b3b8bfd9e87b0f27c7d1661070077b70da24"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["45669a651c970812a680841b97a77cce06af559f"],"7f03b3b8bfd9e87b0f27c7d1661070077b70da24":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"45669a651c970812a680841b97a77cce06af559f":[],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","7f03b3b8bfd9e87b0f27c7d1661070077b70da24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}