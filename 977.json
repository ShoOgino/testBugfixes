{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#descendWithPrefix(Arc[Object],String).mjava","sourceNew":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Descend along the path starting at <code>arc</code> and going through\n   * bytes in <code>utf8</code> argument.\n   *  \n   * @param arc The starting arc. This argument is modified in-place.\n   * @param term The term to descend with.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc matching\n   * last byte of <code>utf8</code>. <code>false</code> is returned if no such \n   * prefix <code>utf8</code> exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, String term) throws IOException {\n    final int max = term.length();\n\n    for (int i = 0; i < max; i++) {\n      if (automaton.findTargetArc(term.charAt(i) & 0xffff, arc, arc) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","sourceNew":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    // Cannot save as instance var since multiple threads\n    // can use FSTCompletion at once...\n    final FST.BytesReader fstReader = automaton.getBytesReader(0);\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc, fstReader) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","sourceNew":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    // Cannot save as instance var since multiple threads\n    // can use FSTCompletion at once...\n    final FST.BytesReader fstReader = automaton.getBytesReader(0);\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc, fstReader) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","sourceNew":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    // Cannot save as instance var since multiple threads\n    // can use FSTCompletion at once...\n    final FST.BytesReader fstReader = automaton.getBytesReader(0);\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc, fstReader) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletion#descendWithPrefix(Arc[Object],BytesRef).mjava","sourceNew":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    // Cannot save as instance var since multiple threads\n    // can use FSTCompletion at once...\n    final FST.BytesReader fstReader = automaton.getBytesReader(0);\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc, fstReader) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Descend along the path starting at <code>arc</code> and going through bytes\n   * in the argument.\n   * \n   * @param arc\n   *          The starting arc. This argument is modified in-place.\n   * @param utf8\n   *          The term to descend along.\n   * @return If <code>true</code>, <code>arc</code> will be set to the arc\n   *         matching last byte of <code>term</code>. <code>false</code> is\n   *         returned if no such prefix exists.\n   */\n  private boolean descendWithPrefix(Arc<Object> arc, BytesRef utf8)\n      throws IOException {\n    final int max = utf8.offset + utf8.length;\n    // Cannot save as instance var since multiple threads\n    // can use FSTCompletion at once...\n    final FST.BytesReader fstReader = automaton.getBytesReader(0);\n    for (int i = utf8.offset; i < max; i++) {\n      if (automaton.findTargetArc(utf8.bytes[i] & 0xff, arc, arc, fstReader) == null) {\n        // No matching prefixes, return an empty result.\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["7bf07f4ebadc7539de83a531e64678350d78ca26","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["7bf07f4ebadc7539de83a531e64678350d78ca26","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["b89678825b68eccaf09e6ab71675fc0b0af1e099","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}