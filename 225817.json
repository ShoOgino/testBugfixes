{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4148af0b1a0b6991d37fc16a075d88fc63068f9","date":1351120943,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","bugFix":["20065f48f840771dec27aa4ef3931a927025cbfb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    List<String> fields = new ArrayList<String>();\n    for (SolrInputField sf : sdoc) {\n      for (Object o : sf.getValues()) {\n        fields.add(sf.getName());\n        fields.add(o.toString());\n      }\n    }\n    return adoc(fields.toArray(new String[fields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#adoc(SolrInputDocument).mjava","sourceNew":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * Generates a simple &lt;add&gt;&lt;doc&gt;... XML String with no options\n   */\n  public static String adoc(SolrInputDocument sdoc) {\n    StringWriter out = new StringWriter(512);\n    try {\n      out.append(\"<add>\");\n      ClientUtils.writeXML(sdoc, out);\n      out.append(\"</add>\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"Inexplicable IO error from StringWriter\", e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4148af0b1a0b6991d37fc16a075d88fc63068f9":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["d4148af0b1a0b6991d37fc16a075d88fc63068f9","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d4148af0b1a0b6991d37fc16a075d88fc63068f9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["c26f00b574427b55127e869b935845554afde1fa","d4148af0b1a0b6991d37fc16a075d88fc63068f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"d4148af0b1a0b6991d37fc16a075d88fc63068f9":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4","f2126b84bd093fa3d921582a109a0ee578c28126"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d4148af0b1a0b6991d37fc16a075d88fc63068f9","f2126b84bd093fa3d921582a109a0ee578c28126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}