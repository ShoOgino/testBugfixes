{"path":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","commits":[{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator();\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","sourceOld":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator();\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator(null);\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","sourceOld":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator();\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator(null);\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","sourceOld":"  @Override\n  protected TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException {\n    if (lowerTerm != null && upperTerm != null && collator.compare(lowerTerm, upperTerm) > 0) {\n      return TermsEnum.EMPTY;\n    }\n    \n    TermsEnum tenum = terms.iterator(null);\n\n    if (lowerTerm == null && upperTerm == null) {\n      return tenum;\n    }\n    return new SlowCollatedTermRangeTermsEnum(tenum,\n        lowerTerm, upperTerm, includeLower, includeUpper, collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["3cc749c053615f5871f3b95715fe292f34e70a53"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"3cc749c053615f5871f3b95715fe292f34e70a53":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}