{"path":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#assertUpdate(SolrInputDocument[],int[]).mjava","commits":[{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#assertUpdate(SolrInputDocument[],int[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Does some random indexing of the specified docIds and adds them to knownDocs\n   */\n  private void assertUpdate(final SolrInputDocument[] knownDocs, final int[] docIds) throws IOException, SolrServerException {\n    \n    for (final int docId : docIds) {\n      // TODO: this method should also do some atomic update operations (ie: \"inc\" and \"set\")\n      // (but make sure to eval the updates locally as well before modifying knownDocs)\n      knownDocs[docId] = addRandomDocument(docId);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRandomFlRTGCloud#assertUpdate(SolrInputDocument[],int[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Does some random indexing of the specified docIds and adds them to knownDocs\n   */\n  private void assertUpdate(final SolrInputDocument[] knownDocs, final int[] docIds) throws IOException, SolrServerException {\n    \n    for (final int docId : docIds) {\n      // TODO: this method should also do some atomic update operations (ie: \"inc\" and \"set\")\n      // (but make sure to eval the updates locally as well before modifying knownDocs)\n      knownDocs[docId] = addRandomDocument(docId);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"136796946c32863f11b97ebec6b4091cdfe3a20b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","136796946c32863f11b97ebec6b4091cdfe3a20b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["136796946c32863f11b97ebec6b4091cdfe3a20b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["136796946c32863f11b97ebec6b4091cdfe3a20b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}