{"path":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","sourceNew":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) throws IOException {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","sourceOld":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) throws IOException {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","sourceNew":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","sourceOld":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) throws IOException {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","bugFix":["f1efe3edca215dd9891cb42af283fed96f792ca0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","sourceNew":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","sourceOld":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) throws IOException {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c50a88b580d08fc67d9a94b8b32b9d07a5972f8c","date":1347635292,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,RandomAccessFile,FileChannel,long,long,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.NIOFSIndexInput#NIOFSIndexInput(String,File,Descriptor,FileChannel,long,long,int,int).mjava","sourceNew":"    public NIOFSIndexInput(String sliceDescription, File path, RandomAccessFile file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","sourceOld":"    public NIOFSIndexInput(String sliceDescription, File path, Descriptor file, FileChannel fc, long off, long length, int bufferSize, int chunkSize) {\n      super(\"NIOFSIndexInput(\" + sliceDescription + \" in path=\\\"\" + path + \"\\\" slice=\" + off + \":\" + (off+length) + \")\", file, off, length, bufferSize, chunkSize);\n      channel = fc;\n      isClone = true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c50a88b580d08fc67d9a94b8b32b9d07a5972f8c"],"c50a88b580d08fc67d9a94b8b32b9d07a5972f8c":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","c50a88b580d08fc67d9a94b8b32b9d07a5972f8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c50a88b580d08fc67d9a94b8b32b9d07a5972f8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}