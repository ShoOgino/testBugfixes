{"path":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","commits":[{"id":"ba8cd9ac7a0f3ad09c6c94f53c4c415d13e72723","date":1286186570,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      final byte[] bs = bytes.bytes;\n      for(int i=bytes.length-1;i>=0;i--) {\n        int b = bs[i]&0xff;\n        if (b == 0xff) {\n          bs[i] = 0;\n        } else {\n          bs[i] = (byte) (++b);\n          tokenCount++;\n          return true;\n        }\n      }\n      bytes.length++;\n      bs[0] = 1;\n      tokenCount++;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6c7b564e6275fb0c0e137d84fda55b447c19d9c","date":1286438356,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      final byte[] bs = bytes.bytes;\n      for(int i=bytes.length-1;i>=0;i--) {\n        int b = bs[i]&0xff;\n        if (b == 0xff) {\n          bs[i] = 0;\n        } else {\n          bs[i] = (byte) (++b);\n          tokenCount++;\n          return true;\n        }\n      }\n      bytes.length++;\n      bs[0] = 1;\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"985161df9b1c14b4aa862d74d48cf51561579e62","date":1302636954,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2506f4a214732b20f56ab2fa8b975dc5d85c4d45","date":1302809898,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(BytesRef.deepCopyOf(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(new BytesRef(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/Test2BTerms.MyTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(BytesRef.deepCopyOf(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (tokenCount >= tokensPerDoc) {\n        return false;\n      }\n      random.nextBytes(bytes.bytes);\n      tokenCount++;\n      if (--nextSave == 0) {\n        savedTerms.add(BytesRef.deepCopyOf(bytes));\n        System.out.println(\"TEST: save term=\" + bytes);\n        nextSave = _TestUtil.nextInt(random, 500000, 1000000);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["a6c7b564e6275fb0c0e137d84fda55b447c19d9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e6e919043fa85ee891123768dd655a98edbbf63c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a6c7b564e6275fb0c0e137d84fda55b447c19d9c","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","985161df9b1c14b4aa862d74d48cf51561579e62"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"1eb46686a27187e42311e77666a2c7026f461ebc":["962d04139994fce5193143ef35615499a9a96d78","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2506f4a214732b20f56ab2fa8b975dc5d85c4d45":["985161df9b1c14b4aa862d74d48cf51561579e62"],"a6c7b564e6275fb0c0e137d84fda55b447c19d9c":["ba8cd9ac7a0f3ad09c6c94f53c4c415d13e72723"],"e6e919043fa85ee891123768dd655a98edbbf63c":["2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"985161df9b1c14b4aa862d74d48cf51561579e62":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"ba8cd9ac7a0f3ad09c6c94f53c4c415d13e72723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233","985161df9b1c14b4aa862d74d48cf51561579e62"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"962d04139994fce5193143ef35615499a9a96d78":["1eb46686a27187e42311e77666a2c7026f461ebc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ba8cd9ac7a0f3ad09c6c94f53c4c415d13e72723"],"2506f4a214732b20f56ab2fa8b975dc5d85c4d45":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","e6e919043fa85ee891123768dd655a98edbbf63c"],"a6c7b564e6275fb0c0e137d84fda55b447c19d9c":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"e6e919043fa85ee891123768dd655a98edbbf63c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"985161df9b1c14b4aa862d74d48cf51561579e62":["962d04139994fce5193143ef35615499a9a96d78","2506f4a214732b20f56ab2fa8b975dc5d85c4d45"],"ba8cd9ac7a0f3ad09c6c94f53c4c415d13e72723":["a6c7b564e6275fb0c0e137d84fda55b447c19d9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}