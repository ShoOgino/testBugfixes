{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterProperties#convertCollectionDefaultsToNestedFormat(Map[String,Object]).mjava","commits":[{"id":"03ac95daf4ee56bf1430dc5f8c54fcbcc5f3646e","date":1538649775,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterProperties#convertCollectionDefaultsToNestedFormat(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * See SOLR-12827 for background. We auto convert any \"collectionDefaults\" keys to \"defaults/collection\" format.\n   * This method will modify the given map and return the same object. Remove this method in Solr 9.\n   *\n   * @param properties the properties to be converted\n   * @return the converted map\n   */\n  static Map<String, Object> convertCollectionDefaultsToNestedFormat(Map<String, Object> properties) {\n    if (properties.containsKey(COLLECTION_DEF)) {\n      Map<String, Object> values = (Map<String, Object>) properties.remove(COLLECTION_DEF);\n      if (values != null) {\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.compute(CollectionAdminParams.COLLECTION, (k, v) -> {\n          if (v == null) return values;\n          else {\n            ((Map) v).putAll(values);\n            return v;\n          }\n        });\n      } else {\n        // explicitly set to null, so set null in the nested format as well\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.put(CollectionAdminParams.COLLECTION, null);\n      }\n    }\n    return properties;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterProperties#convertCollectionDefaultsToNestedFormat(Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterProperties#convertCollectionDefaultsToNestedFormat(Map[String,Object]).mjava","sourceNew":"  /**\n   * See SOLR-12827 for background. We auto convert any \"collectionDefaults\" keys to \"defaults/collection\" format.\n   * This method will modify the given map and return the same object. Remove this method in Solr 9.\n   *\n   * @param properties the properties to be converted\n   * @return the converted map\n   */\n  @SuppressWarnings({\"unchecked\"})\n  static Map<String, Object> convertCollectionDefaultsToNestedFormat(Map<String, Object> properties) {\n    if (properties.containsKey(COLLECTION_DEF)) {\n      Map<String, Object> values = (Map<String, Object>) properties.remove(COLLECTION_DEF);\n      if (values != null) {\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.compute(CollectionAdminParams.COLLECTION, (k, v) -> {\n          if (v == null) return values;\n          else {\n            ((Map) v).putAll(values);\n            return v;\n          }\n        });\n      } else {\n        // explicitly set to null, so set null in the nested format as well\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.put(CollectionAdminParams.COLLECTION, null);\n      }\n    }\n    return properties;\n  }\n\n","sourceOld":"  /**\n   * See SOLR-12827 for background. We auto convert any \"collectionDefaults\" keys to \"defaults/collection\" format.\n   * This method will modify the given map and return the same object. Remove this method in Solr 9.\n   *\n   * @param properties the properties to be converted\n   * @return the converted map\n   */\n  static Map<String, Object> convertCollectionDefaultsToNestedFormat(Map<String, Object> properties) {\n    if (properties.containsKey(COLLECTION_DEF)) {\n      Map<String, Object> values = (Map<String, Object>) properties.remove(COLLECTION_DEF);\n      if (values != null) {\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.compute(CollectionAdminParams.COLLECTION, (k, v) -> {\n          if (v == null) return values;\n          else {\n            ((Map) v).putAll(values);\n            return v;\n          }\n        });\n      } else {\n        // explicitly set to null, so set null in the nested format as well\n        properties.putIfAbsent(CollectionAdminParams.DEFAULTS, new LinkedHashMap<>());\n        Map<String, Object> defaults = (Map<String, Object>) properties.get(CollectionAdminParams.DEFAULTS);\n        defaults.put(CollectionAdminParams.COLLECTION, null);\n      }\n    }\n    return properties;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["03ac95daf4ee56bf1430dc5f8c54fcbcc5f3646e"],"03ac95daf4ee56bf1430dc5f8c54fcbcc5f3646e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"03ac95daf4ee56bf1430dc5f8c54fcbcc5f3646e":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03ac95daf4ee56bf1430dc5f8c54fcbcc5f3646e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}