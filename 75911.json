{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","commits":[{"id":"bf28d12ff32dc50412338f84022406e2be7d44f2","date":1483438921,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    Collection<String> metrics = super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n    return metrics;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    Collection<String> metrics = super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n    return metrics;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d646b44d1d17a867bcd0e7a07b11c4837b169366","date":1483540291,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    Collection<String> metrics = super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n    return metrics;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<String> initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    Collection<String> metrics = super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n    return metrics;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    super.initializeMetrics(manager, registryName, tag, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    super.initializeMetrics(manager, registryName, tag, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    super.initializeMetrics(manager, registryName, scope);\n    parallelExecutor = MetricUtils.instrumentedExecutorService(parallelExecutor, this, manager.registry(registryName),\n        SolrMetricManager.mkName(\"parallelCoreAdminExecutor\", getCategory().name(),scope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["d646b44d1d17a867bcd0e7a07b11c4837b169366"],"bfc52860e6d13d034226a760813c59d984c6817a":["816521ebaad5add9cb96bb88c577394e2938c40b"],"43564cbb30b064675027cfb569564e8531096e97":["816521ebaad5add9cb96bb88c577394e2938c40b","bfc52860e6d13d034226a760813c59d984c6817a"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["bf28d12ff32dc50412338f84022406e2be7d44f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["d646b44d1d17a867bcd0e7a07b11c4837b169366"],"bf28d12ff32dc50412338f84022406e2be7d44f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43564cbb30b064675027cfb569564e8531096e97"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf28d12ff32dc50412338f84022406e2be7d44f2"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["f03e4bed5023ec3ef93a771b8888cae991cf448d","d646b44d1d17a867bcd0e7a07b11c4837b169366"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d646b44d1d17a867bcd0e7a07b11c4837b169366":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf28d12ff32dc50412338f84022406e2be7d44f2","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"816521ebaad5add9cb96bb88c577394e2938c40b":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"bf28d12ff32dc50412338f84022406e2be7d44f2":["d646b44d1d17a867bcd0e7a07b11c4837b169366","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["491c9672ec42582fe43960452dbd37f1c80fe0f0"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}