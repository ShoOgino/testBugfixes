{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","commits":[{"id":"f11899016a0460a7ea2e4b008d002e1e75c7d867","date":1256772085,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#sort(HashMap).mjava","sourceNew":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) Arrays.sort(entries, termComparator);\n    return entries;\n  }\n\n","sourceOld":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static Map.Entry[] sort(HashMap map) {\n    int size = map.size();\n    Map.Entry[] entries = new Map.Entry[size];\n    \n    Iterator iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = (Map.Entry) iter.next();\n    }\n    \n    if (size > 1) Arrays.sort(entries, termComparator);\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#[K,V]_sort(HashMap[K,V]).mjava","sourceNew":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) Arrays.sort(entries, termComparator);\n    return entries;\n  }\n\n","sourceOld":"  /** returns a view of the given map's entries, sorted ascending by key */\n  private static <K,V> Map.Entry<K,V>[] sort(HashMap<K,V> map) {\n    int size = map.size();\n    Map.Entry<K,V>[] entries = new Map.Entry[size];\n    \n    Iterator<Map.Entry<K,V>> iter = map.entrySet().iterator();\n    for (int i=0; i < size; i++) {\n      entries[i] = iter.next();\n    }\n    \n    if (size > 1) Arrays.sort(entries, termComparator);\n    return entries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}