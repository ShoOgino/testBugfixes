{"path":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","commits":[{"id":"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","date":1295759448,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, 1024);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b1110660886afcc62f57e9af901cd3f5dd294bc","date":1317830374,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, DefaultFieldsWriter.FORMAT_MINIMUM, DefaultFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < FieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n      if (format > FieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(indexStreamFN, format, FieldsWriter.FORMAT_MINIMUM, FieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b1110660886afcc62f57e9af901cd3f5dd294bc"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"]},"commit2Childs":{"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["29ef99d61cda9641b6250bf9567329a6e65f901d","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["4b1110660886afcc62f57e9af901cd3f5dd294bc","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}