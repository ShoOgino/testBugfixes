{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","commits":[{"id":"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b","date":1364392557,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    this.ctx = new SpatialContext(false, null, new RectangleImpl(0, 256, -128, 128, null));\n    //A fairly shallow grid, and default 2.5% distErrPct\n    this.grid = new QuadPrefixTree(ctx, 7);\n    this.strategy = new RecursivePrefixTreeStrategy(grid, getClass().getSimpleName());\n\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125)));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin, ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound==0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3702440de9629167be64098f307cea70809df488"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3702440de9629167be64098f307cea70809df488","date":1365439741,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","sourceNew":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    mySetup(7);\n\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125)));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin, ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","sourceOld":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    this.ctx = new SpatialContext(false, null, new RectangleImpl(0, 256, -128, 128, null));\n    //A fairly shallow grid, and default 2.5% distErrPct\n    this.grid = new QuadPrefixTree(ctx, 7);\n    this.strategy = new RecursivePrefixTreeStrategy(grid, getClass().getSimpleName());\n\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125)));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin, ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound==0);\n  }\n\n","bugFix":["5aeecf64d57563b4636e7f4222e7ddcde7f8df7b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50b84d7eef0fc32233dd6251567fdbdb10c4cda7","date":1365707213,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","sourceNew":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    mySetup(7);\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125), false));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin,\n        ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","sourceOld":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    mySetup(7);\n\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125)));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin, ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f54c29b684839e16d0a7ffd41ee8a1e93e905184","date":1395120410,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","sourceNew":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    setupQuadGrid(7);\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125), false));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin,\n        ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","sourceOld":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    mySetup(7);\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125), false));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin,\n        ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0521546db127e358ced1772a9d696dbdd255b203","date":1403202289,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testWithinDisjointParts().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testWithinDisjointParts().mjava","sourceNew":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    setupQuadGrid(7);\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125), false));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin,\n        ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","sourceOld":"  @Test\n  public void testWithinDisjointParts() throws IOException {\n    setupQuadGrid(7);\n    //one shape comprised of two parts, quite separated apart\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 10, -120, -100), ctx.makeRectangle(220, 240, 110, 125), false));\n    commit();\n    //query surrounds only the second part of the indexed shape\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.IsWithin,\n        ctx.makeRectangle(210, 245, 105, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    //we shouldn't find it because it's not completely within\n    assertTrue(searchResults.numFound == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f54c29b684839e16d0a7ffd41ee8a1e93e905184":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3702440de9629167be64098f307cea70809df488":["5aeecf64d57563b4636e7f4222e7ddcde7f8df7b"],"0521546db127e358ced1772a9d696dbdd255b203":["f54c29b684839e16d0a7ffd41ee8a1e93e905184"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0521546db127e358ced1772a9d696dbdd255b203"],"50b84d7eef0fc32233dd6251567fdbdb10c4cda7":["3702440de9629167be64098f307cea70809df488"],"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f54c29b684839e16d0a7ffd41ee8a1e93e905184":["0521546db127e358ced1772a9d696dbdd255b203"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5aeecf64d57563b4636e7f4222e7ddcde7f8df7b"],"3702440de9629167be64098f307cea70809df488":["50b84d7eef0fc32233dd6251567fdbdb10c4cda7"],"0521546db127e358ced1772a9d696dbdd255b203":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"50b84d7eef0fc32233dd6251567fdbdb10c4cda7":["f54c29b684839e16d0a7ffd41ee8a1e93e905184"],"5aeecf64d57563b4636e7f4222e7ddcde7f8df7b":["3702440de9629167be64098f307cea70809df488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}