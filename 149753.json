{"path":"src/java/org/apache/lucene/search/Similarity#idf(Vector,Searcher).mjava","commits":[{"id":"6f5efa46fb27648cd98137d9898d819e115911bc","date":1036690287,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(Vector,Searcher).mjava","pathOld":"/dev/null","sourceNew":"  /** Computes a score factor for a phrase.\n   *\n   * <p>The default implementation sums the {@link #idf(Term,Searcher)} factor\n   * for each term in the phrase.\n   *\n   * @param terms the vector of terms in the phrase\n   * @param searcher the document collection being searched\n   * @return a score factor for the phrase\n   */\n  public float idf(Vector terms, Searcher searcher) throws IOException {\n    float idf = 0.0f;\n    for (int i = 0; i < terms.size(); i++) {\n      idf += idf((Term)terms.elementAt(i), searcher);\n    }\n    return idf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bcbf4ed0baed877c8b36d024e17a99bedfdd904","date":1075500600,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(Collection,Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#idf(Vector,Searcher).mjava","sourceNew":"  /** Computes a score factor for a phrase.\n   *\n   * <p>The default implementation sums the {@link #idf(Term,Searcher)} factor\n   * for each term in the phrase.\n   *\n   * @param terms the terms in the phrase\n   * @param searcher the document collection being searched\n   * @return a score factor for the phrase\n   */\n  public float idf(Collection terms, Searcher searcher) throws IOException {\n    float idf = 0.0f;\n    Iterator i = terms.iterator();\n    while (i.hasNext()) {\n      idf += idf((Term)i.next(), searcher);\n    }\n    return idf;\n  }\n\n","sourceOld":"  /** Computes a score factor for a phrase.\n   *\n   * <p>The default implementation sums the {@link #idf(Term,Searcher)} factor\n   * for each term in the phrase.\n   *\n   * @param terms the vector of terms in the phrase\n   * @param searcher the document collection being searched\n   * @return a score factor for the phrase\n   */\n  public float idf(Vector terms, Searcher searcher) throws IOException {\n    float idf = 0.0f;\n    for (int i = 0; i < terms.size(); i++) {\n      idf += idf((Term)terms.elementAt(i), searcher);\n    }\n    return idf;\n  }\n\n","bugFix":null,"bugIntro":["f8da75c64a26663199511eef8db650621ed89107"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["6f5efa46fb27648cd98137d9898d819e115911bc"],"6f5efa46fb27648cd98137d9898d819e115911bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f5efa46fb27648cd98137d9898d819e115911bc"],"0bcbf4ed0baed877c8b36d024e17a99bedfdd904":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6f5efa46fb27648cd98137d9898d819e115911bc":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}