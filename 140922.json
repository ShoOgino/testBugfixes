{"path":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, (FacetRequest) clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, (FacetRequest) clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, (FacetRequest) clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, (FacetRequest) clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, (FacetRequest) clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, (FacetRequest) clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d5903979ca52514d2bc7e3a362e1c45885c94","date":1333042474,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, (FacetRequest) clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, (FacetRequest) clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/params/FacetRequest#createFacetResultsHandler(TaxonomyReader).mjava","sourceNew":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link FacetResultsHandler} that matches the request logic\n   * and current settings, such as {@link #getDepth() depth},\n   * {@link #getResultMode() limits-mode}, etc, as well as the passed in\n   * {@link TaxonomyReader}.\n   * \n   * @param taxonomyReader taxonomy reader is needed e.g. for knowing the\n   *        taxonomy size.\n   */\n  public FacetResultsHandler createFacetResultsHandler(TaxonomyReader taxonomyReader) {\n    try {\n      if (resultMode == ResultMode.PER_NODE_IN_TREE) {\n        return new TopKInEachNodeHandler(taxonomyReader, clone());\n      } \n      return new TopKFacetResultsHandler(taxonomyReader, clone());\n    } catch (CloneNotSupportedException e) {\n      // Shouldn't happen since we implement Cloneable. If it does happen, it is\n      // probably because the class was changed to not implement Cloneable\n      // anymore.\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["399d5903979ca52514d2bc7e3a362e1c45885c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"399d5903979ca52514d2bc7e3a362e1c45885c94":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"399d5903979ca52514d2bc7e3a362e1c45885c94":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["399d5903979ca52514d2bc7e3a362e1c45885c94","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}