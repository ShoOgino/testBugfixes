{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#bulkScorer(LeafReaderContext,boolean,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#bulkScorer(LeafReaderContext,boolean,Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BulkScorer bulkScorer(LeafReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n    // if the caller asks for in-order scoring or if the weight does not support\n    // out-of order scoring then collection will have to happen in-order.\n    BulkScorer inScorer = in.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n    if (inScorer == null) {\n      return null;\n    }\n\n    if (AssertingBulkScorer.shouldWrap(inScorer)) {\n      // The incoming scorer already has a specialized\n      // implementation for BulkScorer, so we should use it:\n      inScorer = AssertingBulkScorer.wrap(new Random(random.nextLong()), inScorer);\n    } else if (random.nextBoolean()) {\n      // Let super wrap this.scorer instead, so we use\n      // AssertingScorer:\n      inScorer = super.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n    }\n\n    if (scoreDocsInOrder == false && random.nextBoolean()) {\n      // The caller claims it can handle out-of-order\n      // docs; let's confirm that by pulling docs and\n      // randomly shuffling them before collection:\n      inScorer = new AssertingBulkOutOfOrderScorer(new Random(random.nextLong()), inScorer);\n    }\n    return inScorer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingWeight#bulkScorer(LeafReaderContext,boolean,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public BulkScorer bulkScorer(LeafReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {\n    // if the caller asks for in-order scoring or if the weight does not support\n    // out-of order scoring then collection will have to happen in-order.\n    BulkScorer inScorer = in.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n    if (inScorer == null) {\n      return null;\n    }\n\n    if (AssertingBulkScorer.shouldWrap(inScorer)) {\n      // The incoming scorer already has a specialized\n      // implementation for BulkScorer, so we should use it:\n      inScorer = AssertingBulkScorer.wrap(new Random(random.nextLong()), inScorer);\n    } else if (random.nextBoolean()) {\n      // Let super wrap this.scorer instead, so we use\n      // AssertingScorer:\n      inScorer = super.bulkScorer(context, scoreDocsInOrder, acceptDocs);\n    }\n\n    if (scoreDocsInOrder == false && random.nextBoolean()) {\n      // The caller claims it can handle out-of-order\n      // docs; let's confirm that by pulling docs and\n      // randomly shuffling them before collection:\n      inScorer = new AssertingBulkOutOfOrderScorer(new Random(random.nextLong()), inScorer);\n    }\n    return inScorer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}