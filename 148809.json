{"path":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","commits":[{"id":"a18711620bacf3c16e79b9d43a62ec0dfbdeffac","date":1133544735,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"/dev/null","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    RAMDirectory ramDir = new RAMDirectory(dir);\n    \n    // close the underlaying directory and delete the index\n    dir.close();\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5657b669e16b843aac69f0ba7e89def1f93f6ea0","date":1164163669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    RAMDirectory ramDir = new RAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    RAMDirectory ramDir = new RAMDirectory(dir);\n    \n    // close the underlaying directory and delete the index\n    dir.close();\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    RAMDirectory ramDir = new RAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir, false);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.getDirectory(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0ccb38525d59e4082f912797fe4d0a7d9bead43","date":1245100309,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#testRAMDirectory().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#testRAMDirectory().mjava","sourceNew":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","sourceOld":"  public void testRAMDirectory () throws IOException {\n    \n    Directory dir = FSDirectory.open(indexDir);\n    MockRAMDirectory ramDir = new MockRAMDirectory(dir);\n    \n    // close the underlaying directory\n    dir.close();\n    \n    // Check size\n    assertEquals(ramDir.sizeInBytes(), ramDir.getRecomputedSizeInBytes());\n    \n    // open reader to test document count\n    IndexReader reader = IndexReader.open(ramDir);\n    assertEquals(docsToAdd, reader.numDocs());\n    \n    // open search zo check if all doc's are there\n    IndexSearcher searcher = new IndexSearcher(reader);\n    \n    // search for all documents\n    for (int i = 0; i < docsToAdd; i++) {\n      Document doc = searcher.doc(i);\n      assertTrue(doc.getField(\"content\") != null);\n    }\n\n    // cleanup\n    reader.close();\n    searcher.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66b12ba4967665216eeb706b58d424c51fb3641a":["eeefd99c477417e5c7c574228461ebafe92469d4"],"eeefd99c477417e5c7c574228461ebafe92469d4":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["66b12ba4967665216eeb706b58d424c51fb3641a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["a18711620bacf3c16e79b9d43a62ec0dfbdeffac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"a18711620bacf3c16e79b9d43a62ec0dfbdeffac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66b12ba4967665216eeb706b58d424c51fb3641a":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"eeefd99c477417e5c7c574228461ebafe92469d4":["66b12ba4967665216eeb706b58d424c51fb3641a"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a18711620bacf3c16e79b9d43a62ec0dfbdeffac"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["eeefd99c477417e5c7c574228461ebafe92469d4"],"a18711620bacf3c16e79b9d43a62ec0dfbdeffac":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}