{"path":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final AtomicInteger numLeaves = new AtomicInteger();\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves.incrementAndGet();\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves.get();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37ac73ee11c772ace0569ac523540e5c5478e6a3","date":1294261468,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final AtomicInteger numLeaves = new AtomicInteger();\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves.incrementAndGet();\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves.get();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, AtomicIndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, AtomicIndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e00dc2d44dc4e14788fbeb649970c757f024592d","date":1327883708,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader.ReaderContextBuilder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new ReaderUtil.Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReaderContext.Builder#numLeaves(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/ReaderUtil.ReaderContextBuilder#numLeaves(IndexReader).mjava","sourceNew":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new ReaderUtil.Gather(reader) {\n          @Override\n          protected void add(int base, AtomicReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","sourceOld":"    private int numLeaves(IndexReader reader) {\n      final int[] numLeaves = new int[1];\n      try {\n        new Gather(reader) {\n          @Override\n          protected void add(int base, IndexReader r) {\n            numLeaves[0]++;\n          }\n        }.run();\n      } catch (IOException ioe) {\n        // won't happen\n        throw new RuntimeException(ioe);\n      }\n      return numLeaves[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","37ac73ee11c772ace0569ac523540e5c5478e6a3"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e00dc2d44dc4e14788fbeb649970c757f024592d":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"37ac73ee11c772ace0569ac523540e5c5478e6a3":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","37ac73ee11c772ace0569ac523540e5c5478e6a3"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["37ac73ee11c772ace0569ac523540e5c5478e6a3","e00dc2d44dc4e14788fbeb649970c757f024592d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["37ac73ee11c772ace0569ac523540e5c5478e6a3"]},"commit2Childs":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["e00dc2d44dc4e14788fbeb649970c757f024592d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","868da859b43505d9d2a023bfeae6dd0c795f5295"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["37ac73ee11c772ace0569ac523540e5c5478e6a3"],"e00dc2d44dc4e14788fbeb649970c757f024592d":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"37ac73ee11c772ace0569ac523540e5c5478e6a3":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}