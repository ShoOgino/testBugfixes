{"path":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#orExpression(String).mjava","commits":[{"id":"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c","date":1110211682,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#orExpression(String).mjava","pathOld":"/dev/null","sourceNew":"  final public Query orExpression(String field) throws ParseException {\n  Vector clauses = new Vector();\n  Query q, firstQuery=null;\n  int modifier;\n    q = andExpression(field);\n    addClause(clauses, CONJ_NONE, MOD_NONE, q);\n    firstQuery=q;\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      modifier = Modifier();\n      q = andExpression(field);\n      addClause(clauses, CONJ_OR, modifier, q);\n    }\n      if (clauses.size() == 1 && firstQuery != null)\n        {if (true) return firstQuery;}\n      else {\n        {if (true) return getBooleanQuery(clauses);}\n      }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b67f6693ef378bd000202825cff0bea043621f5b","date":1110219676,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#orExpression(String).mjava","sourceNew":null,"sourceOld":"  final public Query orExpression(String field) throws ParseException {\n  Vector clauses = new Vector();\n  Query q, firstQuery=null;\n  int modifier;\n    q = andExpression(field);\n    addClause(clauses, CONJ_NONE, MOD_NONE, q);\n    firstQuery=q;\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      modifier = Modifier();\n      q = andExpression(field);\n      addClause(clauses, CONJ_OR, modifier, q);\n    }\n      if (clauses.size() == 1 && firstQuery != null)\n        {if (true) return firstQuery;}\n      else {\n        {if (true) return getBooleanQuery(clauses);}\n      }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b67f6693ef378bd000202825cff0bea043621f5b":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b67f6693ef378bd000202825cff0bea043621f5b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"b67f6693ef378bd000202825cff0bea043621f5b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c":["b67f6693ef378bd000202825cff0bea043621f5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}