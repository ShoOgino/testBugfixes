{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","sourceNew":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuilder stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuilder stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ru/RussianStemmer#findAndRemoveEnding(StringBuilder,char[][],char[][]).mjava","sourceNew":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuilder stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","sourceOld":"    /**\n     * Finds the ending among the given class of endings, then checks if this ending was\n     * preceded by any of given predecessors, and if so, removes it from stemming zone.\n     * Creation date: (17/03/2002 8:18:34 PM)\n     */\n    private boolean findAndRemoveEnding(StringBuilder stemmingZone,\n        char[][] theEndingClass, char[][] thePredessors)\n    {\n        int endingLength = findEnding(stemmingZone, theEndingClass);\n        if (endingLength == 0)\n            // not found\n            return false;\n        else\n        {\n            int predessorLength =\n                findEnding(stemmingZone,\n                    stemmingZone.length() - endingLength - 1,\n                    thePredessors);\n            if (predessorLength == 0)\n                return false;\n            else {\n                stemmingZone.setLength(stemmingZone.length() - endingLength);\n                // cut the ending found\n                return true;\n            }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}