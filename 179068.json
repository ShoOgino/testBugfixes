{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#formatVal(String,Properties,Class).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#formatVal(String,Properties,Class).mjava","pathOld":"/dev/null","sourceNew":"  private Object formatVal(String key, Properties props, Class clzz) {\n    String s = props.getProperty(key);\n    if (s == null || s.trim().length() == 0) return null;\n    if (clzz == Date.class) {\n      try {\n        Long l = Long.parseLong(s);\n        return new Date(l).toString();\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if (clzz == List.class) {\n      String ss[] = s.split(\",\");\n      List<String> l = new ArrayList<>();\n      for (String s1 : ss) {\n        l.add(new Date(Long.parseLong(s1)).toString());\n      }\n      return l;\n    } else {\n      return s;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#formatVal(String,Properties,Class).mjava","pathOld":"/dev/null","sourceNew":"  private Object formatVal(String key, Properties props, Class clzz) {\n    String s = props.getProperty(key);\n    if (s == null || s.trim().length() == 0) return null;\n    if (clzz == Date.class) {\n      try {\n        Long l = Long.parseLong(s);\n        return new Date(l).toString();\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if (clzz == List.class) {\n      String ss[] = s.split(\",\");\n      List<String> l = new ArrayList<>();\n      for (String s1 : ss) {\n        l.add(new Date(Long.parseLong(s1)).toString());\n      }\n      return l;\n    } else {\n      return s;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#formatVal(String,Properties,Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#formatVal(String,Properties,Class).mjava","sourceNew":"  private Object formatVal(String key, Properties props, @SuppressWarnings({\"rawtypes\"})Class clzz) {\n    String s = props.getProperty(key);\n    if (s == null || s.trim().length() == 0) return null;\n    if (clzz == Date.class) {\n      try {\n        Long l = Long.parseLong(s);\n        return new Date(l).toString();\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if (clzz == List.class) {\n      String ss[] = s.split(\",\");\n      List<String> l = new ArrayList<>();\n      for (String s1 : ss) {\n        l.add(new Date(Long.parseLong(s1)).toString());\n      }\n      return l;\n    } else {\n      return s;\n    }\n  }\n\n","sourceOld":"  private Object formatVal(String key, Properties props, Class clzz) {\n    String s = props.getProperty(key);\n    if (s == null || s.trim().length() == 0) return null;\n    if (clzz == Date.class) {\n      try {\n        Long l = Long.parseLong(s);\n        return new Date(l).toString();\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if (clzz == List.class) {\n      String ss[] = s.split(\",\");\n      List<String> l = new ArrayList<>();\n      for (String s1 : ss) {\n        l.add(new Date(Long.parseLong(s1)).toString());\n      }\n      return l;\n    } else {\n      return s;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["816521ebaad5add9cb96bb88c577394e2938c40b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"816521ebaad5add9cb96bb88c577394e2938c40b":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}