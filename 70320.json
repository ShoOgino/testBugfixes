{"path":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","commits":[{"id":"8179b8076771d18179c95bd365eab8cda618f84a","date":1348552364,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    CategoryDocumentBuilder cdb = new CategoryDocumentBuilder(tw);\n    ArrayList<CategoryPath> categoryPaths = new ArrayList<CategoryPath>(1);\n    \n    for (int i = 0; i < 100; i++) {\n      categoryPaths.clear();\n      categoryPaths.add(new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i)));\n      cdb.setCategoryPaths(categoryPaths);\n      w.addDocument(cdb.build(new Document()));\n    }\n    IOUtils.close(tw, w);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","sourceNew":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","sourceOld":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    CategoryDocumentBuilder cdb = new CategoryDocumentBuilder(tw);\n    ArrayList<CategoryPath> categoryPaths = new ArrayList<CategoryPath>(1);\n    \n    for (int i = 0; i < 100; i++) {\n      categoryPaths.clear();\n      categoryPaths.add(new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i)));\n      cdb.setCategoryPaths(categoryPaths);\n      w.addDocument(cdb.build(new Document()));\n    }\n    IOUtils.close(tw, w);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","sourceNew":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","sourceOld":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    CategoryDocumentBuilder cdb = new CategoryDocumentBuilder(tw);\n    ArrayList<CategoryPath> categoryPaths = new ArrayList<CategoryPath>(1);\n    \n    for (int i = 0; i < 100; i++) {\n      categoryPaths.clear();\n      categoryPaths.add(new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i)));\n      cdb.setCategoryPaths(categoryPaths);\n      w.addDocument(cdb.build(new Document()));\n    }\n    IOUtils.close(tw, w);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90213788e5007cc5e2b3d88200a8265de9d4e6d4","date":1359060940,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","sourceNew":"  private void index100Docs(Directory indexDir, Directory taxoDir, FacetIndexingParams fip) throws IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw, fip);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","sourceOld":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory,FacetIndexingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#index100Docs(Directory,Directory).mjava","sourceNew":"  private void index100Docs(Directory indexDir, Directory taxoDir, FacetIndexingParams fip) throws IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw, fip);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","sourceOld":"  private void index100Docs(Directory indexDir, Directory taxoDir)\n      throws CorruptIndexException, LockObtainFailedException, IOException {\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer());\n    IndexWriter w = new IndexWriter(indexDir, iwc);\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    \n    FacetFields facetFields = new FacetFields(tw);\n    for (int i = 0; i < 100; i++) {\n      Document doc = new Document();\n      CategoryPath cp = new CategoryPath(\"root\",Integer.toString(i / 10), Integer.toString(i));\n      facetFields.addFields(doc, Collections.singletonList(cp));\n      w.addDocument(doc);\n    }\n    IOUtils.close(tw, w);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8179b8076771d18179c95bd365eab8cda618f84a","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["8179b8076771d18179c95bd365eab8cda618f84a"],"8179b8076771d18179c95bd365eab8cda618f84a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90213788e5007cc5e2b3d88200a8265de9d4e6d4"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["dd45d4a2ee01a1932d33eec42f5272c2402da679"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","90213788e5007cc5e2b3d88200a8265de9d4e6d4"],"90213788e5007cc5e2b3d88200a8265de9d4e6d4":["dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8179b8076771d18179c95bd365eab8cda618f84a":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8179b8076771d18179c95bd365eab8cda618f84a"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}