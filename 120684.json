{"path":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#equalCharSequences(CharSequence,CharSequence).mjava","commits":[{"id":"84ab9fb766b354a9a9f16580a1162aac7ebbfc51","date":1340868936,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#equalCharSequences(CharSequence,CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compare two char sequences for equality. Assumes non-null arguments. \n   */\n  private static final boolean equalCharSequences(CharSequence s1, CharSequence s2) {\n    int len1 = s1.length();\n    int len2 = s2.length();\n    if (len1 != len2) return false;\n    for (int i = len1; --i >= 0;) {\n      if (s1.charAt(i) != s2.charAt(i)) { \n        return false; \n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#equalCharSequences(CharSequence,CharSequence).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compare two char sequences for equality. Assumes non-null arguments. \n   */\n  private static final boolean equalCharSequences(CharSequence s1, CharSequence s2) {\n    int len1 = s1.length();\n    int len2 = s2.length();\n    if (len1 != len2) return false;\n    for (int i = len1; --i >= 0;) {\n      if (s1.charAt(i) != s2.charAt(i)) { \n        return false; \n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9d760ce88b54634b37e6de1cf1ff5d6d66cd622","date":1376037561,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#equalCharSequences(CharSequence,CharSequence).mjava","sourceNew":null,"sourceOld":"  /**\n   * Compare two char sequences for equality. Assumes non-null arguments. \n   */\n  private static final boolean equalCharSequences(CharSequence s1, CharSequence s2) {\n    int len1 = s1.length();\n    int len2 = s2.length();\n    if (len1 != len2) return false;\n    for (int i = len1; --i >= 0;) {\n      if (s1.charAt(i) != s2.charAt(i)) { \n        return false; \n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#equalCharSequences(CharSequence,CharSequence).mjava","sourceNew":null,"sourceOld":"  /**\n   * Compare two char sequences for equality. Assumes non-null arguments. \n   */\n  private static final boolean equalCharSequences(CharSequence s1, CharSequence s2) {\n    int len1 = s1.length();\n    int len2 = s2.length();\n    if (len1 != len2) return false;\n    for (int i = len1; --i >= 0;) {\n      if (s1.charAt(i) != s2.charAt(i)) { \n        return false; \n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"b9d760ce88b54634b37e6de1cf1ff5d6d66cd622":["84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b9d760ce88b54634b37e6de1cf1ff5d6d66cd622"]},"commit2Childs":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","84ab9fb766b354a9a9f16580a1162aac7ebbfc51"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"84ab9fb766b354a9a9f16580a1162aac7ebbfc51":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","b9d760ce88b54634b37e6de1cf1ff5d6d66cd622"],"b9d760ce88b54634b37e6de1cf1ff5d6d66cd622":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}