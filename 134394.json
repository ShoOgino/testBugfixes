{"path":"src/test/org/apache/lucene/index/IndexThread[TestIndexModifier]#IndexThread(IndexModifier,int,int).mjava","commits":[{"id":"8f9abf22470be69ffd1583ddf1cf2a0a275c4152","date":1130187285,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/IndexThread[TestIndexModifier]#IndexThread(IndexModifier,int,int).mjava","pathOld":"/dev/null","sourceNew":"  IndexThread(IndexModifier index, int maxWait, int threadNumber) {\n    this.index = index;\n    this.maxWait = maxWait;\n    this.threadNumber = threadNumber;\n    // TODO: test case is not reproducible despite pseudo-random numbers:\n    random = new Random(101+threadNumber);        // constant seed for better reproducability\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/IndexThread[TestIndexModifier]#IndexThread(IndexModifier,int,int).mjava","sourceNew":null,"sourceOld":"  IndexThread(IndexModifier index, int maxWait, int threadNumber) {\n    this.index = index;\n    this.maxWait = maxWait;\n    this.threadNumber = threadNumber;\n    // TODO: test case is not reproducible despite pseudo-random numbers:\n    random = new Random(101+threadNumber);        // constant seed for better reproducability\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/IndexThread[TestIndexModifier]#IndexThread(IndexModifier,int,int).mjava","sourceNew":null,"sourceOld":"  IndexThread(IndexModifier index, int maxWait, int threadNumber) {\n    this.index = index;\n    this.maxWait = maxWait;\n    this.threadNumber = threadNumber;\n    // TODO: test case is not reproducible despite pseudo-random numbers:\n    random = new Random(101+threadNumber);        // constant seed for better reproducability\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["8f9abf22470be69ffd1583ddf1cf2a0a275c4152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["8f9abf22470be69ffd1583ddf1cf2a0a275c4152","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"8f9abf22470be69ffd1583ddf1cf2a0a275c4152":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f9abf22470be69ffd1583ddf1cf2a0a275c4152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f9abf22470be69ffd1583ddf1cf2a0a275c4152":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}