{"path":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n        if (!r.getDisableFakeNorms()) {\n          for (int i = 0; i< norms.length; i++) {\n\t    assertEquals(\"\"+i, DEFAULT_NORM, norms[i]);\n          }\n        } else {\n          assertNull(norms);\n        }\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier#testFieldWithNoNorm().mjava","sourceNew":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","sourceOld":"    public void testFieldWithNoNorm() throws Exception {\n\n\tIndexReader r = IndexReader.open(store, false);\n\tbyte[] norms = r.norms(\"nonorm\");\n\n\t// sanity check, norms should all be 1\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n\tassertNull(norms);\n\n\tr.close();\n\t\n\tFieldNormModifier fnm = new FieldNormModifier(store, s);\n\ttry {\n\t    fnm.reSetNorms(\"nonorm\");\n\t} catch (Exception e) {\n\t    assertNull(\"caught something\", e);\n\t}\n\n\t// nothing should have changed\n\tr = IndexReader.open(store, false);\n\t\n\tnorms = r.norms(\"nonorm\");\n\tassertTrue(\"Whoops we have norms?\", !r.hasNorms(\"nonorm\"));\n  assertNull(norms);\n\n\tr.close();\n\t\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4256bc1b3c94786287ccdfc751230374521843cf":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}