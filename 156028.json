{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","commits":[{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random, MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUp().mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new ShingleAnalyzerWrapper(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false), 2);\n    directory = newDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    reader = IndexReader.open(directory);\n    searcher = new IndexSearcher(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}