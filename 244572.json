{"path":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","commits":[{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    return current.nextPosition();\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    return current.nextPosition();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    return current.nextPosition();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.postings.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.postings.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.postings.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.postings.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#nextPosition().mjava","sourceNew":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.postings.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + current.mappedDocID,\n                                      current.postings.toString());\n    }\n    return pos;\n  }\n\n","sourceOld":"  @Override\n  public int nextPosition() throws IOException {\n    int pos = current.nextPosition();\n    if (pos < 0) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is negative, field=\\\"\" + field + \" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    } else if (pos > IndexWriter.MAX_POSITION) {\n      throw new CorruptIndexException(\"position=\" + pos + \" is too large (> IndexWriter.MAX_POSITION=\" + IndexWriter.MAX_POSITION + \"), field=\\\"\" + field + \"\\\" doc=\" + doc,\n                                      mergeState.fieldsProducers[upto].toString());\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["35fb92999b9df7df2ce2b35b83a044cbede61f45","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["35fb92999b9df7df2ce2b35b83a044cbede61f45","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["35fb92999b9df7df2ce2b35b83a044cbede61f45","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["35fb92999b9df7df2ce2b35b83a044cbede61f45","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f5280f31484820499077f41fcdfe92d527d9dc"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}