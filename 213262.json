{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","commits":[{"id":"55f9a7c79d02b12eb3ed60661eafdc34ad4c38aa","date":1343094536,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"/dev/null","sourceNew":"  public S newInstance(String name) {\n    final Class<S> service = services.get(name.toLowerCase(Locale.ROOT));\n    if (service != null) {\n      try {\n        return service.newInstance();\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n        \t\t\"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n      }\n    } else {\n      throw new IllegalArgumentException(\"A SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' does not exist. \"+\n            \"You need to add the corresponding JAR file supporting this SPI to your classpath.\"+\n            \"The current classpath supports the following names: \"+availableServices());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af79e6e6f8d805b540b016bfa1cc561c5fc5bc94","date":1343134693,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = services.get(name.toLowerCase(Locale.ROOT));\n    if (service != null) {\n      try {\n        return service.newInstance();\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n              \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n      }\n    } else {\n      throw new IllegalArgumentException(\"A SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' does not exist. \"+\n            \"You need to add the corresponding JAR file supporting this SPI to your classpath.\"+\n            \"The current classpath supports the following names: \"+availableServices());\n    }\n  }\n\n","sourceOld":"  public S newInstance(String name) {\n    final Class<S> service = services.get(name.toLowerCase(Locale.ROOT));\n    if (service != null) {\n      try {\n        return service.newInstance();\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n        \t\t\"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n      }\n    } else {\n      throw new IllegalArgumentException(\"A SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' does not exist. \"+\n            \"You need to add the corresponding JAR file supporting this SPI to your classpath.\"+\n            \"The current classpath supports the following names: \"+availableServices());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ccf3f2e89c8e02a00051620fa60a11a2c696295","date":1343142072,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  // TODO: do we even need this method?\n  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":"  public S newInstance(String name) {\n    final Class<? extends S> service = services.get(name.toLowerCase(Locale.ROOT));\n    if (service != null) {\n      try {\n        return service.newInstance();\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n              \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n      }\n    } else {\n      throw new IllegalArgumentException(\"A SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' does not exist. \"+\n            \"You need to add the corresponding JAR file supporting this SPI to your classpath.\"+\n            \"The current classpath supports the following names: \"+availableServices());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb5fa85b7a5db8eea69af5fcaa4d80b4ee697424","date":1343164076,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name.toLowerCase(Locale.ROOT));\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":"  // TODO: do we even need this method?\n  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db740703a5dbb163dc705b99d0ca7613337889b2","date":1343164741,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  // TODO: do we even need this method?\n  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name.toLowerCase(Locale.ROOT));\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2132dcc9e5649f84442e8d0f9d45a3877df556e2","date":1343166771,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":"  // TODO: do we even need this method?\n  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"/dev/null","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"/dev/null","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","pathOld":"/dev/null","sourceNew":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String,Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AnalysisSPILoader#newInstance(String).mjava","sourceNew":"  public S newInstance(String name, Map<String,String> args) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.getConstructor(Map.class).newInstance(args);\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","sourceOld":"  public S newInstance(String name) {\n    final Class<? extends S> service = lookupClass(name);\n    try {\n      return service.newInstance();\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"SPI class of type \"+clazz.getName()+\" with name '\"+name+\"' cannot be instantiated. \" +\n            \"This is likely due to a misconfiguration of the java class '\" + service.getName() + \"': \", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db740703a5dbb163dc705b99d0ca7613337889b2":["eb5fa85b7a5db8eea69af5fcaa4d80b4ee697424"],"55f9a7c79d02b12eb3ed60661eafdc34ad4c38aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"eb5fa85b7a5db8eea69af5fcaa4d80b4ee697424":["6ccf3f2e89c8e02a00051620fa60a11a2c696295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af79e6e6f8d805b540b016bfa1cc561c5fc5bc94":["55f9a7c79d02b12eb3ed60661eafdc34ad4c38aa"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2132dcc9e5649f84442e8d0f9d45a3877df556e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"2132dcc9e5649f84442e8d0f9d45a3877df556e2":["db740703a5dbb163dc705b99d0ca7613337889b2"],"6ccf3f2e89c8e02a00051620fa60a11a2c696295":["af79e6e6f8d805b540b016bfa1cc561c5fc5bc94"]},"commit2Childs":{"db740703a5dbb163dc705b99d0ca7613337889b2":["2132dcc9e5649f84442e8d0f9d45a3877df556e2"],"55f9a7c79d02b12eb3ed60661eafdc34ad4c38aa":["af79e6e6f8d805b540b016bfa1cc561c5fc5bc94"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"eb5fa85b7a5db8eea69af5fcaa4d80b4ee697424":["db740703a5dbb163dc705b99d0ca7613337889b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55f9a7c79d02b12eb3ed60661eafdc34ad4c38aa","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4"],"af79e6e6f8d805b540b016bfa1cc561c5fc5bc94":["6ccf3f2e89c8e02a00051620fa60a11a2c696295"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"6ccf3f2e89c8e02a00051620fa60a11a2c696295":["eb5fa85b7a5db8eea69af5fcaa4d80b4ee697424"],"2132dcc9e5649f84442e8d0f9d45a3877df556e2":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}