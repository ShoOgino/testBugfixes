{"path":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers#testTokenStreamGraphWithHoles().mjava","commits":[{"id":"02bb26fb0bcbf774b42d0f5322026124d24e2390","date":1483874768,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers#testTokenStreamGraphWithHoles().mjava","pathOld":"/dev/null","sourceNew":"  public void testTokenStreamGraphWithHoles() throws Exception {\n    final TokenStream ts = new CannedTokenStream(\n      new Token[] {\n        token(\"abc\", 1, 1),\n        token(\"xyz\", 1, 8),\n        token(\"def\", 1, 1),\n        token(\"ghi\", 1, 1),\n      });\n    assertSameLanguage(Operations.union(join(s2a(\"abc\"), SEP_A, s2a(\"xyz\")),\n                                        join(s2a(\"abc\"), SEP_A, HOLE_A, SEP_A, s2a(\"def\"), SEP_A, s2a(\"ghi\"))), ts);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"085e5eccb1e06e3bfb487813880adc54c888dd02","date":1483875517,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers#testTokenStreamGraphWithHoles().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers#testTokenStreamGraphWithHoles().mjava","sourceNew":"  public void testTokenStreamGraphWithHoles() throws Exception {\n    final TokenStream ts = new CannedTokenStream(\n      new Token[] {\n        token(\"abc\", 1, 1),\n        token(\"xyz\", 1, 8),\n        token(\"def\", 1, 1),\n        token(\"ghi\", 1, 1),\n      });\n    assertSameLanguage(Operations.union(join(s2a(\"abc\"), SEP_A, s2a(\"xyz\")),\n                                        join(s2a(\"abc\"), SEP_A, HOLE_A, SEP_A, s2a(\"def\"), SEP_A, s2a(\"ghi\"))), ts);\n  }\n\n","sourceOld":"  public void testTokenStreamGraphWithHoles() throws Exception {\n    final TokenStream ts = new CannedTokenStream(\n      new Token[] {\n        token(\"abc\", 1, 1),\n        token(\"xyz\", 1, 8),\n        token(\"def\", 1, 1),\n        token(\"ghi\", 1, 1),\n      });\n    assertSameLanguage(Operations.union(join(s2a(\"abc\"), SEP_A, s2a(\"xyz\")),\n                                        join(s2a(\"abc\"), SEP_A, HOLE_A, SEP_A, s2a(\"def\"), SEP_A, s2a(\"ghi\"))), ts);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02bb26fb0bcbf774b42d0f5322026124d24e2390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"085e5eccb1e06e3bfb487813880adc54c888dd02":["02bb26fb0bcbf774b42d0f5322026124d24e2390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["085e5eccb1e06e3bfb487813880adc54c888dd02"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02bb26fb0bcbf774b42d0f5322026124d24e2390"],"02bb26fb0bcbf774b42d0f5322026124d24e2390":["085e5eccb1e06e3bfb487813880adc54c888dd02"],"085e5eccb1e06e3bfb487813880adc54c888dd02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}