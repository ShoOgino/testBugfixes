{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final LegacyBinaryDocValues binary = getLegacyBinary(field);\n    return new LegacySortedNumericDocValuesWrapper(new LegacySortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final LegacyBinaryDocValues binary = getLegacyBinary(field);\n    return new LegacySortedNumericDocValuesWrapper(new LegacySortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7558b5077dd4abd457be151475f13b541f4f13e","date":1475830751,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final LegacyBinaryDocValues binary = getLegacyBinary(field);\n    return new LegacySortedNumericDocValuesWrapper(new LegacySortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n      }, maxDoc);\n  }\n\n","bugFix":["d14ffaac9c4a4a2c750bf0cd956506802561e062","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      long values[];\n\n      @Override\n      public void setDocument(int doc) {\n        String csv = binary.get(doc).utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n      }\n\n      @Override\n      public long valueAt(int index) {\n        return values[index];\n      }\n\n      @Override\n      public int count() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public boolean advanceExact(int target) throws IOException {\n        if (binary.advanceExact(target)) {\n          setCurrentDoc();\n          return true;\n        }\n        return false;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public boolean advanceExact(int target) throws IOException {\n        if (binary.advanceExact(target)) {\n          setCurrentDoc();\n          return true;\n        }\n        return false;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#getSortedNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public boolean advanceExact(int target) throws IOException {\n        if (binary.advanceExact(target)) {\n          setCurrentDoc();\n          return true;\n        }\n        return false;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n    final BinaryDocValues binary = getBinary(field);\n    return new SortedNumericDocValues() {\n      \n      @Override\n      public int nextDoc() throws IOException {\n        int doc = binary.nextDoc();\n        setCurrentDoc();\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return binary.docID();\n      }\n      \n      @Override\n      public long cost() {\n        return binary.cost();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        int doc = binary.advance(target);\n        setCurrentDoc();\n        return doc;\n      }\n      \n      long values[];\n      int index;\n      \n      private void setCurrentDoc() throws IOException {\n        if (docID() == NO_MORE_DOCS) {\n          return;\n        }\n        String csv = binary.binaryValue().utf8ToString();\n        if (csv.length() == 0) {\n          values = new long[0];\n        } else {\n          String s[] = csv.split(\",\");\n          values = new long[s.length];\n          for (int i = 0; i < values.length; i++) {\n            values[i] = Long.parseLong(s[i]);\n          }\n        }\n        index = 0;\n      }\n      \n      @Override\n      public long nextValue() throws IOException {\n        return values[index++];\n      }\n      \n      @Override\n      public int docValueCount() {\n        return values.length;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7558b5077dd4abd457be151475f13b541f4f13e":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["f7558b5077dd4abd457be151475f13b541f4f13e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d14ffaac9c4a4a2c750bf0cd956506802561e062","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["f7558b5077dd4abd457be151475f13b541f4f13e","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d14ffaac9c4a4a2c750bf0cd956506802561e062","f7558b5077dd4abd457be151475f13b541f4f13e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f7558b5077dd4abd457be151475f13b541f4f13e":["11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f7558b5077dd4abd457be151475f13b541f4f13e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","c6f080a2ab37c464dd98db173f6cbf10dc74f211","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}