{"path":"src/test/org/apache/lucene/index/TestWordlistLoader#checkSet(HashSet[String]).mjava","commits":[{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestWordlistLoader#checkSet(HashSet[String]).mjava","pathOld":"src/test/org/apache/lucene/index/TestWordlistLoader#checkSet(HashSet).mjava","sourceNew":"  private void checkSet(HashSet<String> wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(HashSet wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestWordlistLoader#checkSet(HashSet[String]).mjava","pathOld":"src/test/org/apache/lucene/index/TestWordlistLoader#checkSet(HashSet[String]).mjava","sourceNew":"  private void checkSet(HashSet<String> wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","sourceOld":"  private void checkSet(HashSet<String> wordset) {\n    assertEquals(3, wordset.size());\n    assertTrue(wordset.contains(\"ONE\"));\t\t// case is not modified\n    assertTrue(wordset.contains(\"two\"));\t\t// surrounding whitespace is removed\n    assertTrue(wordset.contains(\"three\"));\n    assertFalse(wordset.contains(\"four\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}