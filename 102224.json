{"path":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","commits":[{"id":"627e70d5711ab39d080a080f089685268525f54d","date":1560754171,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"/dev/null","sourceNew":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder .append( decoder.getName());\n    keyBuilder.append(\"/\").append( sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","sourceNew":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","sourceOld":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder .append( decoder.getName());\n    keyBuilder.append(\"/\").append( sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99d6782cf9de8c5ffeb8d0b0f103b578205af068","date":1566878682,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","sourceNew":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha256) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha256);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha256), decoder));\n  }\n\n","sourceOld":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","sourceNew":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","sourceOld":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha256) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha256);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha256), decoder));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","sourceNew":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","sourceOld":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha256) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha256);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha256), decoder));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/BlobRepository#getBlobIncRef(String,Decoder,String,String).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuilder keyBuilder = new StringBuilder(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","sourceOld":"  BlobContentRef getBlobIncRef(String key, Decoder decoder, String url, String sha512) {\n    StringBuffer keyBuilder = new StringBuffer(key);\n    if (decoder != null) keyBuilder.append(decoder.getName());\n    keyBuilder.append(\"/\").append(sha512);\n\n    return getBlobIncRef(keyBuilder.toString(), () -> new BlobContent<>(key, fetchBlobAndVerify(key, url, sha512), decoder));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["c44cc06c26e456fe9c215072b79fce30babe3975"],"627e70d5711ab39d080a080f089685268525f54d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["627e70d5711ab39d080a080f089685268525f54d"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"b0b597c65628ca9e73913a07e81691f8229bae35":["99d6782cf9de8c5ffeb8d0b0f103b578205af068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"627e70d5711ab39d080a080f089685268525f54d":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["627e70d5711ab39d080a080f089685268525f54d"],"c44cc06c26e456fe9c215072b79fce30babe3975":["75237075d8425856bf4bbf52a6be4f9162b8187d","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}