{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","commits":[{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.bytes, payloadBytes.length);\n    payloadBytes.length = 0;\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.bytes, payloadBytes.length);\n    payloadBytes.length = 0;\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","date":1481155163,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.getBytes(), payloadBytes.getPosition());\n    payloadBytes.reset();\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.bytes, payloadBytes.length);\n    payloadBytes.length = 0;\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.getBytes(), payloadBytes.getPosition());\n    payloadBytes.reset();\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.bytes, payloadBytes.length);\n    payloadBytes.length = 0;\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    payloadBytes.copyTo(termSuffixes);\n    payloadBytes.reset();\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    // append the payload bytes of the doc after its terms\n    termSuffixes.writeBytes(payloadBytes.getBytes(), payloadBytes.getPosition());\n    payloadBytes.reset();\n    ++numDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n    curDoc = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["eda61b1e90b490cc5837200e04c02639a0d272c7","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda61b1e90b490cc5837200e04c02639a0d272c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["eda61b1e90b490cc5837200e04c02639a0d272c7"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["9856095f7afb5a607bf5e65077615ed91273508c","07155cdd910937cdf6877e48884d5782845c8b8b","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda61b1e90b490cc5837200e04c02639a0d272c7","07155cdd910937cdf6877e48884d5782845c8b8b"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["409da428f28953cf35fddd5c9ff5c7e4f5439863","9856095f7afb5a607bf5e65077615ed91273508c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}