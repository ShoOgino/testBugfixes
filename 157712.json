{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader#close().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      try {\n        if (indexReader != null) {\n          indexReader.close();\n        }\n      } finally {\n        // null so if an app hangs on to us (ie, we are not\n        // GCable, despite being closed) we still free most\n        // ram\n        indexReader = null;\n        if (in != null) {\n          in.close();\n        }\n      }\n    } finally {\n      try {\n        if (postingsReader != null) {\n          postingsReader.close();\n        }\n      } finally {\n        for(FieldReader field : fields.values()) {\n          field.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      try {\n        if (indexReader != null) {\n          indexReader.close();\n        }\n      } finally {\n        // null so if an app hangs on to us (ie, we are not\n        // GCable, despite being closed) we still free most\n        // ram\n        indexReader = null;\n        if (in != null) {\n          in.close();\n        }\n      }\n    } finally {\n      try {\n        if (postingsReader != null) {\n          postingsReader.close();\n        }\n      } finally {\n        for(FieldReader field : fields.values()) {\n          field.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      try {\n        if (indexReader != null) {\n          indexReader.close();\n        }\n      } finally {\n        // null so if an app hangs on to us (ie, we are not\n        // GCable, despite being closed) we still free most\n        // ram\n        indexReader = null;\n        if (in != null) {\n          in.close();\n        }\n      }\n    } finally {\n      try {\n        if (postingsReader != null) {\n          postingsReader.close();\n        }\n      } finally {\n        for(FieldReader field : fields.values()) {\n          field.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      try {\n        if (indexReader != null) {\n          indexReader.close();\n        }\n      } finally {\n        // null so if an app hangs on to us (ie, we are not\n        // GCable, despite being closed) we still free most\n        // ram\n        indexReader = null;\n        if (in != null) {\n          in.close();\n        }\n      }\n    } finally {\n      try {\n        if (postingsReader != null) {\n          postingsReader.close();\n        }\n      } finally {\n        for(FieldReader field : fields.values()) {\n          field.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      try {\n        if (indexReader != null) {\n          indexReader.close();\n        }\n      } finally {\n        // null so if an app hangs on to us (ie, we are not\n        // GCable, despite being closed) we still free most\n        // ram\n        indexReader = null;\n        if (in != null) {\n          in.close();\n        }\n      }\n    } finally {\n      try {\n        if (postingsReader != null) {\n          postingsReader.close();\n        }\n      } finally {\n        for(FieldReader field : fields.values()) {\n          field.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}