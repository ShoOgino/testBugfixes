{"path":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","commits":[{"id":"29887daf839649150d96855b142b76f5c45d60d2","date":1482160504,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      HttpSolrClient client =\n          new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build();\n      try {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      } finally {\n        client.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      HttpSolrClient client =\n          new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build();\n      try {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      } finally {\n        client.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      try (HttpSolrClient client =\n               new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      HttpSolrClient client =\n          new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build();\n      try {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      } finally {\n        client.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      try (HttpSolrClient client =\n               new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      HttpSolrClient client =\n          new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build();\n      try {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      } finally {\n        client.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/hadoop/TestImpersonationWithHadoopAuth#testForwarding().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      try (HttpSolrClient client =\n               new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/HADOOP-9893\")\n  public void testForwarding() throws Exception {\n    String collectionName = \"forwardingCollection\";\n\n    // create collection\n    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, \"conf1\",\n        1, 1);\n    try (SolrClient solrClient = newSolrClient()) {\n      create.process(solrClient);\n    }\n\n    // try a command to each node, one of them must be forwarded\n    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {\n      HttpSolrClient client =\n          new HttpSolrClient.Builder(jetty.getBaseUrl().toString() + \"/\" + collectionName).build();\n      try {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"q\", \"*:*\");\n        params.set(USER_PARAM, \"user\");\n        client.query(params);\n      } finally {\n        client.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29887daf839649150d96855b142b76f5c45d60d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29887daf839649150d96855b142b76f5c45d60d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["29887daf839649150d96855b142b76f5c45d60d2"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["29887daf839649150d96855b142b76f5c45d60d2","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["29887daf839649150d96855b142b76f5c45d60d2","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"29887daf839649150d96855b142b76f5c45d60d2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29887daf839649150d96855b142b76f5c45d60d2","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}