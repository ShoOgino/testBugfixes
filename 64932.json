{"path":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","commits":[{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0d22643d425851add994b88a3162cd96d2d1d583"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a2748831fb25b0e9d5a4c315047bf877c887460","date":1498155650,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = ValidatingJsonMap.class.getClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","bugFix":null,"bugIntro":["0d22643d425851add994b88a3162cd96d2d1d583"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = ValidatingJsonMap.class.getClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = ValidatingJsonMap.class.getClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0d22643d425851add994b88a3162cd96d2d1d583","date":1519407802,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap#parse(String,String).mjava","sourceNew":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    final URL resource = ValidatingJsonMap.class.getClassLoader().getResource(resourceName);\n    if (null == resource) {\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    }\n    ValidatingJsonMap map = null;\n    try (InputStream is = resource.openStream()) {\n      try {\n        map = fromJSON(is, includeLocation);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n      }\n    } catch (IOException ioe) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                              \"Unable to read resource: \" + resourceName, ioe);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n    return getDeepCopy(map, 5, false);\n  }\n\n","sourceOld":"  public static ValidatingJsonMap parse(String resourceName, String includeLocation) {\n    InputStream is = ValidatingJsonMap.class.getClassLoader().getResourceAsStream(resourceName);\n    if (is == null)\n      throw new RuntimeException(\"invalid API spec: \" + resourceName);\n    ValidatingJsonMap map = null;\n    try {\n      map = fromJSON(is, includeLocation);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);\n    }\n    if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);\n\n    return getDeepCopy(map, 5, false);\n  }\n\n","bugFix":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","5a2748831fb25b0e9d5a4c315047bf877c887460"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a2748831fb25b0e9d5a4c315047bf877c887460":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","5a2748831fb25b0e9d5a4c315047bf877c887460"],"0d22643d425851add994b88a3162cd96d2d1d583":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","5a2748831fb25b0e9d5a4c315047bf877c887460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d22643d425851add994b88a3162cd96d2d1d583"]},"commit2Childs":{"5a2748831fb25b0e9d5a4c315047bf877c887460":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["5a2748831fb25b0e9d5a4c315047bf877c887460","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"0d22643d425851add994b88a3162cd96d2d1d583":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["0d22643d425851add994b88a3162cd96d2d1d583"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}