{"path":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":null,"sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f72f36b556a12c6d5004378a256b03015ef24d8","date":1279497528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#copyFile(File,File,Integer).mjava","sourceNew":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  /**\n   * character copy of file using UTF-8. If port is non-null, will be substituted any time \"TEST_PORT\" is found.\n   */\n  private static void copyFile(File src, File dst, Integer port) throws IOException {\n    BufferedReader in = new BufferedReader(new FileReader(src));\n    Writer out = new FileWriter(dst);\n\n    for (String line = in.readLine(); null != line; line = in.readLine()) {\n\n      if (null != port)\n        line = line.replace(\"TEST_PORT\", port.toString());\n      out.write(line);\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"9f72f36b556a12c6d5004378a256b03015ef24d8":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["9f72f36b556a12c6d5004378a256b03015ef24d8"],"c26f00b574427b55127e869b935845554afde1fa":["9f72f36b556a12c6d5004378a256b03015ef24d8","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["9f72f36b556a12c6d5004378a256b03015ef24d8"],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","9f72f36b556a12c6d5004378a256b03015ef24d8"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["9f72f36b556a12c6d5004378a256b03015ef24d8","5f4e87790277826a2aea119328600dfb07761f32"],"9f72f36b556a12c6d5004378a256b03015ef24d8":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","5f4e87790277826a2aea119328600dfb07761f32"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5f4e87790277826a2aea119328600dfb07761f32":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}