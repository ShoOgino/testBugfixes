{"path":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"5613a70439d5d429f0689c2c5a21615e58deff97","date":1512102314,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimePartitionedUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af3e10d8a1fbcc5c79b22f7477e79de467dd326c","date":1515178406,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46589ed5cc841861bf6b5e2afc55f718ebcd02a0","date":1516984620,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String aliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TimeRoutedAlias.ROUTED_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (aliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, aliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849083f8095b1ffaff05a66e0b1e024617b9968d","date":1536291524,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String aliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TimeRoutedAlias.ROUTED_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (aliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, next, aliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    //TODO get from \"Collection property\"\n    final String aliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TimeRoutedAlias.ROUTED_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (aliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, aliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["5613a70439d5d429f0689c2c5a21615e58deff97","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["5613a70439d5d429f0689c2c5a21615e58deff97"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5613a70439d5d429f0689c2c5a21615e58deff97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["849083f8095b1ffaff05a66e0b1e024617b9968d"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["46589ed5cc841861bf6b5e2afc55f718ebcd02a0"],"46589ed5cc841861bf6b5e2afc55f718ebcd02a0":["849083f8095b1ffaff05a66e0b1e024617b9968d"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5613a70439d5d429f0689c2c5a21615e58deff97"],"5613a70439d5d429f0689c2c5a21615e58deff97":["b94236357aaa22b76c10629851fe4e376e0cea82","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}