{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='fieldType']/arr[@name='fields']/str = 'weight'\",\n            \"/response/lst[@name='fieldType']/arr[@name='dynamicFields']/str = '*_f'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='fieldType']/arr[@name='fields']/str = 'weight'\",\n            \"/response/lst[@name='fieldType']/arr[@name='dynamicFields']/str = '*_f'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99c9d8533c954f661481ae44273622957dbf572f","date":1380991288,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\",\n            \"/response/lst[@name='fieldType']/arr[@name='fields']/str = 'weight'\",\n            \"/response/lst[@name='fieldType']/arr[@name='dynamicFields']/str = '*_f'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'true'\",\n            \"/response/lst[@name='fieldType']/arr[@name='fields']/str = 'weight'\",\n            \"/response/lst[@name='fieldType']/arr[@name='dynamicFields']/str = '*_f'\");\n  }\n\n","bugFix":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 16\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 18\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\",\n            \"/response/lst[@name='fieldType']/arr[@name='fields']/str = 'weight'\",\n            \"/response/lst[@name='fieldType']/arr[@name='dynamicFields']/str = '*_f'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b851ef3570d909ec1fb99f9d35a616d8500b83c0","date":1493818234,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 16\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 16\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"916d12fb9e9ce37001f3f330a247d552279db234","date":1500400223,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":5,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = 'solr.TrieFloatField'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testXMLGetFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestFieldTypeResource#testGetFieldType().mjava","sourceNew":"  @Test\n  public void testXMLGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","sourceOld":"  @Test\n  public void testGetFieldType() throws Exception {\n    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);\n    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);\n    assertQ(\"/schema/fieldtypes/float?indent=on&wt=xml&showDefaults=true\",\n            \"count(/response/lst[@name='fieldType']) = 1\",\n            \"count(/response/lst[@name='fieldType']/*) = 17\",\n            \"/response/lst[@name='fieldType']/str[@name='name'] = 'float'\",\n            \"/response/lst[@name='fieldType']/str[@name='class'] = '\"+expectedFloatClass+\"'\",\n            \"/response/lst[@name='fieldType']/str[@name='precisionStep'] ='0'\",\n            \"/response/lst[@name='fieldType']/bool[@name='indexed'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='stored'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='docValues'] = '\"+expectedDocValues+\"'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termVectors'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='termOffsets'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitNorms'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitTermFreqAndPositions'] = 'true'\",\n            \"/response/lst[@name='fieldType']/bool[@name='omitPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='storeOffsetsWithPositions'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='multiValued'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='large'] = 'false'\",\n            \"/response/lst[@name='fieldType']/bool[@name='tokenized'] = 'false'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99c9d8533c954f661481ae44273622957dbf572f":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["f494bc636a1302995e4930fdccd371eeda452f87","b851ef3570d909ec1fb99f9d35a616d8500b83c0"],"a52341299179de5479672f7cf518bf4b173f34b3":["916d12fb9e9ce37001f3f330a247d552279db234","ac1e7fa558287a811ea07634d815ee7b1c541284"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f494bc636a1302995e4930fdccd371eeda452f87":["99c9d8533c954f661481ae44273622957dbf572f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac1e7fa558287a811ea07634d815ee7b1c541284"],"b851ef3570d909ec1fb99f9d35a616d8500b83c0":["f494bc636a1302995e4930fdccd371eeda452f87"],"916d12fb9e9ce37001f3f330a247d552279db234":["b851ef3570d909ec1fb99f9d35a616d8500b83c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["916d12fb9e9ce37001f3f330a247d552279db234"]},"commit2Childs":{"99c9d8533c954f661481ae44273622957dbf572f":["f494bc636a1302995e4930fdccd371eeda452f87"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["99c9d8533c954f661481ae44273622957dbf572f"],"f494bc636a1302995e4930fdccd371eeda452f87":["e9017cf144952056066919f1ebc7897ff9bd71b1","b851ef3570d909ec1fb99f9d35a616d8500b83c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"b851ef3570d909ec1fb99f9d35a616d8500b83c0":["e9017cf144952056066919f1ebc7897ff9bd71b1","916d12fb9e9ce37001f3f330a247d552279db234"],"916d12fb9e9ce37001f3f330a247d552279db234":["a52341299179de5479672f7cf518bf4b173f34b3","ac1e7fa558287a811ea07634d815ee7b1c541284"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}