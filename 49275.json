{"path":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","commits":[{"id":"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","date":1470238980,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    public void collect(int doc) throws IOException{\n\n      int outcome = (int) leafOutcomeValue.get(doc);\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    public void collect(int doc) throws IOException{\n\n      int outcome = (int) leafOutcomeValue.get(doc);\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(valuesDocID);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n\n      int outcome = (int) leafOutcomeValue.get(doc);\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f4cee794f3321f983a0eec3544566a5b96f9f04","date":1474545947,"type":3,"author":"Joel","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(valuesDocID);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(valuesDocID);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n\n      int outcome = (int) leafOutcomeValue.get(doc);\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","date":1518443389,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int outcome;\n      if (leafOutcomeValue.advanceExact(doc)) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.TextLogisticRegressionCollector#collect(int).mjava","sourceNew":"    public void collect(int doc) throws IOException{\n      int outcome;\n      if (leafOutcomeValue.advanceExact(doc)) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","sourceOld":"    public void collect(int doc) throws IOException{\n      int valuesDocID = leafOutcomeValue.docID();\n      if (valuesDocID < doc) {\n        valuesDocID = leafOutcomeValue.advance(doc);\n      }\n      int outcome;\n      if (valuesDocID == doc) {\n        outcome = (int) leafOutcomeValue.longValue();\n      } else {\n        outcome = 0;\n      }\n\n      outcome = trainingParams.positiveLabel == outcome? 1 : 0;\n      if (outcome == 1) {\n        positiveDocsSet.set(context.docBase + doc);\n      }\n      docsSet.set(context.docBase+doc);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"126d6ad24eed13163ba0959435d5a80e5672837c":["6652c74b2358a0b13223817a6a793bf1c9d0749d","3f4cee794f3321f983a0eec3544566a5b96f9f04"],"3f4cee794f3321f983a0eec3544566a5b96f9f04":["6652c74b2358a0b13223817a6a793bf1c9d0749d"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","126d6ad24eed13163ba0959435d5a80e5672837c"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","81f64a6570bc5d216c5d575c3b29ecb106fa0e6b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"]},"commit2Childs":{"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3f4cee794f3321f983a0eec3544566a5b96f9f04":["126d6ad24eed13163ba0959435d5a80e5672837c"],"81f64a6570bc5d216c5d575c3b29ecb106fa0e6b":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["126d6ad24eed13163ba0959435d5a80e5672837c","3f4cee794f3321f983a0eec3544566a5b96f9f04"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["81f64a6570bc5d216c5d575c3b29ecb106fa0e6b","bfcdec9fcf0409223f35c5ec3bc14094314941b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}