{"path":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}