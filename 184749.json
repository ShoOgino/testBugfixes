{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testWithCycles2().mjava","commits":[{"id":"b5a22a4684195ce7ed7609f2286ef9d07570efec","date":1428329897,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testWithCycles2().mjava","pathOld":"/dev/null","sourceNew":"  /** See if we can create a TAQ with cycles */\n  public void testWithCycles2() throws Exception {\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes sun sun sun sun kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int init = q.createState();\n    int s1 = q.createState();\n    q.addTransition(init, s1, \"here\");\n    int s2 = q.createState();\n    q.addTransition(s1, s2, \"comes\");\n    int s3 = q.createState();\n    q.addTransition(s2, s3, \"sun\");\n    q.addTransition(s3, s3, \"sun\");\n    int s4 = q.createState();\n    q.addTransition(s3, s4, \"kaoma\");\n    q.setAccept(s4, true);\n    q.finish();\n\n    assertEquals(1, s.search(q, 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testWithCycles2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testWithCycles2().mjava","sourceNew":"  /** See if we can create a TAQ with cycles */\n  public void testWithCycles2() throws Exception {\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes sun sun sun sun kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int init = q.createState();\n    int s1 = q.createState();\n    q.addTransition(init, s1, \"here\");\n    int s2 = q.createState();\n    q.addTransition(s1, s2, \"comes\");\n    int s3 = q.createState();\n    q.addTransition(s2, s3, \"sun\");\n    q.addTransition(s3, s3, \"sun\");\n    int s4 = q.createState();\n    q.addTransition(s3, s4, \"kaoma\");\n    q.setAccept(s4, true);\n    q.finish();\n\n    assertEquals(1, s.search(q, 1).totalHits.value);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** See if we can create a TAQ with cycles */\n  public void testWithCycles2() throws Exception {\n    \n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"field\", \"here comes sun sun sun sun kaoma\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int init = q.createState();\n    int s1 = q.createState();\n    q.addTransition(init, s1, \"here\");\n    int s2 = q.createState();\n    q.addTransition(s1, s2, \"comes\");\n    int s3 = q.createState();\n    q.addTransition(s2, s3, \"sun\");\n    q.addTransition(s3, s3, \"sun\");\n    int s4 = q.createState();\n    q.addTransition(s3, s4, \"kaoma\");\n    q.setAccept(s4, true);\n    q.finish();\n\n    assertEquals(1, s.search(q, 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5a22a4684195ce7ed7609f2286ef9d07570efec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["b5a22a4684195ce7ed7609f2286ef9d07570efec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"b5a22a4684195ce7ed7609f2286ef9d07570efec":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5a22a4684195ce7ed7609f2286ef9d07570efec"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}