{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e18edf2fddf9b92ee8a51545fdaee23f3b527f73"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40036548b3665dfcf4d03aaf89048c52bed8202d","date":1491220876,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","sourceNew":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo != null && docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","sourceOld":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e18edf2fddf9b92ee8a51545fdaee23f3b527f73","date":1491296430,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","sourceNew":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo != null && docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","sourceOld":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","bugFix":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6842fea1e0e5f6e4ec52501f65ee3f997b299aaa","date":1585909143,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.OriginalScoreWeight.OriginalScoreScorer#score().mjava","sourceNew":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo != null && docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : in.score());\n      }\n\n","sourceOld":"      @Override\n      public float score() throws IOException {\n        // This is done to improve the speed of feature extraction. Since this\n        // was already scored in step 1\n        // we shouldn't need to calc original score again.\n        final DocInfo docInfo = getDocInfo();\n        return (docInfo != null && docInfo.hasOriginalDocScore() ? docInfo.getOriginalDocScore() : originalScorer.score());\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6842fea1e0e5f6e4ec52501f65ee3f997b299aaa":["40036548b3665dfcf4d03aaf89048c52bed8202d"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e18edf2fddf9b92ee8a51545fdaee23f3b527f73":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"40036548b3665dfcf4d03aaf89048c52bed8202d":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6842fea1e0e5f6e4ec52501f65ee3f997b299aaa"]},"commit2Childs":{"6842fea1e0e5f6e4ec52501f65ee3f997b299aaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","e18edf2fddf9b92ee8a51545fdaee23f3b527f73","40036548b3665dfcf4d03aaf89048c52bed8202d"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"e18edf2fddf9b92ee8a51545fdaee23f3b527f73":[],"40036548b3665dfcf4d03aaf89048c52bed8202d":["6842fea1e0e5f6e4ec52501f65ee3f997b299aaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9720b151fde2073f4e401450f4574e5f31c2d0ff","e18edf2fddf9b92ee8a51545fdaee23f3b527f73","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}