{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","pathOld":"/dev/null","sourceNew":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","sourceNew":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","sourceOld":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/configuration/StorageConfigurator#StorageConfigurator().mjava","sourceNew":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","sourceOld":"    private StorageConfigurator() { \n        InputStream stream = StorageConfigurator.class \n                .getResourceAsStream(\"/lucenestorage.properties.xml\"); \n        Properties properties = new Properties(); \n        try { \n            properties.loadFromXML(stream); \n \n        } catch (Exception e) { \n            throw new StorageConfigurationError(\"Could not load properties\", e); \n        } \n        this.storageBufferSize = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.buffersize\")); \n        this.storagepersistFactor = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.persistFactor\")); \n        this.recover = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover\")); \n        this.keepRecoveredFiles = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.recover.keepFiles\")); \n        this.storageDirectory = properties \n                .getProperty(\"gdata.server.storage.lucene.directory\"); \n        this.indexOptimizeInterval = Integer.parseInt(properties \n                .getProperty(\"gdata.server.storage.lucene.optimizeInterval\")); \n        this.ramDirectory = Boolean.parseBoolean(properties \n                .getProperty(\"gdata.server.storage.lucene.directory.ramDirectory\"));\n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["52754a40a1550056d5637c8992b4076b5ed77328"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}