{"path":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","commits":[{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new RAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new RAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new RAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new RAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory(random);\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new MockRAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    Random random = newRandom();\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory(random);\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(random,\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = FSDirectory.open(new File(fullPath));\n\n      Directory targetDir = new RAMDirectory();\n      IndexWriter w = new IndexWriter(targetDir, new IndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(new Directory[] { dir });\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdad2c6b6234338031bcc1f24c001a5ad66f714","date":1296866109,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      unzip(getDataFile(\"index.\" + name + \".zip\"), name);\n      String fullPath = fullDir(name);\n      Directory dir = newFSDirectory(new File(fullPath));\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      rmDir(name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer()));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n\n      _TestUtil.checkIndex(targetDir);\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(oldIndexDirs.get(name));\n      w.close();\n      \n      targetDir.close();\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      File oldIndxeDir = _TestUtil.getTempDir(name);\n      _TestUtil.unzip(getDataFile(\"index.\" + name + \".zip\"), oldIndxeDir);\n      Directory dir = newFSDirectory(oldIndxeDir);\n\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(dir);\n      w.close();\n      \n      dir.close();\n      targetDir.close();\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testAddOldIndexes().mjava","sourceNew":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(oldIndexDirs.get(name));\n      w.close();\n      \n      targetDir.close();\n    }\n  }\n\n","sourceOld":"  public void testAddOldIndexes() throws IOException {\n    for (String name : oldNames) {\n      Directory targetDir = newDirectory();\n      IndexWriter w = new IndexWriter(targetDir, newIndexWriterConfig(\n          TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      w.addIndexes(oldIndexDirs.get(name));\n      w.close();\n      \n      targetDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"a3776dccca01c11e7046323cfad46a3b4a471233":["3cdad2c6b6234338031bcc1f24c001a5ad66f714","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["3cdad2c6b6234338031bcc1f24c001a5ad66f714","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["8be580b58bcc650d428f3f22de81cadcf51d650a","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","a3776dccca01c11e7046323cfad46a3b4a471233","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}