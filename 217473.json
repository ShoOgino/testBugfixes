{"path":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#testEquals().mjava","commits":[{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#testEquals().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocTermOrdsRewriteMethod#testEquals().mjava","sourceNew":"  public void testEquals() throws Exception {\n    RegexpQuery a1 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery a2 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery b = new RegexpQuery(new Term(fieldName, \"[bB]\"), RegExp.NONE);\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    \n    a1.setRewriteMethod(new DocValuesRewriteMethod());\n    a2.setRewriteMethod(new DocValuesRewriteMethod());\n    b.setRewriteMethod(new DocValuesRewriteMethod());\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    QueryUtils.check(a1);\n  }\n\n","sourceOld":"  public void testEquals() throws Exception {\n    RegexpQuery a1 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery a2 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery b = new RegexpQuery(new Term(fieldName, \"[bB]\"), RegExp.NONE);\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    \n    a1.setRewriteMethod(new DocTermOrdsRewriteMethod());\n    a2.setRewriteMethod(new DocTermOrdsRewriteMethod());\n    b.setRewriteMethod(new DocTermOrdsRewriteMethod());\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    QueryUtils.check(a1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesRewriteMethod#testEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testEquals() throws Exception {\n    RegexpQuery a1 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery a2 = new RegexpQuery(new Term(fieldName, \"[aA]\"), RegExp.NONE);\n    RegexpQuery b = new RegexpQuery(new Term(fieldName, \"[bB]\"), RegExp.NONE);\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    \n    a1.setRewriteMethod(new DocValuesRewriteMethod());\n    a2.setRewriteMethod(new DocValuesRewriteMethod());\n    b.setRewriteMethod(new DocValuesRewriteMethod());\n    assertEquals(a1, a2);\n    assertFalse(a1.equals(b));\n    QueryUtils.check(a1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2713584a660051cd646423be682771e3bbd99985"],"2713584a660051cd646423be682771e3bbd99985":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2713584a660051cd646423be682771e3bbd99985"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}