{"path":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeTermsEnum#accept(BytesRef).mjava","commits":[{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedTermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if ((includeLower\n         ? collator.compare(term.utf8ToString(), lowerTermText) >= 0\n         : collator.compare(term.utf8ToString(), lowerTermText) > 0)\n        && (upperTermText == null\n            || (includeUpper\n                ? collator.compare(term.utf8ToString(), upperTermText) <= 0\n                : collator.compare(term.utf8ToString(), upperTermText) < 0))) {\n      return AcceptStatus.YES;\n    }\n    return AcceptStatus.NO;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if ((includeLower\n         ? collator.compare(term.utf8ToString(), lowerTermText) >= 0\n         : collator.compare(term.utf8ToString(), lowerTermText) > 0)\n        && (upperTermText == null\n            || (includeUpper\n                ? collator.compare(term.utf8ToString(), upperTermText) <= 0\n                : collator.compare(term.utf8ToString(), upperTermText) < 0))) {\n      return AcceptStatus.YES;\n    }\n    return AcceptStatus.NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if ((includeLower\n         ? collator.compare(term.utf8ToString(), lowerTermText) >= 0\n         : collator.compare(term.utf8ToString(), lowerTermText) > 0)\n        && (upperTermText == null\n            || (includeUpper\n                ? collator.compare(term.utf8ToString(), upperTermText) <= 0\n                : collator.compare(term.utf8ToString(), upperTermText) < 0))) {\n      return AcceptStatus.YES;\n    }\n    return AcceptStatus.NO;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if ((includeLower\n         ? collator.compare(term.utf8ToString(), lowerTermText) >= 0\n         : collator.compare(term.utf8ToString(), lowerTermText) > 0)\n        && (upperTermText == null\n            || (includeUpper\n                ? collator.compare(term.utf8ToString(), upperTermText) <= 0\n                : collator.compare(term.utf8ToString(), upperTermText) < 0))) {\n      return AcceptStatus.YES;\n    }\n    return AcceptStatus.NO;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}