{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d750082a4223c20902ef11ff6a9831d55738ea4","date":1382309916,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    SolrResponseBase resp;\n    try {\n      resp = solrServer.add(docs);\n      assertEquals(0, resp.getStatus());\n      resp = solrServer.commit();\n    } finally {\n      solrServer.shutdown();\n    }\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    UpdateResponse resp = solrServer.add(docs);\n    assertEquals(0, resp.getStatus());\n    resp = solrServer.commit();\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    SolrResponseBase resp;\n    try {\n      resp = solrServer.add(docs);\n      assertEquals(0, resp.getStatus());\n      resp = solrServer.commit();\n    } finally {\n      solrServer.shutdown();\n    }\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    SolrResponseBase resp;\n    try {\n      resp = solrServer.add(docs);\n      assertEquals(0, resp.getStatus());\n      resp = solrServer.commit();\n    } finally {\n      solrServer.shutdown();\n    }\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#addDocs(SolrInstance).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#addDocs(SolrInstance).mjava","sourceNew":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrClient client = new HttpSolrClient(solrInstance.getUrl(), httpClient);\n    SolrResponseBase resp;\n    try {\n      resp = client.add(docs);\n      assertEquals(0, resp.getStatus());\n      resp = client.commit();\n    } finally {\n      client.shutdown();\n    }\n    assertEquals(0, resp.getStatus());\n  }\n\n","sourceOld":"  private void addDocs(SolrInstance solrInstance) throws IOException, SolrServerException {\n    List<SolrInputDocument> docs = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"id\", i);\n      doc.addField(\"name\", solrInstance.name);\n      docs.add(doc);\n    }\n    HttpSolrServer solrServer = new HttpSolrServer(solrInstance.getUrl(), httpClient);\n    SolrResponseBase resp;\n    try {\n      resp = solrServer.add(docs);\n      assertEquals(0, resp.getStatus());\n      resp = solrServer.commit();\n    } finally {\n      solrServer.shutdown();\n    }\n    assertEquals(0, resp.getStatus());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2d750082a4223c20902ef11ff6a9831d55738ea4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c26f00b574427b55127e869b935845554afde1fa"],"2d750082a4223c20902ef11ff6a9831d55738ea4":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["2d750082a4223c20902ef11ff6a9831d55738ea4"],"2d750082a4223c20902ef11ff6a9831d55738ea4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}