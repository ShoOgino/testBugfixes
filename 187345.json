{"path":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setHighFreqMinimumNumberShouldMatch(float).mjava","commits":[{"id":"620f2c9cd3df8f77948c19b3165b5dc20700a5d5","date":1375193294,"type":2,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setHighFreqMinimumNumberShouldMatch(float).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(float).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the high frequent optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setHighFreqMinimumNumberShouldMatch(float min) {\n    this.highFreqMinNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(float min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":2,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setHighFreqMinimumNumberShouldMatch(float).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setMinimumNumberShouldMatch(float).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the high frequent optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setHighFreqMinimumNumberShouldMatch(float min) {\n    this.highFreqMinNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(float min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setHighFreqMinimumNumberShouldMatch(float).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#setHighFreqMinimumNumberShouldMatch(float).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the high frequent optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <code>&gt;=1</code> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setHighFreqMinimumNumberShouldMatch(float min) {\n    this.highFreqMinNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the high frequent optional BooleanClauses which must be\n   * satisfied in order to produce a match on the low frequency terms query\n   * part. This method accepts a float value in the range [0..1) as a fraction\n   * of the actual query terms in the low frequent clause or a number\n   * <tt>&gt;=1</tt> as an absolut number of clauses that need to match.\n   * \n   * <p>\n   * By default no optional clauses are necessary for a match (unless there are\n   * no required clauses). If this method is used, then the specified number of\n   * clauses is required.\n   * </p>\n   * \n   * @param min\n   *          the number of optional clauses that must match\n   */\n  public void setHighFreqMinimumNumberShouldMatch(float min) {\n    this.highFreqMinNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}