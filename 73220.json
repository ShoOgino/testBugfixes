{"path":"src/java/org/apache/lucene/search/MultiTermQuery.BooleanQueryRewrite#collectTerms(IndexReader,MultiTermQuery,TermCollector).mjava","commits":[{"id":"6cac733bfe923fb362d2b289b2996b0bf10ae22e","date":1260443093,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiTermQuery.BooleanQueryRewrite#collectTerms(IndexReader,MultiTermQuery,TermCollector).mjava","pathOld":"/dev/null","sourceNew":"    protected final int collectTerms(IndexReader reader, MultiTermQuery query, TermCollector collector) throws IOException {\n      final FilteredTermEnum enumerator = query.getEnum(reader);\n      int count = 0;\n      try {\n        do {\n          Term t = enumerator.term();\n          if (t != null) {\n            if (collector.collect(t, enumerator.difference())) {\n              count++;\n            } else {\n              break;\n            }\n          }\n        } while (enumerator.next());    \n      } finally {\n        enumerator.close();\n      }\n      return count;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery.BooleanQueryRewrite#collectTerms(IndexReader,MultiTermQuery,TermCollector).mjava","pathOld":"src/java/org/apache/lucene/search/MultiTermQuery.BooleanQueryRewrite#collectTerms(IndexReader,MultiTermQuery,TermCollector).mjava","sourceNew":"    protected final int collectTerms(IndexReader reader, MultiTermQuery query, TermCollector collector) throws IOException {\n      final FilteredTermEnum enumerator = query.getEnum(reader);\n      int count = 0;\n      try {\n        do {\n          Term t = enumerator.term();\n          if (t != null) {\n            if (collector.collect(t, enumerator.difference())) {\n              count++;\n            } else {\n              break;\n            }\n          }\n        } while (enumerator.next());    \n      } finally {\n        enumerator.close();\n      }\n      return count;\n    }\n\n","sourceOld":"    protected final int collectTerms(IndexReader reader, MultiTermQuery query, TermCollector collector) throws IOException {\n      final FilteredTermEnum enumerator = query.getEnum(reader);\n      int count = 0;\n      try {\n        do {\n          Term t = enumerator.term();\n          if (t != null) {\n            if (collector.collect(t, enumerator.difference())) {\n              count++;\n            } else {\n              break;\n            }\n          }\n        } while (enumerator.next());    \n      } finally {\n        enumerator.close();\n      }\n      return count;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6cac733bfe923fb362d2b289b2996b0bf10ae22e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6cac733bfe923fb362d2b289b2996b0bf10ae22e"]},"commit2Childs":{"6cac733bfe923fb362d2b289b2996b0bf10ae22e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6cac733bfe923fb362d2b289b2996b0bf10ae22e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}