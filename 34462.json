{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<SpanQuery>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses.\n   * All clauses must have the same field. \n   */\n  public SpanOrQuery(SpanQuery... clauses) {\n    this.clauses = new ArrayList<>(clauses.length);\n    for (SpanQuery seq : clauses) {\n      addClause(seq);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses.\n   * All clauses must have the same field. \n   */\n  public SpanOrQuery(SpanQuery... clauses) {\n    this.clauses = new ArrayList<>(clauses.length);\n    for (SpanQuery seq : clauses) {\n      addClause(seq);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses. */\n  public SpanOrQuery(SpanQuery... clauses) {\n\n    // copy clauses array into an ArrayList\n    this.clauses = new ArrayList<>(clauses.length);\n    for (int i = 0; i < clauses.length; i++) {\n      addClause(clauses[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery#SpanOrQuery(SpanQuery...).mjava","sourceNew":"  /** Construct a SpanOrQuery merging the provided clauses.\n   * All clauses must have the same field.\n   */\n  public SpanOrQuery(SpanQuery... clauses) {\n    this.clauses = new ArrayList<>(clauses.length);\n    for (SpanQuery seq : clauses) {\n      addClause(seq);\n    }\n  }\n\n","sourceOld":"  /** Construct a SpanOrQuery merging the provided clauses.\n   * All clauses must have the same field. \n   */\n  public SpanOrQuery(SpanQuery... clauses) {\n    this.clauses = new ArrayList<>(clauses.length);\n    for (SpanQuery seq : clauses) {\n      addClause(seq);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"fab172655716b96f7e42376116235017a922de3a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}