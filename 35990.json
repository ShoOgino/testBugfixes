{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","commits":[{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":1,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/StreamingUpdateSolrServer#shutdown().mjava","sourceNew":"  public void shutdown() {\n    server.shutdown();\n    scheduler.shutdown();\n    try {\n      if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n        scheduler.shutdownNow();\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS))\n          log.error(\"ExecutorService did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      scheduler.shutdownNow();\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    super.shutdown();\n    scheduler.shutdown();\n    try {\n      if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n        scheduler.shutdownNow();\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n            .error(\"ExecutorService did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      scheduler.shutdownNow();\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab7c44f042551b225652a1a28543d31994f3a994","date":1339479909,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    server.shutdown();\n    scheduler.shutdown();\n    try {\n      if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n        scheduler.shutdownNow();\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS))\n          log.error(\"ExecutorService did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      scheduler.shutdownNow();\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","sourceOld":"  public void shutdown() {\n    server.shutdown();\n    scheduler.shutdown();\n    try {\n      if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n        scheduler.shutdownNow();\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS))\n          log.error(\"ExecutorService did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      scheduler.shutdownNow();\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"91e069c492cf4895697ef7b81df0ffb9a8bd4b48","date":1382134253,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    server.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    server.shutdown();\n    scheduler.shutdown();\n    try {\n      if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n        scheduler.shutdownNow();\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS))\n          log.error(\"ExecutorService did not terminate\");\n      }\n    } catch (InterruptedException ie) {\n      scheduler.shutdownNow();\n      Thread.currentThread().interrupt();\n    }\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#shutdown().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrServer#shutdown().mjava","sourceNew":"  @Override\n  public void shutdown() {\n    client.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void shutdown() {\n    server.shutdown();\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["ab7c44f042551b225652a1a28543d31994f3a994"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"ab7c44f042551b225652a1a28543d31994f3a994":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["bafca15d8e408346a67f4282ad1143b88023893b"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["ab7c44f042551b225652a1a28543d31994f3a994"],"ab7c44f042551b225652a1a28543d31994f3a994":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}