{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","commits":[{"id":"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093","date":1401932592,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","pathOld":"/dev/null","sourceNew":"    /** Ensure we own term.bytes so that it's safe to modify. We detect via a kluge in which cellsByLevel[0].termBuf\n     * is non-null, which is a pre-allocated for use to replace term.bytes. */\n    void ensureOwnTermBytes() {\n      NRCell cell0 = cellsByLevel[0];\n      if (cell0.termBuf == null)\n        return;//we already own the bytes\n      System.arraycopy(term.bytes, term.offset, cell0.termBuf, 0, term.length);\n      term.bytes = cell0.termBuf;\n      term.offset = 0;\n      cell0.termBuf = null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","sourceNew":"    /** Ensure we own term.bytes so that it's safe to modify. We detect via a kluge in which cellsByLevel[0].termBuf\n     * is non-null, which is a pre-allocated for use to replace term.bytes. */\n    void ensureOwnTermBytes() {\n      NRCell cell0 = cellsByLevel[0];\n      if (cell0.termBuf == null)\n        return;//we already own the bytes\n      System.arraycopy(term.bytes, term.offset, cell0.termBuf, 0, term.length);\n      term.bytes = cell0.termBuf;\n      term.offset = 0;\n      cell0.termBuf = null;\n    }\n\n","sourceOld":"    /** Ensure we own term.bytes so that it's safe to modify. We detect via a kluge in which cellsByLevel[0].termBuf\n     * is non-null, which is a pre-allocated for use to replace term.bytes. */\n    void ensureOwnTermBytes() {\n      NRCell cell0 = cellsByLevel[0];\n      if (cell0.termBuf == null)\n        return;//we already own the bytes\n      System.arraycopy(term.bytes, term.offset, cell0.termBuf, 0, term.length);\n      term.bytes = cell0.termBuf;\n      term.offset = 0;\n      cell0.termBuf = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRCell#ensureOwnTermBytes().mjava","sourceNew":"    /** Ensure we own term.bytes so that it's safe to modify. We detect via a kluge in which cellsByLevel[0].termBuf\n     * is non-null, which is a pre-allocated for use to replace term.bytes. */\n    void ensureOwnTermBytes() {\n      NRCell cell0 = cellsByLevel[0];\n      if (cell0.termBuf == null)\n        return;//we already own the bytes\n      System.arraycopy(term.bytes, term.offset, cell0.termBuf, 0, term.length);\n      term.bytes = cell0.termBuf;\n      term.offset = 0;\n      cell0.termBuf = null;\n    }\n\n","sourceOld":"    /** Ensure we own term.bytes so that it's safe to modify. We detect via a kluge in which cellsByLevel[0].termBuf\n     * is non-null, which is a pre-allocated for use to replace term.bytes. */\n    void ensureOwnTermBytes() {\n      NRCell cell0 = cellsByLevel[0];\n      if (cell0.termBuf == null)\n        return;//we already own the bytes\n      System.arraycopy(term.bytes, term.offset, cell0.termBuf, 0, term.length);\n      term.bytes = cell0.termBuf;\n      term.offset = 0;\n      cell0.termBuf = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093"],"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8c36d4fb2bcf3eed4016cffc0d0e64e308cc9093":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}