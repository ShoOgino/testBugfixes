{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","commits":[{"id":"926350ae128ddfe1eb7570ed50a036f6bd5c66a6","date":1447286925,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","pathOld":"/dev/null","sourceNew":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashOn = hashOn;\n    this.hashedTuples = new HashMap<>();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["84bc3a0dd894d2448badac45302b79cc2e445214"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84bc3a0dd894d2448badac45302b79cc2e445214","date":1462494639,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","sourceNew":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashedTuples = new HashMap<>();\n    this.leftHashOn = new ArrayList<>();\n    this.rightHashOn = new ArrayList<>();\n    \n    for(String hasher : hashOn){\n      String[] parts = hasher.split(\"=\");\n      if(1 == parts.length){\n        String field = parts[0].trim();\n        leftHashOn.add(field);\n        rightHashOn.add(field);\n      }\n      else if(2 == parts.length){\n        leftHashOn.add(parts[0].trim());\n        rightHashOn.add(parts[1].trim());\n      }\n      else{\n        throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - invalid 'on' parameter - expecting 1 or more instances if 'field' or 'field=hashedField' but found '%s'\",hasher));\n      }\n    }    \n  }\n\n","sourceOld":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashOn = hashOn;\n    this.hashedTuples = new HashMap<>();\n  }\n\n","bugFix":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2233462ade0e629affa69a6f1e8d0205e4d6e596","date":1462534852,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","sourceNew":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashedTuples = new HashMap<>();\n    this.leftHashOn = new ArrayList<>();\n    this.rightHashOn = new ArrayList<>();\n    \n    for(String hasher : hashOn){\n      String[] parts = hasher.split(\"=\");\n      if(1 == parts.length){\n        String field = parts[0].trim();\n        leftHashOn.add(field);\n        rightHashOn.add(field);\n      }\n      else if(2 == parts.length){\n        leftHashOn.add(parts[0].trim());\n        rightHashOn.add(parts[1].trim());\n      }\n      else{\n        throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - invalid 'on' parameter - expecting 1 or more instances if 'field' or 'field=hashedField' but found '%s'\",hasher));\n      }\n    }    \n  }\n\n","sourceOld":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashOn = hashOn;\n    this.hashedTuples = new HashMap<>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","sourceNew":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashedTuples = new HashMap<>();\n    this.leftHashOn = new ArrayList<>();\n    this.rightHashOn = new ArrayList<>();\n    \n    for(String hasher : hashOn){\n      String[] parts = hasher.split(\"=\");\n      if(1 == parts.length){\n        String field = parts[0].trim();\n        leftHashOn.add(field);\n        rightHashOn.add(field);\n      }\n      else if(2 == parts.length){\n        leftHashOn.add(parts[0].trim());\n        rightHashOn.add(parts[1].trim());\n      }\n      else{\n        throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - invalid 'on' parameter - expecting 1 or more instances if 'field' or 'field=hashedField' but found '%s'\",hasher));\n      }\n    }    \n  }\n\n","sourceOld":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashOn = hashOn;\n    this.hashedTuples = new HashMap<>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#init(TupleStream,TupleStream,List[String]).mjava","sourceNew":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashedTuples = new HashMap<>();\n    this.leftHashOn = new ArrayList<>();\n    this.rightHashOn = new ArrayList<>();\n    \n    for(String hasher : hashOn){\n      String[] parts = hasher.split(\"=\");\n      if(1 == parts.length){\n        String field = parts[0].trim();\n        leftHashOn.add(field);\n        rightHashOn.add(field);\n      }\n      else if(2 == parts.length){\n        leftHashOn.add(parts[0].trim());\n        rightHashOn.add(parts[1].trim());\n      }\n      else{\n        throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - invalid 'on' parameter - expecting 1 or more instances if 'field' or 'field=hashedField' but found '%s'\",hasher));\n      }\n    }    \n  }\n\n","sourceOld":"  private void init(TupleStream fullStream, TupleStream hashStream, List<String> hashOn) throws IOException {\n    this.fullStream = fullStream;\n    this.hashStream = hashStream;\n    this.hashOn = hashOn;\n    this.hashedTuples = new HashMap<>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6","2233462ade0e629affa69a6f1e8d0205e4d6e596"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2233462ade0e629affa69a6f1e8d0205e4d6e596":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6","84bc3a0dd894d2448badac45302b79cc2e445214"],"926350ae128ddfe1eb7570ed50a036f6bd5c66a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84bc3a0dd894d2448badac45302b79cc2e445214":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6","2233462ade0e629affa69a6f1e8d0205e4d6e596"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2233462ade0e629affa69a6f1e8d0205e4d6e596"]},"commit2Childs":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["926350ae128ddfe1eb7570ed50a036f6bd5c66a6"],"2233462ade0e629affa69a6f1e8d0205e4d6e596":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"926350ae128ddfe1eb7570ed50a036f6bd5c66a6":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","2233462ade0e629affa69a6f1e8d0205e4d6e596","84bc3a0dd894d2448badac45302b79cc2e445214","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"84bc3a0dd894d2448badac45302b79cc2e445214":["2233462ade0e629affa69a6f1e8d0205e4d6e596"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}