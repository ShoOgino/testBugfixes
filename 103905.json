{"path":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","sourceNew":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p>\n   * Note: this method is a convenience method to prevent\n   * <code>instanceof</code> checks and type-casts to\n   * {@link CompositeReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","sourceOld":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p>\n   * Note: this method is a convenience method to prevent\n   * <code>instanceof</code> checks and type-casts to\n   * {@link CompositeReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55fd9dcf98ceb0c5bf520ec1a7985676384b8747","date":1331629546,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","sourceNew":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p><b>Warning:</b> Don't modify the returned array!\n   * Doing so will corrupt the internal structure of this\n   * {@code IndexReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","sourceOld":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p>\n   * Note: this method is a convenience method to prevent\n   * <code>instanceof</code> checks and type-casts to\n   * {@link CompositeReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","sourceNew":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p><b>Warning:</b> Don't modify the returned array!\n   * Doing so will corrupt the internal structure of this\n   * {@code IndexReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","sourceOld":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p>\n   * Note: this method is a convenience method to prevent\n   * <code>instanceof</code> checks and type-casts to\n   * {@link CompositeReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReaderContext#children().mjava","sourceNew":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   */\n  public abstract List<IndexReaderContext> children();\n\n","sourceOld":"  /**\n   * Returns the context's children iff this context is a composite context\n   * otherwise <code>null</code>.\n   * <p><b>Warning:</b> Don't modify the returned array!\n   * Doing so will corrupt the internal structure of this\n   * {@code IndexReaderContext}.\n   */\n  public abstract IndexReaderContext[] children();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55fd9dcf98ceb0c5bf520ec1a7985676384b8747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"55fd9dcf98ceb0c5bf520ec1a7985676384b8747":["38e3b736c7ca086d61b7dbb841c905ee115490da","4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}