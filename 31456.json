{"path":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","commits":[{"id":"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d","date":1203633859,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"/dev/null","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Integer tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Integer.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.log(Level.WARNING,\n                  \"Ignoring exception while attempting to \" +\n                  \"extract max-age from cacheControl config: \" +\n                  cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["02a11ae05a4911abbabb51367f26d03d9848e9fc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02a11ae05a4911abbabb51367f26d03d9848e9fc","date":1204757334,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.log(Level.WARNING,\n                  \"Ignoring exception while attempting to \" +\n                  \"extract max-age from cacheControl config: \" +\n                  cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Integer tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Integer.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.log(Level.WARNING,\n                  \"Ignoring exception while attempting to \" +\n                  \"extract max-age from cacheControl config: \" +\n                  cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.log(Level.WARNING,\n                  \"Ignoring exception while attempting to \" +\n                  \"extract max-age from cacheControl config: \" +\n                  cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"02a11ae05a4911abbabb51367f26d03d9848e9fc":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["02a11ae05a4911abbabb51367f26d03d9848e9fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"02a11ae05a4911abbabb51367f26d03d9848e9fc":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["02a11ae05a4911abbabb51367f26d03d9848e9fc"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}