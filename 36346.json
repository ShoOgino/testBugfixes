{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator,Comparator[BytesRef]).mjava","commits":[{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator,Comparator[BytesRef]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#SortedTermFreqIteratorWrapper(TermFreqIterator,Comparator[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","sourceOld":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedTermFreqIteratorWrapper(TermFreqIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#SortedInputIterator(InputIterator,Comparator[BytesRef]).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator,Comparator[BytesRef]).mjava","sourceNew":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedInputIterator(InputIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","sourceOld":"  /**\n   * Creates a new sorted wrapper, sorting by BytesRef\n   * (ascending) then cost (ascending).\n   */\n  public SortedTermFreqPayloadIteratorWrapper(TermFreqPayloadIterator source, Comparator<BytesRef> comparator) throws IOException {\n    this.hasPayloads = source.hasPayloads();\n    this.source = source;\n    this.comparator = comparator;\n    this.reader = sort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}