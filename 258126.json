{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","commits":[{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(IndexReader,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(IndexReader reader, Term term, RegexCapabilities regexCap) throws IOException {\n    super(reader, term.field());\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"/dev/null","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"/dev/null","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) pre = \"\";\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/RegexTermsEnum#RegexTermsEnum(TermsEnum,Term,RegexCapabilities).mjava","sourceNew":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","sourceOld":"  public RegexTermsEnum(TermsEnum tenum, Term term, RegexCapabilities regexCap) throws IOException {\n    super(tenum);\n    String text = term.text();\n    this.regexImpl = regexCap.compile(text);\n\n    String pre = regexImpl.prefix();\n    if (pre == null) {\n      pre = \"\";\n    }\n\n    setInitialSeekTerm(prefixRef = new BytesRef(pre));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["e141595402370bee958745de8b1c9de1fa182581"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e141595402370bee958745de8b1c9de1fa182581":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e8dd2a69747e9f2922fd8b6970bd1661b26a692d","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"e141595402370bee958745de8b1c9de1fa182581":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e141595402370bee958745de8b1c9de1fa182581","3bb13258feba31ab676502787ab2e1779f129b7a"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}