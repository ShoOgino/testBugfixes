{"path":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field);\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87d6f9603307ae2ad642fb01deedf031320fd0c3","date":1377877563,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field, true);\n    docsWithField = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field);\n    return this;\n  }\n\n","bugFix":["e0e127513fa72fb902d0fdf25139f738dd04c1d1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = DocValues.getBinary(context.reader(), field);\n    docsWithField = DocValues.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field, true);\n    docsWithField = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = DocValues.getBinary(context.reader(), field);\n    docsWithField = DocValues.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field, true);\n    docsWithField = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = DocValues.getBinary(context.reader(), field);\n    docsWithField = DocValues.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = FieldCache.DEFAULT.getTerms(context.reader(), field, true);\n    docsWithField = FieldCache.DEFAULT.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedStringComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {\n    currentDocTerms = DocValues.getBinary(context.reader(), field);\n    docsWithField = DocValues.getDocsWithField(context.reader(), field);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["87d6f9603307ae2ad642fb01deedf031320fd0c3","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["87d6f9603307ae2ad642fb01deedf031320fd0c3"],"87d6f9603307ae2ad642fb01deedf031320fd0c3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"56572ec06f1407c066d6b7399413178b33176cd8":["87d6f9603307ae2ad642fb01deedf031320fd0c3","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["87d6f9603307ae2ad642fb01deedf031320fd0c3"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"87d6f9603307ae2ad642fb01deedf031320fd0c3":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}