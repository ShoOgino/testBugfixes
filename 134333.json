{"path":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","commits":[{"id":"ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d","date":1527452536,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","pathOld":"/dev/null","sourceNew":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A\\\" }\" +\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4","date":1528834006,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","sourceNew":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A OR ignore_exception\\\" }\" + // without the pound, the tag would be interpreted as a query type\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      // This is just the current mode of failure.  It's fine if it fails a different way (with a 400 error) in the future.\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","sourceOld":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A\\\" }\" +\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","sourceNew":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A OR ignore_exception\\\" }\" + // without the pound, the tag would be interpreted as a query type\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      // This is just the current mode of failure.  It's fine if it fails a different way (with a 400 error) in the future.\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","sourceOld":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A\\\" }\" +\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/json/TestJsonRequest#doJsonRequestWithTag(Client).mjava","sourceNew":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A OR ignore_exception\\\" }\" + // without the pound, the tag would be interpreted as a query type\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      // This is just the current mode of failure.  It's fine if it fails a different way (with a 400 error) in the future.\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","sourceOld":"  public static void doJsonRequestWithTag(Client client) throws Exception {\n    addDocs(client);\n\n    try {\n      client.testJQ( params(\"json\",\"{\" +\n          \" query : '*:*',\" +\n          \" filter : { \\\"RCAT\\\" : \\\"cat_s:A\\\" }\" +\n          \"}\", \"json.facet\", \"{\" +\n          \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n          \"}\"), \"facets=={ count:2, \" +\n          \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n          \"}\"\n      );\n      fail(\"no # no tag\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"expect a json object\"));\n    }\n\n    final String taggedQ = \"{\" +\n            \" \\\"#RCAT\\\" : \" + (random().nextBoolean() ? \n                \"{\" +\n                \"     term : {\" +\n                \"       f : cat_s,\" +\n                \"       v : A\" +\n                \"     } \" +\n                \"   } \" \n            : \"\\\"cat_s:A\\\"\")+\n            \" } \";\n    boolean queryAndFilter = random().nextBoolean() ;\n    client.testJQ(params(\"json\", \"{\" +\n        \" query :\" + ( queryAndFilter ? \" '*:*', filter : \" : \"\")\n        + (!queryAndFilter || random().nextBoolean() ? taggedQ : \"[\"+taggedQ+\"]\" )+\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:B, count:3}, {val:A, count:2} ]  }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"  term : {\" +\n        \"   f : cat_s,\" +\n        \"   v : A\" +\n        \"  } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s\"\n        +( random().nextBoolean() ? \", domain:{excludeTags:\\\"RCAT\\\"} \": \" \")\n        + \"}  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    client.testJQ( params(\"json\",\"{\" +\n        \" query : '*:*',\" +\n        \" filter : {\" +\n        \"   \\\"#RCAT\\\" : {\" +\n        \"     term : {\" +\n        \"       f : cat_s,\" +\n        \"       v : A\" +\n        \"     } \" +\n        \"   } \" +\n        \" } \" +\n        \"}\", \"json.facet\", \"{\" +\n        \"categories:{ type:terms, field:cat_s }  \" +\n        \"}\"), \"facets=={ count:2, \" +\n        \" categories:{ buckets:[ {val:A, count:2} ] }\" +\n        \"}\"\n    );\n\n    boolean multiTag = random().nextBoolean();\n    client.testJQ(params(\"json\", \"{\" +\n            \" query : '*:*',\" +\n            \" filter : [\" +\n            \"{ \\\"#RCAT\"+(multiTag ? \",RCATSECONDTAG\":\"\") + \"\\\" :  \\\"cat_s:A\\\" },\" +\n            \"{ \\\"#RWHERE\\\" : {\" +\n            \"     term : {\" +\n            \"       f : where_s,\" +\n            \"       v : NY\" +\n            \"     } \" +\n            \"   }\" +\n            \"}]}\"\n        , \"json.facet\", \"{\" +\n            \"categories:{ type:terms, field:cat_s, domain:{excludeTags:\\\"RCAT\\\"} }  \" +\n            \"countries:{ type:terms, field:where_s, domain:{excludeTags:\\\"RWHERE\\\"} }  \" +\n            \"ids:{ type:terms, field:id, domain:{excludeTags:[\\\"\"+ (multiTag ? \"RCATSECONDTAG\":\"RCAT\")+ \"\\\", \\\"RWHERE\\\"]} }  \" +\n            \"}\"), \"facets==\" + \"{\\n\" +\n        \"    \\\"count\\\":1,\\n\" +\n        \"    \\\"categories\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"A\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"B\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"countries\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"NJ\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"NY\\\",\\n\" +\n        \"          \\\"count\\\":1}]},\\n\" +\n        \"    \\\"ids\\\":{\\n\" +\n        \"      \\\"buckets\\\":[{\\n\" +\n        \"          \\\"val\\\":\\\"1\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"2\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"3\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"4\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"5\\\",\\n\" +\n        \"          \\\"count\\\":1},\\n\" +\n        \"        {\\n\" +\n        \"          \\\"val\\\":\\\"6\\\",\\n\" +\n        \"          \\\"count\\\":1}]}}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d","ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4"],"ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4":["ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d","ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ff95b5e47fe4df3d066c51f0a3f8970e8fbb2aa4":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddce5ba13e43e3b34a1772ed921d9b9d7a67e48d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}