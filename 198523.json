{"path":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","commits":[{"id":"8405d98acebb7e287bf7ac40e937ba05b8661285","date":1401433291,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#sizeInBytes().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += RamUsageEstimator.sizeOf(dis);\n    }\n\n    return total;\n  }\n\n","sourceOld":"  /** Returns total byte size used by cached filters. */\n  public long sizeInBytes() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += RamUsageEstimator.sizeOf(dis);\n    }\n\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453","date":1402659583,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += RamUsageEstimator.sizeOf(dis);\n    }\n\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += RamUsageEstimator.sizeOf(dis);\n    }\n\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperQuery#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n\n    // Sync only to pull the current set of values:\n    List<DocIdSet> docIdSets;\n    synchronized(cache) {\n      docIdSets = new ArrayList<>(cache.values());\n    }\n\n    long total = 0;\n    for(DocIdSet dis : docIdSets) {\n      total += dis.ramBytesUsed();\n    }\n\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["54ea8c8c94ae9da9a366175e2abbe1dde3aa0453","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["54ea8c8c94ae9da9a366175e2abbe1dde3aa0453"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["8405d98acebb7e287bf7ac40e937ba05b8661285","54ea8c8c94ae9da9a366175e2abbe1dde3aa0453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"54ea8c8c94ae9da9a366175e2abbe1dde3aa0453":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["54ea8c8c94ae9da9a366175e2abbe1dde3aa0453","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}