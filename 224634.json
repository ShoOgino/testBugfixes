{"path":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":null,"sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5871a631b6817f1cef161749ceffdc037e67558a","date":1291133429,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":["22087ae54bf4d3f6b58f5d836ea252ec572900c4","65f4e997b946a4eadce22b758749046a63ba2eff"],"bugIntro":["b7326b9db90075ac88781359aefe6fccd60f9b8f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      Object key = map.get(root.getPk());\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query\");\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7326b9db90075ac88781359aefe6fccd60f9b8f","date":1297897301,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":["5871a631b6817f1cef161749ceffdc037e67558a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        LOG.warn(\"no key was available for deleteted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#deleteAll(Set[Map[String,Object]]).mjava","sourceNew":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","sourceOld":"  private void deleteAll(Set<Map<String, Object>> deletedKeys) {\n    LOG.info(\"Deleting stale documents \");\n    Iterator<Map<String, Object>> iter = deletedKeys.iterator();\n    while (iter.hasNext()) {\n      Map<String, Object> map = iter.next();\n      String keyName = root.isDocRoot ? root.getPk() : root.getSchemaPk();\n      Object key = map.get(keyName);\n      if(key == null) {\n        keyName = findMatchingPkColumn(keyName, map);\n        key = map.get(keyName);\n      }\n      if(key == null) {\n        LOG.warn(\"no key was available for deleted pk query. keyName = \" + keyName);\n        continue;\n      }\n      writer.deleteDoc(key);\n      importStatistics.deletedDocCount.incrementAndGet();\n      iter.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["3bb13258feba31ab676502787ab2e1779f129b7a","b7326b9db90075ac88781359aefe6fccd60f9b8f"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["b7326b9db90075ac88781359aefe6fccd60f9b8f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","5871a631b6817f1cef161749ceffdc037e67558a"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"5871a631b6817f1cef161749ceffdc037e67558a":["1da8d55113b689b06716246649de6f62430f15c0"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["b7326b9db90075ac88781359aefe6fccd60f9b8f","b7326b9db90075ac88781359aefe6fccd60f9b8f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"b7326b9db90075ac88781359aefe6fccd60f9b8f":["5871a631b6817f1cef161749ceffdc037e67558a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b7326b9db90075ac88781359aefe6fccd60f9b8f"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1da8d55113b689b06716246649de6f62430f15c0","5871a631b6817f1cef161749ceffdc037e67558a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5871a631b6817f1cef161749ceffdc037e67558a","3bb13258feba31ab676502787ab2e1779f129b7a"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"5871a631b6817f1cef161749ceffdc037e67558a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b7326b9db90075ac88781359aefe6fccd60f9b8f","3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"3bb13258feba31ab676502787ab2e1779f129b7a":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"b7326b9db90075ac88781359aefe6fccd60f9b8f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}