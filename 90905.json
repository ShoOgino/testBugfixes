{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WaitTask#setParams(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WaitTask#setParams(String).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/WaitTask#setParams(String).mjava","sourceNew":"  @Override\n  public void setParams(String params) {\n    super.setParams(params);\n    if (params != null) {\n      int multiplier;\n      if (params.endsWith(\"s\")) {\n        multiplier = 1;\n        params = params.substring(0, params.length()-1);\n      } else if (params.endsWith(\"m\")) {\n        multiplier = 60;\n        params = params.substring(0, params.length()-1);\n      } else if (params.endsWith(\"h\")) {\n        multiplier = 3600;\n        params = params.substring(0, params.length()-1);\n      } else {\n        // Assume seconds\n        multiplier = 1;\n      }\n\n      waitTimeSec = Double.parseDouble(params) * multiplier;\n    } else {\n      throw new IllegalArgumentException(\"you must specify the wait time, eg: 10.0s, 4.5m, 2h\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setParams(String params) {\n    super.setParams(params);\n    if (params != null) {\n      int multiplier;\n      if (params.endsWith(\"s\")) {\n        multiplier = 1;\n        params = params.substring(0, params.length()-1);\n      } else if (params.endsWith(\"m\")) {\n        multiplier = 60;\n        params = params.substring(0, params.length()-1);\n      } else if (params.endsWith(\"h\")) {\n        multiplier = 3600;\n        params = params.substring(0, params.length()-1);\n      } else {\n        // Assume seconds\n        multiplier = 1;\n      }\n\n      waitTimeSec = Double.parseDouble(params) * multiplier;\n    } else {\n      throw new IllegalArgumentException(\"you must specify the wait time, eg: 10.0s, 4.5m, 2h\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}