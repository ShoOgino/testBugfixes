{"path":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderUtil.Slice> fieldsSlices = new ArrayList<ReaderUtil.Slice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderUtil.Slice.EMPTY_ARRAY));\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderUtil.Slice> fieldsSlices = new ArrayList<ReaderUtil.Slice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderUtil.Slice.EMPTY_ARRAY));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderSlice> fieldsSlices = new ArrayList<ReaderSlice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderSlice.EMPTY_ARRAY));\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderUtil.Slice> fieldsSlices = new ArrayList<ReaderUtil.Slice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderUtil.Slice.EMPTY_ARRAY));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderSlice> fieldsSlices = new ArrayList<ReaderSlice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderSlice.EMPTY_ARRAY));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderSlice> fieldsSlices = new ArrayList<ReaderSlice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderSlice.EMPTY_ARRAY));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @Override\n  public FieldsEnum iterator() throws IOException {\n\n    final List<FieldsEnum> fieldsEnums = new ArrayList<FieldsEnum>();\n    final List<ReaderSlice> fieldsSlices = new ArrayList<ReaderSlice>();\n    for(int i=0;i<subs.length;i++) {\n      fieldsEnums.add(subs[i].iterator());\n      fieldsSlices.add(subSlices[i]);\n    }\n    if (fieldsEnums.size() == 0) {\n      return FieldsEnum.EMPTY;\n    } else {\n      return new MultiFieldsEnum(this,\n                                 fieldsEnums.toArray(FieldsEnum.EMPTY_ARRAY),\n                                 fieldsSlices.toArray(ReaderSlice.EMPTY_ARRAY));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c7a37580e62e8384ea11b972c15c00221cf64fa","date":1344870636,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiFields#iterator().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<>(subIterators);\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  @Override\n  public Iterator<String> iterator() {\n    Iterator<String> subIterators[] = new Iterator[subs.length];\n    for(int i=0;i<subs.length;i++) {\n      subIterators[i] = subs[i].iterator();\n    }\n    return new MergedIterator<String>(subIterators);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0c7a37580e62e8384ea11b972c15c00221cf64fa"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c","0c7a37580e62e8384ea11b972c15c00221cf64fa"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","0c7a37580e62e8384ea11b972c15c00221cf64fa"],"0c7a37580e62e8384ea11b972c15c00221cf64fa":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["fb07ab105350b80ed9d63ca64b117084ed7391bc","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["0c7a37580e62e8384ea11b972c15c00221cf64fa","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"0c7a37580e62e8384ea11b972c15c00221cf64fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}