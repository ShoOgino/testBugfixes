{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","commits":[{"id":"54bb8da55080e4569804e0661b83a3c72cbd8d4d","date":1429691126,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","pathOld":"/dev/null","sourceNew":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.info(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962cd4f5e313777f35da8f521265323e84184929","date":1474533758,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","sourceNew":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.debug(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","sourceOld":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.info(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","sourceNew":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.debug(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","sourceOld":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.info(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getConfDirListeners(String).mjava","sourceNew":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.debug(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","sourceOld":"  // this method is called in a protected confDirListeners block\n  private Set<Runnable> getConfDirListeners(final String confDir) {\n    assert Thread.holdsLock(confDirectoryListeners) : \"confDirListeners lock not held by thread\";\n    Set<Runnable> confDirListeners = confDirectoryListeners.get(confDir);\n    if (confDirListeners == null) {\n      log.info(\"watch zkdir {}\" , confDir);\n      confDirListeners = new HashSet<>();\n      confDirectoryListeners.put(confDir, confDirListeners);\n      setConfWatcher(confDir, new WatcherImpl(confDir), null);\n    }\n    return confDirListeners;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"962cd4f5e313777f35da8f521265323e84184929":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54bb8da55080e4569804e0661b83a3c72cbd8d4d","962cd4f5e313777f35da8f521265323e84184929"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["54bb8da55080e4569804e0661b83a3c72cbd8d4d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"962cd4f5e313777f35da8f521265323e84184929":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["962cd4f5e313777f35da8f521265323e84184929","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}