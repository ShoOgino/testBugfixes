{"path":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","commits":[{"id":"1525b4dfbc0d413b8d7247da232009778e624836","date":1351101135,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7035935aa89f6951286e9005cbeb16e89a082a2","date":1385258396,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":["26cb11ce089e71fb909641e7030b53c7d9e3fff3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26cb11ce089e71fb909641e7030b53c7d9e3fff3","date":1390348343,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this.replicas = replicas;\n    this.nUpdates = nUpdates;\n    this.maxUpdates = nUpdates;\n    this.cantReachIsSuccess = cantReachIsSuccess;\n    this.getNoVersionsIsSuccess = getNoVersionsIsSuccess;\n    this.client = core.getCoreDescriptor().getCoreContainer().getUpdateShardHandler().getHttpClient();\n    \n    uhandler = core.getUpdateHandler();\n    ulog = uhandler.getUpdateLog();\n    // TODO: shutdown\n    shardHandlerFactory = new HttpShardHandlerFactory();\n    shardHandler = shardHandlerFactory.getShardHandler(client);\n  }\n\n","bugFix":["a6378064655e76cd7b908b1cab4ce425b384b508","1525b4dfbc0d413b8d7247da232009778e624836","a7035935aa89f6951286e9005cbeb16e89a082a2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"979e22aa7c63c9dc651adf861610c7e444d45832","date":1454615713,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","date":1529486762,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#PeerSync(SolrCore,List[String],int,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public PeerSync(SolrCore core, List<String> replicas, int nUpdates, boolean cantReachIsSuccess, boolean getNoVersionsIsSuccess) {\n    this(core, replicas, nUpdates, cantReachIsSuccess, getNoVersionsIsSuccess, false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["26cb11ce089e71fb909641e7030b53c7d9e3fff3","979e22aa7c63c9dc651adf861610c7e444d45832"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["979e22aa7c63c9dc651adf861610c7e444d45832","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"979e22aa7c63c9dc651adf861610c7e444d45832":["26cb11ce089e71fb909641e7030b53c7d9e3fff3"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["1525b4dfbc0d413b8d7247da232009778e624836","a7035935aa89f6951286e9005cbeb16e89a082a2"],"b1704c078ec59838c9d95d5bf5738b393b537494":["26cb11ce089e71fb909641e7030b53c7d9e3fff3","979e22aa7c63c9dc651adf861610c7e444d45832"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1525b4dfbc0d413b8d7247da232009778e624836"],"26cb11ce089e71fb909641e7030b53c7d9e3fff3":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["1525b4dfbc0d413b8d7247da232009778e624836"],"1525b4dfbc0d413b8d7247da232009778e624836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["979e22aa7c63c9dc651adf861610c7e444d45832"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["979e22aa7c63c9dc651adf861610c7e444d45832","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"]},"commit2Childs":{"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2126b84bd093fa3d921582a109a0ee578c28126","1525b4dfbc0d413b8d7247da232009778e624836"],"979e22aa7c63c9dc651adf861610c7e444d45832":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b1704c078ec59838c9d95d5bf5738b393b537494","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"26cb11ce089e71fb909641e7030b53c7d9e3fff3":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","979e22aa7c63c9dc651adf861610c7e444d45832","b1704c078ec59838c9d95d5bf5738b393b537494"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","26cb11ce089e71fb909641e7030b53c7d9e3fff3"],"1525b4dfbc0d413b8d7247da232009778e624836":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","f2126b84bd093fa3d921582a109a0ee578c28126","a7035935aa89f6951286e9005cbeb16e89a082a2"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","74f45af4339b0daf7a95c820ab88c1aea74fbce0","b1704c078ec59838c9d95d5bf5738b393b537494","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}