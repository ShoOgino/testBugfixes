{"path":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","commits":[{"id":"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94","date":1310159023,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (field.indexOptions != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (!field.omitTermFreqAndPositions) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25433c5cacacb7a2055d62d4d36b0daf210e0a10","date":1315747522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryCodec.TermsWriter#finish(long,long).mjava","sourceNew":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (field.indexOptions != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        out.writeVInt(docCount);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq) throws IOException {\n      if (termCount > 0) {\n        out.writeVInt(termCount);\n        out.writeVInt(field.number);\n        if (field.indexOptions != IndexOptions.DOCS_ONLY) {\n          out.writeVLong(sumTotalTermFreq);\n        }\n        out.writeVLong(sumDocFreq);\n        builder.finish().save(out);\n        if (VERBOSE) System.out.println(\"finish field=\" + field.name + \" fp=\" + out.getFilePointer());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}