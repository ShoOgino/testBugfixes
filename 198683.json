{"path":"lucene/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","date":1375108983,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/old/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/old/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6"]},"commit2Childs":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}