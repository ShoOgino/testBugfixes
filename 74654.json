{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFC[FacetField]#findStartAndEndOrds().mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFC[FacetField]#findStartAndEndOrds().mjava","pathOld":"/dev/null","sourceNew":"  protected void findStartAndEndOrds() throws IOException {\n    sortedDocValues = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n\n    if (prefixRef != null) {\n      startTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = sortedDocValues.getValueCount();\n    }\n\n    // optimize collecting the \"missing\" bucket when startTermindex is 0 (since the \"missing\" ord is -1)\n    startTermIndex = startTermIndex==0 && freq.missing ? -1 : startTermIndex;\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFC[FacetField]#findStartAndEndOrds().mjava","pathOld":"/dev/null","sourceNew":"  protected void findStartAndEndOrds() throws IOException {\n    sortedDocValues = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n\n    if (prefixRef != null) {\n      startTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = sortedDocValues.getValueCount();\n    }\n\n    // optimize collecting the \"missing\" bucket when startTermindex is 0 (since the \"missing\" ord is -1)\n    startTermIndex = startTermIndex==0 && freq.missing ? -1 : startTermIndex;\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFC[FacetField]#findStartAndEndOrds().mjava","sourceNew":null,"sourceOld":"  protected void findStartAndEndOrds() throws IOException {\n    sortedDocValues = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);\n\n    if (prefixRef != null) {\n      startTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;\n      prefixRef.append(UnicodeUtil.BIG_TERM);\n      endTermIndex = sortedDocValues.lookupTerm(prefixRef.get());\n      assert endTermIndex < 0;\n      endTermIndex = -endTermIndex - 1;\n    } else {\n      startTermIndex = 0;\n      endTermIndex = sortedDocValues.getValueCount();\n    }\n\n    // optimize collecting the \"missing\" bucket when startTermindex is 0 (since the \"missing\" ord is -1)\n    startTermIndex = startTermIndex==0 && freq.missing ? -1 : startTermIndex;\n\n    nTerms = endTermIndex - startTermIndex;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}