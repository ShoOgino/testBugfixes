{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","commits":[{"id":"c028362918f0b06bbdb243dfd35486218b89dbde","date":1343391303,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(ResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"/dev/null","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"/dev/null","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b4b4d68085809ae840a099e4620e5a128509279","date":1365633379,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final String classArg = ((Element) node).getAttribute(SimilarityFactory.CLASS_NAME);\n      final Object obj = loader.newInstance(classArg, Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        final NamedList<Object> namedList = DOMUtil.childNodesToNamedList(node);\n        namedList.add(SimilarityFactory.CLASS_NAME, classArg);\n        SolrParams params = SolrParams.toSolrParams(namedList);\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"), Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final String classArg = ((Element) node).getAttribute(SimilarityFactory.CLASS_NAME);\n      final Object obj = loader.newInstance(classArg, Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        final NamedList<Object> namedList = DOMUtil.childNodesToNamedList(node);\n        namedList.add(SimilarityFactory.CLASS_NAME, classArg);\n        SolrParams params = namedList.toSolrParams();\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final String classArg = ((Element) node).getAttribute(SimilarityFactory.CLASS_NAME);\n      final Object obj = loader.newInstance(classArg, Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        final NamedList<Object> namedList = DOMUtil.childNodesToNamedList(node);\n        namedList.add(SimilarityFactory.CLASS_NAME, classArg);\n        SolrParams params = SolrParams.toSolrParams(namedList);\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2ed9b72e5fa27a7bd4857f222ca815341979d4a","date":1594879524,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrClassLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(SolrResourceLoader,Node).mjava","sourceNew":"  static SimilarityFactory readSimilarity(SolrClassLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final String classArg = ((Element) node).getAttribute(SimilarityFactory.CLASS_NAME);\n      final Object obj = loader.newInstance(classArg, Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        final NamedList<Object> namedList = DOMUtil.childNodesToNamedList(node);\n        namedList.add(SimilarityFactory.CLASS_NAME, classArg);\n        SolrParams params = namedList.toSolrParams();\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","sourceOld":"  static SimilarityFactory readSimilarity(SolrResourceLoader loader, Node node) {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final String classArg = ((Element) node).getAttribute(SimilarityFactory.CLASS_NAME);\n      final Object obj = loader.newInstance(classArg, Object.class, \"search.similarities.\");\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        final NamedList<Object> namedList = DOMUtil.childNodesToNamedList(node);\n        namedList.add(SimilarityFactory.CLASS_NAME, classArg);\n        SolrParams params = namedList.toSolrParams();\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c028362918f0b06bbdb243dfd35486218b89dbde"],"c028362918f0b06bbdb243dfd35486218b89dbde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["9b4b4d68085809ae840a099e4620e5a128509279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c028362918f0b06bbdb243dfd35486218b89dbde"],"9b4b4d68085809ae840a099e4620e5a128509279":["c028362918f0b06bbdb243dfd35486218b89dbde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"]},"commit2Childs":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c028362918f0b06bbdb243dfd35486218b89dbde":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","9b4b4d68085809ae840a099e4620e5a128509279"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","c028362918f0b06bbdb243dfd35486218b89dbde","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"9b4b4d68085809ae840a099e4620e5a128509279":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}