{"path":"src/java/org/apache/lucene/index/CheckIndex#testStoredFields(SegmentInfo,SegmentReader,NumberFormat).mjava","commits":[{"id":"433ef5e0ff3fa18d549774f572b36aae2ae64232","date":1246039802,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/CheckIndex#testStoredFields(SegmentInfo,SegmentReader,NumberFormat).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test stored fields for a segment.\n   */\n  private Status.StoredFieldStatus testStoredFields(SegmentInfo info, SegmentReader reader, NumberFormat format) {\n    final Status.StoredFieldStatus status = new Status.StoredFieldStatus();\n\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: stored fields.......\");\n      }\n\n      // Scan stored fields for all documents\n      for (int j = 0; j < info.docCount; ++j) {\n        if (!reader.isDeleted(j)) {\n          status.docCount++;\n          Document doc = reader.document(j);\n          status.totFields += doc.getFields().size();\n        }\n      }      \n\n      // Validate docCount\n      if (status.docCount != reader.numDocs()) {\n        throw new RuntimeException(\"docCount=\" + status.docCount + \" but saw \" + status.docCount + \" undeleted docs\");\n      }\n\n      msg(\"OK [\" + status.totFields + \" total field count; avg \" + \n          format.format((((float) status.totFields)/status.docCount)) + \" fields per doc]\");      \n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n\n    return status;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CheckIndex#testStoredFields(SegmentInfo,SegmentReader,NumberFormat).mjava","pathOld":"src/java/org/apache/lucene/index/CheckIndex#testStoredFields(SegmentInfo,SegmentReader,NumberFormat).mjava","sourceNew":"  /**\n   * Test stored fields for a segment.\n   */\n  private Status.StoredFieldStatus testStoredFields(SegmentInfo info, SegmentReader reader, NumberFormat format) {\n    final Status.StoredFieldStatus status = new Status.StoredFieldStatus();\n\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: stored fields.......\");\n      }\n\n      // Scan stored fields for all documents\n      for (int j = 0; j < info.docCount; ++j) {\n        if (!reader.isDeleted(j)) {\n          status.docCount++;\n          Document doc = reader.document(j);\n          status.totFields += doc.getFields().size();\n        }\n      }      \n\n      // Validate docCount\n      if (status.docCount != reader.numDocs()) {\n        throw new RuntimeException(\"docCount=\" + status.docCount + \" but saw \" + status.docCount + \" undeleted docs\");\n      }\n\n      msg(\"OK [\" + status.totFields + \" total field count; avg \" + \n          format.format((((float) status.totFields)/status.docCount)) + \" fields per doc]\");      \n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n\n    return status;\n  }\n\n","sourceOld":"  /**\n   * Test stored fields for a segment.\n   */\n  private Status.StoredFieldStatus testStoredFields(SegmentInfo info, SegmentReader reader, NumberFormat format) {\n    final Status.StoredFieldStatus status = new Status.StoredFieldStatus();\n\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: stored fields.......\");\n      }\n\n      // Scan stored fields for all documents\n      for (int j = 0; j < info.docCount; ++j) {\n        if (!reader.isDeleted(j)) {\n          status.docCount++;\n          Document doc = reader.document(j);\n          status.totFields += doc.getFields().size();\n        }\n      }      \n\n      // Validate docCount\n      if (status.docCount != reader.numDocs()) {\n        throw new RuntimeException(\"docCount=\" + status.docCount + \" but saw \" + status.docCount + \" undeleted docs\");\n      }\n\n      msg(\"OK [\" + status.totFields + \" total field count; avg \" + \n          format.format((((float) status.totFields)/status.docCount)) + \" fields per doc]\");      \n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n\n    return status;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"433ef5e0ff3fa18d549774f572b36aae2ae64232":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["433ef5e0ff3fa18d549774f572b36aae2ae64232"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["433ef5e0ff3fa18d549774f572b36aae2ae64232"],"433ef5e0ff3fa18d549774f572b36aae2ae64232":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}