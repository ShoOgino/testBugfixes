{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","sourceNew":"  public PathHierarchyTokenizer(Reader input, int bufferSize, char delimiter, char replacement, int skip) {\n    super(input);\n    if (bufferSize < 0) {\n      throw new IllegalArgumentException(\"bufferSize cannot be negative\");\n    }\n    if (skip < 0) {\n      throw new IllegalArgumentException(\"skip cannot be negative\");\n    }\n    termAtt.resizeBuffer(bufferSize);\n\n    this.delimiter = delimiter;\n    this.replacement = replacement;\n    this.skip = skip;\n    resultToken = new StringBuilder(bufferSize);\n  }\n\n","sourceOld":"  public PathHierarchyTokenizer(Reader input, int bufferSize, char delimiter, char replacement, int skip) {\n    super(input);\n    if (bufferSize < 0) {\n      throw new IllegalArgumentException(\"bufferSize cannot be negative\");\n    }\n    if (skip < 0) {\n      throw new IllegalArgumentException(\"skip cannot be negative\");\n    }\n    termAtt.resizeBuffer(bufferSize);\n\n    this.delimiter = delimiter;\n    this.replacement = replacement;\n    this.skip = skip;\n    resultToken = new StringBuilder(bufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13927d699a111b970c38bc3eec00837464c3ede6","date":1363322510,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","sourceNew":"  public PathHierarchyTokenizer(Reader input, int bufferSize, char delimiter, char replacement, int skip) {\n    this(AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY, input, bufferSize, delimiter, replacement, skip);\n  }\n\n","sourceOld":"  public PathHierarchyTokenizer(Reader input, int bufferSize, char delimiter, char replacement, int skip) {\n    super(input);\n    if (bufferSize < 0) {\n      throw new IllegalArgumentException(\"bufferSize cannot be negative\");\n    }\n    if (skip < 0) {\n      throw new IllegalArgumentException(\"skip cannot be negative\");\n    }\n    termAtt.resizeBuffer(bufferSize);\n\n    this.delimiter = delimiter;\n    this.replacement = replacement;\n    this.skip = skip;\n    resultToken = new StringBuilder(bufferSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/path/PathHierarchyTokenizer#PathHierarchyTokenizer(Reader,int,char,char,int).mjava","sourceNew":null,"sourceOld":"  public PathHierarchyTokenizer(Reader input, int bufferSize, char delimiter, char replacement, int skip) {\n    this(AttributeFactory.DEFAULT_ATTRIBUTE_FACTORY, input, bufferSize, delimiter, replacement, skip);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"13927d699a111b970c38bc3eec00837464c3ede6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["13927d699a111b970c38bc3eec00837464c3ede6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["13927d699a111b970c38bc3eec00837464c3ede6"],"13927d699a111b970c38bc3eec00837464c3ede6":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}