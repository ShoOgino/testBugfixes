{"path":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6616b1fd222bb5a60f7f7856ace312252bc97890","date":1350142044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing40\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene40\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6616b1fd222bb5a60f7f7856ace312252bc97890":["7b91922b55d15444d554721b352861d028eb8278"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["7b91922b55d15444d554721b352861d028eb8278","6616b1fd222bb5a60f7f7856ace312252bc97890"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["c7492bcb52be51e55d596134b95b2e53cc4ffb91","73bb5a57dc75b54a39494f99986599cae7dff417"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["7b91922b55d15444d554721b352861d028eb8278","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73bb5a57dc75b54a39494f99986599cae7dff417"],"73bb5a57dc75b54a39494f99986599cae7dff417":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["6616b1fd222bb5a60f7f7856ace312252bc97890","c7492bcb52be51e55d596134b95b2e53cc4ffb91","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"6616b1fd222bb5a60f7f7856ace312252bc97890":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["95303ff3749680c743b9425f9cf99e6e4065e8a8","db4fdbf3d262768eabc027cd8321edca0cd11fa8","73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"73bb5a57dc75b54a39494f99986599cae7dff417":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}