{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int docStoreOffset = docWriter.getDocStoreOffset();\n    final int end = docID+docStoreOffset;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int docStoreOffset = docWriter.getDocStoreOffset();\n    final int end = docID+docStoreOffset;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int end = docID;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int docStoreOffset = docWriter.getDocStoreOffset();\n    final int end = docID+docStoreOffset;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    if (lastDocID < docID) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < docID) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int docStoreOffset = docWriter.getDocStoreOffset();\n    final int end = docID+docStoreOffset;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    if (lastDocID < docID) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < docID) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int docStoreOffset = docWriter.getDocStoreOffset();\n    final int end = docID+docStoreOffset;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    if (lastDocID < docID) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < docID) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    final int end = docID;\n    if (lastDocID < end) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < end) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsConsumer#fill(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#fill(int).mjava","sourceNew":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    while(lastDocID < docID) {\n      writer.startDocument(0);\n      lastDocID++;\n    }\n  }\n\n","sourceOld":"  /** Fills in no-term-vectors for all docs we haven't seen\n   *  since the last doc that had term vectors. */\n  void fill(int docID) throws IOException {\n    if (lastDocID < docID) {\n      final long tvfPosition = tvf.getFilePointer();\n      while(lastDocID < docID) {\n        tvx.writeLong(tvd.getFilePointer());\n        tvd.writeVInt(0);\n        tvx.writeLong(tvfPosition);\n        lastDocID++;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["833a7987bc1c94455fde83e3311f72bddedcfb93","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["3cc749c053615f5871f3b95715fe292f34e70a53","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","833a7987bc1c94455fde83e3311f72bddedcfb93"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}