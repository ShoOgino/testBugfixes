{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","commits":[{"id":"b374d78db8148ec6796fdf37148b33897ab40a8c","date":1351606544,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","pathOld":"/dev/null","sourceNew":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    Map.Entry<String, String>[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList(entries));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f09a2a554f375a6ae3218e5eac14a1d1fb336dc7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f09a2a554f375a6ae3218e5eac14a1d1fb336dc7","date":1354804202,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","sourceNew":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<Object>(entries));\n  }\n\n","sourceOld":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    Map.Entry<String, String>[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList(entries));\n  }\n\n","bugFix":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","sourceNew":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<Object>(entries));\n  }\n\n","sourceOld":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    Map.Entry<String, String>[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList(entries));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","sourceNew":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<>(entries));\n  }\n\n","sourceOld":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<String>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<Object>(entries));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeReq(SolrCore,String...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<>(entries));\n  }\n\n","sourceOld":"  private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {\n    if (q.length == 1) {\n      return new LocalSolrQueryRequest(core,\n          q[0], null, 0, 20, new HashMap<String, String>());\n    }\n    if (q.length % 2 != 0) {\n      throw new RuntimeException(\"The length of the string array (query arguments) needs to be even\");\n    }\n    NamedList.NamedListEntry[] entries = new NamedList.NamedListEntry[q.length / 2];\n    for (int i = 0; i < q.length; i += 2) {\n      entries[i / 2] = new NamedList.NamedListEntry<>(q[i], q[i + 1]);\n    }\n    return new LocalSolrQueryRequest(core, new NamedList<>(entries));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["f09a2a554f375a6ae3218e5eac14a1d1fb336dc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b374d78db8148ec6796fdf37148b33897ab40a8c","f09a2a554f375a6ae3218e5eac14a1d1fb336dc7"],"b374d78db8148ec6796fdf37148b33897ab40a8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f09a2a554f375a6ae3218e5eac14a1d1fb336dc7":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b374d78db8148ec6796fdf37148b33897ab40a8c":["407687e67faf6e1f02a211ca078d8e3eed631027","f09a2a554f375a6ae3218e5eac14a1d1fb336dc7"],"f09a2a554f375a6ae3218e5eac14a1d1fb336dc7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}