{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","sourceNew":"  /** \n   * Get the policy for indexing category <b>paths</b>, \n   * used for deciding how \"high\" to climb in taxonomy \n   * from a category when ingesting its category paths. \n   */\n  public PathPolicy getPathPolicy();\n\n","sourceOld":"  /** \n   * Get the policy for indexing category <b>paths</b>, \n   * used for deciding how \"high\" to climb in taxonomy \n   * from a category when ingesting its category paths. \n   */\n  public PathPolicy getPathPolicy();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","sourceNew":"  /**\n   * Returns the {@link PathPolicy} that is used during indexing. By default\n   * returns {@link PathPolicy#ALL_CATEGORIES} which means that the full\n   * hierarchy is added as drill-down terms for every document.\n   */\n  public PathPolicy getPathPolicy() {\n    return pathPolicy;\n  }\n\n","sourceOld":"  /** \n   * Get the policy for indexing category <b>paths</b>, \n   * used for deciding how \"high\" to climb in taxonomy \n   * from a category when ingesting its category paths. \n   */\n  public PathPolicy getPathPolicy();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","sourceNew":"  /**\n   * Returns the {@link PathPolicy} that is used during indexing. By default\n   * returns {@link PathPolicy#ALL_CATEGORIES} which means that the full\n   * hierarchy is added as drill-down terms for every document.\n   */\n  public PathPolicy getPathPolicy() {\n    return pathPolicy;\n  }\n\n","sourceOld":"  /** \n   * Get the policy for indexing category <b>paths</b>, \n   * used for deciding how \"high\" to climb in taxonomy \n   * from a category when ingesting its category paths. \n   */\n  public PathPolicy getPathPolicy();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66644845192a1c92d87d5324cc0b5af16ad31b42","date":1358970583,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the {@link PathPolicy} that is used during indexing. By default\n   * returns {@link PathPolicy#ALL_CATEGORIES} which means that the full\n   * hierarchy is added as drill-down terms for every document.\n   */\n  public PathPolicy getPathPolicy() {\n    return pathPolicy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/FacetIndexingParams#getPathPolicy().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the {@link PathPolicy} that is used during indexing. By default\n   * returns {@link PathPolicy#ALL_CATEGORIES} which means that the full\n   * hierarchy is added as drill-down terms for every document.\n   */\n  public PathPolicy getPathPolicy() {\n    return pathPolicy;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"66644845192a1c92d87d5324cc0b5af16ad31b42":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66644845192a1c92d87d5324cc0b5af16ad31b42"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","66644845192a1c92d87d5324cc0b5af16ad31b42"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"66644845192a1c92d87d5324cc0b5af16ad31b42":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","66644845192a1c92d87d5324cc0b5af16ad31b42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}