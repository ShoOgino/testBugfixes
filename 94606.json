{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","commits":[{"id":"6bc1e76fdb8a9952244528f098da956d2f52acec","date":1348348531,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#makeWithin(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery bq = new BooleanQuery();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery bq = new BooleanQuery();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery bq = new BooleanQuery();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#makeWithin(Rectangle).mjava","sourceNew":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq.build();\n  }\n\n","sourceOld":"  /**\n   * Constructs a query to retrieve documents that fully contain the input envelope.\n   */\n  private Query makeWithin(Rectangle bbox) {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    BooleanClause.Occur MUST = BooleanClause.Occur.MUST;\n    if (bbox.getCrossesDateLine()) {\n      //use null as performance trick since no data will be beyond the world bounds\n      bq.add(rangeQuery(fieldNameX, null/*-180*/, bbox.getMaxX()), BooleanClause.Occur.SHOULD );\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), null/*+180*/), BooleanClause.Occur.SHOULD );\n      bq.setMinimumNumberShouldMatch(1);//must match at least one of the SHOULD\n    } else {\n      bq.add(rangeQuery(fieldNameX, bbox.getMinX(), bbox.getMaxX()), MUST);\n    }\n    bq.add(rangeQuery(fieldNameY, bbox.getMinY(), bbox.getMaxY()), MUST);\n    return bq.build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"af2638813028b254a88b418ebeafb541afb49653":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","112d77ac8d3e10a362516ad834c9a11d35c94234"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}