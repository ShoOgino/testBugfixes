{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","commits":[{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created that uses\n   *          ThreadSafeClientConnManager.\n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final ThreadSafeClientConnManager mgr = new ThreadSafeClientConnManager();\n    final DefaultHttpClient httpClient = new DefaultHttpClient(mgr);\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"10034129a9d9aaaeba391901f4be8f100b21eb7c","date":1360791957,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created that uses\n   *          ThreadSafeClientConnManager.\n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final ThreadSafeClientConnManager mgr = new ThreadSafeClientConnManager();\n    final DefaultHttpClient httpClient = new DefaultHttpClient(mgr);\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created that uses\n   *          ThreadSafeClientConnManager.\n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final ThreadSafeClientConnManager mgr = new ThreadSafeClientConnManager();\n    final DefaultHttpClient httpClient = new DefaultHttpClient(mgr);\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e069c492cf4895697ef7b81df0ffb9a8bd4b48","date":1382134253,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    logger.info(\"Creating new http client, config:\" + config);\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static HttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6d62214e818b74b9fa407c0c51956e44878a46a","date":1438266500,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = HttpClientFactory.createHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = new SystemDefaultHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry());\n\n    return createClient(params, cm);\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(final SolrParams params) {\n    final ModifiableSolrParams config = new ModifiableSolrParams(params);\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Creating new http client, config:\" + config);\n    }\n    final DefaultHttpClient httpClient = HttpClientFactory.createHttpClient();\n    configureClient(httpClient, config);\n    return httpClient;\n  }\n\n","bugFix":null,"bugIntro":["92002994f5f8188263b948db8a8d2a3823c80ad3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"92002994f5f8188263b948db8a8d2a3823c80ad3","date":1461796841,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry()));\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry());\n\n    return createClient(params, cm);\n  }\n\n","bugFix":["859081acf00749f5dd462772c571d611d4a4d2db"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"070b525fb213c5643ba35e1b60f1a1d4f7b23312","date":1475678176,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, createPoolingConnectionManager());\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07cebc9816f8c940e8e9683abbdc742fe95e25d7","date":1475696954,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry()));\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, createPoolingConnectionManager());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15fb22f207e0cbf913dbc9857b6a4fe30390a625","date":1475989569,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, createPoolingConnectionManager());\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#createClient(SolrParams).mjava","sourceNew":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, createPoolingConnectionManager());\n  }\n\n","sourceOld":"  /**\n   * Creates new http client by using the provided configuration.\n   * \n   * @param params\n   *          http client configuration, if null a client with default\n   *          configuration (no additional configuration) is created. \n   */\n  public static CloseableHttpClient createClient(SolrParams params) {\n    return createClient(params, new PoolingHttpClientConnectionManager(schemaRegistryProvider.getSchemaRegistry()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["92002994f5f8188263b948db8a8d2a3823c80ad3"],"15fb22f207e0cbf913dbc9857b6a4fe30390a625":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["10034129a9d9aaaeba391901f4be8f100b21eb7c"],"92002994f5f8188263b948db8a8d2a3823c80ad3":["859081acf00749f5dd462772c571d611d4a4d2db"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["92002994f5f8188263b948db8a8d2a3823c80ad3","15fb22f207e0cbf913dbc9857b6a4fe30390a625"],"859081acf00749f5dd462772c571d611d4a4d2db":["d6d62214e818b74b9fa407c0c51956e44878a46a"],"d6d62214e818b74b9fa407c0c51956e44878a46a":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["070b525fb213c5643ba35e1b60f1a1d4f7b23312"],"10034129a9d9aaaeba391901f4be8f100b21eb7c":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"3b41f996b22bd5518650f897d050088ff808ec03":["eb99886ff640d94edb43e0d36112a2b7023379ba","10034129a9d9aaaeba391901f4be8f100b21eb7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["15fb22f207e0cbf913dbc9857b6a4fe30390a625"]},"commit2Childs":{"070b525fb213c5643ba35e1b60f1a1d4f7b23312":["07cebc9816f8c940e8e9683abbdc742fe95e25d7"],"15fb22f207e0cbf913dbc9857b6a4fe30390a625":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"91e069c492cf4895697ef7b81df0ffb9a8bd4b48":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"92002994f5f8188263b948db8a8d2a3823c80ad3":["070b525fb213c5643ba35e1b60f1a1d4f7b23312","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["10034129a9d9aaaeba391901f4be8f100b21eb7c","3b41f996b22bd5518650f897d050088ff808ec03"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"859081acf00749f5dd462772c571d611d4a4d2db":["92002994f5f8188263b948db8a8d2a3823c80ad3"],"d6d62214e818b74b9fa407c0c51956e44878a46a":["859081acf00749f5dd462772c571d611d4a4d2db"],"07cebc9816f8c940e8e9683abbdc742fe95e25d7":["15fb22f207e0cbf913dbc9857b6a4fe30390a625"],"10034129a9d9aaaeba391901f4be8f100b21eb7c":["91e069c492cf4895697ef7b81df0ffb9a8bd4b48","3b41f996b22bd5518650f897d050088ff808ec03"],"3b41f996b22bd5518650f897d050088ff808ec03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["d6d62214e818b74b9fa407c0c51956e44878a46a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b41f996b22bd5518650f897d050088ff808ec03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}