{"path":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","commits":[{"id":"214b8610690edbe7e294594a7bc58a978ef1863c","date":1389376762,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  private Set<SolrSuggester> getSuggesters(SolrParams params) {\n    Set<SolrSuggester> solrSuggesters = new HashSet<SolrSuggester>();\n    for(String suggesterName : getSuggesterNames(params)) {\n      SolrSuggester curSuggester = suggesters.get(suggesterName);\n      if (curSuggester != null) {\n        solrSuggesters.add(curSuggester);\n      } else {\n        throw new IllegalArgumentException(\"No suggester named \" + suggesterName +\" was configured\");\n      }\n    }\n    if (solrSuggesters.size() == 0) {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n    }\n    return solrSuggesters;\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3e9dd7374b2f7a29ce2b050356c08ed04656f7df"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","sourceNew":"  private Set<SolrSuggester> getSuggesters(SolrParams params) {\n    Set<SolrSuggester> solrSuggesters = new HashSet<>();\n    for(String suggesterName : getSuggesterNames(params)) {\n      SolrSuggester curSuggester = suggesters.get(suggesterName);\n      if (curSuggester != null) {\n        solrSuggesters.add(curSuggester);\n      } else {\n        throw new IllegalArgumentException(\"No suggester named \" + suggesterName +\" was configured\");\n      }\n    }\n    if (solrSuggesters.size() == 0) {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n    }\n    return solrSuggesters;\n    \n  }\n\n","sourceOld":"  private Set<SolrSuggester> getSuggesters(SolrParams params) {\n    Set<SolrSuggester> solrSuggesters = new HashSet<SolrSuggester>();\n    for(String suggesterName : getSuggesterNames(params)) {\n      SolrSuggester curSuggester = suggesters.get(suggesterName);\n      if (curSuggester != null) {\n        solrSuggesters.add(curSuggester);\n      } else {\n        throw new IllegalArgumentException(\"No suggester named \" + suggesterName +\" was configured\");\n      }\n    }\n    if (solrSuggesters.size() == 0) {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n    }\n    return solrSuggesters;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e9dd7374b2f7a29ce2b050356c08ed04656f7df","date":1404804570,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#getSuggesters(SolrParams).mjava","sourceNew":"  private Set<SolrSuggester> getSuggesters(SolrParams params) {\n    Set<SolrSuggester> solrSuggesters = new HashSet<>();\n    for(String suggesterName : getSuggesterNames(params)) {\n      SolrSuggester curSuggester = suggesters.get(suggesterName);\n      if (curSuggester != null) {\n        solrSuggesters.add(curSuggester);\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"No suggester named \" + suggesterName +\" was configured\");\n      }\n    }\n    if (solrSuggesters.size() == 0) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n            \"'\" + SUGGEST_DICT + \"' parameter not specified and no default suggester configured\");\n    }\n    return solrSuggesters;\n    \n  }\n\n","sourceOld":"  private Set<SolrSuggester> getSuggesters(SolrParams params) {\n    Set<SolrSuggester> solrSuggesters = new HashSet<>();\n    for(String suggesterName : getSuggesterNames(params)) {\n      SolrSuggester curSuggester = suggesters.get(suggesterName);\n      if (curSuggester != null) {\n        solrSuggesters.add(curSuggester);\n      } else {\n        throw new IllegalArgumentException(\"No suggester named \" + suggesterName +\" was configured\");\n      }\n    }\n    if (solrSuggesters.size() == 0) {\n        throw new IllegalArgumentException(\"No default suggester was configured\");\n    }\n    return solrSuggesters;\n    \n  }\n\n","bugFix":["214b8610690edbe7e294594a7bc58a978ef1863c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["214b8610690edbe7e294594a7bc58a978ef1863c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"214b8610690edbe7e294594a7bc58a978ef1863c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e9dd7374b2f7a29ce2b050356c08ed04656f7df":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e9dd7374b2f7a29ce2b050356c08ed04656f7df"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3e9dd7374b2f7a29ce2b050356c08ed04656f7df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["214b8610690edbe7e294594a7bc58a978ef1863c"],"214b8610690edbe7e294594a7bc58a978ef1863c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3e9dd7374b2f7a29ce2b050356c08ed04656f7df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}