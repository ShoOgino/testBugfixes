{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","commits":[{"id":"c85fa43e6918808743daa7847ba0264373af687f","date":1395166336,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","pathOld":"/dev/null","sourceNew":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = Arrays.copyOf(buffered, newSize);\n      startOff = Arrays.copyOf(startOff, newSize);\n      posInc = Arrays.copyOf(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","sourceNew":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = ArrayUtil.growExact(buffered, newSize);\n      startOff = ArrayUtil.growExact(startOff, newSize);\n      posInc = ArrayUtil.growExact(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","sourceOld":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = Arrays.copyOf(buffered, newSize);\n      startOff = Arrays.copyOf(startOff, newSize);\n      posInc = Arrays.copyOf(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","sourceNew":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = ArrayUtil.growExact(buffered, newSize);\n      startOff = ArrayUtil.growExact(startOff, newSize);\n      posInc = ArrayUtil.growExact(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","sourceOld":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = Arrays.copyOf(buffered, newSize);\n      startOff = Arrays.copyOf(startOff, newSize);\n      posInc = Arrays.copyOf(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter#buffer().mjava","sourceNew":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = ArrayUtil.growExact(buffered, newSize);\n      startOff = ArrayUtil.growExact(startOff, newSize);\n      posInc = ArrayUtil.growExact(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","sourceOld":"  private void buffer() {\n    if (bufferedLen == buffered.length) {\n      int newSize = ArrayUtil.oversize(bufferedLen+1, 8);\n      buffered = Arrays.copyOf(buffered, newSize);\n      startOff = Arrays.copyOf(startOff, newSize);\n      posInc = Arrays.copyOf(posInc, newSize);\n    }\n    startOff[bufferedLen] = offsetAttribute.startOffset();\n    posInc[bufferedLen] = posIncAttribute.getPositionIncrement();\n    buffered[bufferedLen] = captureState();\n    bufferedLen++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["c85fa43e6918808743daa7847ba0264373af687f","9798d0818e7a880546802b509792d3f3d57babd2"],"9798d0818e7a880546802b509792d3f3d57babd2":["c85fa43e6918808743daa7847ba0264373af687f"],"c85fa43e6918808743daa7847ba0264373af687f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["c85fa43e6918808743daa7847ba0264373af687f","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c85fa43e6918808743daa7847ba0264373af687f"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c85fa43e6918808743daa7847ba0264373af687f":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}