{"path":"src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#explain().mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#explain().mjava","pathOld":"/dev/null","sourceNew":"    public Explanation explain() throws IOException {\n      Query q = getQuery();\n\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        result.addDetail(boostExpl);\n      \n      StringBuffer docFreqs = new StringBuffer();\n      for (int i = 0; i < terms.size(); i++) {\n        if (i != 0) docFreqs.append(\" \");\n        docFreqs.append(((Term)terms.elementAt(i)).text());\n        docFreqs.append(\"=\");\n        docFreqs.append(searcher.docFreq((Term)terms.elementAt(i)));\n      }\n      Explanation idfExpl =\n        new Explanation(idf, \"idf(\" + field + \": \" + docFreqs + \")\");\n      result.addDetail(idfExpl);\n      \n      Explanation normExpl = new Explanation(queryNorm, \"queryNorm\");\n      result.addDetail(normExpl);\n\n      result.setValue(boostExpl.getValue() *\n                      idfExpl.getValue() *\n                      normExpl.getValue());\n\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d26db6980435280d32792a7ddd3e26866ac98ea9","date":1042658704,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/PhraseQuery.PhraseWeight#explain().mjava","sourceNew":null,"sourceOld":"    public Explanation explain() throws IOException {\n      Query q = getQuery();\n\n      Explanation result = new Explanation();\n      result.setDescription(\"weight(\" + getQuery() + \"), product of:\");\n\n      Explanation boostExpl = new Explanation(getBoost(), \"boost\");\n      if (getBoost() != 1.0f)\n        result.addDetail(boostExpl);\n      \n      StringBuffer docFreqs = new StringBuffer();\n      for (int i = 0; i < terms.size(); i++) {\n        if (i != 0) docFreqs.append(\" \");\n        docFreqs.append(((Term)terms.elementAt(i)).text());\n        docFreqs.append(\"=\");\n        docFreqs.append(searcher.docFreq((Term)terms.elementAt(i)));\n      }\n      Explanation idfExpl =\n        new Explanation(idf, \"idf(\" + field + \": \" + docFreqs + \")\");\n      result.addDetail(idfExpl);\n      \n      Explanation normExpl = new Explanation(queryNorm, \"queryNorm\");\n      result.addDetail(normExpl);\n\n      result.setValue(boostExpl.getValue() *\n                      idfExpl.getValue() *\n                      normExpl.getValue());\n\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d26db6980435280d32792a7ddd3e26866ac98ea9"]},"commit2Childs":{"27274410c91546fcfc28e692abd2dd77ca99be4b":["d26db6980435280d32792a7ddd3e26866ac98ea9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}