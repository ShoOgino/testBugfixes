{"path":"backwards/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"/dev/null","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"backwards/src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}