{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","commits":[{"id":"cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f","date":1462097376,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b961ff1d2d65eab705046ed52539112d3a5f76e0","date":1463766553,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX()-0.01, xyzBounds.getMaximumX()-0.01, xyzBounds.getMinimumY()-0.01, xyzBounds.getMaximumY()-0.01, xyzBounds.getMinimumZ()-0.01, xyzBounds.getMaximumZ()-0.01);\n    assertEquals(GeoArea.OVERLAPS, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"961aa3f803841184bcbd8a9d0533743be1323d63","date":1521994841,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersects().mjava","sourceNew":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    GeoPolygonFactory.PolygonDescription pd = new GeoPolygonFactory.PolygonDescription(points);\n    \n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, pd);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(pd);\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonIntersects() {\n    GeoPolygon c;\n    List<GeoPoint> points;\n    List<GeoPolygonFactory.PolygonDescription> shapes;\n    XYZBounds xyzBounds;\n    XYZSolid xyzSolid;\n    \n    points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.4));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.1, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.0, -0.6));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.1, -0.5));\n\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    shapes = new ArrayList<>();\n    shapes.add(new GeoPolygonFactory.PolygonDescription(points));\n    \n    c = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, shapes);\n\n    // Same bounds should work\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n    // Bounds we obtain from the large polygon also should work.\n    xyzBounds = new XYZBounds();\n    c.getBounds(xyzBounds);\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumX(), xyzBounds.getMaximumX(), xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ());\n    assertEquals(GeoArea.WITHIN, xyzSolid.getRelationship(c));\n    xyzSolid = XYZSolidFactory.makeXYZSolid(PlanetModel.SPHERE, xyzBounds.getMinimumY(), xyzBounds.getMaximumY(), xyzBounds.getMinimumZ(), xyzBounds.getMaximumZ(), xyzBounds.getMinimumX(), xyzBounds.getMaximumX());\n    assertEquals(GeoArea.DISJOINT, xyzSolid.getRelationship(c));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"961aa3f803841184bcbd8a9d0533743be1323d63":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["961aa3f803841184bcbd8a9d0533743be1323d63"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f","b961ff1d2d65eab705046ed52539112d3a5f76e0"],"b961ff1d2d65eab705046ed52539112d3a5f76e0":["cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f"]},"commit2Childs":{"961aa3f803841184bcbd8a9d0533743be1323d63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f":["d470c8182e92b264680e34081b75e70a9f2b3c89","b961ff1d2d65eab705046ed52539112d3a5f76e0","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf54b4f57b8ea5f80548cacb1a4d5ac09168b82f","55b50463286869f584cf849d1587a0fcd54d1dfa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["961aa3f803841184bcbd8a9d0533743be1323d63","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b961ff1d2d65eab705046ed52539112d3a5f76e0":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}