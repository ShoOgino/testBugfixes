{"path":"src/test/org/apache/lucene/util/TestCharacterUtils#testFillJava14().mjava","commits":[{"id":"966b079690131e434b39530d82cc413f5aff4cd5","date":1264751025,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/TestCharacterUtils#testFillJava14().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFillJava14() throws IOException {\n    String input = \"1234\\ud801\\udc1c789123\\ud801\\ud801\\udc1c\\ud801\";\n    CharacterUtils instance = CharacterUtils.getInstance(Version.LUCENE_30);\n    Reader reader = new StringReader(input);\n    CharacterBuffer buffer = CharacterUtils.newCharacterBuffer(5);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"1234\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"\\udc1c7891\", new String(buffer.getBuffer()));\n    buffer = CharacterUtils.newCharacterBuffer(6);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(6, buffer.getLength());\n    assertEquals(\"23\\ud801\\ud801\\udc1c\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertFalse(instance.fill(buffer, reader));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestCharacterUtils#testFillJava14().mjava","pathOld":"src/test/org/apache/lucene/util/TestCharacterUtils#testFillJava14().mjava","sourceNew":"  @Test\n  public void testFillJava14() throws IOException {\n    String input = \"1234\\ud801\\udc1c789123\\ud801\\ud801\\udc1c\\ud801\";\n    CharacterUtils instance = CharacterUtils.getInstance(Version.LUCENE_30);\n    Reader reader = new StringReader(input);\n    CharacterBuffer buffer = CharacterUtils.newCharacterBuffer(5);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"1234\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"\\udc1c7891\", new String(buffer.getBuffer()));\n    buffer = CharacterUtils.newCharacterBuffer(6);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(6, buffer.getLength());\n    assertEquals(\"23\\ud801\\ud801\\udc1c\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertFalse(instance.fill(buffer, reader));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFillJava14() throws IOException {\n    String input = \"1234\\ud801\\udc1c789123\\ud801\\ud801\\udc1c\\ud801\";\n    CharacterUtils instance = CharacterUtils.getInstance(Version.LUCENE_30);\n    Reader reader = new StringReader(input);\n    CharacterBuffer buffer = CharacterUtils.newCharacterBuffer(5);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"1234\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(5, buffer.getLength());\n    assertEquals(\"\\udc1c7891\", new String(buffer.getBuffer()));\n    buffer = CharacterUtils.newCharacterBuffer(6);\n    assertTrue(instance.fill(buffer, reader));\n    assertEquals(6, buffer.getLength());\n    assertEquals(\"23\\ud801\\ud801\\udc1c\\ud801\", new String(buffer.getBuffer(), buffer\n        .getOffset(), buffer.getLength()));\n    assertFalse(instance.fill(buffer, reader));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"966b079690131e434b39530d82cc413f5aff4cd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["966b079690131e434b39530d82cc413f5aff4cd5"]},"commit2Childs":{"966b079690131e434b39530d82cc413f5aff4cd5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["966b079690131e434b39530d82cc413f5aff4cd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}