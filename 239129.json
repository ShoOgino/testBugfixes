{"path":"src/java/org/apache/lucene/util/SorterTemplate#quickSortHelper(int,int).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SorterTemplate#quickSortHelper(int,int).mjava","pathOld":"/dev/null","sourceNew":"    private void quickSortHelper(int lo, int hi) {\n        for (;;) {\n            int diff = hi - lo;\n            if (diff <= QUICKSORT_THRESHOLD) {\n                break;\n            }\n            int i = (hi + lo) / 2;\n            if (compare(lo, i) > 0) {\n                swap(lo, i);\n            }\n            if (compare(lo, hi) > 0) {\n                swap(lo, hi);\n            }\n            if (compare(i, hi) > 0) {\n                swap(i, hi);\n            }\n            int j = hi - 1;\n            swap(i, j);\n            i = lo;\n            int v = j;\n            for (;;) {\n                while (compare(++i, v) < 0) {\n                    /* nothing */;\n                }\n                while (compare(--j, v) > 0) {\n                    /* nothing */;\n                }\n                if (j < i) {\n                    break;\n                }\n                swap(i, j);\n            }\n            swap(i, hi - 1);\n            if (j - lo <= hi - i + 1) {\n                quickSortHelper(lo, j);\n                lo = i + 1;\n            } else {\n                quickSortHelper(i + 1, hi);\n                hi = j;\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9f68196da6d72e738958919de611308ebdc4505","date":1259861039,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/util/SorterTemplate#quickSortHelper(int,int).mjava","sourceNew":null,"sourceOld":"    private void quickSortHelper(int lo, int hi) {\n        for (;;) {\n            int diff = hi - lo;\n            if (diff <= QUICKSORT_THRESHOLD) {\n                break;\n            }\n            int i = (hi + lo) / 2;\n            if (compare(lo, i) > 0) {\n                swap(lo, i);\n            }\n            if (compare(lo, hi) > 0) {\n                swap(lo, hi);\n            }\n            if (compare(i, hi) > 0) {\n                swap(i, hi);\n            }\n            int j = hi - 1;\n            swap(i, j);\n            i = lo;\n            int v = j;\n            for (;;) {\n                while (compare(++i, v) < 0) {\n                    /* nothing */;\n                }\n                while (compare(--j, v) > 0) {\n                    /* nothing */;\n                }\n                if (j < i) {\n                    break;\n                }\n                swap(i, j);\n            }\n            swap(i, hi - 1);\n            if (j - lo <= hi - i + 1) {\n                quickSortHelper(lo, j);\n                lo = i + 1;\n            } else {\n                quickSortHelper(i + 1, hi);\n                hi = j;\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9f68196da6d72e738958919de611308ebdc4505":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9f68196da6d72e738958919de611308ebdc4505"]},"commit2Childs":{"e9f68196da6d72e738958919de611308ebdc4505":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["e9f68196da6d72e738958919de611308ebdc4505"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}