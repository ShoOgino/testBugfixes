{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","commits":[{"id":"523c1863d7ec17e9a5067cef7e233c388f8ab263","date":1367931848,"type":2,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Reader,String,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the <a href=\"#version\">Lucene match version</a>\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  @Deprecated\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    this(version, factory, input, Side.FRONT, minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param sideLabel the name of the {@link Side} from which to chop off an n-gram\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Reader input, String sideLabel, int minGram, int maxGram) {\n    this(input, Side.getSide(sideLabel), minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7567347acd9579d742a2ffd4feb1a32062fb1bc3","date":1367935406,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(version, minGram, maxGram);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the <a href=\"#version\">Lucene match version</a>\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  @Deprecated\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    this(version, factory, input, Side.FRONT, minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704","date":1371043069,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(version, factory, input, minGram, maxGram, true);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(factory, input);\n    init(version, minGram, maxGram);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer#EdgeNGramTokenizer(Version,AttributeFactory,Reader,int,int).mjava","sourceNew":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, int minGram, int maxGram) {\n    super(version, factory, minGram, maxGram, true);\n  }\n\n","sourceOld":"  /**\n   * Creates EdgeNGramTokenizer that can generate n-grams in the sizes of the given range\n   *\n   * @param version the Lucene match version\n   * @param factory {@link org.apache.lucene.util.AttributeSource.AttributeFactory} to use\n   * @param input {@link Reader} holding the input to be tokenized\n   * @param minGram the smallest n-gram to generate\n   * @param maxGram the largest n-gram to generate\n   */\n  public EdgeNGramTokenizer(Version version, AttributeFactory factory, Reader input, int minGram, int maxGram) {\n    super(version, factory, input, minGram, maxGram, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["523c1863d7ec17e9a5067cef7e233c388f8ab263"]},"commit2Childs":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["523c1863d7ec17e9a5067cef7e233c388f8ab263"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["bd095de1c7ac6b6ab3a330b5fbe8cb37e4f34704"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}