{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#getDefaultTempDir().mjava","commits":[{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#getDefaultTempDir().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#getDefaultTempDir().mjava","sourceNew":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  synchronized static Path getDefaultTempDir() throws IOException {\n    if (DEFAULT_TEMP_DIR == null) {\n      // Lazy init\n      String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n      if (tempDirPath == null)  {\n        throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n      }\n      Path tempDirectory = Paths.get(tempDirPath);\n      if (Files.isWritable(tempDirectory) == false) {\n        throw new IOException(\"Java's temporary folder not present or writeable?: \" \n                              + tempDirectory.toAbsolutePath());\n      }\n      DEFAULT_TEMP_DIR = tempDirectory;\n    }\n\n    return DEFAULT_TEMP_DIR;\n  }\n\n","sourceOld":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public synchronized static Path getDefaultTempDir() throws IOException {\n    if (DEFAULT_TEMP_DIR == null) {\n      // Lazy init\n      String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n      if (tempDirPath == null)  {\n        throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n      }\n      Path tempDirectory = Paths.get(tempDirPath);\n      if (Files.isWritable(tempDirectory) == false) {\n        throw new IOException(\"Java's temporary folder not present or writeable?: \" \n                              + tempDirectory.toAbsolutePath());\n      }\n      DEFAULT_TEMP_DIR = tempDirectory;\n    }\n\n    return DEFAULT_TEMP_DIR;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}