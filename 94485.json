{"path":"solr/core/src/test/org/apache/solr/internal/csv/CSVParserTest#testNextToken4().mjava","commits":[{"id":"a62060bf935e54f2cf73861fbc773508ab49aeb9","date":1333411307,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/CSVParserTest#testNextToken4().mjava","pathOld":"/dev/null","sourceNew":"  // encapsulator tokenizer (sinle line)\n  public void testNextToken4() throws IOException {\n    /* file:  a,\"foo\",b\n     *        a,   \" foo\",b\n     *        a,\"foo \"   ,b     // whitespace after closing encapsulator\n     *        a,  \" foo \" ,b\n     */ \n     String code = \n      \"a,\\\"foo\\\",b\\na,   \\\" foo\\\",b\\na,\\\"foo \\\"  ,b\\na,  \\\" foo \\\"  ,b\";\n     TestCSVParser parser = new TestCSVParser(new StringReader(code));\n     assertEquals(CSVParser.TT_TOKEN + \";a;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \";foo;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_EORECORD + \";b;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \";a;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \"; foo;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_EORECORD + \";b;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \";a;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \";foo ;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_EORECORD + \";b;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \";a;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_TOKEN + \"; foo ;\", parser.testNextToken());\n//     assertEquals(CSVParser.TT_EORECORD + \";b;\", parser.testNextToken());\n     assertEquals(CSVParser.TT_EOF + \";b;\", parser.testNextToken());    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a62060bf935e54f2cf73861fbc773508ab49aeb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a62060bf935e54f2cf73861fbc773508ab49aeb9"]},"commit2Childs":{"a62060bf935e54f2cf73861fbc773508ab49aeb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a62060bf935e54f2cf73861fbc773508ab49aeb9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}