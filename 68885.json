{"path":"src/java/org/apache/lucene/document/Document#getField(String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields may exist with this name, this method returns the\n    last added such added. */\n  public final Field getField(String name) {\n    for (DocumentFieldList list = fieldList; list != null; list = list.next)\n      if (list.field.name().equals(name))\n\treturn list.field;\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f698e1153cefa582a35d82aa8fa7316fb3c688f3","date":1036612502,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields exists with this name, this method returns the\n    last field value added. */\n  public final Field getField(String name) {\n    for (DocumentFieldList list = fieldList; list != null; list = list.next)\n      if (list.field.name().equals(name))\n\treturn list.field;\n    return null;\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields may exist with this name, this method returns the\n    last added such added. */\n  public final Field getField(String name) {\n    for (DocumentFieldList list = fieldList; list != null; list = list.next)\n      if (list.field.name().equals(name))\n\treturn list.field;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d597fb9cab5d0207f322b489e4260b6758531f","date":1078162370,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields exists with this name, this method returns the\n    last field value added. */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields exists with this name, this method returns the\n    last field value added. */\n  public final Field getField(String name) {\n    for (DocumentFieldList list = fieldList; list != null; list = list.next)\n      if (list.field.name().equals(name))\n\treturn list.field;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":["044cc6e1551cd0687478395eeceb9cde12caf10b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32cf2e30bd45f6248722d0d19a0045a712782ebc","date":1080240435,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n    null.  If multiple fields exists with this name, this method returns the\n    last field value added. */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   */\n  public final Fieldable getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Fieldable field = (Fieldable)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":["044cc6e1551cd0687478395eeceb9cde12caf10b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"044cc6e1551cd0687478395eeceb9cde12caf10b","date":1150919367,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   * Do not use this method with lazy loaded fields.\n   */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n        return field;\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   */\n  public final Fieldable getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Fieldable field = (Fieldable)fields.get(i);\n      if (field.name().equals(name))\n\treturn field;\n    }\n    return null;\n  }\n\n","bugFix":["12d40284fd9481f79444bc63bc5d13847caddd3d","29d597fb9cab5d0207f322b489e4260b6758531f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a70c362dc47e16ef90835bd9d78415bdceefbd7e","date":1254561360,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#getField(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   * Do not use this method with lazy loaded fields.\n   */\n  public final Field getField(String name) {\n    return (Field) getFieldable(name);\n  }\n\n","sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   * Do not use this method with lazy loaded fields.\n   */\n  public final Field getField(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name))\n        return field;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/Document#getField(String).mjava","sourceNew":null,"sourceOld":"  /** Returns a field with the given name if any exist in this document, or\n   * null.  If multiple fields exists with this name, this method returns the\n   * first value added.\n   * Do not use this method with lazy loaded fields.\n   */\n  public final Field getField(String name) {\n    return (Field) getFieldable(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a70c362dc47e16ef90835bd9d78415bdceefbd7e":["044cc6e1551cd0687478395eeceb9cde12caf10b"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f698e1153cefa582a35d82aa8fa7316fb3c688f3":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"29d597fb9cab5d0207f322b489e4260b6758531f":["f698e1153cefa582a35d82aa8fa7316fb3c688f3"],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["29d597fb9cab5d0207f322b489e4260b6758531f"],"044cc6e1551cd0687478395eeceb9cde12caf10b":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a70c362dc47e16ef90835bd9d78415bdceefbd7e"]},"commit2Childs":{"a70c362dc47e16ef90835bd9d78415bdceefbd7e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["f698e1153cefa582a35d82aa8fa7316fb3c688f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"f698e1153cefa582a35d82aa8fa7316fb3c688f3":["29d597fb9cab5d0207f322b489e4260b6758531f"],"29d597fb9cab5d0207f322b489e4260b6758531f":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"044cc6e1551cd0687478395eeceb9cde12caf10b":["a70c362dc47e16ef90835bd9d78415bdceefbd7e"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["044cc6e1551cd0687478395eeceb9cde12caf10b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}