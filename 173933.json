{"path":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cd2638c91e278a2831e83135b2c895d04defa90","date":1231272033,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    writeXML( writer );\n    writer.flush();\n\n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n    \n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#getXML().mjava","sourceNew":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    writeXML( writer );\n    writer.flush();\n\n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","sourceOld":"  public String getXML() throws IOException {\n    StringWriter writer = new StringWriter();\n    writeXML( writer );\n    writer.flush();\n\n    // If action is COMMIT or OPTIMIZE, it is sent with params\n    String xml = writer.toString();\n    //System.out.println( \"SEND:\"+xml );\n    return (xml.length() > 0) ? xml : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"8cd2638c91e278a2831e83135b2c895d04defa90":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8cd2638c91e278a2831e83135b2c895d04defa90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["8cd2638c91e278a2831e83135b2c895d04defa90"],"8cd2638c91e278a2831e83135b2c895d04defa90":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}