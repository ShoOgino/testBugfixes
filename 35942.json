{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(ReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException\n\t{\n\t\tif(processingMode==PM_FAST_INVALIDATION)\n\t\t{\n\t\t\treturn fastBits(context.reader);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn correctBits(context.reader);\n\t\t}\n\t}\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(ReaderContext context) throws IOException\n\t{\n\t\tif(processingMode==PM_FAST_INVALIDATION)\n\t\t{\n\t\t\treturn fastBits(context.reader);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn correctBits(context.reader);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException\n\t{\n\t\tif(processingMode==PM_FAST_INVALIDATION)\n\t\t{\n\t\t\treturn fastBits(context.reader);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn correctBits(context.reader);\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException\n\t{\n\t\tif(processingMode==PM_FAST_INVALIDATION)\n\t\t{\n\t\t\treturn fastBits(context.reader);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn correctBits(context.reader);\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    if (processingMode == ProcessingMode.PM_FAST_INVALIDATION) {\n      return fastBits(context.reader);\n    } else {\n      return correctBits(context.reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException\n\t{\n\t\tif(processingMode==PM_FAST_INVALIDATION)\n\t\t{\n\t\t\treturn fastBits(context.reader);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn correctBits(context.reader);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    if (processingMode == ProcessingMode.PM_FAST_INVALIDATION) {\n      return fastBits(context.reader);\n    } else {\n      return correctBits(context.reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    if (processingMode == ProcessingMode.PM_FAST_INVALIDATION) {\n      return fastBits(context.reader);\n    } else {\n      return correctBits(context.reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"e141595402370bee958745de8b1c9de1fa182581":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["e141595402370bee958745de8b1c9de1fa182581"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","e141595402370bee958745de8b1c9de1fa182581"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"e141595402370bee958745de8b1c9de1fa182581":["1f9f2355d68aab1348539f7a1603279405e566a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1f9f2355d68aab1348539f7a1603279405e566a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}