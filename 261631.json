{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygonWithHole2().mjava","commits":[{"id":"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705","date":1501767131,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygonWithHole2().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test with two shapes with crossing edges in hole and some points inside in convex case.\n   */\n  @Test\n  public void testGeoSimplePolygonWithHole2() {\n    //POLYGON((-135 -31, -135 -30, -137 -30, -137 -31, -135 -31),(-135.5 -30.7, -135.5 -30.4, -136.5 -30.4, -136.5 -30.7, -135.5 -30.7))\n    GeoPolygon hole = buildConcaveGeoPolygon(-135.5, -30.7,\n        -135.5, -30.4,\n        -136.5, -30.4,\n        -136.5, -30.7);\n    GeoPolygon originalConvexPol = buildConvexGeoPolygonWithHole(-135, -31,\n        -135, -30,\n        -137, -30,\n        -137, -31, hole);\n\n    GeoPolygon holeInv = buildConvexGeoPolygon(-135, -31,\n        -135, -30,\n        -137, -30,\n        -137, -31);\n\n    GeoPolygon originalConvexPolInv = buildConcaveGeoPolygonWithHole(-135.5, -30.7,\n        -135.5, -30.4,\n        -136.5, -30.4,\n        -136.5, -30.7, holeInv);\n\n    //POLYGON((-135.5 -31.2, -135.5 -30.8, -136 -30.8, -136 -31.2, -135.5 -31.2)) intersects the hole\n    GeoPolygon polConvex = buildConvexGeoPolygon(-135.5, -30.2,\n        -135.5, -30.8,\n        -136, -30.8,\n        -136, -30.2);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(-135.5, -30.2,\n        -135.5, -30.8,\n        -136, -30.8,\n        -136, -30.2);\n\n    int rel = originalConvexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConvex.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPolInv.getRelationship(polConvex);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConvex.getRelationship(originalConvexPolInv);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPolInv.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPolInv);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygonWithHole2().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test with two shapes with crossing edges in hole and some points inside in convex case.\n   */\n  @Test\n  public void testGeoSimplePolygonWithHole2() {\n    //POLYGON((-135 -31, -135 -30, -137 -30, -137 -31, -135 -31),(-135.5 -30.7, -135.5 -30.4, -136.5 -30.4, -136.5 -30.7, -135.5 -30.7))\n    GeoPolygon hole = buildConcaveGeoPolygon(-135.5, -30.7,\n        -135.5, -30.4,\n        -136.5, -30.4,\n        -136.5, -30.7);\n    GeoPolygon originalConvexPol = buildConvexGeoPolygonWithHole(-135, -31,\n        -135, -30,\n        -137, -30,\n        -137, -31, hole);\n\n    GeoPolygon holeInv = buildConvexGeoPolygon(-135, -31,\n        -135, -30,\n        -137, -30,\n        -137, -31);\n\n    GeoPolygon originalConvexPolInv = buildConcaveGeoPolygonWithHole(-135.5, -30.7,\n        -135.5, -30.4,\n        -136.5, -30.4,\n        -136.5, -30.7, holeInv);\n\n    //POLYGON((-135.5 -31.2, -135.5 -30.8, -136 -30.8, -136 -31.2, -135.5 -31.2)) intersects the hole\n    GeoPolygon polConvex = buildConvexGeoPolygon(-135.5, -30.2,\n        -135.5, -30.8,\n        -136, -30.8,\n        -136, -30.2);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(-135.5, -30.2,\n        -135.5, -30.8,\n        -136, -30.8,\n        -136, -30.2);\n\n    int rel = originalConvexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConvex.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPolInv.getRelationship(polConvex);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConvex.getRelationship(originalConvexPolInv);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    rel = originalConvexPolInv.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPolInv);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}