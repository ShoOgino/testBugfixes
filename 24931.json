{"path":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","commits":[{"id":"8a65836c18a62c7b1b404fcb1bba729fd4c29e81","date":1343190777,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SyncSliceTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":"  private void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","date":1343203827,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"/dev/null","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f767f8c99eaedb984df754fe61f21c5de260f94","date":1344105153,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":null,"sourceOld":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getCloudState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#waitToSeeNotLive(ZkStateReader,CloudJettyRunner).mjava","sourceNew":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","sourceOld":"  protected void waitToSeeNotLive(ZkStateReader zkStateReader,\n      CloudJettyRunner cjetty) throws InterruptedException {\n    int tries = 0;\n    while (zkStateReader.getClusterState()\n        .liveNodesContain(cjetty.info.get(ZkStateReader.NODE_NAME_PROP))) {\n      if (tries++ == 120) {\n        fail(\"Shard still reported as live in zk\");\n      }\n      Thread.sleep(1000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f767f8c99eaedb984df754fe61f21c5de260f94":["8a65836c18a62c7b1b404fcb1bba729fd4c29e81"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["8fd5be977c105554c6a7b68afcdbc511439723ab","2c30e4c1cee08b3b229a77991882594fe7250b66"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a65836c18a62c7b1b404fcb1bba729fd4c29e81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a65836c18a62c7b1b404fcb1bba729fd4c29e81"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","2c30e4c1cee08b3b229a77991882594fe7250b66"],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a65836c18a62c7b1b404fcb1bba729fd4c29e81"],"8a65836c18a62c7b1b404fcb1bba729fd4c29e81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","3f767f8c99eaedb984df754fe61f21c5de260f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["3f767f8c99eaedb984df754fe61f21c5de260f94"]},"commit2Childs":{"3f767f8c99eaedb984df754fe61f21c5de260f94":["8fd5be977c105554c6a7b68afcdbc511439723ab","2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","8a65836c18a62c7b1b404fcb1bba729fd4c29e81"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":[],"8a65836c18a62c7b1b404fcb1bba729fd4c29e81":["3f767f8c99eaedb984df754fe61f21c5de260f94","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}