{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","commits":[{"id":"d3fe2fc74577855eadfb5eae3153c2fffdaaf791","date":1305237079,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && !clone.omitTermFreqAndPositions;\n    }\n    return roFis;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && !clone.omitTermFreqAndPositions;\n    }\n    return roFis;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"/dev/null","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && !clone.omitTermFreqAndPositions;\n    }\n    return roFis;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","sourceOld":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && !clone.omitTermFreqAndPositions;\n    }\n    return roFis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","sourceOld":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null, null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","sourceOld":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#asReadOnly().mjava","sourceNew":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","sourceOld":"  final FieldInfos asReadOnly() {\n    if (isReadOnly()) {\n      return this;\n    }\n    final FieldInfos roFis = new FieldInfos((FieldNumberBiMap)null);\n    for (FieldInfo fieldInfo : this) {\n      FieldInfo clone = (FieldInfo) (fieldInfo).clone();\n      roFis.putInternal(clone);\n      roFis.hasVectors |= clone.storeTermVector;\n      roFis.hasProx |= clone.isIndexed && clone.indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n      roFis.hasFreq |= clone.isIndexed && clone.indexOptions != IndexOptions.DOCS_ONLY;\n    }\n    return roFis;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"7b91922b55d15444d554721b352861d028eb8278":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}