{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#addReplicaCountsForNode(ComputedValueEvaluator,ReplicaCount,Row).mjava","commits":[{"id":"ee5183ac042828ef74f90f0874eaba7daeb409bd","date":1536546264,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#addReplicaCountsForNode(ComputedValueEvaluator,ReplicaCount,Row).mjava","pathOld":"/dev/null","sourceNew":"  private void addReplicaCountsForNode(ComputedValueEvaluator computedValueEvaluator, ReplicaCount replicaCount, Row node) {\n    node.forEachReplica((String) collection.getValue(), ri -> {\n      if (Policy.ANY.equals(computedValueEvaluator.shardName)\n          || computedValueEvaluator.shardName.equals(ri.getShard()))\n        replicaCount.increment(ri);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e890cd5653ae8550bc6088d739f4eaaf950aff","date":1547036285,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#addReplicaCountsForNode(ComputedValueEvaluator,ReplicaCount,Row).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#addReplicaCountsForNode(ComputedValueEvaluator,ReplicaCount,Row).mjava","sourceNew":"  private void addReplicaCountsForNode(ComputedValueEvaluator computedValueEvaluator, ReplicaCount replicaCount, Row node) {\n    addReplicaCountsForNode++;\n\n    ReplicaCount rc = node.computeCacheIfAbsent(computedValueEvaluator.collName, computedValueEvaluator.shardName, PERSHARD_REPLICAS,\n        this, o -> {\n          addReplicaCountsForNodeCacheMiss++;\n          ReplicaCount result = new ReplicaCount();\n          node.forEachReplica((String) collection.getValue(), ri -> {\n            if (Policy.ANY.equals(computedValueEvaluator.shardName)\n                || computedValueEvaluator.shardName.equals(ri.getShard()))\n              result.increment(ri);\n          });\n          return result;\n        });\n    if (rc != null)\n      replicaCount.increment(rc);\n\n\n  }\n\n","sourceOld":"  private void addReplicaCountsForNode(ComputedValueEvaluator computedValueEvaluator, ReplicaCount replicaCount, Row node) {\n    node.forEachReplica((String) collection.getValue(), ri -> {\n      if (Policy.ANY.equals(computedValueEvaluator.shardName)\n          || computedValueEvaluator.shardName.equals(ri.getShard()))\n        replicaCount.increment(ri);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause#addReplicaCountsForNode(ComputedValueEvaluator,ReplicaCount,Row).mjava","sourceNew":null,"sourceOld":"  private void addReplicaCountsForNode(ComputedValueEvaluator computedValueEvaluator, ReplicaCount replicaCount, Row node) {\n    addReplicaCountsForNode++;\n\n    ReplicaCount rc = node.computeCacheIfAbsent(computedValueEvaluator.collName, computedValueEvaluator.shardName, PERSHARD_REPLICAS,\n        this, o -> {\n          addReplicaCountsForNodeCacheMiss++;\n          ReplicaCount result = new ReplicaCount();\n          node.forEachReplica((String) collection.getValue(), ri -> {\n            if (Policy.ANY.equals(computedValueEvaluator.shardName)\n                || computedValueEvaluator.shardName.equals(ri.getShard()))\n              result.increment(ri);\n          });\n          return result;\n        });\n    if (rc != null)\n      replicaCount.increment(rc);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"3f504512a03d978990cbff30db0522b354e846db":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee5183ac042828ef74f90f0874eaba7daeb409bd"],"ee5183ac042828ef74f90f0874eaba7daeb409bd":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}