{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","commits":[{"id":"fb37680595d3fecd821eaa695beb5c9ced607584","date":1497668271,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void highlightAndAssertMatch(IndexSearcher searcher, UnifiedHighlighter highlighter, Query query, String field, String fieldVal) throws IOException {\n    TopDocs topDocs = searcher.search(query, 1);\n    assertEquals(1, topDocs.totalHits);\n    String[] snippets = highlighter.highlight(field, query, topDocs);\n    assertEquals(\"[<b>\"+fieldVal+\"</b>]\", Arrays.toString(snippets));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void highlightAndAssertMatch(IndexSearcher searcher, UnifiedHighlighter highlighter, Query query, String field, String fieldVal) throws IOException {\n    TopDocs topDocs = searcher.search(query, 1);\n    assertEquals(1, topDocs.totalHits);\n    String[] snippets = highlighter.highlight(field, query, topDocs);\n    assertEquals(\"[<b>\"+fieldVal+\"</b>]\", Arrays.toString(snippets));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void highlightAndAssertMatch(IndexSearcher searcher, UnifiedHighlighter highlighter, Query query, String field, String fieldVal) throws IOException {\n    TopDocs topDocs = searcher.search(query, 1);\n    assertEquals(1, topDocs.totalHits);\n    String[] snippets = highlighter.highlight(field, query, topDocs);\n    assertEquals(\"[<b>\"+fieldVal+\"</b>]\", Arrays.toString(snippets));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#highlightAndAssertMatch(IndexSearcher,UnifiedHighlighter,Query,String,String).mjava","sourceNew":"  private void highlightAndAssertMatch(IndexSearcher searcher, UnifiedHighlighter highlighter, Query query, String field, String fieldVal) throws IOException {\n    TopDocs topDocs = searcher.search(query, 1);\n    assertEquals(1, topDocs.totalHits.value);\n    String[] snippets = highlighter.highlight(field, query, topDocs);\n    assertEquals(\"[<b>\"+fieldVal+\"</b>]\", Arrays.toString(snippets));\n  }\n\n","sourceOld":"  private void highlightAndAssertMatch(IndexSearcher searcher, UnifiedHighlighter highlighter, Query query, String field, String fieldVal) throws IOException {\n    TopDocs topDocs = searcher.search(query, 1);\n    assertEquals(1, topDocs.totalHits);\n    String[] snippets = highlighter.highlight(field, query, topDocs);\n    assertEquals(\"[<b>\"+fieldVal+\"</b>]\", Arrays.toString(snippets));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb37680595d3fecd821eaa695beb5c9ced607584":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb37680595d3fecd821eaa695beb5c9ced607584"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb37680595d3fecd821eaa695beb5c9ced607584"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"fb37680595d3fecd821eaa695beb5c9ced607584":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb37680595d3fecd821eaa695beb5c9ced607584","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}