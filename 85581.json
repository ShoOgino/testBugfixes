{"path":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\"));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = createTempDir().getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e","date":1406603075,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  public void testMakeRootNode() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = new SolrZkClient(conn.getServer().getZkHost(), AbstractZkTestCase.TIMEOUT);\n      try {\n        assertTrue(zkClient.exists(\"/solr\", true));\n      } finally {\n        zkClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    String zkDir = createTempDir(\"zkData\").getAbsolutePath();\n    ZkTestServer server = null;\n\n    server = new ZkTestServer(zkDir);\n    server.run();\n    AbstractZkTestCase.tryCleanSolrZkNode(server.getZkHost());\n    AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n    SolrZkClient zkClient = new SolrZkClient(server.getZkHost(),\n        AbstractZkTestCase.TIMEOUT);\n\n    assertTrue(zkClient.exists(\"/solr\", true));\n\n    zkClient.close();\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkSolrClientTest#testMakeRootNode().mjava","sourceNew":"  @SuppressWarnings({\"try\"})\n  public void testMakeRootNode() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = new SolrZkClient(conn.getServer().getZkHost(), AbstractZkTestCase.TIMEOUT);\n      try {\n        assertTrue(zkClient.exists(\"/solr\", true));\n      } finally {\n        zkClient.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void testMakeRootNode() throws Exception {\n    try (ZkConnection conn = new ZkConnection ()) {\n      final SolrZkClient zkClient = new SolrZkClient(conn.getServer().getZkHost(), AbstractZkTestCase.TIMEOUT);\n      try {\n        assertTrue(zkClient.exists(\"/solr\", true));\n      } finally {\n        zkClient.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["d9405f486872f1e416304dfe389741f4ee2f8a4d","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["8650ae4e5d74a324411f8b7dd6201774f2b6fb2e"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48","f2126b84bd093fa3d921582a109a0ee578c28126"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"8650ae4e5d74a324411f8b7dd6201774f2b6fb2e":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","d9405f486872f1e416304dfe389741f4ee2f8a4d","0d22ac6a4146774c1bc8400160fc0b6150294e92","f2126b84bd093fa3d921582a109a0ee578c28126"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}