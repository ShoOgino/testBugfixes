{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoadSnapshot#execute(SimScenario).mjava","commits":[{"id":"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","date":1571856490,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoadSnapshot#execute(SimScenario).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\");\n      SnapshotCloudManager snapshotCloudManager;\n      if (path == null) {\n        String zkHost = params.get(\"zkHost\");\n        if (zkHost == null) {\n          throw new IOException(SimAction.LOAD_SNAPSHOT + \" must specify 'path' or 'zkHost'\");\n        } else {\n          try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n            cloudSolrClient.connect();\n            try (SolrClientCloudManager realCloudManager = new SolrClientCloudManager(NoopDistributedQueueFactory.INSTANCE, cloudSolrClient)) {\n              snapshotCloudManager = new SnapshotCloudManager(realCloudManager, null);\n            }\n          }\n        }\n      } else {\n        snapshotCloudManager = SnapshotCloudManager.readSnapshot(new File(path));\n      }\n      scenario.cluster = SimCloudManager.createCluster(snapshotCloudManager, null, snapshotCloudManager.getTimeSource());\n      scenario.config = scenario.cluster.getDistribStateManager().getAutoScalingConfig();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.LoadSnapshot#execute(SimScenario).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\");\n      SnapshotCloudManager snapshotCloudManager;\n      if (path == null) {\n        String zkHost = params.get(\"zkHost\");\n        if (zkHost == null) {\n          throw new IOException(SimAction.LOAD_SNAPSHOT + \" must specify 'path' or 'zkHost'\");\n        } else {\n          try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n            cloudSolrClient.connect();\n            try (SolrClientCloudManager realCloudManager = new SolrClientCloudManager(NoopDistributedQueueFactory.INSTANCE, cloudSolrClient)) {\n              snapshotCloudManager = new SnapshotCloudManager(realCloudManager, null);\n            }\n          }\n        }\n      } else {\n        snapshotCloudManager = SnapshotCloudManager.readSnapshot(new File(path));\n      }\n      scenario.cluster = SimCloudManager.createCluster(snapshotCloudManager, null, snapshotCloudManager.getTimeSource());\n      scenario.config = scenario.cluster.getDistribStateManager().getAutoScalingConfig();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}