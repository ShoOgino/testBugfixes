{"path":"lucene/core/src/java/org/apache/lucene/search/SearcherManager#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SearcherManager#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SearcherManager#close().mjava","sourceNew":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e81b0b3c14cf61c8ec366450276ab80654f7d0d","date":1329233774,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReferenceManager#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SearcherManager#close().mjava","sourceNew":"  /**\n   * Close this ReferenceManager to future {@link #acquire() acquiring}. Any\n   * references that were previously {@link #acquire() acquired} won't be\n   * affected, and they should still be {@link #release released} when they are\n   * not needed anymore.\n   */\n  public final synchronized void close() throws IOException {\n    if (current != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapReference(null);\n    }\n  }\n\n","sourceOld":"  /**\n   * Close this SearcherManager to future searching. Any searches still in\n   * process in other threads won't be affected, and they should still call\n   * {@link #release} after they are done.\n   */\n  public synchronized void close() throws IOException {\n    if (currentSearcher != null) {\n      // make sure we can call this more than once\n      // closeable javadoc says:\n      // if this is already closed then invoking this method has no effect.\n      swapSearcher(null);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e81b0b3c14cf61c8ec366450276ab80654f7d0d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e81b0b3c14cf61c8ec366450276ab80654f7d0d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6e81b0b3c14cf61c8ec366450276ab80654f7d0d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6e81b0b3c14cf61c8ec366450276ab80654f7d0d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}