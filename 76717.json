{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","commits":[{"id":"ef53d1d25057e41eff3dce2a7f3e880a78ed7069","date":1323523707,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  private Directory createIndex(int no) throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\"+no, \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    return dir;\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloseStoredFields().mjava","sourceNew":"  private Directory createIndex(int no) throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\"+no, \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    return dir;\n  }\n\n","sourceOld":"  public void testCloseStoredFields() throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r1 = IndexReader.open(dir);\n    IndexReader r2 = (IndexReader) r1.clone();\n    r1.close();\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce667c6d3400b22523701c549c0d35e26da8b46","date":1324405053,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#createIndex(int).mjava","sourceNew":null,"sourceOld":"  private Directory createIndex(int no) throws Exception {\n    final Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    Document doc = new Document();\n    doc.add(newField(\"field\"+no, \"yes it's stored\", TextField.TYPE_STORED));\n    w.addDocument(doc);\n    w.close();\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"9ce667c6d3400b22523701c549c0d35e26da8b46":["ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ce667c6d3400b22523701c549c0d35e26da8b46"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","ef53d1d25057e41eff3dce2a7f3e880a78ed7069"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"9ce667c6d3400b22523701c549c0d35e26da8b46":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef53d1d25057e41eff3dce2a7f3e880a78ed7069":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","9ce667c6d3400b22523701c549c0d35e26da8b46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}