{"path":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eda10679962159bc8bccd5b1069ae35d607ace25","date":1331148629,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        File target = new File(storeDir, factory.storeFileName());\n        if(!lookup.store(new FileOutputStream(target))) {\n          if (sourceLocation == null) {\n            assert reader != null && field != null;\n            LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n          } else {\n            LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n          }\n        } else {\n          LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n        }\n      }\n\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        File target = new File(storeDir, factory.storeFileName());\n        if(!lookup.store(new FileOutputStream(target))) {\n          if (sourceLocation == null) {\n            assert reader != null && field != null;\n            LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n          } else {\n            LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n          }\n        } else {\n          LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n        }\n      }\n\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        lookup.store(storeDir);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e72e661a57246fd5412d682d707d9dbdf81e555","date":1343303474,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), IOUtils.CHARSET_UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        File target = new File(storeDir, factory.storeFileName());\n        if(!lookup.store(new FileOutputStream(target))) {\n          if (sourceLocation == null) {\n            assert reader != null && field != null;\n            LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n          } else {\n            LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n          }\n        } else {\n          LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n        }\n      }\n\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), IOUtils.CHARSET_UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        File target = new File(storeDir, factory.storeFileName());\n        if(!lookup.store(new FileOutputStream(target))) {\n          if (sourceLocation == null) {\n            assert reader != null && field != null;\n            LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n          } else {\n            LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n          }\n        } else {\n          LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n        }\n      }\n\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), IOUtils.CHARSET_UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), \"UTF-8\"));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n    try {\n      lookup.build(dictionary);\n      if (storeDir != null) {\n        File target = new File(storeDir, factory.storeFileName());\n        if(!lookup.store(new FileOutputStream(target))) {\n          if (sourceLocation == null) {\n            assert reader != null && field != null;\n            LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n          } else {\n            LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n          }\n        } else {\n          LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n        }\n      }\n\n    } catch (Exception e) {\n      LOG.error(\"Error while building or storing Suggester data\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), IOUtils.CHARSET_UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), IOUtils.CHARSET_UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          log.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          log.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        log.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    LOG.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        LOG.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          LOG.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          LOG.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        LOG.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from index on field: {} failed reader has: {} docs\", field, reader.maxDoc());\n          }\n        } else {\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from sourceloaction: {} failed\", sourceLocation);\n          }\n        }\n      } else {\n        if (log.isInfoEnabled()) {\n          log.info(\"Stored suggest data to: {}\", target.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          log.error(\"Store Lookup build from index on field: \" + field + \" failed reader has: \" + reader.maxDoc() + \" docs\");\n        } else {\n          log.error(\"Store Lookup build from sourceloaction: \" + sourceLocation + \" failed\");\n        }\n      } else {\n        log.info(\"Stored suggest data to: \" + target.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9df8125ba9193a2e2e285ed92157810b1952a244","date":1587326330,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from index on field: {} failed reader has: {} docs\", field, reader.maxDoc());\n          }\n        } else {\n          log.error(\"Store Lookup build from sourceloaction: {} failed\", sourceLocation);\n        }\n      } else {\n        if (log.isInfoEnabled()) {\n          log.info(\"Stored suggest data to: {}\", target.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from index on field: {} failed reader has: {} docs\", field, reader.maxDoc());\n          }\n        } else {\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from sourceloaction: {} failed\", sourceLocation);\n          }\n        }\n      } else {\n        if (log.isInfoEnabled()) {\n          log.info(\"Stored suggest data to: {}\", target.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/Suggester#build(SolrCore,SolrIndexSearcher).mjava","sourceNew":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          log.error(\"Store Lookup build from index on field: {} failed reader has: {} docs\", field, reader.maxDoc());\n        } else {\n          log.error(\"Store Lookup build from sourceloaction: {} failed\", sourceLocation);\n        }\n      } else {\n        if (log.isInfoEnabled()) {\n          log.info(\"Stored suggest data to: {}\", target.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(SolrCore core, SolrIndexSearcher searcher) throws IOException {\n    log.info(\"build()\");\n    if (sourceLocation == null) {\n      reader = searcher.getIndexReader();\n      dictionary = new HighFrequencyDictionary(reader, field, threshold);\n    } else {\n      try {\n        dictionary = new FileDictionary(new InputStreamReader(\n                core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8));\n      } catch (UnsupportedEncodingException e) {\n        // should not happen\n        log.error(\"should not happen\", e);\n      }\n    }\n\n    lookup.build(dictionary);\n    if (storeDir != null) {\n      File target = new File(storeDir, factory.storeFileName());\n      if(!lookup.store(new FileOutputStream(target))) {\n        if (sourceLocation == null) {\n          assert reader != null && field != null;\n          if (log.isErrorEnabled()) {\n            log.error(\"Store Lookup build from index on field: {} failed reader has: {} docs\", field, reader.maxDoc());\n          }\n        } else {\n          log.error(\"Store Lookup build from sourceloaction: {} failed\", sourceLocation);\n        }\n      } else {\n        if (log.isInfoEnabled()) {\n          log.info(\"Stored suggest data to: {}\", target.getAbsolutePath());\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["6e72e661a57246fd5412d682d707d9dbdf81e555","7d89d7e4e5101347833eea558851bf4209218619"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["c26f00b574427b55127e869b935845554afde1fa","eda10679962159bc8bccd5b1069ae35d607ace25"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"eda10679962159bc8bccd5b1069ae35d607ace25":["c26f00b574427b55127e869b935845554afde1fa"],"575e66bd4b2349209027f6801184da7fc3cba13f":["9df8125ba9193a2e2e285ed92157810b1952a244"],"7d89d7e4e5101347833eea558851bf4209218619":["6e72e661a57246fd5412d682d707d9dbdf81e555"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"aba371508186796cc6151d8223a5b4e16d02e26e":["eda10679962159bc8bccd5b1069ae35d607ace25","6e72e661a57246fd5412d682d707d9dbdf81e555"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e72e661a57246fd5412d682d707d9dbdf81e555":["eda10679962159bc8bccd5b1069ae35d607ace25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["eda10679962159bc8bccd5b1069ae35d607ace25","6e72e661a57246fd5412d682d707d9dbdf81e555"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"],"9df8125ba9193a2e2e285ed92157810b1952a244":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"c26f00b574427b55127e869b935845554afde1fa":["38e3b736c7ca086d61b7dbb841c905ee115490da","eda10679962159bc8bccd5b1069ae35d607ace25"],"eda10679962159bc8bccd5b1069ae35d607ace25":["38e3b736c7ca086d61b7dbb841c905ee115490da","aba371508186796cc6151d8223a5b4e16d02e26e","6e72e661a57246fd5412d682d707d9dbdf81e555","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["9df8125ba9193a2e2e285ed92157810b1952a244"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"6e72e661a57246fd5412d682d707d9dbdf81e555":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9df8125ba9193a2e2e285ed92157810b1952a244":["575e66bd4b2349209027f6801184da7fc3cba13f"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","38e3b736c7ca086d61b7dbb841c905ee115490da","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}