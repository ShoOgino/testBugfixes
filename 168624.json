{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","commits":[{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (shape.isWithin(x, y, z)) {\n      hits.add(docID);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936e62fbacf493107c977e945b4211c43a957400","date":1460681198,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (shape.isWithin(x, y, z)) {\n      hits.add(docID);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fce328ef870a3ecd74b752ab0906156ff29a4b93","date":1460809783,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    final int xInt = NumericUtils.sortableBytesToInt(packedValue, 0);\n    final double xMin = Geo3DUtil.decodeValueFloor(xInt);\n    final double xMax = Geo3DUtil.decodeValueCeil(xInt);\n    if (xMin >= shapeBounds.getMinimumX() && xMin <= shapeBounds.getMaximumX() ||\n      xMax >= shapeBounds.getMinimumX() && xMax <= shapeBounds.getMaximumX()) {\n      // X is OK\n      final int yInt = NumericUtils.sortableBytesToInt(packedValue, Integer.BYTES);\n      final double yMin = Geo3DUtil.decodeValueFloor(yInt);\n      final double yMax = Geo3DUtil.decodeValueCeil(yInt);\n      if (yMin >= shapeBounds.getMinimumY() && yMin <= shapeBounds.getMaximumY() ||\n        yMax >= shapeBounds.getMinimumY() && yMax <= shapeBounds.getMaximumY()) {\n        // Y is OK\n        final int zInt = NumericUtils.sortableBytesToInt(packedValue, 2 * Integer.BYTES);\n        final double zMin = Geo3DUtil.decodeValueFloor(zInt);\n        final double zMax = Geo3DUtil.decodeValueCeil(zInt);\n        if (zMin >= shapeBounds.getMinimumZ() && zMin <= shapeBounds.getMaximumZ() ||\n          zMax >= shapeBounds.getMinimumZ() && zMax <= shapeBounds.getMaximumZ()) {\n          // Z is OK\n          final double x = Geo3DUtil.decodeValue(xInt);\n          final double y = Geo3DUtil.decodeValue(yInt);\n          final double z = Geo3DUtil.decodeValue(zInt);\n          if (shape.isWithin(x, y, z)) {\n            hits.add(docID);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d313db190bac050acb787d8ec70dca6bcb3f0497","date":1460815973,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    final int xInt = NumericUtils.sortableBytesToInt(packedValue, 0);\n    final double xMin = Geo3DUtil.decodeValueFloor(xInt);\n    final double xMax = Geo3DUtil.decodeValueCeil(xInt);\n    if (xMin >= shapeBounds.getMinimumX() && xMin <= shapeBounds.getMaximumX() ||\n      xMax >= shapeBounds.getMinimumX() && xMax <= shapeBounds.getMaximumX()) {\n      // X is OK\n      final int yInt = NumericUtils.sortableBytesToInt(packedValue, Integer.BYTES);\n      final double yMin = Geo3DUtil.decodeValueFloor(yInt);\n      final double yMax = Geo3DUtil.decodeValueCeil(yInt);\n      if (yMin >= shapeBounds.getMinimumY() && yMin <= shapeBounds.getMaximumY() ||\n        yMax >= shapeBounds.getMinimumY() && yMax <= shapeBounds.getMaximumY()) {\n        // Y is OK\n        final int zInt = NumericUtils.sortableBytesToInt(packedValue, 2 * Integer.BYTES);\n        final double zMin = Geo3DUtil.decodeValueFloor(zInt);\n        final double zMax = Geo3DUtil.decodeValueCeil(zInt);\n        if (zMin >= shapeBounds.getMinimumZ() && zMin <= shapeBounds.getMaximumZ() ||\n          zMax >= shapeBounds.getMinimumZ() && zMax <= shapeBounds.getMaximumZ()) {\n          // Z is OK\n          final double x = Geo3DUtil.decodeValue(xInt);\n          final double y = Geo3DUtil.decodeValue(yInt);\n          final double z = Geo3DUtil.decodeValue(zInt);\n          if (shape.isWithin(x, y, z)) {\n            hits.add(docID);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af","date":1461918927,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e8d5955830d712186a4beb716e797d505af7981","date":1461951189,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        hits.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05b856843186ad4df844585f0c4f74ec1fdb7698","date":1475435878,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= minimumX && x <= maximumX &&\n      y >= minimumY && y <= maximumY &&\n      z >= minimumZ && z <= maximumZ) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= minimumX && x <= maximumX &&\n      y >= minimumY && y <= maximumY &&\n      z >= minimumZ && z <= maximumZ) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= shapeBounds.getMinimumX() && x <= shapeBounds.getMaximumX() &&\n      y >= shapeBounds.getMinimumY() && y <= shapeBounds.getMaximumY() &&\n      z >= shapeBounds.getMinimumZ() && z <= shapeBounds.getMaximumZ()) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/PointInShapeIntersectVisitor#visit(int,byte[]).mjava","sourceNew":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0, shape.getPlanetModel());\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES, shape.getPlanetModel());\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES, shape.getPlanetModel());\n    if (x >= minimumX && x <= maximumX &&\n      y >= minimumY && y <= maximumY &&\n      z >= minimumZ && z <= maximumZ) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void visit(int docID, byte[] packedValue) {\n    assert packedValue.length == 12;\n    double x = Geo3DPoint.decodeDimension(packedValue, 0);\n    double y = Geo3DPoint.decodeDimension(packedValue, Integer.BYTES);\n    double z = Geo3DPoint.decodeDimension(packedValue, 2 * Integer.BYTES);\n    if (x >= minimumX && x <= maximumX &&\n      y >= minimumY && y <= maximumY &&\n      z >= minimumZ && z <= maximumZ) {\n      if (shape.isWithin(x, y, z)) {\n        adder.add(docID);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"936e62fbacf493107c977e945b4211c43a957400":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af":["d313db190bac050acb787d8ec70dca6bcb3f0497"],"d313db190bac050acb787d8ec70dca6bcb3f0497":["fce328ef870a3ecd74b752ab0906156ff29a4b93"],"8e8d5955830d712186a4beb716e797d505af7981":["d313db190bac050acb787d8ec70dca6bcb3f0497","3d3eccadf4f2a01d2034c96afe1a5c617b2e85af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fce328ef870a3ecd74b752ab0906156ff29a4b93":["936e62fbacf493107c977e945b4211c43a957400"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["05b856843186ad4df844585f0c4f74ec1fdb7698"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","05b856843186ad4df844585f0c4f74ec1fdb7698"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"05b856843186ad4df844585f0c4f74ec1fdb7698":["8e8d5955830d712186a4beb716e797d505af7981"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["d313db190bac050acb787d8ec70dca6bcb3f0497","8e8d5955830d712186a4beb716e797d505af7981"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["936e62fbacf493107c977e945b4211c43a957400"],"936e62fbacf493107c977e945b4211c43a957400":["fce328ef870a3ecd74b752ab0906156ff29a4b93"],"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af":["8e8d5955830d712186a4beb716e797d505af7981"],"d313db190bac050acb787d8ec70dca6bcb3f0497":["3d3eccadf4f2a01d2034c96afe1a5c617b2e85af","8e8d5955830d712186a4beb716e797d505af7981","55b50463286869f584cf849d1587a0fcd54d1dfa"],"8e8d5955830d712186a4beb716e797d505af7981":["05b856843186ad4df844585f0c4f74ec1fdb7698","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"fce328ef870a3ecd74b752ab0906156ff29a4b93":["d313db190bac050acb787d8ec70dca6bcb3f0497"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"05b856843186ad4df844585f0c4f74ec1fdb7698":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}