{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","commits":[{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Looks up the feedtype for the given feed ID\n     * @param feedID - the feed ID\n     * @return - the feed type\n     * @throws IOException - if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","sourceNew":"    /**\n     * Looks up the feedtype for the given feed ID\n     * \n     * @param feedID -\n     *            the feed ID\n     * @return - the feed type\n     * @throws IOException -\n     *             if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","sourceOld":"    /**\n     * Looks up the feedtype for the given feed ID\n     * @param feedID - the feed ID\n     * @return - the feed type\n     * @throws IOException - if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","sourceNew":"    /**\n     * Looks up the feed type for the given feed ID\n     * \n     * @param feedID -\n     *            the feed ID\n     * @return - the feed type\n     * @throws IOException -\n     *             if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","sourceOld":"    /**\n     * Looks up the feedtype for the given feed ID\n     * \n     * @param feedID -\n     *            the feed ID\n     * @return - the feed type\n     * @throws IOException -\n     *             if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageQuery#getService(String).mjava","sourceNew":"    /**\n     * Looks up the feed type for the given feed ID\n     * \n     * @param feedID -\n     *            the feed ID\n     * @return - the feed type\n     * @throws IOException -\n     *             if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","sourceOld":"    /**\n     * Looks up the feed type for the given feed ID\n     * \n     * @param feedID -\n     *            the feed ID\n     * @return - the feed type\n     * @throws IOException -\n     *             if the storage can not be accessed\n     */\n    public String getService(String feedID) throws IOException {\n        Hits hits = storageFeedQuery(feedID);\n        if (hits.length() <= 0)\n            return null;\n        Document doc = hits.doc(0);\n        String feedType = doc.get(StorageFeedWrapper.FIELD_SERVICE_ID);\n        return feedType;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52754a40a1550056d5637c8992b4076b5ed77328"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"52754a40a1550056d5637c8992b4076b5ed77328":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}