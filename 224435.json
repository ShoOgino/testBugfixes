{"path":"src/java/org/apache/lucene/index/IndexWriter#waitForMerges().mjava","commits":[{"id":"4a8e7be7cf2c1504c03b12bc66da2d84cfd3f055","date":1245791296,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#waitForMerges().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Wait for any currently outstanding merges to finish.\n   *\n   * <p>It is guaranteed that any merges started prior to calling this method \n   *    will have completed once this method completes.</p>\n   */\n  public synchronized void waitForMerges() {\n    // Ensure any running addIndexes finishes.\n    acquireRead();\n    releaseRead();\n\n    while(pendingMerges.size() > 0 || runningMerges.size() > 0) {\n      doWait();\n    }\n\n    // sanity check\n    assert 0 == mergingSegments.size();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#waitForMerges().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#waitForMerges().mjava","sourceNew":"  /**\n   * Wait for any currently outstanding merges to finish.\n   *\n   * <p>It is guaranteed that any merges started prior to calling this method \n   *    will have completed once this method completes.</p>\n   */\n  public synchronized void waitForMerges() {\n    // Ensure any running addIndexes finishes.\n    acquireRead();\n    releaseRead();\n\n    while(pendingMerges.size() > 0 || runningMerges.size() > 0) {\n      doWait();\n    }\n\n    // sanity check\n    assert 0 == mergingSegments.size();\n  }\n\n","sourceOld":"  /**\n   * Wait for any currently outstanding merges to finish.\n   *\n   * <p>It is guaranteed that any merges started prior to calling this method \n   *    will have completed once this method completes.</p>\n   */\n  public synchronized void waitForMerges() {\n    // Ensure any running addIndexes finishes.\n    acquireRead();\n    releaseRead();\n\n    while(pendingMerges.size() > 0 || runningMerges.size() > 0) {\n      doWait();\n    }\n\n    // sanity check\n    assert 0 == mergingSegments.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4a8e7be7cf2c1504c03b12bc66da2d84cfd3f055"],"4a8e7be7cf2c1504c03b12bc66da2d84cfd3f055":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a8e7be7cf2c1504c03b12bc66da2d84cfd3f055"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a8e7be7cf2c1504c03b12bc66da2d84cfd3f055":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}