{"path":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/search/PartitionsFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":"  /**\n   * Merge results of several facet partitions. Logic of the merge is undefined\n   * and open for interpretations. For example, a merge implementation could\n   * keep top K results. Passed {@link IntermediateFacetResult} must be ones\n   * that were created by this handler otherwise a {@link ClassCastException} is\n   * thrown. In addition, all passed {@link IntermediateFacetResult} must have\n   * the same {@link FacetRequest} otherwise an {@link IllegalArgumentException}\n   * is thrown.\n   * \n   * @param tmpResults one or more temporary results created by <b>this</b>\n   *        handler.\n   * @return temporary facet result that represents to union, as specified by\n   *         <b>this</b> handler, of the input temporary facet results.\n   * @throws IOException on error.\n   * @throws ClassCastException if the temporary result passed was not created\n   *         by this handler\n   * @throws IllegalArgumentException if passed <code>facetResults</code> do not\n   *         have the same {@link FacetRequest}\n   * @see IntermediateFacetResult#getFacetRequest()\n   */\n  public abstract IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException;\n\n","sourceOld":"  /**\n   * Merge results of several facet partitions. Logic of the merge is undefined\n   * and open for interpretations. For example, a merge implementation could\n   * keep top K results. Passed {@link IntermediateFacetResult} must be ones\n   * that were created by this handler otherwise a {@link ClassCastException} is\n   * thrown. In addition, all passed {@link IntermediateFacetResult} must have\n   * the same {@link FacetRequest} otherwise an {@link IllegalArgumentException}\n   * is thrown.\n   * \n   * @param tmpResults one or more temporary results created by <b>this</b>\n   *        handler.\n   * @return temporary facet result that represents to union, as specified by\n   *         <b>this</b> handler, of the input temporary facet results.\n   * @throws IOException on error.\n   * @throws ClassCastException if the temporary result passed was not created\n   *         by this handler\n   * @throws IllegalArgumentException if passed <code>facetResults</code> do not\n   *         have the same {@link FacetRequest}\n   * @see IntermediateFacetResult#getFacetRequest()\n   */\n  public abstract IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":null,"sourceOld":"  /**\n   * Merge results of several facet partitions. Logic of the merge is undefined\n   * and open for interpretations. For example, a merge implementation could\n   * keep top K results. Passed {@link IntermediateFacetResult} must be ones\n   * that were created by this handler otherwise a {@link ClassCastException} is\n   * thrown. In addition, all passed {@link IntermediateFacetResult} must have\n   * the same {@link FacetRequest} otherwise an {@link IllegalArgumentException}\n   * is thrown.\n   * \n   * @param tmpResults one or more temporary results created by <b>this</b>\n   *        handler.\n   * @return temporary facet result that represents to union, as specified by\n   *         <b>this</b> handler, of the input temporary facet results.\n   * @throws IOException on error.\n   * @throws ClassCastException if the temporary result passed was not created\n   *         by this handler\n   * @throws IllegalArgumentException if passed <code>facetResults</code> do not\n   *         have the same {@link FacetRequest}\n   * @see IntermediateFacetResult#getFacetRequest()\n   */\n  public abstract IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#mergeResults(IntermediateFacetResult...).mjava","sourceNew":null,"sourceOld":"  /**\n   * Merge results of several facet partitions. Logic of the merge is undefined\n   * and open for interpretations. For example, a merge implementation could\n   * keep top K results. Passed {@link IntermediateFacetResult} must be ones\n   * that were created by this handler otherwise a {@link ClassCastException} is\n   * thrown. In addition, all passed {@link IntermediateFacetResult} must have\n   * the same {@link FacetRequest} otherwise an {@link IllegalArgumentException}\n   * is thrown.\n   * \n   * @param tmpResults one or more temporary results created by <b>this</b>\n   *        handler.\n   * @return temporary facet result that represents to union, as specified by\n   *         <b>this</b> handler, of the input temporary facet results.\n   * @throws IOException on error.\n   * @throws ClassCastException if the temporary result passed was not created\n   *         by this handler\n   * @throws IllegalArgumentException if passed <code>facetResults</code> do not\n   *         have the same {@link FacetRequest}\n   * @see IntermediateFacetResult#getFacetRequest()\n   */\n  public abstract IntermediateFacetResult mergeResults(IntermediateFacetResult... tmpResults) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}