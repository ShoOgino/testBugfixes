{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#checkIfTrusted(String).mjava","commits":[{"id":"917e62f3497c83634a13edd833e8e21dd6cc6496","date":1490728467,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#checkIfTrusted(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkIfTrusted(String trans) {\n    if (docBuilder != null) {\n      SolrCore core = docBuilder.dataImporter.getCore();\n      boolean trusted = (core != null)? core.getCoreDescriptor().isConfigSetTrusted(): true;\n      if (!trusted) {\n        Exception ex = new SolrException(ErrorCode.UNAUTHORIZED, \"The configset for this collection was uploaded \"\n            + \"without any authentication in place,\"\n            + \" and this transformer is not available for collections with untrusted configsets. To use this transformer,\"\n            + \" re-upload the configset after enabling authentication and authorization.\");\n        String msg = \"Transformer: \"\n            + trans\n            + \". \" + ex.getMessage();\n        log.error(msg);\n        wrapAndThrow(SEVERE, ex, msg);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3732e34f27916e98704736cc6924a34fffca249a","date":1490873946,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#checkIfTrusted(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkIfTrusted(String trans) {\n    if (docBuilder != null) {\n      SolrCore core = docBuilder.dataImporter.getCore();\n      boolean trusted = (core != null)? core.getCoreDescriptor().isConfigSetTrusted(): true;\n      if (!trusted) {\n        Exception ex = new SolrException(ErrorCode.UNAUTHORIZED, \"The configset for this collection was uploaded \"\n            + \"without any authentication in place,\"\n            + \" and this transformer is not available for collections with untrusted configsets. To use this transformer,\"\n            + \" re-upload the configset after enabling authentication and authorization.\");\n        String msg = \"Transformer: \"\n            + trans\n            + \". \" + ex.getMessage();\n        log.error(msg);\n        wrapAndThrow(SEVERE, ex, msg);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorWrapper#checkIfTrusted(String).mjava","sourceNew":null,"sourceOld":"  private void checkIfTrusted(String trans) {\n    if (docBuilder != null) {\n      SolrCore core = docBuilder.dataImporter.getCore();\n      boolean trusted = (core != null)? core.getCoreDescriptor().isConfigSetTrusted(): true;\n      if (!trusted) {\n        Exception ex = new SolrException(ErrorCode.UNAUTHORIZED, \"The configset for this collection was uploaded \"\n            + \"without any authentication in place,\"\n            + \" and this transformer is not available for collections with untrusted configsets. To use this transformer,\"\n            + \" re-upload the configset after enabling authentication and authorization.\");\n        String msg = \"Transformer: \"\n            + trans\n            + \". \" + ex.getMessage();\n        log.error(msg);\n        wrapAndThrow(SEVERE, ex, msg);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["917e62f3497c83634a13edd833e8e21dd6cc6496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3732e34f27916e98704736cc6924a34fffca249a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["917e62f3497c83634a13edd833e8e21dd6cc6496","3732e34f27916e98704736cc6924a34fffca249a"],"3732e34f27916e98704736cc6924a34fffca249a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3732e34f27916e98704736cc6924a34fffca249a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}